repo,language,readme_contents
nightscout/cgm-remote-monitor,JavaScript,"Nightscout Web Monitor (a.k.a. cgm-remote-monitor)
======================================

![nightscout horizontal](https://cloud.githubusercontent.com/assets/751143/8425633/93c94dc0-1ebc-11e5-99e7-71a8f464caac.png)

[![Build Status][build-img]][build-url]
[![Dependency Status][dependency-img]][dependency-url]
[![Coverage Status][coverage-img]][coverage-url]
[![Codacy Badge][codacy-img]][codacy-url]
[![Discord chat][discord-img]][discord-url]

[![Deploy to Heroku][heroku-img]][heroku-url] [![Update your site][update-img]][update-fork]

This acts as a web-based CGM (Continuous Glucose Monitor) to allow
multiple caregivers to remotely view a patient's glucose data in
real time.  The server reads a MongoDB which is intended to be data
from a physical CGM, where it sends new SGV (sensor glucose values) as
the data becomes available.  The data is then displayed graphically
and blood glucose values are predicted 0.5 hours ahead using an
autoregressive second order model.  Alarms are generated for high and
low values, which can be cleared by any watcher of the data.

# Looking for documentation?

## End user?

Nightscout documentation is currently split to two locations. This page lists all the configuration options in
Nightscout and is useful for users who've already gone through the installation process. IF you're looking
for the documentation that looks like it's written for non-programmers, that's located at [nightscout.github.io](https://nightscout.github.io/).

Older documentation is available at [nightscout.info](http://nightscout.info).

## Developer?

See [CONTRIBUTING.md](CONTRIBUTING.md)

## [#WeAreNotWaiting](https://twitter.com/hashtag/wearenotwaiting?src=hash&vertical=default&f=images) and [this](https://vimeo.com/109767890) is why.

[![Coverage Status](https://coveralls.io/repos/github/nightscout/cgm-remote-monitor/badge.svg?branch=master)](https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master)

[build-img]: https://img.shields.io/travis/nightscout/cgm-remote-monitor.svg
[build-url]: https://travis-ci.org/nightscout/cgm-remote-monitor
[dependency-img]: https://img.shields.io/david/nightscout/cgm-remote-monitor.svg
[dependency-url]: https://david-dm.org/nightscout/cgm-remote-monitor
[coverage-img]: https://img.shields.io/coveralls/nightscout/cgm-remote-monitor/dev.svg
[coverage-url]: https://coveralls.io/github/nightscout/cgm-remote-monitor?branch=master
[codacy-img]: https://www.codacy.com/project/badge/f79327216860472dad9afda07de39d3b
[codacy-url]: https://www.codacy.com/app/Nightscout/cgm-remote-monitor
[discord-img]: https://img.shields.io/discord/629952586895851530?label=discord%20chat
[discord-url]: https://discord.gg/rTKhrqz
[heroku-img]: https://www.herokucdn.com/deploy/button.png
[heroku-url]: https://heroku.com/deploy?template=https://github.com/nightscout/cgm-remote-monitor
[update-img]: docs/update.png
[update-fork]: http://nightscout.github.io/pages/update-fork/
[original]: https://github.com/rnpenguin/cgm-remote-monitor


<!-- START doctoc generated TOC please keep comment here to allow auto update -->
<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->
**Table of Contents**

- [Install](#install)
  - [Supported configurations:](#supported-configurations)
  - [Recommended minimum browser versions for using Nightscout:](#recommended-minimum-browser-versions-for-using-nightscout)
  - [Windows installation software requirements:](#windows-installation-software-requirements)
  - [Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:](#installation-notes-for-users-with-nginx-or-apache-reverse-proxy-for-ssltls-offloading)
  - [Installation notes for Microsoft Azure, Windows:](#installation-notes-for-microsoft-azure-windows)
- [Development](#development)
- [Usage](#usage)
  - [Updating my version?](#updating-my-version)
  - [Configure my uploader to match](#configure-my-uploader-to-match)
  - [Nightscout API](#nightscout-api)
      - [Example Queries](#example-queries)
  - [Environment](#environment)
    - [Required](#required)
    - [Features](#features)
    - [Alarms](#alarms)
    - [Core](#core)
    - [Predefined values for your browser settings (optional)](#predefined-values-for-your-browser-settings-optional)
    - [Predefined values for your server settings (optional)](#predefined-values-for-your-server-settings-optional)
    - [Views](#views)
    - [Plugins](#plugins)
      - [Default Plugins](#default-plugins)
        - [`delta` (BG Delta)](#delta-bg-delta)
        - [`direction` (BG Direction)](#direction-bg-direction)
        - [`upbat` (Uploader Battery)](#upbat-uploader-battery)
        - [`timeago` (Time Ago)](#timeago-time-ago)
        - [`devicestatus` (Device Status)](#devicestatus-device-status)
        - [`errorcodes` (CGM Error Codes)](#errorcodes-cgm-error-codes)
        - [`ar2` (AR2 Forecasting)](#ar2-ar2-forecasting)
        - [`simplealarms` (Simple BG Alarms)](#simplealarms-simple-bg-alarms)
        - [`profile` (Treatment Profile)](#profile-treatment-profile)
      - [Advanced Plugins:](#advanced-plugins)
        - [`careportal` (Careportal)](#careportal-careportal)
        - [`boluscalc` (Bolus Wizard)](#boluscalc-bolus-wizard)
        - [`food` (Custom Foods)](#food-custom-foods)
        - [`rawbg` (Raw BG)](#rawbg-raw-bg)
        - [`iob` (Insulin-on-Board)](#iob-insulin-on-board)
        - [`cob` (Carbs-on-Board)](#cob-carbs-on-board)
        - [`bwp` (Bolus Wizard Preview)](#bwp-bolus-wizard-preview)
        - [`cage` (Cannula Age)](#cage-cannula-age)
        - [`sage` (Sensor Age)](#sage-sensor-age)
        - [`iage` (Insulin Age)](#iage-insulin-age)
        - [`bage` (Battery Age)](#bage-battery-age)
        - [`treatmentnotify` (Treatment Notifications)](#treatmentnotify-treatment-notifications)
        - [`basal` (Basal Profile)](#basal-basal-profile)
        - [`bolus` (Bolus Rendering)](#bolus-bolus-rendering)
        - [`bridge` (Share2Nightscout bridge)](#bridge-share2nightscout-bridge)
        - [`mmconnect` (MiniMed Connect bridge)](#mmconnect-minimed-connect-bridge)
        - [`pump` (Pump Monitoring)](#pump-pump-monitoring)
        - [`openaps` (OpenAPS)](#openaps-openaps)
        - [`loop` (Loop)](#loop-loop)
        - [`override` (Override Mode)](#override-override-mode)
        - [`xdripjs` (xDrip-js)](#xdripjs-xdrip-js)
        - [`alexa` (Amazon Alexa)](#alexa-amazon-alexa)
        - [`googlehome` (Google Home/DialogFLow)](#googlehome-google-homedialogflow)
        - [`speech` (Speech)](#speech-speech)
        - [`cors` (CORS)](#cors-cors)
      - [Extended Settings](#extended-settings)
      - [Pushover](#pushover)
      - [IFTTT Maker](#ifttt-maker)
    - [Treatment Profile](#treatment-profile)
  - [Setting environment variables](#setting-environment-variables)
    - [Vagrant install](#vagrant-install)
  - [More questions?](#more-questions)
    - [Browser testing suite provided by](#browser-testing-suite-provided-by)
  - [License](#license)

<!-- END doctoc generated TOC please keep comment here to allow auto update -->

# Install

## Supported configurations:

If you plan to use Nightscout, we recommend using [Heroku](https://nightscout.github.io/nightscout/new_user/) as this is free and easy to use.
We used to recommend hostig at Azure, but the resource needs of Nightscout have grown over the years and Azure won't comfortably run Nightscout
anymore in the free tier. If you're hosting in Azure and looking to update your site, we recommend you
[switch from Azure to Heroku](http://openaps.readthedocs.io/en/latest/docs/While%20You%20Wait%20For%20Gear/nightscout-setup.html#switching-from-azure-to-heroku)
as you're likely to hit issues in the process of updating the site.

- [Nightscout Setup with Heroku](https://nightscout.github.io/nightscout/new_user/) (recommended)

While you can install Nightscout on a virtual server or a Raspberry Pi, we do not recommend this unless you have at least some
experience hosting Node applications and development using the toolchain in use with Nightscout. Heroku automates all of the
hosting for you and even many of the dvelopers run their production sites in Heroku due to convenience.

If you're a hosting provider and want to provide our users additional free hosting options,
you're welcome to issue a documentation pull request with instructions on how to setup Nightscout on your system.

## Recommended minimum browser versions for using Nightscout:

Older versions of the browsers might work, but are untested.

- Android 4
- iOS 6
- Chrome 35
- Edge 17
- Firefox 61
- Opera 12.1
- Safari 6 (macOS 10.7)
- Internet Explorer: not supported

Some features may not work with devices/browsers on the older end of these requirements.

## Windows installation software requirements:

- [Node.js](http://nodejs.org/) Latest Node 12 LTS. Node versions that do not have the latest security patches will not work. Use [Install instructions for Node](https://nodejs.org/en/download/package-manager/) or use `bin/setup.sh`)
- [MongoDB](https://www.mongodb.com/download-center?jmp=nav#community) 3.x or later. MongoDB 2.4 is only supported for Raspberry Pi.

As a non-root user clone this repo then install dependencies into the root of the project:

```bash
$ npm install
```

## Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:

- Your site redirects insecure connections to `https` by default. If you use a reverse proxy like nginx or Apache to handle the connection security for you, make sure it sets the `X-Forwarded-Proto` header. Otherwise nightscout will be unable to know if it was called through a secure connection and will try to redirect you to the https version. If you're unable to set this Header, you can change the `INSECURE_USE_HTTP` setting in nightscout to true in order to allow insecure connections without being redirected.
- In case you use a proxy. Do not use an external network interfaces for hosting Nightscout. Make sure the unsecure port is not available from a remote network connection
- HTTP Strict Transport Security (HSTS) headers are enabled by default, use settings `SECURE_HSTS_HEADER` and `SECURE_HSTS_HEADER_*`
- See [Predefined values for your server settings](#predefined-values-for-your-server-settings-optional) for more details

## Installation notes for Microsoft Azure, Windows:

- If deploying the software to Microsoft Azure, you must set ** in the app settings for *WEBSITE_NODE_DEFAULT_VERSION* and *SCM_COMMAND_IDLE_TIMEOUT* **before** you deploy the latest Nightscout or the site deployment will likely fail. Other hosting environments do not require this setting. Additionally, if using the Azure free hosting tier, the installation might fail due to resource constraints imposed by Azure on the free hosting. Please set the following settings to the environment in Azure:
```
WEBSITE_NODE_DEFAULT_VERSION=10.15.2
SCM_COMMAND_IDLE_TIMEOUT=300
```
- See [install MongoDB, Node.js, and Nightscouton a single Windows system](https://github.com/jaylagorio/Nightscout-on-Windows-Server). if you want to host your Nightscout outside of the cloud. Although the instructions are intended for Windows Server the procedure is compatible with client versions of Windows such as Windows 7 and Windows 10.
- If you deploy to Windows and want to develop or test you need to install [Cygwin](https://www.cygwin.com/) (use [setup-x86_64.exe](https://www.cygwin.com/setup-x86_64.exe) and make sure to install `build-essential` package. Test your configuration by executing `make` and check if all tests are ok.

# Development

Want to help with development, or just see how Nightscout works? Great! See [CONTRIBUTING.md](CONTRIBUTING.md) for development-related documentation.

# Usage

The data being uploaded from the server to the client is from a MongoDB server such as [MongoDB Atlas][https://www.mongodb.com].

[autoconfigure]: https://nightscout.github.io/pages/configure/
[mongostring]: https://nightscout.github.io/pages/mongostring/

## Updating my version?

The easiest way to update your version of cgm-remote-monitor to the latest version is to use the [update tool][update-fork]. A step-by-step guide is available [here][http://www.nightscout.info/wiki/welcome/how-to-update-to-latest-cgm-remote-monitor-aka-cookie].
To downgrade to an older version, follow [this guide][http://www.nightscout.info/wiki/welcome/how-to-deploy-an-older-version-of-nightscout].

## Configure my uploader to match

Use the [autoconfigure tool][autoconfigure] to sync an uploader to your config.

## Nightscout API

The Nightscout API enables direct access to your data without the need for Mongo access.
You can find CGM data in `/api/v1/entries`, Care Portal Treatments in `/api/v1/treatments`, and Treatment Profiles in `/api/v1/profile`.
The server status and settings are available from `/api/v1/status.json`.

By default the `/entries` and `/treatments` APIs limit results to the the most recent 10 values from the last 2 days.
You can get many more results, by using the `count`, `date`, `dateString`, and `created_at` parameters, depending on the type of data you're looking for.

Once you've installed Nightscout, you can access API documentation by loading `/api-docs/` URL in your instance.

#### Example Queries

(replace `http://localhost:1337` with your own URL)

  * 100's: `http://localhost:1337/api/v1/entries.json?find[sgv]=100`
  * Count of 100's in a month: `http://localhost:1337/api/v1/count/entries/where?find[dateString][$gte]=2016-09&find[dateString][$lte]=2016-10&find[sgv]=100`
  * BGs between 2 days: `http://localhost:1337/api/v1/entries/sgv.json?find[dateString][$gte]=2015-08-28&find[dateString][$lte]=2015-08-30`
  * Juice Box corrections in a year: `http://localhost:1337/api/v1/treatments.json?count=1000&find[carbs]=15&find[eventType]=Carb+Correction&find[created_at][$gte]=2015`
  * Boluses over 2U: `http://localhost:1337/api/v1/treatments.json?find[insulin][$gte]=2`

The API is Swagger enabled, so you can generate client code to make working with the API easy.
To learn more about the Nightscout API, visit https://YOUR-SITE.com/api-docs/ or review [swagger.yaml](swagger.yaml).

## Environment

`VARIABLE` (default) - description

### Required

  * `MONGODB_URI` - The connection string for your Mongo database. Something like `mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout`.
  * `API_SECRET` - A secret passphrase that must be at least 12 characters long.
  * `MONGODB_COLLECTION` (`entries`) - The Mongo collection where CGM entries are stored.
  * `DISPLAY_UNITS` (`mg/dl`) - Options are `mg/dl` or `mmol/L` (or just `mmol`).  Setting to `mmol/L` puts the entire server into `mmol/L` mode by default, no further settings needed.

### Features

  * `ENABLE` - Used to enable optional features, expects a space delimited list, such as: `careportal rawbg iob`, see [plugins](#plugins) below
  * `DISABLE` - Used to disable default features, expects a space delimited list, such as: `direction upbat`, see [plugins](#plugins) below
  * `BASE_URL` - Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site.
  * `AUTH_DEFAULT_ROLES` (`readable`) - possible values `readable`, `denied`, or any valid role
    name.  When `readable`, anyone can view Nightscout without a token.
    Setting it to `denied` will require a token from every visit, using `status-only` will enable api-secret based login.
  * `IMPORT_CONFIG` - Used to import settings and extended settings from a url such as a gist.  Structure of file should be something like: `{""settings"": {""theme"": ""colors""}, ""extendedSettings"": {""upbat"": {""enableAlerts"": true}}}`
  * `TREATMENTS_AUTH` (`on`) - possible values `on` or `off`. Deprecated, if set to `off` the `careportal` role will be added to `AUTH_DEFAULT_ROLES`

### Alarms

  These alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.

  * `ALARM_TYPES` (`simple` if any `BG_`* ENV's are set, otherwise `predict`) - currently 2 alarm types are supported, and can be used independently or combined.  The `simple` alarm type only compares the current BG to `BG_` thresholds above, the `predict` alarm type uses highly tuned formula that forecasts where the BG is going based on it's trend.  `predict` **DOES NOT** currently use any of the `BG_`* ENV's
  * `BG_HIGH` (`260`) - the high BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)
  * `BG_TARGET_TOP` (`180`) - the top of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)
  * `BG_TARGET_BOTTOM` (`80`) - the bottom of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)
  * `BG_LOW` (`55`) - the low BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)
  * `ALARM_URGENT_HIGH` (`on`) - possible values `on` or `off`
  * `ALARM_URGENT_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent high alarms, space separated for options in browser, first used for pushover
  * `ALARM_HIGH` (`on`) - possible values `on` or `off`
  * `ALARM_HIGH_MINS` (`30 60 90 120`) - Number of minutes to snooze high alarms, space separated for options in browser, first used for pushover
  * `ALARM_LOW` (`on`) - possible values `on` or `off`
  * `ALARM_LOW_MINS` (`15 30 45 60`) - Number of minutes to snooze low alarms, space separated for options in browser, first used for pushover
  * `ALARM_URGENT_LOW` (`on`) - possible values `on` or `off`
  * `ALARM_URGENT_LOW_MINS` (`15 30 45`) - Number of minutes to snooze urgent low alarms, space separated for options in browser, first used for pushover
  * `ALARM_URGENT_MINS` (`30 60 90 120`) - Number of minutes to snooze urgent alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover
  * `ALARM_WARN_MINS` (`30 60 90 120`) - Number of minutes to snooze warning alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushover

### Core

  * `MONGO_TREATMENTS_COLLECTION` (`treatments`) -The collection used to store treatments entered in the Care Portal, see the `ENABLE` env var above
  * `MONGO_DEVICESTATUS_COLLECTION`(`devicestatus`) - The collection used to store device status information such as uploader battery
  * `MONGO_PROFILE_COLLECTION`(`profile`) - The collection used to store your profiles
  * `MONGO_FOOD_COLLECTION`(`food`) - The collection used to store your food database
  * `MONGO_ACTIVITY_COLLECTION`(`activity`) - The collection used to store activity data
  * `PORT` (`1337`) - The port that the node.js application will listen on.
  * `HOSTNAME` - The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use `::`.
  * `SSL_KEY` - Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key).
  * `SSL_CERT` - Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca).
  * `SSL_CA` - Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain).
  * `HEARTBEAT` (`60`)  - Number of seconds to wait in between database checks
  * `DEBUG_MINIFY` (`true`)  - Debug option, setting to `false` will disable bundle minification to help tracking down error and speed up development
  * `DE_NORMALIZE_DATES`(`true`) - The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to `true` causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.

### Predefined values for your browser settings (optional)

  * `TIME_FORMAT` (`12`)- possible values `12` or `24`
  * `DAY_START` (`7.0`) - time for start of day (0.0 - 24.0) for features using day time / night time options
  * `DAY_END` (`21.0`) - time for end of day (0.0 - 24.0) for features using day time / night time options
  * `NIGHT_MODE` (`off`) - possible values `on` or `off`
  * `SHOW_RAWBG` (`never`) - possible values `always`, `never` or `noise`
  * `CUSTOM_TITLE` (`Nightscout`) - Title for the main view
  * `THEME` (`colors`) - possible values `default`, `colors`, or `colorblindfriendly`
  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`
  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning
  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`
  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm
  * `SHOW_PLUGINS` - enabled plugins that should have their visualizations shown, defaults to all enabled
  * `SHOW_FORECAST` (`ar2`) - plugin forecasts that should be shown by default, supports space delimited values such as `""ar2 openaps""`
  * `LANGUAGE` (`en`) - language of Nightscout. If not available english is used
    * Currently supported language codes are: bg (Български), cs (Čeština), de (Deutsch), dk (Dansk), el (Ελληνικά), en (English), es (Español), fi (Suomi), fr (Français), he (עברית), hr (Hrvatski), hu (magyar), it (Italiano), ko (한국어), nb (Norsk (Bokmål)), nl (Nederlands), pl (Polski), pt (Português (Brasil)), ro (Română), ru (Русский), sk (Slovenčina), sv (Svenska), tr (Turkish), zh_cn (中文（简体)), zh_tw (中文（繁體))
  * `SCALE_Y` (`log`) - The type of scaling used for the Y axis of the charts system wide.
    * The default `log` (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range.
    * The `linear` option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted.
    * The `log-dynamic` is similar to the default `log` options, but uses the same dynamic range and the `linear` scale.
  * `EDIT_MODE` (`on`) - possible values `on` or `off`. Enables the icon allowing for editing of treatments in the main view.

### Predefined values for your server settings (optional)
  * `INSECURE_USE_HTTP` (`false`) - Redirect unsafe http traffic to https. Possible values `false`, or `true`. Your site redirects to `https` by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set `INSECURE_USE_HTTP` to `true`. Note: This will allow (unsafe) http traffic to your Nightscout instance and is not recommended.
  * `SECURE_HSTS_HEADER` (`true`) - Add HTTP Strict Transport Security (HSTS) header. Possible values `false`, or `true`.
  * `SECURE_HSTS_HEADER_INCLUDESUBDOMAINS` (`false`) - includeSubdomains options for HSTS. Possible values `false`, or `true`.
  * `SECURE_HSTS_HEADER_PRELOAD` (`false`) - ask for preload in browsers for HSTS. Possible values `false`, or `true`.
  * `SECURE_CSP` (`false`) - Add Content Security Policy headers. Possible values `false`, or `true`.
  * `SECURE_CSP_REPORT_ONLY` (`false`) - If set to `true` allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values `false`, or `true`.

### Views

  Nightscout allows to create custom, simplified views using a predefined set of elements. This option is available under `[+]` link in the main menu.
  
  List of available items:
  * `SGV` - Sensor Glucose Value
  * `SGV age` - time since the last SGV read
  * `SGV delta` - change of SGV in the last 5 minutes
  * `Trend arrow` - icon of the SG trend
  * `Time` - current time
  * `Line break` - invisible item that will move following items to the next line (by default all are showing on the same level)
  
  All visible items have `Size` property which allows to customize the view even more. Also, all items may appear multiple times on the view.
  
  Apart from adding items, it is possible to customize other aspects of the views, like selecting `Color` or `Black` background. The first one will indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above).
  `Show SGV age` option will make `SGV age` item appear `Always` or only if the predefined threshold is reached: `Only after threshold`. Breaching `SGV age threshold` will also make `Color` background turn grey and strike through `SGV`.
  `Clock view configurator` will generate an URL (available under `Open my clock view!` link) that could be bookmarked.
  
  There are a few default views available from the main menu: 
  * `Clock` - Shows current BG, trend arrow, and time of day. Grey text on a black background.
  * `Color` - Shows current BG and trend arrow. White text on a color background.
  * `Simple` - Shows current BG. Grey text on a black background.

  If you launch one of these views in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.

### Split View

  Some users will need easy access to multiple Nightscout views at the same time. We have a special view for this case, accessed on /split path on your Nightscout URL. The view supports any number of sites between 1 to 8 way split, where the content for the screen can be loaded from multiple Nightscout instances. Note you still need to host separate instances for each Nightscout being monitored including the one that hosts the split view page - these variables only add the ability to load multiple views into one browser page. To set the URLs from which the content is loaded, set:
  * `FRAME_URL_1` - URL where content is loaded, for the first view (increment the number up to 8 to get more views)
  * `FRAME_NAME_1` - Name for the first split view portion of the screen (increment the number to name more views)

### Plugins

  Plugins are used extend the way information is displayed, how notifications are sent, alarms are triggered, and more.

  The built-in/example plugins that are available by default are listed below.  The plugins may still need to be enabled by adding to the `ENABLE` environment variable.

#### Default Plugins

  These can be disabled by adding them to the `DISABLE` variable, for example `DISABLE=""direction upbat""`

##### `delta` (BG Delta)
  Calculates and displays the change between the last 2 BG values.

##### `direction` (BG Direction)
  Displays the trend direction.

##### `upbat` (Uploader Battery)
  Displays the most recent battery status from the uploader phone. . Use these [extended setting](#extended-settings) to adjust behavior:
  * `UPBAT_ENABLE_ALERTS` (`false`) - Set to `true` to enable uploader battery alarms via Pushover and IFTTT.
  * `UPBAT_WARN` (`30`) - Minimum battery percent to trigger warning.
  * `UPBAT_URGENT` (`20`) - Minimum battery percent to trigger urgent alarm.

##### `timeago` (Time Ago)
  Displays the time since last CGM entry. Use these [extended setting](#extended-settings) to adjust behavior:
  * `TIMEAGO_ENABLE_ALERTS` (`false`) - Set to `true` to enable stale data alarms via Pushover and IFTTT.
  * `ALARM_TIMEAGO_WARN` (`on`) - possible values `on` or `off`
  * `ALARM_TIMEAGO_WARN_MINS` (`15`) - minutes since the last reading to trigger a warning
  * `ALARM_TIMEAGO_URGENT` (`on`) - possible values `on` or `off`
  * `ALARM_TIMEAGO_URGENT_MINS` (`30`) - minutes since the last reading to trigger a urgent alarm

##### `devicestatus` (Device Status)
  Used by `upbat` and other plugins to display device status info.  Supports the `DEVICESTATUS_ADVANCED=""true""` [extended setting](#extended-settings) to send all device statuses to the client for retrospective use and to support other plugins.

##### `errorcodes` (CGM Error Codes)
  Generates alarms for CGM codes `9` (hourglass) and `10` (???).
  * Use [extended settings](#extended-settings) to adjust what errorcodes trigger notifications and alarms:
    * `ERRORCODES_INFO` (`1 2 3 4 5 6 7 8`) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or `off` to disable
    * `ERRORCODES_WARN` (`off`) - By default there are no warning configured, set to a space separate list of numbers or `off` to disable
    * `ERRORCODES_URGENT` (`9 10`) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or `off` to disable

##### `ar2` (AR2 Forecasting)
  Generates alarms based on forecasted values. See [Forecasting using AR2 algorithm](https://github.com/nightscout/nightscout.github.io/wiki/Forecasting)
  * Enabled by default if no thresholds are set **OR** `ALARM_TYPES` includes `predict`.
  * Use [extended settings](#extended-settings) to adjust AR2 behavior:
    * `AR2_CONE_FACTOR` (`2`) - to adjust size of cone, use `0` for a single line.

##### `simplealarms` (Simple BG Alarms)
  Uses `BG_HIGH`, `BG_TARGET_TOP`, `BG_TARGET_BOTTOM`, `BG_LOW` thresholds to generate alarms.
  * Enabled by default if 1 of these thresholds is set **OR** `ALARM_TYPES` includes `simple`.

##### `profile` (Treatment Profile)
  Add link to Profile Editor and allow to enter treatment profile settings. Also uses the extended setting:
  * `PROFILE_HISTORY` (`off`) - possible values `on` or `off`. Enable/disable NS ability to keep history of your profiles (still experimental)
  * `PROFILE_MULTIPLE` (`off`) - possible values `on` or `off`. Enable/disable NS ability to handle and switch between multiple treatment profiles

#### Advanced Plugins:

##### `careportal` (Careportal)
  An optional form to enter treatments.

##### `boluscalc` (Bolus Wizard)

##### `food` (Custom Foods)
  An option plugin to enable adding foods from database in Bolus Wizard and enable .

##### `rawbg` (Raw BG)
  Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with [extended setting](#extended-settings)
  * `DISPLAY` (`unsmoothed`) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record.
    * `unfiltered` - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value.
    * `filtered` - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high.
    * `unsmoothed` - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the `filtered` setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the `unfiltered` setting) by the ratio.  The effect is to exagerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.

##### `iob` (Insulin-on-Board)
  Adds the IOB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with insulin doses and the `dia` and `sens` fields from the [treatment profile](#treatment-profile).

##### `cob` (Carbs-on-Board)
  Adds the COB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with carb doses and the `carbs_hr`, `carbratio`, and `sens` fields from the [treatment profile](#treatment-profile).

##### `bwp` (Bolus Wizard Preview)
  This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. ***The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation.*** The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the `iob` plugin and `sens`, `target_high`, and `target_low` fields from the [treatment profile](#treatment-profile). Defaults that can be adjusted with [extended setting](#extended-settings)
  * `BWP_WARN` (`0.50`) - If `BWP` is > `BWP_WARN` a warning alarm will be triggered.
  * `BWP_URGENT` (`1.00`) - If `BWP` is > `BWP_URGENT` an urgent alarm will be triggered.
  * `BWP_SNOOZE_MINS` (`10`) - minutes to snooze when there is enough IOB to cover a high BG.
  * `BWP_SNOOZE` - (`0.10`) If BG is higher then the `target_high` and `BWP` < `BWP_SNOOZE` alarms will be snoozed for `BWP_SNOOZE_MINS`.

##### `cage` (Cannula Age)
  Calculates the number of hours since the last `Site Change` treatment that was recorded.
  * `CAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming cannula change.
  * `CAGE_INFO` (`44`) - If time since last `Site Change` matches `CAGE_INFO`, user will be warned of upcoming cannula change
  * `CAGE_WARN` (`48`) - If time since last `Site Change` matches `CAGE_WARN`, user will be alarmed to to change the cannula
  * `CAGE_URGENT` (`72`) - If time since last `Site Change` matches `CAGE_URGENT`, user will be issued a persistent warning of overdue change.
  * `CAGE_DISPLAY` (`hours`) - Possible values are 'hours' or 'days'. If 'days' is selected and age of canula is greater than 24h number is displayed in days and hours

#####  `sage` (Sensor Age)
  Calculates the number of days and hours since the last `Sensor Start` and `Sensor Change` treatment that was recorded.
  * `SAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming sensor change.
  * `SAGE_INFO` (`144`) - If time since last sensor event matches `SAGE_INFO`, user will be warned of upcoming sensor change
  * `SAGE_WARN` (`164`) - If time since last sensor event matches `SAGE_WARN`, user will be alarmed to to change/restart the sensor
  * `SAGE_URGENT` (`166`) - If time since last sensor event matches `SAGE_URGENT`, user will be issued a persistent warning of overdue change.

##### `iage` (Insulin Age)
  Calculates the number of days and hours since the last `Insulin Change` treatment that was recorded.
  * `IAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming insulin reservoir change.
  * `IAGE_INFO` (`44`) - If time since last `Insulin Change` matches `IAGE_INFO`, user will be warned of upcoming insulin reservoir change
  * `IAGE_WARN` (`48`) - If time since last `Insulin Change` matches `IAGE_WARN`, user will be alarmed to to change the insulin reservoir
  * `IAGE_URGENT` (`72`) - If time since last `Insulin Change` matches `IAGE_URGENT`, user will be issued a persistent warning of overdue change.

##### `bage` (Battery Age)
  Calculates the number of days and hours since the last `Pump Battery Change` treatment that was recorded.
  * `BAGE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications to remind you of upcoming pump battery change.
  * `BAGE_DISPLAY` (`days`) - Set to `hours` to display time since last `Pump Battery Change` in hours only.
  * `BAGE_INFO` (`312`) - If time since last `Pump Battery Change` matches `BAGE_INFO` hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days).
  * `BAGE_WARN` (`336`) - If time since last `Pump Battery Change` matches `BAGE_WARN` hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days).
  * `BAGE_URGENT` (`360`) - If time since last `Pump Battery Change` matches `BAGE_URGENT` hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).

##### `treatmentnotify` (Treatment Notifications)
  Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment.
  * `TREATMENTNOTIFY_SNOOZE_MINS` (`10`) - Number of minutes to snooze notifications after a treatment is entered
  * `TREATMENTNOTIFY_INCLUDE_BOLUSES_OVER` (`0`) - U value over which the bolus will trigger a notification and snooze alarms

##### `basal` (Basal Profile)
  Adds the Basal pill visualization to display the basal rate for the current time.  Also enables the `bwp` plugin to calculate correction temp basal suggestions.  Uses the `basal` field from the [treatment profile](#treatment-profile). Also uses the extended setting:
  * `BASAL_RENDER` (`none`) - Possible values are `none`, `default`, or `icicle` (inverted)

##### `bolus` (Bolus Rendering)
  Settings to configure Bolus rendering
  * `BOLUS_RENDER_OVER` (`0`) - U value over which the bolus labels use the format defined in `BOLUS_RENDER_FORMAT`. This value can be an integer or a float, e.g. 0.3, 1.5, 2, etc.
  * `BOLUS_RENDER_FORMAT` (`default`) - Possible values are `hidden`, `default` (with leading zero and U), `concise` (with U, without leading zero), and `minimal` (without leading zero and U).
  * `BOLUS_RENDER_FORMAT_SMALL` (`default`) - Possible values are `hidden`, `default` (with leading zero and U), `concise` (with U, without leading zero), and `minimal` (without leading zero and U).
  
##### `bridge` (Share2Nightscout bridge)
  Glucose reading directly from the Dexcom Share service, uses these extended settings:
  * `BRIDGE_USER_NAME` - Your username for the Share service.
  * `BRIDGE_PASSWORD` - Your password for the Share service.
  * `BRIDGE_INTERVAL` (`150000` *2.5 minutes*) - The time (in milliseconds) to wait between each update.
  * `BRIDGE_MAX_COUNT` (`1`) - The number of records to attempt to fetch per update.
  * `BRIDGE_FIRST_FETCH_COUNT` (`3`) - Changes max count during the very first update only.
  * `BRIDGE_MAX_FAILURES` (`3`) - How many failures before giving up.
  * `BRIDGE_MINUTES` (`1400`) - The time window to search for new data per update (the default value is one day in minutes).
  * `BRIDGE_SERVER` (``) - The default blank value is used to fetch data from Dexcom servers in the US. Set to (`EU`) to fetch from European servers instead.

##### `mmconnect` (MiniMed Connect bridge)
  Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout ([read more](https://github.com/mddub/minimed-connect-to-nightscout))
  * `MMCONNECT_USER_NAME` - Your user name for CareLink Connect.
  * `MMCONNECT_PASSWORD` - Your password for CareLink Connect.
  * `MMCONNECT_INTERVAL` (`60000` *1 minute*) - Number of milliseconds to wait between requests to the CareLink server.
  * `MMCONNECT_MAX_RETRY_DURATION` (`32`) - Maximum number of total seconds to spend retrying failed requests before giving up.
  * `MMCONNECT_SGV_LIMIT` (`24`) - Maximum number of recent sensor glucose values to send to Nightscout on each request.
  * `MMCONNECT_VERBOSE` - Set this to ""true"" to log CareLink request information to the console.
  * `MMCONNECT_STORE_RAW_DATA` - Set this to ""true"" to store raw data returned from CareLink as `type: ""carelink_raw""` database entries (useful for development).
  * `MMCONNECT_SERVER` - Set this to `EU` if you're using the European Medtronic services

##### `pump` (Pump Monitoring)
  Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, with more on the way
  * Requires `DEVICESTATUS_ADVANCED=""true""` to be set
  * `PUMP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications for Pump battery and reservoir.
  * `PUMP_WARN_ON_SUSPEND` (`false`) - Set to `true` to get an alarm when the pump is suspended.
  * `PUMP_FIELDS` (`reservoir battery`) - The fields to display by default.  Any of the following fields: `reservoir`, `battery`, `clock`, `status`, and `device`
  * `PUMP_RETRO_FIELDS` (`reservoir battery clock`) - The fields to display in retro mode. Any of the above fields.
  * `PUMP_WARN_CLOCK` (`30`) - The number of minutes ago that needs to be exceed before an alert is triggered.
  * `PUMP_URGENT_CLOCK` (`60`) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered.
  * `PUMP_WARN_RES` (`10`) - The number of units remaining, a warning will be triggered when dropping below this threshold.
  * `PUMP_URGENT_RES` (`5`) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold.
  * `PUMP_WARN_BATT_P` (`30`) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold.
  * `PUMP_URGENT_BATT_P` (`20`) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold.
  * `PUMP_WARN_BATT_V` (`1.35`) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold.
  * `PUMP_URGENT_BATT_V` (`1.30`) - The  voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.
  * `PUMP_WARN_BATT_QUIET_NIGHT` (`false`) - Do not generate battery alarms at night.

##### `openaps` (OpenAPS)
  Integrated OpenAPS loop monitoring, uses these extended settings:
  * Requires `DEVICESTATUS_ADVANCED=""true""` to be set
  * `OPENAPS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when OpenAPS isn't looping.  If OpenAPS is going to offline for a period of time, you can add an `OpenAPS Offline` event for the expected duration from Careportal to avoid getting alerts.
  * `OPENAPS_WARN` (`30`) - The number of minutes since the last loop that needs to be exceed before an alert is triggered
  * `OPENAPS_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggered
  * `OPENAPS_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display by default.  Any of the following fields: `status-symbol`, `status-label`, `iob`, `meal-assist`, `freq`, and `rssi`
  * `OPENAPS_RETRO_FIELDS` (`status-symbol status-label iob meal-assist rssi`) - The fields to display in retro mode. Any of the above fields.
  * `OPENAPS_PRED_IOB_COLOR` (`#1e88e5`) - The color to use for IOB prediction lines. Colors can be in `#RRGGBB` format, but [other CSS color units](https://www.w3.org/TR/css-color-3/#colorunits) may be used as well.
  * `OPENAPS_PRED_COB_COLOR` (`#FB8C00`) - The color to use for COB prediction lines. Same format as above.
  * `OPENAPS_PRED_ACOB_COLOR` (`#FB8C00`) - The color to use for ACOB prediction lines. Same format as above.
  * `OPENAPS_PRED_ZT_COLOR` (`#00d2d2`) - The color to use for ZT prediction lines. Same format as above.
  * `OPENAPS_PRED_UAM_COLOR` (`#c9bd60`) - The color to use for UAM prediction lines. Same format as above.
  * `OPENAPS_COLOR_PREDICTION_LINES` (`true`) - Enables / disables the colored lines vs the classic purple color.

 Also see [Pushover](#pushover) and [IFTTT Maker](#ifttt-maker).

##### `loop` (Loop)
  iOS Loop app monitoring, uses these extended settings:
  * Requires `DEVICESTATUS_ADVANCED=""true""` to be set
  * `LOOP_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when Loop isn't looping.
  * `LOOP_WARN` (`30`) - The number of minutes since the last loop that needs to be exceeded before an alert is triggered
  * `LOOP_URGENT` (`60`) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggered
  * Add `loop` to `SHOW_FORECAST` to show forecasted BG.

For remote overrides, the following extended settings must be configured:
  * `LOOP_APNS_KEY` - Apple Push Notifications service (APNs) Key, created in the Apple Developer website.
  * `LOOP_APNS_KEY_ID` - The Key ID for the above key.
  * `LOOP_DEVELOPER_TEAM_ID` - Your Apple developer team ID.
  * `LOOP_PUSH_SERVER_ENVIRONMENT` - (optional) Set this to `production` if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.

##### `override` (Override Mode)
  Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode:
  * Requires `DEVICESTATUS_ADVANCED=""true""` to be set

##### `xdripjs` (xDrip-js)
  Integrated xDrip-js monitoring, uses these extended settings:
  * Requires `DEVICESTATUS_ADVANCED=""true""` to be set
  * `XDRIPJS_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications when CGM state is not OK or battery voltages fall below threshold.
  * `XDRIPJS_STATE_NOTIFY_INTRVL` (`0.5`) - Set to number of hours between CGM state notifications
  * `XDRIPJS_WARN_BAT_V` (`300`) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.

##### `alexa` (Amazon Alexa)
  Integration with Amazon Alexa, [detailed setup instructions](docs/plugins/alexa-plugin.md)

##### `googlehome` (Google Home/DialogFLow)
  Integration with Google Home (via DialogFlow), [detailed setup instructions](docs/plugins/googlehome-plugin.md)

##### `speech` (Speech)
  Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.

##### `cors` (CORS)
  Enabled [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) so other websites can make request to your Nightscout site, uses these extended settings:
  * `CORS_ALLOW_ORIGIN` (`*`) - The list of sites that are allow to make requests

##### `dbsize` (Database Size)
  Show size of Nightscout Database, as a percentage of declared available space or in MiB.

  Many deployments of Nightscout use free tier of MongoDB Atlas on Heroku, which is limited in size. After some time, as volume of stored data grows, it may happen that this limit is reached and system is unable to store new data. This plugin provides pill that indicates size of Database and shows (when configured) alarms regarding reaching space limit.

  **IMPORTANT:** This plugin can only check how much space database already takes, _but cannot infer_ max size available on server for it. To have correct alarms and realistic percentage, `DBSIZE_MAX` need to be properly set - according to your mongoDB hosting configuration.

  **NOTE:** This plugin rely on db.stats() for reporting _logical_ size of database, which may be different than _physical_ size of database on server. It may work for free tier of MongoDB on Atlas, since it calculate quota according to logical size too, but may fail for other hostings or self-hosted database with quota based on physical size. 
  
  **NOTE:** MongoDB Atlas quota is for **all** databases in cluster, while each instance will get only size of **its own database only**. It is ok when you only have **one** database in cluster (most common scenario) but will not work for multiple parallel databases. In such case, spliting known quota equally beetween databases and setting `DBSIZE_MAX` to that fraction may help, but wont be precise.

  All sizes are expressed as integers, in _Mebibytes_ `1 MiB == 1024 KiB == 1024*1024 B`

  * `DBSIZE_MAX` (`496`) - Maximal allowed size of database on your mongoDB server, in MiB. You need to adjust that value to match your database hosting limits - default value is for standard Heroku mongoDB free tier.
  * `DBSIZE_WARN_PERCENTAGE` (`60`) - Threshold to show first warning about database size. When database reach this percentage of `DBSIZE_MAX` size - pill will show size in yellow. 
  * `DBSIZE_URGENT_PERCENTAGE` (`75`) - Threshold to show urgent warning about database size. When database reach this percentage of `DBSIZE_MAX` size, it is urgent to do backup and clean up old data. At this percentage info pill turns red.
  * `DBSIZE_ENABLE_ALERTS` (`false`) - Set to `true` to enable notifications about database size.
  * `DBSIZE_IN_MIB` (`false`) - Set to `true` to display size of database in MiB-s instead of default percentage.
  
  This plugin should be enabled by default, if needed can be diasabled by adding `dbsize` to the list of disabled plugins, for example: `DISABLE=""dbsize""`.

#### Extended Settings
  Some plugins support additional configuration using extra environment variables.  These are prefixed with the name of the plugin and a `_`.  For example setting `MYPLUGIN_EXAMPLE_VALUE=1234` would make `extendedSettings.exampleValue` available to the `MYPLUGIN` plugin.

  Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser.

  * `DEVICESTATUS_ADVANCED` (`true`) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site.
  * `DEVICESTATUS_DAYS` (`1`) - Defaults to 1, can optionally be set to 2. Users can use this to show 48 hours of device status data for in retro mode, rather than the default 24 hours. Setting this value to 2 will roughly double the bandwidth usage of nightscout, so users with a data cap may not want to update this setting.

#### Pushover
  In addition to the normal web based alarms, there is also support for [Pushover](https://pushover.net/) based alarms and notifications.

  To get started install the Pushover application on your iOS or Android device and create an account.

  Using that account login to [Pushover](https://pushover.net/), in the top left you’ll see your User Key, you’ll need this plus an application API Token/Key to complete this setup.

  You’ll need to [Create a Pushover Application](https://pushover.net/apps/build).  You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch.  Maybe you'd like to use [this one](https://raw.githubusercontent.com/nightscout/cgm-remote-monitor/master/static/images/large.png)?

  Pushover is configured using the following Environment Variables:

    * `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=""pushover""`.
    * `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below.
    * `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user.  This also supports a space delimited list of keys.  To disable `INFO` level pushes set this to `off`.
    * `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`).  If not defined this will fallback to `PUSHOVER_USER_KEY`.  A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too.  This also support a space delimited list of keys.  To disable Alarm pushes set this to `off`.
    * `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements.  If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`.  This also support a space delimited list of keys. To disable Announcement pushes set this to `off`.
    * `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible.
    * `API_SECRET` - Used for signing the pushover callback request for acknowledgments.

    If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=""off""`
    If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=""off""`
    If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=""off""`

    If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcements

    For testing/development try [localtunnel](http://localtunnel.me/).

#### IFTTT Maker
 In addition to the normal web based alarms, and pushover, there is also integration for [IFTTT Webhooks](https://ifttt.com/maker_webhooks).

 With Maker you are able to integrate with all the other [IFTTT Services](https://ifttt.com/services).  For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more.

 1. Setup IFTTT account: [login](https://ifttt.com/login) or [create an account](https://ifttt.com/join)
 2. Follow the  [Detailed IFTTT setup Instructions](docs/plugins/maker-setup.md)
 3. Configure Nightscout by setting these webpage environment variables:
  * `ENABLE` - `maker` should be added to the list of plugins, for example: `ENABLE=""maker""`.
  * `MAKER_KEY` - Set this to your secret key (see  [[Detailed Instructions](docs/plugins/maker-setup.md) ) `MAKER_KEY=""abcMyExampleabc123defjt1DeNSiftttmak-XQb69p""` This also supports a space delimited list of keys.
  * `MAKER_ANNOUNCEMENT_KEY` - An optional Maker key, will be used for system wide user generated announcements.  If not defined this will fallback to `MAKER_KEY`.  A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too.  This also support a space delimited list of keys.

 Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with `ns-`.  The core events are:
  * `ns-event` - This event is sent to the maker service for all alarms and notifications.  This is good catch all event for general logging.
  * `ns-allclear` - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms.  For example, you could use this event to turn a light to green.
  * `ns-info` - Plugins that generate notifications at the info level will cause this event to also be triggered.  It will be sent in addition to `ns-event`.
  * `ns-warning` - Alarms at the warning level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.
  * `ns-urgent` - Alarms at the urgent level with cause this event to also be triggered.  It will be sent in addition to `ns-event`.
  * see the [full list of events](lib/plugins/maker-setup.md#events)


### Treatment Profile
  Some of the [plugins](#plugins) make use of a treatment profile that can be edited using the Profile Editor, see the link in the Settings drawer on your site.

  Treatment Profile Fields:

  * `timezone` (Time Zone) - time zone local to the patient. *Should be set.*
  * `units` (Profile Units) - blood glucose units used in the profile, either ""mg/dl"" or ""mmol""
  * `dia` (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours.
  * `carbs_hr` (Carbs per Hour) - The number of carbs that are processed per hour, for more information see [#DIYPS](http://diyps.org/2014/05/29/determining-your-carbohydrate-absorption-rate-diyps-lessons-learned/).
  * `carbratio` (Carb Ratio) - grams per unit of insulin.
  * `sens` (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose.
  * `basal` The basal rate set on the pump.
  * `target_high` - Upper target for correction boluses.
  * `target_low` - Lower target for correction boluses.

  Some example profiles are [here](docs/plugins/example-profiles.md).

## Setting environment variables
Easy to emulate on the commandline:

```bash
    echo 'MONGO_CONNECTION=mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout' >> my.env
    echo 'MONGO_COLLECTION=entries' >> my.env
```

From now on you can run using
```bash
    $ (eval $(cat my.env | sed 's/^/export /') && PORT=1337 node server.js)
```

Your hosting provider probably has a way to set these through their GUI.

### Vagrant install

Optionally, use [Vagrant](https://www.vagrantup.com/) with the
included `Vagrantfile` and `bin/setup.sh` to install OS and node packages to
a virtual machine.

```bash
host$ vagrant up
host$ vagrant ssh
vm$ ./bin/setup.sh
```

The setup script will install OS packages then run `npm install`.

The Vagrant VM serves to your host machine only on 192.168.33.10, you can access
the web interface on [http://192.168.33.10:1337](http://192.168.33.10:1337)

More questions?
---------------

Feel free to [post an issue][issues], but read the [wiki][wiki] first.

[issues]: https://github.com/nightscout/cgm-remote-monitor/issues
[wiki]: https://github.com/nightscout/cgm-remote-monitor/wiki

### Browser testing suite provided by
[![BrowserStack][browserstack-img]][browserstack-url]

[browserstack-img]: /static/images/browserstack-logo.png
[browserstack-url]: https://www.browserstack.com/

License
---------------

[agpl-3]: http://www.gnu.org/licenses/agpl-3.0.txt

    cgm-remote-monitor - web app to broadcast cgm readings
    Copyright (C) 2017 Nightscout contributors.  See the COPYRIGHT file
    at the root directory of this distribution and at
    https://github.com/nightscout/cgm-remote-monitor/blob/master/COPYRIGHT

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"
soyHenry/Prep-Course,JavaScript,"![HenryLogo](https://d31uz8lwfmyn8g.cloudfront.net/Assets/logo-henry-white-lg.png)

# Prep Course

#### Introducción

¡Hola! Bienvenido al Prep Course para la carrera de Desarrollo Web Full Stack

En este curso introductorio podrás aprender todo el contenido que luego será evaluado en el Henry Challenge, el último paso para ingresar a la carrera de Desarrollo Web Full Stack en Henry.

## ¿Qué es el Prep Course?

El Prep Course, o curso preparatorio, es un curso que diseñamos desde Henry con la finalidad de nivelar a todos nuestros aplicantes. La idea es que con este curso puedas dar tus primeros pasos en tecnología y así aprender esos conceptos básicos que serán necesarios para cuando estés dentro de la carrera.

#### ¿En qué consiste el Prep Course?

El curso consiste en una serie de videos, material escrito y ejercicios para que puedas ir aprendiendo estos conceptos básicos de Javascript, HTML y CSS. Todo el material se encuentra **aquí en la parte superior de la página**, iniciando por la sección de **""Intro""** y finalizando en la sección del **""Challenge""**.

Podrás ir avanzando con el contenido a tu ritmo y de manera asincrónica (es decir, en los horarios y tiempos que tu prefieras). Cuando hayas finalizado, podrás inscribirte para realizar el Henry Challenge.

## ¿Qué es el Henry Challenge?

Es un examen donde evaluamos los conceptos que se aprenden en el Prep Course. El examen tiene la finalidad de asegurarnos que realmente se han aprendido estos conceptos, dado que tenerlos bien claros es la clave de éxito para que puedas avanzar bien dentro de la carrera.
El examen se realiza todos los sábados, previa inscripción en el siguiente [link](https://www.admissions.soyhenry.com/). Podrás rendirlo todas las veces que quieras. Para más información, puedes ir a la sección del challenge de este repositorio (prep.soyhenry.com/challenge).

## ¿Qué puedo hacer si tengo dudas?

Contamos con dos herramientas de apoyo:

**Slack:** es una plataforma de comunicación, donde podrás ponerte en contacto con nuestra comunidad que siempre te ayudará a resolver todas tus dudas. Encontrarás acceso a Slack desde la [plataforma de admisión](https://www.admissions.soyhenry.com/) o desde los mails que recibiste al momento de aplicar.
Más adelante te explicaremos cómo usar la herramienta.

**Clases de apoyo en vivo:** de lunes a viernes hay un espacio en vivo via Zoom con estudiantes avanzados que se postulan para responder todas tus consultas.

#### Entonces, ¿qué debo hacer ahora para avanzar con el proceso?

Debes comenzar a ver todos los videos, el material escrito y a hacer los ejercicios, siguiendo el orden postulado aquí en el curso. Una vez que hayas finalizado, podrás realizar el Henry Challenge.

Cualquier duda, nos puedes escribir a admisiones@soyhenry.com
¡Muchos éxitos!

## Clases de Apoyo

Para poder acompañarte en esta etapa, ponemos a disposición las “Clases de apoyo en vivo”. Estos son espacios donde los Henry Heros (HHs), es decir estudiantes avanzados de Henry, se ponen a disposición para despejar todas las dudas que puedas tener mientras estás estudiando el Prep Course.

Las clases son de lunes a viernes, por la tarde. Cada día se establece una temática distinta a trabajar. Deberás llegar a la clase habiendo visto los videos sobre ese tema e intentado resolver los ejercicios, dado que en las clases no se explicará los temas desde cero sino que se resolverán dudas puntuales.

Si no puedes asistir al espacio en vivo, podrás ver la grabación. Puedes encontrar el calendario con las clases, el link de acceso y el link de la grabación, aquí: [calendario](/Calendario)

## Open House

Te compartimos esta grabación del último Open House que hicimos en nuestro canal de Youtube. En este video podrás conocer más sobre Henry, la carrera y el proceso de admisión:

<div class=""iframeContainer"">
<iframe width=""560"" height=""315"" src=""https://www.youtube.com/embed/p_Hb0_v8SAc"" title=""YouTube video player"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen></iframe>
</div>

## ¿Quieres conocer más sobre la carrera de Desarrollo Web Full Stack en Henry?

En este video te explicamos todo lo que debes conocer:

<div class=""iframeContainer"">
<iframe src=""https://player.vimeo.com/video/426051769"" allow=""autoplay; fullscreen""></iframe>
</div>

Aclaración: a partir de noviembre del 2022, el Henry Challenge se realiza todos los sábados."
udacity/frontend-nanodegree-resume,JavaScript,"# Project Details
## How do I complete this project?
Review the Online Resume [Project Rubric](https://review.udacity.com/?_ga=1.189245867.12280332.1465333852#!/projects/2962818615/rubric).

1. In this project you will store your resume data in four javaScript objects according to the schema given below. As is often the case when leveraging an API, the objects must follow the schema exactly. All properties must be present and have real or fake values. The names must match those in the schema (note that object and property names are case-sensitive). All property values should be of the data-type given for the property in the schema. For example if the data-type is given as an array, it is not acceptable to use a string as a value for that property.
2. Once you've created your javaScript objects, you will write the code needed to display all of the resume data contained within these objects in your resume.
3. All of the HTML code needed to build the resume is stored in **js/helper.js** variables. The variable names indicate their function. You will replace substrings in these variable string values such as **%data%** and **#** with the data in your javaScript objects, and append or prepend the formatted result to your resume in the appropriate location.
4. If you need a refresher on JavaScript syntax, go to the [Javascript Basics](https://classroom.udacity.com/nanodegrees/nd001/parts/0011345406/modules/296281861575460/lessons/1946788554/concepts/25505685350923) course; if you would like to understand how this project is manipulating and traversing the DOM, check out [Intro to jQuery](https://classroom.udacity.com/nanodegrees/nd001/parts/0011345406/modules/296281861575461/lessons/3314378535/concepts/33166386820923).
5. Go through the videos and assignments in this course to learn the JavaScript necessary to build your resume.
6. Fork the project repo from [Github](https://github.com/udacity/frontend-nanodegree-resume) and begin building you resume.
7. If you are prompted to do so, you may want to get a [Google Maps API key](https://developers.google.com/maps/documentation/javascript/get-api-key), and include it as the value of the `key` parameter when loading the Google Maps API in **index.html**:
```<script  src=""http://maps.googleapis.com/maps/api/js?libraries=places&key=[YOUR_API_KEY]""></script> ``` You may have some initial concerns with placing your API key directly within your JavaScript source files, but rest assured this is perfectly safe. All client-side code must be downloaded by the client; therefore, the client must download this API key - it is not intended to be secret. Google has security measures in place to ensure your key is not abused. **It is not technically possible to make anything secret on the client-side.**
8. Check your work against the [Project Rubric](https://review.udacity.com/?_ga=1.189245867.12280332.1465333852#!/projects/2962818615/rubric).
9. When you are satisfied with your project, submit it according to the Submission Instructions below.

### By the end:
Your resume will look something like this
![](http://i.imgur.com/pWU1Xbl.png)

And your repository will include the following files:

* **index.html**: The main HTML document. Contains links to all of the CSS and JS resources needed to render the resume, including resumeBuilder.js.
* **js/helper.js**: Contains helper code needed to format the resume and build the map. It also has a few function shells for additional functionality. More on helper.js further down.
* **js/resumeBuilder.js**: This file is empty. You should write your code here.
* **js/jQuery.js**: The jQuery library.
* **css/style.css**: Contains all of the CSS needed to style the page.
* **README.md**:
The GitHub readme file.
* and some images in the images directory.

## Your starting point...
### js/helper.js
Within helper.js, you’ll find a large collection of strings containing snippets of HTML. Within many snippets, you’ll find placeholder data in the form of `%data%` or `%contact%`.

Each string has a title that describes how it should be used. For instance, `HTMLworkStart` should be the first `<div>` in the Work section of the resume. `HTMLschoolLocation` contains a `%data%` placeholder which should be replaced with the location of one of your schools.

### Your process:
The resume has four distinct sections: work, education, projects and a header with biographical information. You’ll need to:

1. Build four JavaScript objects, each one representing a different resume section. The objects that you create (including property names and the data types of their values) need to follow the schema below exactly. All properties should be included and contain a value of the type specified unless the property is marked 'optional'. Property values may contain real or fake data. Property names are case-sensitive. Make sure your javaScript objects are formatted correctly using [jshint.com](http://jshint.com/).

  * `bio` contains:

            name : string
            role : string
            contacts : an object with
                  mobile: string
                  email: string
                  github: string
                  twitter: string (optional)
                  location: string
            welcomeMessage: string
            skills: array of strings
            biopic: string url
            display: function taking no parameters

  * `education` contains:

            schools: array of objects with
                 name: string
                 location: string
                 degree: string
                 majors: array of strings
                 dates: string (works with a hyphen between them)
                 url: string (optional)
            onlineCourses: array of objects with
                 title: string
                 school: string
                 dates: string (works with a hyphen between them)
                 url: string
            display: function taking no parameters

  * `work` contains

            jobs: array of objects with
                 employer: string
                 title: string
                 location: string
                 dates: string (Can be 'in progress')
                 description: string
            display: function taking no parameters

  * `projects` contains:

            projects: array of objects with
                  title: string
                  dates: string (works with a hyphen between them)
                  description: string
                  images: array with string urls
            display: function taking no parameters

2. Iterate through each javaScript object and append its information to index.html in the correct section.
  * First off, you’ll be using jQuery’s `selector.append()` and `selector.prepend()` functions to modify index.html. `selector.append()` makes an element appear at the end of a selected section. `selector.prepend()` makes an element appear at the beginning of a selected section.
    * Pay close attention to the ids of the `<div>`s in index.html and the HTML snippets in helper.js. They’ll be very useful as jQuery selectors for `selector.append()` and `selector.prepend()`
  * You’ll also be using the JavaScript method `string.replace(old, new)` to swap out all the placeholder text (e.g. `%data%`) for data from your resume JSON objects.
  * Here’s an example of some code that would add the location of one of your companies to the page:
    * `var formattedLocation = HTMLworkLocation.replace(""%data%"", work.jobs[job].location);`
    * `$("".work-entry:last"").append(formattedLocation);`
  * Use the mockup at the page of this document as a guide for the order in which you should append elements to the page.
3. The resume includes an interactive map. Do the following to add it.
  * In resumeBuilder.js, append the googleMap string to `<div id=”mapDiv”>`.
  * In index.html, uncomment the Google script element: `<script type=""text/javascript"" src=""http://maps.googleapis.com/maps/api/js?libraries=places""></script>`
  * In helper.js, at the bottom of the file, uncomment code to initialize map and set fitBounds.
4. All of your code for adding elements to the resume should be contained within functions.
5. As described in the javaScript object schema, each 'display' function should be encapsulated within the javaScript object it displays in the resume. For instance, your 'display' function for appending 'work' experience data to the resume should be encapsulated within the 'work' javaScript object. The 'display' function can be encapsulated within the 'work' javaScript object definition in the same way other properties are defined there, or it can be encapsulated later in the file using dot notation. For example: `work.display =`
6. It’s possible to make additional information show up when you click on the pins in the map. Check out line 174 in helper.js and the Google Maps API to get started.

 # Archival Note 
 This repository is deprecated; therefore, we are going to archive it. However, learners will be able to fork it to their personal Github account but cannot submit PRs to this repository. If you have any issues or suggestions to make, feel free to: 
- Utilize the https://knowledge.udacity.com/ forum to seek help on content-specific issues. 
- Submit a support ticket along with the link to your forked repository if (learners are) blocked for other reasons. Here are the links for the [retail consumers](https://udacity.zendesk.com/hc/en-us/requests/new) and [enterprise learners](https://udacityenterprise.zendesk.com/hc/en-us/requests/new?ticket_form_id=360000279131)."
odoo/odoo,JavaScript,"[![Build Status](https://runbot.odoo.com/runbot/badge/flat/1/master.svg)](https://runbot.odoo.com/runbot)
[![Tech Doc](https://img.shields.io/badge/master-docs-875A7B.svg?style=flat&colorA=8F8F8F)](https://www.odoo.com/documentation/16.0)
[![Help](https://img.shields.io/badge/master-help-875A7B.svg?style=flat&colorA=8F8F8F)](https://www.odoo.com/forum/help-1)
[![Nightly Builds](https://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&colorA=8F8F8F)](https://nightly.odoo.com/)

Odoo
----

Odoo is a suite of web based open source business apps.

The main Odoo Apps include an <a href=""https://www.odoo.com/page/crm"">Open Source CRM</a>,
<a href=""https://www.odoo.com/app/website"">Website Builder</a>,
<a href=""https://www.odoo.com/app/ecommerce"">eCommerce</a>,
<a href=""https://www.odoo.com/app/inventory"">Warehouse Management</a>,
<a href=""https://www.odoo.com/app/project"">Project Management</a>,
<a href=""https://www.odoo.com/app/accounting"">Billing &amp; Accounting</a>,
<a href=""https://www.odoo.com/app/point-of-sale-shop"">Point of Sale</a>,
<a href=""https://www.odoo.com/app/employees"">Human Resources</a>,
<a href=""https://www.odoo.com/app/social-marketing"">Marketing</a>,
<a href=""https://www.odoo.com/app/manufacturing"">Manufacturing</a>,
<a href=""https://www.odoo.com/"">...</a>

Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get
a full-featured <a href=""https://www.odoo.com"">Open Source ERP</a> when you install several Apps.

Getting started with Odoo
-------------------------

For a standard installation please follow the <a href=""https://www.odoo.com/documentation/16.0/administration/install/install.html"">Setup instructions</a>
from the documentation.

To learn the software, we recommend the <a href=""https://www.odoo.com/slides"">Odoo eLearning</a>, or <a href=""https://www.odoo.com/page/scale-up-business-game"">Scale-up</a>, the <a href=""https://www.odoo.com/page/scale-up-business-game"">business game</a>. Developers can start with <a href=""https://www.odoo.com/documentation/16.0/developer/howtos.html"">the developer tutorials</a>
"
atom/atom,JavaScript,"# Atom

[![Build status](https://dev.azure.com/github/Atom/_apis/build/status/Atom%20Production%20Branches?branchName=master)](https://dev.azure.com/github/Atom/_build/latest?definitionId=32&branchName=master)

> Atom and all repositories under Atom will be archived on December 15, 2022. Learn more in our [official announcement](https://github.blog/2022-06-08-sunsetting-atom/)

Atom is a hackable text editor for the 21st century, built on [Electron](https://github.com/electron/electron), and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.

![Atom](https://user-images.githubusercontent.com/378023/49132477-f4b77680-f31f-11e8-8357-ac6491761c6c.png)

![Atom Screenshot](https://user-images.githubusercontent.com/378023/49132478-f4b77680-f31f-11e8-9e10-e8454d8d9b7e.png)

Visit [atom.io](https://atom.io) to learn more or visit the [Atom forum](https://github.com/atom/atom/discussions).

Follow [@AtomEditor](https://twitter.com/atomeditor) on Twitter for important
announcements.

This project adheres to the Contributor Covenant [code of conduct](CODE_OF_CONDUCT.md).
By participating, you are expected to uphold this code. Please report unacceptable behavior to atom@github.com.

## Documentation

If you want to read about using Atom or developing packages in Atom, the [Atom Flight Manual](https://flight-manual.atom.io) is free and available online. You can find the source to the manual in [atom/flight-manual.atom.io](https://github.com/atom/flight-manual.atom.io).

The [API reference](https://atom.io/docs/api) for developing packages is also documented on Atom.io.

## Installing

### Prerequisites
- [Git](https://git-scm.com)

### macOS

Download the latest [Atom release](https://github.com/atom/atom/releases/latest).

Atom will automatically update when a new release is available.

### Windows

Download the latest [Atom installer](https://github.com/atom/atom/releases/latest). `AtomSetup.exe` is 32-bit. For 64-bit systems, download `AtomSetup-x64.exe`.

Atom will automatically update when a new release is available.

You can also download `atom-windows.zip` (32-bit) or `atom-x64-windows.zip` (64-bit) from the [releases page](https://github.com/atom/atom/releases/latest).
The `.zip` version will not automatically update.

Using [Chocolatey](https://chocolatey.org)? Run `cinst Atom` to install the latest version of Atom.

### Linux

Atom is only available for 64-bit Linux systems.

Configure your distribution's package manager to install and update Atom by following the [Linux installation instructions](https://flight-manual.atom.io/getting-started/sections/installing-atom/#platform-linux) in the Flight Manual.  You will also find instructions on how to install Atom's official Linux packages without using a package repository, though you will not get automatic updates after installing Atom this way.

#### Archive extraction

An archive is available for people who don't want to install `atom` as root.

This version enables you to install multiple Atom versions in parallel. It has been built on Ubuntu 64-bit,
but should be compatible with other Linux distributions.

1. Install dependencies (on Ubuntu):
```sh
sudo apt install git libasound2 libcurl4 libgbm1 libgcrypt20 libgtk-3-0 libnotify4 libnss3 libglib2.0-bin xdg-utils libx11-xcb1 libxcb-dri3-0 libxss1 libxtst6 libxkbfile1
```
2. Download `atom-amd64.tar.gz` from the [Atom releases page](https://github.com/atom/atom/releases/latest).
3. Run `tar xf atom-amd64.tar.gz` in the directory where you want to extract the Atom folder.
4. Launch Atom using the installed `atom` command from the newly extracted directory.

The Linux version does not currently automatically update so you will need to
repeat these steps to upgrade to future releases.

## Building

* [Linux](https://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux)
* [macOS](https://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-mac)
* [Windows](https://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-windows)

## Discussion

* Discuss Atom on [GitHub Discussions](https://github.com/atom/atom/discussions)

## License

[MIT](https://github.com/atom/atom/blob/master/LICENSE.md)

When using the Atom or other GitHub logos, be sure to follow the [GitHub logo guidelines](https://github.com/logos).
"
anuraghazra/github-readme-stats,JavaScript,"<p align=""center"">
 <img width=""100px"" src=""https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg"" align=""center"" alt=""GitHub Readme Stats"" />
 <h2 align=""center"">GitHub Readme Stats</h2>
 <p align=""center"">Get dynamically generated GitHub stats on your READMEs!</p>
</p>
  <p align=""center"">
    <a href=""https://github.com/anuraghazra/github-readme-stats/actions"">
      <img alt=""Tests Passing"" src=""https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg"" />
    </a>
    <a href=""https://github.com/anuraghazra/github-readme-stats/graphs/contributors"">
      <img alt=""GitHub Contributors"" src=""https://img.shields.io/github/contributors/anuraghazra/github-readme-stats"" />
    </a>
    <a href=""https://codecov.io/gh/anuraghazra/github-readme-stats"">
      <img src=""https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg"" />
    </a>
    <a href=""https://github.com/anuraghazra/github-readme-stats/issues"">
      <img alt=""Issues"" src=""https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff"" />
    </a>
    <a href=""https://github.com/anuraghazra/github-readme-stats/pulls"">
      <img alt=""GitHub pull requests"" src=""https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff"" />
    </a>
    <br />
    <br />
    <a href=""https://a.paddle.com/v2/click/16413/119403?link=1227"">
      <img src=""https://img.shields.io/badge/Supported%20by-VSCode%20Power%20User%20%E2%86%92-gray.svg?colorA=655BE1&colorB=4F44D6&style=for-the-badge""/>
    </a>
    <a href=""https://a.paddle.com/v2/click/16413/119403?link=2345"">
      <img src=""https://img.shields.io/badge/Supported%20by-Node%20Cli.com%20%E2%86%92-gray.svg?colorA=61c265&colorB=4CAF50&style=for-the-badge""/>
    </a>
  </p>

  <p align=""center"">
    <a href=""#demo"">View Demo</a>
    ·
    <a href=""https://github.com/anuraghazra/github-readme-stats/issues/new/choose"">Report Bug</a>
    ·
    <a href=""https://github.com/anuraghazra/github-readme-stats/issues/new/choose"">Request Feature</a>
    ·
    <a href=""https://github.com/anuraghazra/github-readme-stats/discussions"">Ask Question</a>
  </p>
  <p align=""center"">
    <a href=""/docs/readme_fr.md"">Français </a>
    ·
    <a href=""/docs/readme_cn.md"">简体中文</a>
    ·
    <a href=""/docs/readme_es.md"">Español</a>
    ·
    <a href=""/docs/readme_de.md"">Deutsch</a>
    ·
    <a href=""/docs/readme_ja.md"">日本語</a>
    ·
    <a href=""/docs/readme_pt-BR.md"">Português Brasileiro</a>
    ·
    <a href=""/docs/readme_it.md"">Italiano</a>
    ·
    <a href=""/docs/readme_kr.md"">한국어</a>
    .
    <a href=""/docs/readme_nl.md"">Nederlands</a>
    .
    <a href=""/docs/readme_np.md"">नेपाली</a>
    .
    <a href=""/docs/readme_tr.md"">Türkçe</a>
  </p>
</p>

<p align=""center"">Love the project? Please consider <a href=""https://www.paypal.me/anuraghazra"">donating</a> to help it improve!</p>

<a href=""https://indiafightscorona.giveindia.org"">
  <img src=""https://cfstatic.give.do/logo.png"" alt=""Give india logo"" width=""200"" />
</a>

Are you considering supporting the project by donating? Please DO NOT!!

Instead, Help India fight the second deadly wave of COVID-19.
Thousands of people are dying in India because of a lack of Oxygen & also COVID-related infrastructure.

Visit <https://indiafightscorona.giveindia.org> and make a small donation to help us fight COVID and overcome this crisis. A small donation goes a long way. :heart:

</p>

# Features

-   [GitHub Stats Card](#github-stats-card)
-   [GitHub Extra Pins](#github-extra-pins)
-   [Top Languages Card](#top-languages-card)
-   [Wakatime Week Stats](#wakatime-week-stats)
-   [Themes](#themes)
    -   [Responsive Card Theme](#responsive-card-theme)
-   [Customization](#customization)
    -   [Common Options](#common-options)
    -   [Stats Card Exclusive Options](#stats-card-exclusive-options)
    -   [Repo Card Exclusive Options](#repo-card-exclusive-options)
    -   [Language Card Exclusive Options](#language-card-exclusive-options)
    -   [Wakatime Card Exclusive Option](#wakatime-card-exclusive-options)
-   [Deploy Yourself](#deploy-on-your-own)
    -   [On Vercel](#on-vercel)
    -   [On other platforms](#on-other-platforms)
    -   [Keep your fork up to date](#keep-your-fork-up-to-date)

# GitHub Stats Card

Copy-paste this into your markdown content, and that is it. Simple!

Change the `?username=` value to your GitHub username.

```md
[![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
```

> **Note**
> Available ranks are S+ (top 1%), S (top 25%), A++ (top 45%), A+ (top 60%), and B+ (everyone). The values are calculated by using the [cumulative distribution function](https://en.wikipedia.org/wiki/Cumulative_distribution_function) using commits, contributions, issues, stars, pull requests, followers, and owned repositories. The implementation can be investigated at [src/calculateRank.js](./src/calculateRank.js).

### Hiding individual stats

You can pass a query parameter `&hide=` to hide any specific stats with comma-separated values.

> Options: `&hide=stars,commits,prs,issues,contribs`

```md
![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&hide=contribs,prs)
```

### Adding private contributions count to total commits count

You can add the count of all your private contributions to the total commits count by using the query parameter `&count_private=true`.

> **Note**
> If you are deploying this project yourself, the private contributions will be counted by default. If you are using the public Vercel instance, you need to choose to [share your private contributions](https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/managing-contribution-settings-on-your-profile/showing-your-private-contributions-and-achievements-on-your-profile).

> Options: `&count_private=true`

```md
![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&count_private=true)
```

### Showing icons

To enable icons, you can pass `&show_icons=true` in the query param, like so:

```md
![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true)
```

### Themes

With inbuilt themes, you can customize the look of the card without doing any [manual customization](#customization).

Use `&theme=THEME_NAME` parameter like so :

```md
![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=radical)
```

#### All inbuilt themes

GitHub readme stats comes with several built-in themes (e.g. `dark`, `radical`, `merko`, `gruvbox`, `tokyonight`, `onedark`, `cobalt`, `synthwave`, `highcontrast`, `dracula`).

<img src=""https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png"" alt=""GitHub Readme Stats Themes"" width=""600px""/>

You can look at a preview for [all available themes](./themes/README.md) or checkout the [theme config file](./themes/index.js) & **you can also contribute new themes** if you like :D

#### Responsive Card Theme

[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)

Since GitHub will re-upload the cards and serve them from their [CDN](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-anonymized-urls), we can not infer the browser/GitHub theme on the server side. There are, however, four methods you can use to create dynamics themes on the client side.

##### Use the transparent theme

We have included a `transparent` theme that has a transparent background. This theme is optimized to look good on GitHub's dark and light default themes. You can enable this theme using the `&theme=transparent` parameter like so:

```md
![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=transparent)
```

<details>
<summary>:eyes: Show example</summary>

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=transparent)

</details>

##### Add transparent alpha channel to a themes bg_color

You can use the `bg_color` parameter to make any of [the available themes](./themes/README.md) transparent. This is done by setting the `bg_color` to a color with a transparent alpha channel (i.e. `bg_color=00000000`):

```md
![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&bg_color=00000000)
```

<details>
<summary>:eyes: Show example</summary>

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&bg_color=00000000)

</details>

##### Use GitHub's theme context tag

You can use [GitHub's theme context](https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/) tags to switch the theme based on the user GitHub theme automatically. This is done by appending `#gh-dark-mode-only` or `#gh-light-mode-only` to the end of an image URL. This tag will define whether the image specified in the markdown is only shown to viewers using a light or a dark GitHub theme:

```md
[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)
```

<details>
<summary>:eyes: Show example</summary>

[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)

</details>

##### Use GitHub's new media feature

You can use [GitHub's new media feature](https://github.blog/changelog/2022-05-19-specify-theme-context-for-images-in-markdown-beta/) in HTML to specify whether to display images for light or dark themes. This is done using the HTML `<picture>` element in combination with the `prefers-color-scheme` media feature.

```html
<picture>
<source
  srcset=""https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=dark""
  media=""(prefers-color-scheme: dark)""
/>
<source
  srcset=""https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true""
  media=""(prefers-color-scheme: light), (prefers-color-scheme: no-preference)""
/>
<img src=""https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true"" />
</picture>
```

<details>
<summary>:eyes: Show example</summary>

<picture>
<source
  srcset=""https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=dark""
  media=""(prefers-color-scheme: dark)""
/>
<source
  srcset=""https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true""
  media=""(prefers-color-scheme: light), (prefers-color-scheme: no-preference)""
/>
<img src=""https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true"" />
</picture>

</details>

### Customization

You can customize the appearance of your `Stats Card` or `Repo Card` however you wish with URL parameters.

#### Common Options

-   `title_color` - Card's title color _(hex color)_. Default: `2f80ed`.
-   `text_color` - Body text color _(hex color)_. Default: `434d58`.
-   `icon_color` - Icons color if available _(hex color)_. Default: `4c71f2`.
-   `border_color` - Card's border color _(hex color)_. Default: `e4e2e2` (Does not apply when `hide_border` is enabled).
-   `bg_color` - Card's background color _(hex color)_ **or** a gradient in the form of _angle,start,end_. Default: `fffefe`
-   `hide_border` - Hides the card's border _(boolean)_. Default: `false`
-   `theme` - name of the theme, choose from [all available themes](./themes/README.md). Default: `default` theme.
-   `cache_seconds` - set the cache header manually _(min: 14400, max: 86400)_. Default: `14400 seconds (4 hours)`.
-   `locale` - set the language in the card _(e.g. cn, de, es, etc.)_. Default: `en`.
-   `border_radius` - Corner rounding on the card. Default: `4.5`.

> **Warning**
> We use caching to decrease the load on our servers (see <https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425>). Our cards have a default cache of 4 hours (14400 seconds). Also, note that the cache is clamped to a minimum of 4 hours and a maximum of 24 hours.

##### Gradient in bg_color

You can provide multiple comma-separated values in the bg_color option to render a gradient with the following format:

    &bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10

#### Stats Card Exclusive Options

-   `hide` - Hides the [specified items](#hiding-individual-stats) from stats _(Comma-separated values)_. Default: `[] (blank array)`.
-   `hide_title` - _(boolean)_. Default: `false`.
-   `card_width` - Set the card's width manually _(number)_. Default: `500px  (approx.)`.
-   `hide_rank` - _(boolean)_ hides the rank and automatically resizes the card width. Default: `false`.
-   `rank_icon` - Shows alternative rank icon (i.e. `github` or `default`). Default: `default`.
-   `show_icons` - _(boolean)_. Default: `false`.
-   `include_all_commits` - Count total commits instead of just the current year commits _(boolean)_. Default: `false`.
-   `count_private` - Count private commits _(boolean)_. Default: `false`.
-   `line_height` - Sets the line height between text _(number)_. Default: `25`.
-   `exclude_repo` - Exclude stars from specified repositories _(Comma-separated values)_. Default: `[] (blank array)`.
-   `custom_title` - Sets a custom title for the card. Default:  `<username> GitHub Stats`.
-   `text_bold` - Use bold text _(boolean)_. Default: `true`.
-   `disable_animations` - Disables all animations in the card _(boolean)_. Default: `false`.
-   `ring_color` - Color of the rank circle _(hex color)_. Defaults to the theme ring color if it exists and otherwise the title color.
-   `number_format` - Switch between two available formats for displaying the card values `short` (i.e. `6.6k`) and `long` (i.e. `6626`). Default: `short`.

> **Note**
> When hide_rank=`true`, the minimum card width is 270 px + the title length and padding.

#### Repo Card Exclusive Options

-   `show_owner` - Show the repo's owner name _(boolean)_. Default: `false`.

#### Language Card Exclusive Options

-   `hide` - Hide the languages specified from the card _(Comma-separated values)_. Default: `[] (blank array)`.
-   `hide_title` - _(boolean)_. Default: `false`.
-   `layout` - Switch between four available layouts `normal` & `compact` & `donut` & `pie`. Default: `normal`.
-   `card_width` - Set the card's width manually _(number)_. Default `300`.
-   `langs_count` - Show more languages on the card, between 1-10 _(number)_. Default `5`.
-   `exclude_repo` - Exclude specified repositories _(Comma-separated values)_. Default: `[] (blank array)`.
-   `custom_title` - Sets a custom title for the card _(string)_. Default `Most Used Languages`.
-   `disable_animations` - Disables all animations in the card _(boolean)_. Default: `false`.
-   `hide_progress` - It uses the compact layout option, hides percentages, and removes the bars. Default: `false`.
-   `size_weight` - Configures language stats algorithm _(number)_ (see [Language stats algorithm](#Language-stats-algorithm)), defaults to 1.
-   `count_weight` - Configures language stats algorithm _(number)_ (see [Language stats algorithm](#Language-stats-algorithm)), defaults to 0.

> **Warning**
> Language names should be URI-escaped, as specified in [Percent Encoding](https://en.wikipedia.org/wiki/Percent-encoding)
> (i.e: `c++` should become `c%2B%2B`, `jupyter notebook` should become `jupyter%20notebook`, etc.) You can use
> [urlencoder.org](https://www.urlencoder.org/) to help you do this automatically.

#### Wakatime Card Exclusive Options

-   `hide` - Hide the languages specified from the card _(Comma-separated values)_. Default: `[] (blank array)`.
-   `hide_title` - _(boolean)_. Default `false`.
-   `line_height` - Sets the line height between text _(number)_. Default `25`.
-   `hide_progress` - Hides the progress bar and percentage _(boolean)_. Default `false`.
-   `custom_title` - Sets a custom title for the card _(string)_. Default `Wakatime Stats`.
-   `layout` - Switch between two available layouts `default` & `compact`.  Default `default`.
-   `langs_count` - Limit the number of languages on the card, defaults to all reported languages _(number)_.
-   `api_domain` - Set a custom API domain for the card, e.g. to use services like [Hakatime](https://github.com/mujx/hakatime) or [Wakapi](https://github.com/muety/wakapi) _(string)_. Default `Waka API`.
-   `range` – Request a range different from your WakaTime default, e.g. `last_7_days`. See [WakaTime API docs](https://wakatime.com/developers#stats) for a list of available options. _(YYYY-MM, last_7_days, last_30_days, last_6_months, last_year, or all_time)_. Default `all_time`.

* * *

# GitHub Extra Pins

GitHub extra pins allow you to pin more than six repositories in your profile using a GitHub readme profile.

Yay! You are no longer limited to 6 pinned repositories.

### Usage

Copy-paste this code into your readme and change the links.

Endpoint: `api/pin?username=anuraghazra&repo=github-readme-stats`

```md
[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
```

### Demo

[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)

Use [show_owner](#customization) variable to include the repo's owner username

[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats&show_owner=true)](https://github.com/anuraghazra/github-readme-stats)

# Top Languages Card

The top languages card shows a GitHub user's most frequently used top language.

> **Note**
> Top Languages does not indicate the user's skill level or anything like that; it's a GitHub metric to determine which languages have the most code on GitHub. It is a new feature of github-readme-stats.

### Usage

Copy-paste this code into your readme and change the links.

Endpoint: `api/top-langs?username=anuraghazra`

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
```

### Language stats algorithm

We use the following algorithm to calculate the languages percentages on the language card:

```js
ranking_index = (byte_count ^ size_weight) * (repo_count ^ count_weight)
```

By default, only the byte count is used for determining the languages percentages shown on the language card (i.e. `size_weight=1` and `count_weight=0`). You can, however, use the `&size_weight=` and `&count_weight=` options to weight the language usage calculation. The values must be positive real numbers. [More details about the algorithm can be found here](https://github.com/anuraghazra/github-readme-stats/issues/1600#issuecomment-1046056305).

-   `&size_weight=1&count_weight=0` - _(default)_ Orders by byte count.
-   `&size_weight=0.5&count_weight=0.5` - _(recommended)_ Uses both byte and repo count for ranking
-   `&size_weight=0&count_weight=1` - Orders by repo count

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&size_weight=0.5&count_weight=0.5)](https://github.com/anuraghazra/github-readme-stats)
```

### Exclude individual repositories

You can use the `&exclude_repo=repo1,repo2` parameter to exclude individual repositories.

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&exclude_repo=github-readme-stats,anuraghazra.github.io)](https://github.com/anuraghazra/github-readme-stats)
```

### Hide individual languages

You can use `&hide=language1,language2` parameter to hide individual languages.

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&hide=javascript,html)](https://github.com/anuraghazra/github-readme-stats)
```

### Show more languages

You can use the `&langs_count=` option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 10 (inclusive), and the default is 5.

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&langs_count=8)](https://github.com/anuraghazra/github-readme-stats)
```

### Compact Language Card Layout

You can use the `&layout=compact` option to change the card design.

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&layout=compact)](https://github.com/anuraghazra/github-readme-stats)
```

### Donut Chart Language Card Layout

You can use the `&layout=donut` option to change the card design.

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&layout=donut)](https://github.com/anuraghazra/github-readme-stats)
```

### Pie Chart Language Card Layout

You can use the `&layout=pie` option to change the card design.

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&layout=pie)](https://github.com/anuraghazra/github-readme-stats)
```

### Hide Progress Bars

You can use the `&hide_progress=true` option to hide the percentages and the progress bars (layout will be automatically set to `compact`).

```md
[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&hide_progress=true)](https://github.com/anuraghazra/github-readme-stats)
```

### Demo

[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)

-   Compact layout

[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&layout=compact)](https://github.com/anuraghazra/github-readme-stats)

-   Donut Chart layout

[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&layout=donut)](https://github.com/anuraghazra/github-readme-stats)

-   Pie Chart layout

[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&layout=pie)](https://github.com/anuraghazra/github-readme-stats)

-   Hidden progress bars

[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&hide_progress=true)](https://github.com/anuraghazra/github-readme-stats)

# Wakatime Week Stats

Change the `?username=` value to your [Wakatime](https://wakatime.com) username.

```md
[![Harlok's wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=Harlok)](https://github.com/anuraghazra/github-readme-stats)
```

> **Note**:
> Please be aware that we currently only show data from Wakatime profiles that are public.

### Demo

[![Harlok's wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=Harlok)](https://github.com/anuraghazra/github-readme-stats)

[![Harlok's wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=Harlok&hide_progress=true)](https://github.com/anuraghazra/github-readme-stats)

-   Compact layout

[![Harlok's wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=Harlok&layout=compact)](https://github.com/anuraghazra/github-readme-stats)

* * *

### All Demos

-   Default

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)

-   Hiding specific stats

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&hide=contribs,issues)

-   Showing icons

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&hide=issues&show_icons=true)

-   Shows Github logo instead rank level

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&rank_icon=github)

-   Customize Border Color

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&border_color=2e4058)

-   Include All Commits

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&include_all_commits=true)

-   Themes

Choose from any of the [default themes](#themes)

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&show_icons=true&theme=radical)

-   Gradient

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&bg_color=30,e96443,904e95&title_color=fff&text_color=fff)

-   Customizing stats card

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api/?username=anuraghazra&show_icons=true&title_color=fff&icon_color=79ff97&text_color=9f9f9f&bg_color=151515)

-   Setting card locale

![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api/?username=anuraghazra&locale=es)

-   Customizing repo card

![Customized Card](https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&repo=github-readme-stats&title_color=fff&icon_color=f9f9f9&text_color=9f9f9f&bg_color=151515)

-   Top languages

[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)

-   WakaTime card

[![Harlok's wakatime stats](https://github-readme-stats.vercel.app/api/wakatime?username=Harlok)](https://github.com/anuraghazra/github-readme-stats)

* * *

### Quick Tip (Align The Repo Cards)

By default, GitHub does not lay out the cards side by side. To do that, you can use this approach:

```html
<a href=""https://github.com/anuraghazra/github-readme-stats"">
  <img align=""center"" src=""https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=github-readme-stats"" />
</a>
<a href=""https://github.com/anuraghazra/convoychat"">
  <img align=""center"" src=""https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&repo=convoychat"" />
</a>
```

## Deploy on your own

### On Vercel

#### :film_projector: [Check Out Step By Step Video Tutorial By @codeSTACKr](https://youtu.be/n6d4KHSKqGk?t=107)

> **Warning**
> If you are on the [hobby (i.e. free)](https://vercel.com/pricing) Vercel plan, please make sure you change the `maxDuration` parameter in the [vercel.json](https://github.com/anuraghazra/github-readme-stats/blob/master/vercel.json) file from `30` to `10` (see [#1416](https://github.com/anuraghazra/github-readme-stats/issues/1416#issuecomment-950275476) for more information).

Since the GitHub API only allows 5k requests per hour, my `https://github-readme-stats.vercel.app/api` could possibly hit the rate limiter. If you host it on your own Vercel server, then you do not have to worry about anything. Click on the deploy button to get started!

> **Note**
> Since [#58](https://github.com/anuraghazra/github-readme-stats/pull/58), we should be able to handle more than 5k requests and have fewer issues with downtime :grin:.

[![Deploy to Vercel](https://vercel.com/button)](https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats)

<details>
 <summary><b>:hammer_and_wrench: Step-by-step guide on setting up your own Vercel instance</b></summary>

1.  Go to [vercel.com](https://vercel.com/).
2.  Click on `Log in`.
    ![](https://files.catbox.moe/pcxk33.png)
3.  Sign in with GitHub by pressing `Continue with GitHub`.
    ![](https://files.catbox.moe/b9oxey.png)
4.  Sign in to GitHub and allow access to all repositories if prompted.
5.  Fork this repo.
6.  After forking the repo, open the [`vercel.json`](https://github.com/anuraghazra/github-readme-stats/blob/master/vercel.json#L5) file and change the `maxDuration` field to `10`.
7.  Go back to your [Vercel dashboard](https://vercel.com/dashboard).
8.  To import a project, click the `Add New...` button and select the `Project` option.
    ![](https://files.catbox.moe/3n76fh.png)
9.  Click the `Continue with GitHub` button, search for the required Git Repository and import it by clicking the `Import` button. Alternatively, you can import a Third-Party Git Repository using the `Import Third-Party Git Repository ->` link at the bottom of the page.
    ![](https://files.catbox.moe/mg5p04.png)
10. Create a personal access token (PAT) [here](https://github.com/settings/tokens/new) and enable the `repo` permissions (this allows access to see private repo stats).
11. Add the PAT as an environment variable named `PAT_1` (as shown).
    ![](https://files.catbox.moe/0yclio.png)
12. Click deploy, and you're good to go. See your domains to use the API!

</details>

### On other platforms

> **Warning**
> This way of using GRS is not officially supported and was added to cater to some particular use cases where Vercel could not be used (e.g. #2341). The support for this method, therefore, is limited.

<details>
<summary><b>:hammer_and_wrench: Step-by-step guide for deploying on other platforms</b></summary>

1.  Fork or clone this repo as per your needs
2.  Add `express` to the dependencies section of `package.json`
    <https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61>
3.  Run `npm i` if needed (initial setup)
4.  Run `node express.js` to start the server, or set the entry point to `express.js` in `package.json` if you're deploying on a managed service
    <https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11>
5.  You're done 🎉
    </details>

### Keep your fork up to date

You can keep your fork, and thus your private Vercel instance up to date with the upstream using GitHubs' [Sync Fork button](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork). You can also use the [pull](https://github.com/wei/pull) package created by [@wei](https://github.com/wei) to automate this process.

## :sparkling_heart: Support the project

I open-source almost everything I can and try to reply to everyone needing help using these projects. Obviously,
this takes time. You can use this service for free.

However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are a few ways you can do it:

-   Giving proper credit when you use github-readme-stats on your readme, linking back to it :D
-   Starring and sharing the project :rocket:
-   [![paypal.me/anuraghazra](https://ionicabizau.github.io/badges/paypal.svg)](https://www.paypal.me/anuraghazra) - You can make one-time donations via PayPal. I'll probably buy a ~~coffee~~ tea. :tea:

Thanks! :heart:

* * *

[![https://vercel.com?utm_source=github_readme_stats_team&utm_campaign=oss](./powered-by-vercel.svg)](https://vercel.com?utm_source=github_readme_stats_team&utm_campaign=oss)

Contributions are welcome! &lt;3

Made with :heart: and JavaScript.
"
lyfe00011/whatsapp-bot-md,JavaScript,"### WhatsApp MD user bot

A simple Whatsapp User bot

## Setup

1.  ### Deploy on Heroku
    1. Click [SCAN](https://levanter.onrender.com/md) and scan QR through Whatsapp Linked Devices Option in Your whatsapp App.
    2. You will get a session id in whatsapp, copy id only.
    3. If You don't have a account in [Heroku](https://signup.heroku.com/), [Create a account Now](https://signup.heroku.com/).
    4. If You Don't have a github account [SignUp](https://github.com/join) Now.
    5. [FORK](https://github.com/lyfe00011/whatsapp-bot-md/fork) this repo
    6. Now [DEPLOY](https://levanter.onrender.com/dmd)
2.  ### Deploy on koyeb
    1. Create an account in [koyeb](https://app.koyeb.com/auth/signup). [SignUp Now](https://app.koyeb.com/auth/signup)
    2. Get [DATABASE_URL](https://github.com/lyfe00011/whatsapp-bot-md/wiki/DATABASE_URL), You needs while depolying
    3. Get [SESSION_ID](https://levanter.onrender.com/md), Open Linked Devices in WhatsaApp and [SCAN](https://levanter.onrender.com/md) Now.
    4. Get Koyeb API key. [Let Go](https://app.koyeb.com/account/api)
    5. [DEPLOY](https://levanter.onrender.com/koyeb) Now.
    6. Enter [Environment Variables](https://github.com/lyfe00011/whatsapp-bot-md/wiki/Environment_Variables), [Read More](https://github.com/lyfe00011/whatsapp-bot-md/wiki/Environment_Variables)
    7. Enter Name and Click Create service
3.  ### Deploy on VPS or PC (Example here as in Ubuntu

    #### Install with script

    ```
    wget -N https://www.levanter.ml/install && chmod +x install && ./install
    ```

    #### Install without script

    ###### 1. Install git ffmpeg curl

          sudo apt -y update &&  sudo apt -y upgrade
          sudo apt -y install git ffmpeg curl

    ###### 2. Install nodejs

          sudo apt -y remove nodejs
          curl -fsSl https://deb.nodesource.com/setup_lts.x | sudo bash - && sudo apt -y install nodejs

    ###### 3. Install yarn

          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo ""deb https://dl.yarnpkg.com/debian/ stable main"" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt -y update && sudo apt -y install yarn

    ###### 4. Install pm2

          sudo yarn global add pm2

    ###### 5. Clone Repo and install packages

          git clone https://github.com/lyfe00011/whatsapp-bot-md botName
          cd botName
          yarn install --network-concurrency 1

    ###### 6. Enter Environment Variables

    ###### copy paste lines below (remove SESSION_ID if not needs)

          echo ""SESSION_ID = Session_Id_you_Got_After_Scan_Dont_Add_This_Line_If_You_Can_Scan_From_Terminal_Itself
          PREFIX = .
          STICKER_PACKNAME = LyFE
          ALWAYS_ONLINE = false
          RMBG_KEY = null
          LANGUAG = en
          WARN_LIMIT = 3
          FORCE_LOGOUT = false
          BRAINSHOP = 159501,6pq8dPiYt7PdqHz3
          MAX_UPLOAD = 200
          REJECT_CALL = false
          SUDO = 989876543210
          TZ = Asia/Kolkata
          VPS = true
          AUTO_STATUS_VIEW = true
          SEND_READ = true
          AJOIN = true"" > config.env

    ###### [Read More](https://github.com/lyfe00011/whatsapp-bot-md/wiki/Environment_Variables)

    ###### nano config.env, if you want edit. TO Save ctrl + o press enter then ctrl + x

    ###### 7. start and stop bot

          To start bot `pm2 start . --name botName --attach --time`
          To stop bot `pm2 stop botName`

### Thanks To

- [Yusuf Usta](https://github.com/Quiec) for [WhatsAsena](https://github.com/yusufusta/WhatsAsena)
- [@adiwajshing](https://github.com/adiwajshing) for [Baileys](https://github.com/adiwajshing/Baileys)
"
30-seconds/30-seconds-of-code,JavaScript,"[![Logo](/logo.png)](https://30secondsofcode.org/js/p/1)

# 30 seconds of code

> Short JavaScript code snippets for all your development needs

* Visit [our website](https://30secondsofcode.org) to view our snippet collection.
* Search for snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.
* Browse the [Snippet collection](https://30secondsofcode.org/list/p/1) to see all the snippets or click individual tags at the top of the same page to narrow down your search to a specific tag.
* Click on each snippet card to view the whole snippet, including code, explanation and examples.
* You can copy code blocks on any snippet card, using the copy button at the top right.
* If you like the project, give it a star. It means a lot to the people maintaining it.

## Want to contribute?

* If you want to help us improve, take a minute to read the [Contribution Guidelines](/CONTRIBUTING.md) first.
* Use the relevant `template.md` to add new snippets to each collection.
* If you find a problem with a specific snippet, please [open an issue](https://github.com/30-seconds/30-seconds-of-code/issues/new).
* If you find a problem with the website, please [report it in the web repository](https://github.com/30-seconds/30-seconds-web/issues/new).

## Credits

* This repository is maintained by the [30 seconds of code organization on GitHub](https://github.com/30-seconds).
* All snippets are licensed under the CC-BY-4.0 License, unless explicitly stated otherwise.
* Logos, names and trademarks are not to be used without the explicit consent of the owners of the 30 seconds of code GitHub organization.
* Our website is powered by [Netlify](https://www.netlify.com/), [Astro](https://astro.build/) & [GitHub](https://github.com/).
"
bettiolo/node-echo,JavaScript,"node-echo
=========

node.js echo server, returns request data to response
"
TryGhost/Ghost,JavaScript,"&nbsp;
<p align=""center"">
  <a href=""https://ghost.org/#gh-light-mode-only"" target=""_blank"">
    <img src=""https://user-images.githubusercontent.com/65487235/157884383-1b75feb1-45d8-4430-b636-3f7e06577347.png"" alt=""Ghost"" width=""200px"">
  </a>
  <a href=""https://ghost.org/#gh-dark-mode-only"" target=""_blank"">
    <img src=""https://user-images.githubusercontent.com/65487235/157849205-aa24152c-4610-4d7d-b752-3a8c4f9319e6.png"" alt=""Ghost"" width=""200px"">
  </a>
</p>
&nbsp;

<p align=""center"">
    <a href=""https://ghost.org/"">Ghost.org</a> •
    <a href=""https://forum.ghost.org"">Forum</a> •
    <a href=""https://ghost.org/docs/"">Docs</a> •
    <a href=""https://github.com/TryGhost/Ghost/blob/main/.github/CONTRIBUTING.md"">Contributing</a> •
    <a href=""https://twitter.com/ghost"">Twitter</a>
    <br /><br />
    <a href=""https://ghost.org/"">
        <img src=""https://img.shields.io/badge/downloads-3M-brightgreen.svg"" alt=""Downloads"" />
    </a>
    <a href=""https://github.com/TryGhost/Ghost/releases/"">
        <img src=""https://img.shields.io/github/release/TryGhost/Ghost.svg"" alt=""Latest release"" />
    </a>
    <a href=""https://github.com/TryGhost/Ghost/actions"">
        <img src=""https://github.com/TryGhost/Ghost/workflows/Test%20Suite/badge.svg?branch=main"" alt=""Build status"" />
    </a>
    <a href=""https://github.com/TryGhost/Ghost/contributors/"">
        <img src=""https://img.shields.io/github/contributors/TryGhost/Ghost.svg"" alt=""Contributors"" />
    </a>
</p>
<p align=""center"">
  Love open source? <a href=""https://careers.ghost.org"">We're hiring</a> JavaScript engineers to work on Ghost full-time.
</p>

&nbsp;

<a href=""https://ghost.org/""><img src=""https://user-images.githubusercontent.com/353959/169805900-66be5b89-0859-4816-8da9-528ed7534704.png"" alt=""Fiercely independent, professional publishing. Ghost is the most popular open source, headless Node.js CMS which already works with all the tools you know and love."" /></a>

&nbsp;

<a href=""https://ghost.org/pricing/#gh-light-mode-only"" target=""_blank""><img src=""https://user-images.githubusercontent.com/65487235/157849437-9b8fcc48-1920-4b26-a1e8-5806db0e6bb9.png"" alt=""Ghost(Pro)"" width=""165px"" /></a>
<a href=""https://ghost.org/pricing/#gh-dark-mode-only"" target=""_blank""><img src=""https://user-images.githubusercontent.com/65487235/157849438-79889b04-b7b6-4ba7-8de6-4c1e4b4e16a5.png"" alt=""Ghost(Pro)"" width=""165px"" /></a>

The easiest way to get a production instance deployed is with our official **[Ghost(Pro)](https://ghost.org/pricing/)** managed service. It takes about 2 minutes to launch a new site with worldwide CDN, backups, security and maintenance all done for you.

For most people this ends up being the best value option cause of [how much time it saves](https://ghost.org/docs/hosting/) — and 100% of revenue goes to the Ghost Foundation; funding the maintenance and further development of the project itself. So you’ll be supporting open source software *and* getting a great service!

&nbsp;

# Quickstart install

If you want to run your own instance of Ghost, in most cases the best way is to use our **CLI tool**

```
npm install ghost-cli -g
```

&nbsp;

Then, if installing locally add the `local` flag to get up and running in under a minute - [Local install docs](https://ghost.org/docs/install/local/)

```
ghost install local
```

&nbsp;

or on a server run the full install, including automatic SSL setup using LetsEncrypt - [Production install docs](https://ghost.org/docs/install/ubuntu/)

```
ghost install
```

&nbsp;

Check out our [official documentation](https://ghost.org/docs/) for more information about our [recommended hosting stack](https://ghost.org/docs/hosting/) & properly [upgrading Ghost](https://ghost.org/docs/update/), plus everything you need to develop your own Ghost [themes](https://ghost.org/docs/themes/) or work with [our API](https://ghost.org/docs/content-api/).

### Contributors & advanced developers

For anyone wishing to contribute to Ghost or to hack/customize core files we recommend following our full development setup guides: [Contributor guide](https://ghost.org/docs/contributing/) • [Developer setup](https://ghost.org/docs/install/source/)

&nbsp;

# Ghost sponsors

We'd like to extend big thanks to our sponsors and partners who make Ghost possible. If you're interested in sponsoring Ghost and supporting the project, please check out our profile on [GitHub sponsors](https://github.com/sponsors/TryGhost) :heart:

**[DigitalOcean](https://m.do.co/c/9ff29836d717)** • **[Fastly](https://www.fastly.com/)**

&nbsp;

# Getting help

You can find answers to a huge variety of questions, along with a large community of helpful developers over on the [Ghost forum](https://forum.ghost.org/) - replies are generally very quick. **Ghost(Pro)** customers also have access to 24/7 email support.

To stay up to date with all the latest news and product updates, make sure you [subscribe to our blog](https://ghost.org/blog/) — or you can always follow us [on Twitter](https://twitter.com/Ghost), if you prefer your updates bite-sized and facetious. :saxophone::turtle:

&nbsp;

# Copyright & license

Copyright (c) 2013-2023 Ghost Foundation - Released under the [MIT license](LICENSE). Ghost and the Ghost Logo are trademarks of Ghost Foundation Ltd. Please see our [trademark policy](https://ghost.org/trademark/) for info on acceptable usage.
"
ColorlibHQ/AdminLTE,JavaScript,"# [AdminLTE - Bootstrap 4 Admin Dashboard](https://adminlte.io)

[![npm version](https://img.shields.io/npm/v/admin-lte/latest.svg)](https://www.npmjs.com/package/admin-lte)
[![Packagist](https://img.shields.io/packagist/v/almasaeed2010/adminlte.svg)](https://packagist.org/packages/almasaeed2010/adminlte)
[![cdn version](https://data.jsdelivr.com/v1/package/npm/admin-lte/badge)](https://www.jsdelivr.com/package/npm/admin-lte)
[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/from-referrer/)
[![Open in Visual Studio Code](https://open.vscode.dev/badges/open-in-vscode.svg)](https://open.vscode.dev/ColorlibHQ/AdminLTE)
[![Discord Invite](https://img.shields.io/badge/discord-join%20now-green)](https://discord.gg/jfdvjwFqfz)

**AdminLTE** is a fully responsive administration template. Based on **[Bootstrap 4.6](https://getbootstrap.com/)** framework and also the JS/jQuery plugin.
Highly customizable and easy to use. Fits many screen resolutions from small mobile devices to large desktops.

**Preview on [AdminLTE.io](https://adminlte.io/themes/v3)**

## Looking for Premium Templates?

AdminLTE.io just opened a new premium templates page. Hand picked to ensure the best quality and the most affordable
prices. Visit <https://adminlte.io/premium> for more information.

![""AdminLTE Presentation""](https://adminlte.io/AdminLTE3.png ""AdminLTE Presentation"")

**AdminLTE** has been carefully coded with clear comments in all of its JS, SCSS and HTML files.
SCSS has been used to increase code customizability.

## Quick start
There are multiple ways to install AdminLTE.

### Download & Changelog:
Always Recommended to download from GitHub latest release [AdminLTE 3](https://github.com/ColorlibHQ/AdminLTE/releases/latest) for bug free and latest features.\
Visit the [releases](https://github.com/ColorlibHQ/AdminLTE/releases) page to view the changelog.\
Legacy Releases are [AdminLTE 2](https://github.com/ColorlibHQ/AdminLTE/releases/tag/v2.4.18) / [AdminLTE 1](https://github.com/ColorlibHQ/AdminLTE/releases/tag/1.3.1).

## Stable release
### Grab from [jsdelivr](https://www.jsdelivr.com/package/npm/admin-lte) CDN:
_**Important Note**: You needed to add separately cdn links for plugins in your project._
```html
<script src=""https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/js/adminlte.min.js""></script>
```
```html
<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/css/adminlte.min.css"">
```
### Using The Command Line:
_**Important Note**: To install it via npm/Yarn, you need at least Node.js 14 or higher._
#### Via npm
```bash
npm install admin-lte@^3.2 --save
```
#### Via Yarn
```bash
yarn add admin-lte@^3.2
```
#### Via Composer
```bash
composer require ""almasaeed2010/adminlte=~3.2""
```
#### Via Git
```bash
git clone https://github.com/ColorlibHQ/AdminLTE.git
```

## Documentation

Visit the [online documentation](https://adminlte.io/docs/3.2/) for the most
updated guide. Information will be added on a weekly basis.

## Browsers support

| [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png"" alt=""IE / Edge"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>IE / Edge | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png"" alt=""Firefox"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>Firefox | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png"" alt=""Chrome"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>Chrome | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png"" alt=""Safari"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>Safari | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari-ios/safari-ios_48x48.png"" alt=""iOS Safari"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>iOS Safari | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/samsung-internet/samsung-internet_48x48.png"" alt=""Samsung"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>Samsung | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/opera/opera_48x48.png"" alt=""Opera"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>Opera | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/vivaldi/vivaldi_48x48.png"" alt=""Vivaldi"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>Vivaldi | [<img src=""https://raw.githubusercontent.com/alrra/browser-logos/master/src/electron/electron_48x48.png"" alt=""Electron"" width=""24px"" height=""24px"" />](http://godban.github.io/browsers-support-badges/)<br/>Electron |
| --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- | --------- |
| IE10, IE11, Edge| last 2 versions| last 2 versions| last 2 versions| last 2 versions| last 2 versions| last 2 versions| last 2 versions| last 2 versions

## Light Mode (Only Dark Mode Removed)
You can use light-mode-only version, if you are not using dark mode and also file size less without dark-mode.

File Location `./dist/css/alt/adminlte.light.css`


## Compile dist files

To compile the dist files you need Node.js/npm, clone/download the repo then:

1. `npm install` (install npm deps)
2. _Optional:_ `npm run dev` (developer mode, autocompile with browsersync support for live demo)
3. `npm run production` (compile css/js files)


## Contributing

Please read through our [contributing guidelines](https://github.com/ColorlibHQ/AdminLTE/tree/master/.github/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.

Editor preferences are available in the [editor config](https://github.com/twbs/bootstrap/blob/main/.editorconfig) for easy use in common text editors. Read more and download plugins at <https://editorconfig.org/>.


## License

AdminLTE is an open source project by [AdminLTE.io](https://adminlte.io) that is licensed under [MIT](https://opensource.org/licenses/MIT).
AdminLTE.io reserves the right to change the license of future releases.

## Image Credits

- [Pixeden](http://www.pixeden.com/psd-web-elements/flat-responsive-showcase-psd)
- [Graphicsfuel](https://www.graphicsfuel.com/2013/02/13-high-resolution-blur-backgrounds/)
- [Pickaface](https://pickaface.net/)
- [Unsplash](https://unsplash.com/)
- [Uifaces](http://uifaces.com/)
"
hakimel/reveal.js,JavaScript,"<p align=""center"">
  <a href=""https://revealjs.com"">
  <img src=""https://hakim-static.s3.amazonaws.com/reveal-js/logo/v1/reveal-black-text-sticker.png"" alt=""reveal.js"" width=""500"">
  </a>
  <br><br>
  <a href=""https://github.com/hakimel/reveal.js/actions""><img src=""https://github.com/hakimel/reveal.js/workflows/tests/badge.svg""></a>
  <a href=""https://slides.com/""><img src=""https://s3.amazonaws.com/static.slid.es/images/slides-github-banner-320x40.png?1"" alt=""Slides"" width=""160"" height=""20""></a>
</p>

reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create beautiful presentations for free. Check out the live demo at [revealjs.com](https://revealjs.com/).

The framework comes with a powerful feature set including [nested slides](https://revealjs.com/vertical-slides/), [Markdown support](https://revealjs.com/markdown/), [Auto-Animate](https://revealjs.com/auto-animate/), [PDF export](https://revealjs.com/pdf-export/), [speaker notes](https://revealjs.com/speaker-view/), [LaTeX typesetting](https://revealjs.com/math/), [syntax highlighted code](https://revealjs.com/code/) and an [extensive API](https://revealjs.com/api/).

---

Want to create reveal.js presentation in a graphical editor? Try <https://slides.com>. It's made by the same people behind reveal.js.

---

### Sponsors
Hakim's open source work is supported by <a href=""https://github.com/sponsors/hakimel"">GitHub sponsors</a>. Special thanks to:
<div align=""center"">
  <table>
    <td align=""center"">
      <a href=""https://workos.com/?utm_campaign=github_repo&utm_medium=referral&utm_content=revealjs&utm_source=github"">
        <div>
          <img src=""https://user-images.githubusercontent.com/629429/151508669-efb4c3b3-8fe3-45eb-8e47-e9510b5f0af1.svg"" width=""290"" alt=""WorkOS"">
        </div>
        <b>Your app, enterprise-ready.</b>
        <div>
          <sub>Start selling to enterprise customers with just a few lines of code. Add Single Sign-On (and more) in minutes instead of months.</sup>
        </div>
      </a>
    </td>
  </table>
</div>

---

### Getting started
- 🚀 [Install reveal.js](https://revealjs.com/installation)
- 👀 [View the demo presentation](https://revealjs.com/demo)
- 📖 [Read the documentation](https://revealjs.com/markup/)
- 🖌 [Try the visual editor for reveal.js at Slides.com](https://slides.com/)
- 🎬 [Watch the reveal.js video course (paid)](https://revealjs.com/course)

--- 
<div align=""center"">
  MIT licensed | Copyright © 2011-2023 Hakim El Hattab, https://hakim.se
</div>
"
scutan90/DeepLearning-500-questions,JavaScript,"
# 京东售卖链接：https://item.jd.com/12785031.html
# 京东商城100多家书店有现货。

## 深度学习500问——AI工程师面试宝典(博文视点出品)，谈继勇 主编，郭子钊，李剑，佃松宜 副主编 著

# 内容简介

本书系统地描述了深度学习的基本理论算法及应用。全书共14章，第1-3章论述了数学基础、机器学习基础和深度学习基础；第4-7章介绍了一些经典网络及计算机视觉领域中常用的CNN、RNN、GAN等网络结构技术；第8-9章介绍了深度学习在计算机视觉领域的目标检测及图像分割两大应用；第10-14章介绍了计算机视觉领域主要的优化方法及思路等，包括迁移学习、网络架构及训练、网络优化技巧、超参数调整及模型的压缩和加速等。本书凝聚了众多一线科研人员及工程师的经验，旨在培养读者发现问题、解决问题、扩展问题的能力。

本书内容取材于编者在日常学习过程中总结的知识点及各大公司常见的笔试、面试题。本书可为高等院校计算机科学、信息科学、人工智能、控制科学与工程、电子科学与技术等领域的研究及教学人员提供参考，也可为相关专业本科生及研究生提供思考方向，还可为深度学习及计算机视觉领域的初、中级研究人员和工程技术人员提供参考，尤其适合需要查漏补缺的应聘者及提供相关岗位的面试官阅读。

# 作者简介
谈继勇 主编

南方科技大学和哈尔滨工业大学联合培养博士（在读），现任瀚维智能医疗技术总监，深圳工信局专家库专家，兼任南方科技大学、四川大学研究生企业导师，南方科技大学和瀚维智能医疗联合实验室副主任，北京探工所特聘技术专家，曾先后在中科院信工所、香港中文大学（深圳）、FOXCONN机器人与人工智能实验室、顺丰科技等单位任职。主要专注于智能感知与控制、实时智能与计算机视觉方向的研究，主持/主研国家自然科学基金、省重点研发计划、深圳战略性新兴产业计划等项目20余项，发表SCI/EI论文20余篇，申请发明专利40余项，获全国发明金奖。

郭子钊 副主编

四川大学计算机科学专业博士，硕士毕业于四川大学自动化系，主要从事AI芯片、深度学习、行为检测识别、人脸检测识别等相关研究工作。

李剑 副主编

同济大学计算机科学专业博士，浙江农林大学副教授、硕士生导师，主要从事推荐系统、排序学习、凸优化等机器学习领域的科研和教学工作，发表SCI论文10余篇，曾获浙江省科技进步二等奖等多项省部级奖项。

佃松宜 副主编

日本东北大学博士，四川大学电气工程学院教授、自动化系系主任，四川省信息与自动化技术重点实验室主任。主要专注于先进控制理论与人工智能算法研究、嵌入式计算与实时智能系统的研究与开发、机器人与智能装备的智能感知与控制技术的研究、工业测控与智能物联的研究。近5年来主持包括国家重点研发计划、基金、国网总部项目等各类科研项目近30项，累计总经费近2200万元；发表论文100多篇，其中SCI/EI检索近40篇，ESI高引论文1篇。参与编撰专著3部（其中英文专著1部），参编国家九五规划教材1部。

王晋东 特邀编委

中科院计算所博士，微软亚洲研究院机器学习研究员，主要从事迁移学习和机器学习方向的研究工作，在IJCAI、CVPR、ICDM、UbiComp、ACMMM、PERCOM、IJCNN、PRICAI、IEEE TNNLS、NEUNET、PRL、PMCJ、IMWUT、IJMLC、ICME、ACM TIST等国际权威期刊和会议上发表论文20余篇，多次获得“最佳论文”奖。作品有《迁移学习简明手册》等。

王超锋

上海大学硕士，百度计算机视觉算法工程师，主研图像处理，深度学习等方向。曾多次在国内外各类知名计算机视觉挑战赛中获得优异成绩。

郭晓锋

中国科学院硕士，爱奇艺算法工程师，主要从事图像处理、深度学习等方向的研究，曾获“2017华为软件精英挑战赛”复赛第6名。

黄伟

华南理工大学硕士，顺丰科技机器人算法工程师，主要从事计算机视觉和自然语言处理方向的研究。曾在相关领域国际期刊、会议上发表论文，并在相关竞赛中获得优异成绩。

陈方杰（Amusi）

上海大学硕士，CVer（计算机视觉知识分享和学习交流平台）创始人。

李元伟

国防科技大学硕士，深圳瀚维智能医疗科技公司高级算法工程师，南方科技大学和瀚维智能医疗联合实验室委员，主要从事机器视觉、图像处理及深度学习方向的研究工作，参编普通高等教育十三五规划教材《图像通信基础》，在IEEE TCSVT、COGN COMPUT等发表学术论文多篇，曾获湖南省/全军优秀硕士论文。

陈琳

北京航空航天大学博士（在读），研究方向为无人机智能控制与决策、仿生智能计算。


# 目录
第1章 数学基础 1

1.1 向量和矩阵 1

1.1.1 标量、向量、矩阵和张量 1

1.1.2 张量与矩阵的区别 2

1.1.3 矩阵和向量相乘的结果 2

1.1.4 向量和矩阵的范数归纳 2

1.1.5 判断一个矩阵是否为正定矩阵 4

1.2 导数和偏导数 5

1.2.1 导数偏导计算 5

1.2.2 导数和偏导数的区别 6

1.3 特征值和特征向量 6

1.3.1 特征值分解 6

1.3.2 奇异值和特征值的关系 6

1.4 概率分布与随机变量 7

1.4.1 机器学习为什么要使用概率 7

1.4.2 变量与随机变量的区别 7

1.4.3 随机变量与概率分布的联系 8

1.4.4 离散型随机变量和概率质量函数 8

1.4.5 连续型随机变量和概率密度函数 8

1.4.6 举例理解条件概率 9

1.4.7 联合概率与边缘概率的区别和联系 9

1.4.8 条件概率的链式法则 10

1.4.9 独立性和条件独立性 10

1.5 常见概率分布 11

1.5.1 伯努利分布 11

1.5.2 高斯分布 11

1.5.3 何时采用正态分布 12

1.5.4 指数分布 12

1.5.5 Laplace分布 13

1.5.6 Dirac分布和经验分布 13

1.6 期望、方差、协方差、相关系数 13

1.6.1 期望 13

1.6.2 方差 14

1.6.3 协方差 14

1.6.4 相关系数 15

第2章 机器学习基础 16

2.1 基本概念 16

2.1.1 大话机器学习本质 16

2.1.2 什么是神经网络 16

2.1.3 各种常见算法图示 17

2.1.4 计算图的导数计算 17

2.1.5 理解局部最优与全局最优 18

2.1.6 大数据与深度学习之间的关系 19

2.2 机器学习的学习方式 20

2.2.1 监督学习 20

2.2.2 非监督学习 20

2.2.3 半监督学习 20

2.2.4 弱监督学习 20

2.2.5 监督学习模型的搭建步骤 21

2.3 分类算法 22

2.3.1 常用分类算法的优缺点 22

2.3.2 分类算法的评估方法 23

2.3.3 正确率能否很好地评估分类算法 25

2.3.4 什么样的分类器是最好的 26

2.4 逻辑回归 26

2.4.1 回归的种类 26

2.4.2 逻辑回归适用性 27

2.4.3 逻辑回归与朴素贝叶斯的区别 27

2.4.4 线性回归与逻辑回归的区别 27

2.5 代价函数 28

2.5.1 为什么需要代价函数 28

2.5.2 代价函数作用原理 28

2.5.3 常见代价函数 30

2.5.4 为什么代价函数要非负 31

2.5.5 为什么用交叉熵代替二次代价函数 31

2.6 损失函数 32

2.6.1 什么是损失函数 32

2.6.2 常见的损失函数 32

2.6.3 逻辑回归为什么使用对数损失函数 34

2.6.4 对数损失函数如何度量损失 34

2.7 梯度下降法 35

2.7.1 梯度下降法的作用 36

2.7.2 梯度下降法的直观理解 36

2.7.3 梯度下降法算法描述 37

2.7.4 梯度下降法的缺点 38

2.7.5 如何对梯度下降法进行调优 38

2.7.6 随机梯度下降和批量梯度下降的区别 38

2.7.7 各种梯度下降法性能比较 40

2.8 线性判别分析 40

2.8.1 LDA思想总结 40

2.8.2 图解LDA核心思想 41

2.8.3 二类LDA算法原理 41

2.8.4 LDA算法流程总结 42

2.8.5 LDA和PCA的异同 43

2.8.6 LDA的优缺点 43

2.9 主成分分析 43

2.9.1 图解PCA核心思想 43

2.9.2 PCA算法推理 44

2.9.3 PCA算法流程总结 45

2.9.4 PCA思想总结 46

2.9.5 PCA算法的优缺点 46

2.9.6 降维的必要性及目的 46

2.9.7 KPCA与PCA的区别 47

2.10 模型评估 47

2.10.1 模型评估常用方法 48

2.10.2 误差、偏差和方差的区别和联系 48

2.10.3 为什么使用标准差 49

2.10.4 经验误差与泛化误差 50

2.10.5 图解欠拟合与过拟合 50

2.10.6 如何解决欠拟合与过拟合 52

2.10.7 交叉验证的主要作用 52

2.10.8 理解K折交叉验证 53

2.10.9 理解混淆矩阵 53

2.10.10 理解查准率与查全率 53

2.10.11 理解ROC与AUC 54

2.10.12 如何绘制ROC曲线 55

2.10.13 如何计算TPR和FPR 56

2.10.14 如何计算AUC 58

2.10.15 直观理解AUC 58

2.10.16 ROC评估分类器 60

2.10.17 代价敏感错误率与代价曲线 60

2.10.18 比较检验方法 61

2.11 决策树 61

2.11.1 决策树的基本原理 62

2.11.2 决策树的生成过程 62

2.11.3 决策树学习基本算法步骤 62

2.11.4 决策树算法的优缺点 63

2.11.5 决策树和熵的联系 63

2.11.6 熵的概念及定义 63

2.11.7 理解信息增益 64

2.11.8 决策树中熵、条件熵和信息增益的联系 64

2.11.9 决策树算法中剪枝的作用及策略 65

2.12 支持向量机（SVM） 65

2.12.1 什么是SVM 65

2.12.2 SVM能解决的问题 66

2.12.3 核函数特点及其作用 67

2.12.4 SVM为什么引入对偶问题 67

2.12.5 如何理解SVM中的对偶问题 67

2.12.6 常见的核函数 69

2.12.7 SVM的主要特点 69

2.12.8 SVM的主要缺点 70

2.12.9 逻辑回归与SVM的异同 70

2.13 贝叶斯分类器 72

2.13.1 贝叶斯分类器的基本原理 72

2.13.2 朴素贝叶斯分类器 72

2.13.3 举例理解朴素贝叶斯分类器 73

2.13.4 半朴素贝叶斯分类器 75

2.13.5 极大似然估计和贝叶斯估计的联系与区别 75

2.13.6 极大似然估计原理 76

2.13.7 图解极大似然估计 76

2.14 EM算法 77

2.14.1 EM算法的基本思想 77

2.14.2 EM算法推导 77

2.14.3 图解EM算法 78

2.14.4 EM算法流程 79

2.15 降维和聚类 79

2.15.1 图解为什么会产生维数灾难 79

2.15.2 怎样避免维数灾难 83

2.15.3 聚类和降维 83

2.15.4 聚类算法优劣的衡量标准 84

2.15.5 聚类和分类 85

2.15.6 聚类算法的性能比较 85

2.15.7 4种常用聚类方法比较 85

第3章 深度学习基础 89

3.1 基本概念 89

3.1.1 神经网络的类型 89

3.1.2 神经网络的常用模型结构 92

3.1.3 深度学习和机器学习的区别与联系 93

3.1.4 为什么使用深层表示 93

3.1.5 深度学习架构分类 94

3.1.6 如何选择深度学习开发平台 94

3.2 神经网络计算 95

3.2.1 前向传播和反向传播 95

3.2.2 如何计算神经网络的输出 96

3.2.3 如何计算卷积神经网络输出值 97

3.2.4 如何计算池化层输出值 100

3.2.5 反向传播实例 101

3.2.6 神经网络更“深”的意义 104

3.3 激活函数 104

3.3.1 为什么需要激活函数 104

3.3.2 为什么激活函数需要非线性函数 105

3.3.3 常见的激活函数及其图像 105

3.3.4 常见激活函数的导数计算 107

3.3.5 激活函数有哪些性质 108

3.3.6 如何选择激活函数 108

3.3.7 为什么tanh收敛速度比sigmoid快 109

3.3.8 Relu激活函数的优点 109

3.3.9 理解Relu激活函数的稀疏激活性 109

3.3.10 什么时候可以用线性激活函数 109

3.3.11 softmax函数的定义及作用 110

3.3.12 softmax函数如何应用于多分类 110

3.4 BATCH SIZE 112

3.4.1 为什么需要Batch Size 112

3.4.2 如何选择Batch Size值 112

3.4.3 调节Batch Size对训练效果的影响 113

3.4.4 在合理范围内增大Batch Size的好处 113

3.4.5 盲目增大Batch Size的坏处 114

3.5 归一化 114

3.5.1 理解归一化含义 114

3.5.2 归一化和标准化的联系与区别 114

3.5.3 为什么要归一化或标准化 115

3.5.4 图解为什么要归一化 115

3.5.5 为什么归一化能提高求最优解速度 115

3.5.6 归一化有哪些类型 116

3.5.7 局部响应归一化作用 116

3.5.8 局部响应归一化原理 117

3.5.9 什么是批归一化 118

3.5.10 批归一化的优点 118

3.5.11 批归一化算法流程 118

3.5.12 批归一化和组归一化比较 119

3.5.13 权重归一化和批归一化比较 119

3.5.14 批归一化适用范围 120

3.5.15 BN、LN、IN和GN的对比 120

3.6 参数初始化 121

3.6.1 参数初始化应满足的条件 121

3.6.2 常用的几种初始化方式 121

3.6.3 全0初始化带来的问题 121

3.6.4 全都初始化为同样的值 122

3.6.5 初始化为小的随机数 123

3.6.6 用 校准方差 123

3.7 预训练与微调 123

3.7.1 什么是预训练和微调 123

3.7.2 预训练和微调的作用 124

3.7.3 预训练模型的复用 124

3.7.4 预训练和迁移学习 125

3.7.5 微调时网络参数是否更新 125

3.7.6 微调模型的三种状态 125

3.7.7 为什么深层神经网络难以训练 125

3.8 超参数 127

3.8.1 超参数有哪些 127

3.8.2 参数和模型的关系 127

3.8.3 参数和超参数的区别 127

3.8.4 如何寻找超参数的最优值 128

3.8.5 超参数搜索的一般过程 128

3.9 学习率 129

3.9.1 学习率的作用 129

3.9.2 学习率衰减的常用参数 129

3.9.3 常用的学习率衰减方法 129

3.10 正则化 133

3.10.1 为什么要正则化 133

3.10.2 常见正则化方法 133

3.10.3 图解L1和L2正则化 134

3.10.4 Dropout具体工作流程 135

3.10.5 为什么Dropout可以解决过拟合问题 137

3.10.6 Dropout的缺点
"
jonasschmedtmann/complete-javascript-course,JavaScript,"# Course Material and FAQ for my Complete JavaScript Course

This branch of the repo contains starter files and final code for all sections and projects of the course, **exactly as shown in the videos**.

Use starter code to start each section, and **final code to compare it with your own code whenever something doesn't work**!

There is also a the [updates-and-fixes](https://github.com/jonasschmedtmann/complete-javascript-course/tree/updates-and-fixes) branch which is kept up-to-date with **latest package updates and important bugfixes 🐛**

🚨 **_Please read the following Frequently Asked Questions (FAQ) carefully before starting the course_** 🚨

## FAQ

### Q1: How do I download the files?

**A:** If you're new to GitHub and just want to download the entire code, hit the green button saying ""Code"", and then choose the ""Download ZIP"" option. If you can't see the button (on mobile), use [this link](https://github.com/jonasschmedtmann/complete-javascript-course/archive/master.zip) instead.

### Q2: I'm stuck! Where do I get help?

**A:** Have you actually tried to fix the problem on your own? **Have you compared your code to the final code?** If you failed fixing your problem, please **post a detailed description of the problem to the Q&A area of that video over at Udemy**, along with a [codepen](https://codepen.io/pen/) containing your code. You will get help there. Please don't send me a personal message or email to fix coding problems.

### Q3: What VSCode theme are you using?

**A:** I use Monokai Pro for all my coding and course production. It's a paid theme (I', **not** affiliated with them), but you can actually use the free demo version forever 😅

### Q4: Can I see a final version of the course projects?

**A:** Sure! Here you go:

- [Pig Game](https://pig-game-v2.netlify.app) (DOM Manipulation)
- [Bankist](https://bankist.netlify.app/) (Arrays, Numbers, Dates, Timers. Fake ""log in"" with user `js` and PIN `1111`)
- [Bankist Site](https://bankist-dom.netlify.app/) (Advanced DOM and Events)
- [Mapty](https://mapty.netlify.app/) (OOP, Geolocation, Project planning)
- [forkify](https://forkify-v2.netlify.app/) (Final advanced project)

### Q5: Videos don't load, can you fix it?

**A:** Unfortunately, there is nothing I can do about it. The course is hosted on Udemy, and sometimes they have technical issues like this. Please just come back a bit later or [contact their support team](https://support.udemy.com/hc/en-us).

### Q6: Videos are blurred / have low quality, can you fix it?

**A:** Please open video settings and change the quality from 'Auto' to another value, for example 720p. If that doesn't help, please [contact the Udemy support team](https://support.udemy.com/hc/en-us).

### Q7: Are the videos downloadable?

**A:** Videos used to be downloadable, but unfortunately, Udemy has disabled video downloads on all my courses in order to fight piracy. There is nothing I can do about this.

### Q8: I want to put these projects in my portfolio. Is that allowed?

**A:** Absolutely! Just make sure you actually built them yourself by following the course, and that you understand what you did. What is **not allowed** is that you create your own course/videos/articles based on this course's content!

### Q9: You mentioned your resources page. Where can I find it?

**A:** It's on my website at <http://codingheroes.io/resources>. You can subscribe for updates 😉

### Q10: I love your courses and want to get updates on new courses. How?

**A:** First, you can subscribe to my email list [at my website](http://codingheroes.io/resources). Plus, I make important announcements on twitter [@jonasschmedtman](https://twitter.com/jonasschmedtman), so you should definitely follow me there 🔥

### Q11: How do I get my certificate of completion?

**A:** A certificate of completion is provided by Udemy after you complete 100% of the course. After completing the course, just click on the ""Your progress"" indicator in the top right-hand corner of the course page. If you want to change your name on the certificate, please [contact the Udemy support team](https://support.udemy.com/hc/en-us).

### Q12: Can you add subtitles in my language?

**A:** No. I provide professional English captions, but Udemy is responsible for subtitles in all other languages (automatic translations). So please [contact the Udemy support team](https://support.udemy.com/hc/en-us) to request your own language.

### Q13: Do you accept pull requests?

**A:** No, for the simple reason that I want this repository to contain the _exact_ same code that is shown in the videos. _However, please feel free to add an issue if you found one._

### Q14: I'm looking for the old course version (v1) files. Where can I find them?

**A:** They are in this same repo, but in the [v1 branch](https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1). So just go to [v1](https://github.com/jonasschmedtmann/complete-javascript-course/tree/v1), and download the code from there.
"
tastejs/todomvc,JavaScript,"# ![TodoMVC](media/logo.png)

> Helping you select an MV\* framework

### [Website](http://todomvc.com)&nbsp;&nbsp;&nbsp;&nbsp;[Blog](http://blog.tastejs.com)&nbsp;&nbsp;&nbsp;&nbsp;[TasteJS](http://tastejs.com)

[![Build Status](https://travis-ci.org/tastejs/todomvc.svg)](https://travis-ci.org/tastejs/todomvc)
[![Cypress.io tests](https://img.shields.io/badge/cypress.io-tests-green.svg?style=flat-square)](https://dashboard.cypress.io/#/projects/n4ynap/runs)

Developers these days are spoiled with choice when it comes to selecting an MV\* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV\* frameworks of today.


## Team

TodoMVC would not be possible without a strong team of [contributors](https://github.com/tastejs/todomvc/contributors) helping push the project forward each day. Additionally, we have a core project team composed of:

#### [Addy Osmani](https://github.com/addyosmani) - Founder/Lead

<img align=""left"" width=""40"" height=""40"" src=""https://www.gravatar.com/avatar/96270e4c3e5e9806cf7245475c00b275.png?s=40"">
  Addy is a Software Engineer at Google who originally created TodoMVC. He oversees the project direction, maintenance and organizes the planning and development efforts of the team.

#### [Sindre Sorhus](https://github.com/sindresorhus) - Lead Developer

<img align=""left"" width=""40"" height=""40"" src=""https://www.gravatar.com/avatar/d36a92237c75c5337c17b60d90686bf9.png?s=40"">
Sindre is a Web Developer who leads core development, quality control and application design for the project. His engineering contributions have helped us ensure consistency and best practices are enforced wherever possible. Sindre also leads up development of the TodoMVC application spec.

#### [Pascal Hartig](https://github.com/passy) - Developer

<img align=""left"" width=""40"" height=""40"" src=""https://www.gravatar.com/avatar/be451fcdbf0e5ff07f23ed16cb5c90a3.png?s=40"">
Pascal is a Software Engineer at Twitter with a deep passion for consistency. He watches pull requests and helps developers getting their contributions integrated with TodoMVC.

#### [Stephen Sawchuk](https://github.com/stephenplusplus) - Developer

<img align=""left"" width=""40"" height=""40"" src=""https://avatars3.githubusercontent.com/u/723048?v=2&s=40"">
Stephen is a Front-end Engineer at Quicken Loans that cares about improving the maintainability and developer experience of open-source projects. His recent contributions include helping us move all apps over to using Bower and implementing the new information bar.

#### [Colin Eberhardt](https://github.com/colineberhardt) - Developer

<img align=""left"" width=""40"" height=""40"" src=""https://secure.gravatar.com/avatar/73bba00b41ff1c9ecc3ee29487bace7d?s=40"">
Colin is a software consultant at Scott Logic who is passionate about all software - from JavaScript to Java, and C# to Objective-C. His recent contribution to the project has been a fully automated test suite.

#### [Sam Saccone](https://github.com/samccone) - Developer

<img align=""left"" width=""40"" height=""40"" src=""https://en.gravatar.com/userimage/602125/f2f1d93164ec62b527f0398c65b2d1f3.jpg?size=40"">
Sam is a Software Engineer at Google who is driven by an endless desire to create, solve problems, and improve developers' lives.

#### [Arthur Verschaeve](https://github.com/arthurvr) - Developer

<img align=""left"" width=""40"" height=""40"" src=""https://en.gravatar.com/avatar/e34daab0d2e344219adb5234198269c5?size=40"">
Arthur is an open-source fanboy from Belgium. He is passionate about developer tooling and all things JavaScript.

#### [Fady Samir Sadek](https://github.com/FadySamirSadek) - Developer

<img align=""left"" width=""40"" height=""40"" src=""https://avatars2.githubusercontent.com/u/7483806?s=40&u=99b3958687789735c12cf736332361a06b951355&v=4"">
Fady is a front-end developer who loves all things JavaScript and enjoys solving real world problems using the web platform and helping other developers do the same. He currently leads maintenance of the project and ensures that the project is friendly for new contributors and upcoming developers.

#### [Gianni Chiappetta](https://github.com/gf3) - Logo designer

<img align=""left"" width=""40"" height=""40"" src=""https://www.gravatar.com/avatar/4b0209ae3652cc5a7d53545e759fbe39.png?s=40"">
Gianni is a programmer and designer currently working as the Chief Rigger at MetaLab.

## Disclaimer

<img align=""right"" width=""230"" height=""230"" src=""media/icon-small.png"">

TodoMVC has been called many things including the 'Speed-dating' and 'Rosetta Stone' of MV\* frameworks. Whilst we hope that this project can offer assistance in deciding what frameworks are worth spending more time looking at, remember that the Todo application offers a limited view of a framework's potential capability.

It is meant to be used as a gateway to reviewing how a basic application using a framework may be structured, and we heavily recommend investing time researching a solution in more depth before opting to use it.

Also, please keep in mind that TodoMVC is not the perfect way to compare the size of different frameworks. We intentionally use the unminified versions to make reading the source code easier.


## Getting Involved

Whilst we enjoy implementing and improving existing Todo apps, we're always interested in speaking to framework authors (and users) wishing to share Todo app implementations in their framework/solution of choice.

Check out our [contribution docs](contributing.md) for more info.


## License

Everything in this repo is MIT License unless otherwise specified.

[MIT](license.md) © Addy Osmani, Sindre Sorhus, Pascal Hartig, Stephen Sawchuk.
"
Binaryify/NeteaseCloudMusicApi,JavaScript,"# 网易云音乐 API

网易云音乐 Node.js API service

<p>
<a href=""https://www.npmjs.com/package/NeteaseCloudMusicApi""><img src=""https://img.shields.io/npm/v/NeteaseCloudMusicApi.svg"" alt=""Version""></a>
<a href=""https://www.npmjs.com/package/NeteaseCloudMusicApi""><img src=""https://img.shields.io/npm/l/NeteaseCloudMusicApi.svg"" alt=""License""></a>
<a href=""https://www.npmjs.com/package/NeteaseCloudMusicApi""><img src=""https://img.shields.io/david/dev/binaryify/NeteaseCloudMusicApi.svg"" alt=""devDependencies"" ></a>
<a href=""https://www.npmjs.com/package/NeteaseCloudMusicApi""><img src=""https://img.shields.io/david/binaryify/NeteaseCloudMusicApi.svg"" alt=""devDependencies"" ></a>
<a href=""https://codeclimate.com/github/Binaryify/NeteaseCloudMusicApi""><img src=""https://codeclimate.com/github/Binaryify/NeteaseCloudMusicApi/badges/gpa.svg"" /></a>
</p>


## 灵感来自

[disoul/electron-cloud-music](https://github.com/disoul/electron-cloud-music)

[darknessomi/musicbox](https://github.com/darknessomi/musicbox)

[sqaiyan/netmusic-node](https://github.com/sqaiyan/netmusic-node)

[greats3an/pyncm](https://github.com/greats3an/pyncm)


## 环境要求

需要 NodeJS 12+ 环境

## 安装

```shell
$ git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git
$ cd NeteaseCloudMusicApi
$ npm install
```

或者

```shell
$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi.git
$ cd NeteaseCloudMusicApi
$ npm install
```

## 运行
调用前务必阅读文档的`调用前须知`

```shell
$ node app.js
```

服务器启动默认端口为 3000,若不想使用 3000 端口,可使用以下命令: Mac/Linux

```shell
$ PORT=4000 node app.js
```

windows 下使用 git-bash 或者 cmder 等终端执行以下命令:

```shell
$ set PORT=4000 && node app.js
```

## Vercel 部署

v4.0.8 加入了 Vercel 配置文件,可以直接在 Vercel 下部署了,不需要自己的服务器

### 操作方法

1. fork 此项目
2. 在 Vercel 官网点击 `New Project`
3. 点击 `Import Git Repository` 并选择你 fork 的此项目并点击`import`
4. 点击 `PERSONAL ACCOUNT` 的 `select`
5. 直接点`Continue`
6. `PROJECT NAME`自己填,`FRAMEWORK PRESET` 选 `Other` 然后直接点 `Deploy` 接着等部署完成即可  

## 腾讯云 serverless 部署
因 `Vercel` 在国内访问太慢,在此提供腾讯云 serverless 部署方法(注意:腾讯云 serverless 并不是免费的,前三个月有免费额度,之后收费)
### 操作方法
1. fork 此项目
2. 在腾讯云serverless应用管理页面( https://console.cloud.tencent.com/sls ),点击`新建应用`
3. 顶部`创建方式`选择 `Web 应用`
4. 选择 `Express框架`,点击底部`下一步按钮`
5. 输入`应用名`,上传方式选择`代码仓库`,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目
6. 启动文件填入:
```
#!/bin/bash
export PORT=9000
/var/lang/node16/bin/node app.js
``` 
7. 点击`完成`,等待部署完成,点击`资源列表`的 `API网关` 里的 `URL`,正常情况会打开文档地址,点击文档`例子`可查看接口调用效果

## 可以在Node.js调用

v3.31.0后支持Node.js调用,导入的方法为`module`内的文件名,返回内容包含`status`和`body`,`status`为状态码,`body`为请求返回内容,参考`module_example` 文件夹下的 `test.js`

```js
const { login_cellphone, user_cloud } = require('NeteaseCloudMusicApi')
async function main() {
  try {
    const result = await login_cellphone({
      phone: '手机号',
      password: '密码'
    })
    console.log(result)
    const result2 = await user_cloud({
      cookie: result.body.cookie // 凭证
    })
    console.log(result2.body)
      
  } catch (error) {
    console.log(error)
  }
}
main()
```

## 支持 TypeScript

```ts
// test.ts
import { banner } from 'NeteaseCloudMusicApi'
banner({ type:0 }).then(res=>{
  console.log(res)
})
```


## 使用文档

[文档地址](https://binaryify.github.io/NeteaseCloudMusicApi) 

[文档地址2](https://neteasecloudmusicapi.vercel.app)

![文档](https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/docs.png)


## 功能特性

1. 登录
2. 刷新登录
3. 发送验证码
4. 校验验证码
5. 注册(修改密码)
6. 获取用户信息 , 歌单，收藏，mv, dj 数量
7. 获取用户歌单
8. 获取用户电台
9. 获取用户关注列表
10. 获取用户粉丝列表
11. 获取用户动态
12. 获取用户播放记录
13. 获取精品歌单
14. 获取歌单详情
15. 搜索
16. 搜索建议
17. 获取歌词
18. 歌曲评论
19. 收藏单曲到歌单
20. 专辑评论
21. 歌单评论
22. mv 评论
23. 电台节目评论
24. banner
25. 获取歌曲详情
26. 获取专辑内容
27. 获取歌手单曲
28. 获取歌手 mv
29. 获取歌手专辑
30. 获取歌手描述
31. 获取相似歌手
32. 获取相似歌单
33. 相似 mv
34. 获取相似音乐
35. 获取最近 5 个听了这首歌的用户
36. 获取每日推荐歌单
37. 获取每日推荐歌曲
38. 私人 FM
39. 签到
40. 喜欢音乐
41. 垃圾桶
42. 歌单 ( 网友精选碟 )
43. 新碟上架
44. 热门歌手
45. 最新 mv
46. 推荐 mv
47. 推荐歌单
48. 推荐新音乐
49. 推荐电台
50. 推荐节目
51. 独家放送
52. mv 排行
53. 获取 mv 数据
54. 播放 mv/视频
55. 排行榜
56. 歌手榜
57. 云盘
58. 电台 - 推荐
59. 电台 - 分类
60. 电台 - 分类推荐
61. 电台 - 订阅
62. 电台 - 详情
63. 电台 - 节目
64. 给评论点赞
65. 获取动态
66. 热搜列表(简略)
67. 发送私信
68. 发送私信歌单
69. 新建歌单
70. 收藏/取消收藏歌单
71. 歌单分类
72. 收藏的歌手列表
73. 订阅的电台列表
74. 相关歌单推荐
75. 付费精选接口
76. 音乐是否可用检查接口
77. 登录状态
78. 获取视频播放地址
79. 发送/删除评论
80. 热门评论
81. 视频评论
82. 退出登录
83. 所有榜单
84. 所有榜单内容摘要
85. 收藏视频
86. 收藏 MV
87. 视频详情
88. 相关视频
89. 关注用户
90. 新歌速递
91. 喜欢音乐列表(无序)
92. 收藏的 MV 列表
93. 获取最新专辑
94. 听歌打卡
95. 获取视频标签/分类下的视频
96. 已收藏专辑列表
97. 获取动态评论
98. 歌单收藏者列表
99. 云盘歌曲删除
100. 热门话题
101. 电台 - 推荐类型
102. 电台 - 非热门类型
103. 电台 - 今日优选
104. 心动模式/智能播放
105. 转发动态
106. 删除动态
107. 分享歌曲、歌单、mv、电台、电台节目到动态
108. 通知-私信
109. 通知-评论
110. 通知-@我
111. 通知-通知
112. 设置
113. 云盘数据详情
114. 私信内容
115. 我的数字专辑
116. batch批量请求接口
117. 获取视频标签列表
118. 全部mv
119. 网易出品mv
120. 收藏/取消收藏专辑
121. 专辑动态信息
122. 热搜列表(详细)
123. 更换绑定手机
124. 检测手机号码是否已注册
125. 初始化昵称
126. 更新歌单描述
127. 更新歌单名
128. 更新歌单标签
129. 默认搜索关键词
130. 删除歌单
131. 电台banner
132. 用户电台
133. 热门电台
134. 电台 - 节目详情
135. 电台 - 节目榜
136. 电台 - 新晋电台榜/热门电台榜
137. 类别热门电台
138. 云村热评
139. 电台24小时节目榜
140. 电台24小时主播榜
141. 电台最热主播榜
142. 电台主播新人榜
143. 电台付费精品榜
144. 歌手热门50首歌曲
145. 购买数字专辑
146. 获取 mv 点赞转发评论数数据
147. 获取视频点赞转发评论数数据
148. 调整歌单顺序
149. 调整歌曲顺序
150. 独家放送列表
151. 获取推荐视频
152. 获取视频分类列表 
153. 获取全部视频列表接口
154. 获取历史日推可用日期列表
155. 获取历史日推详细数据
156. 国家编码列表
157. 首页-发现
158. 首页-发现-圆形图标入口列表
159. 数字专辑-全部新碟
160. 数字专辑-热门新碟
161. 数字专辑&数字单曲-榜单
162. 数字专辑-语种风格馆
163. 数字专辑详情
164. 更新头像
165. 歌单封面上传
166. 楼层评论
167. 歌手全部歌曲
168. 精品歌单标签列表
169. 用户等级信息
170. 电台个性推荐
171. 用户绑定信息
172. 用户绑定手机
173. 新版评论
174. 点赞过的视频
175. 收藏视频到视频歌单
176. 删除视频歌单里的视频
177. 最近播放的视频
178. 音乐日历
179. 电台订阅者列表
180. 云贝签到信息
181. 云贝签到
182. 云贝所有任务
183. 云贝todo任务
184. 云贝今日签到信息
185. 云贝完成任务
186. 云贝收入
187. 云贝支出
188. 云贝账户信息
189. 账号信息
190. 最近联系人
191. 私信音乐
192. 抱一抱评论
193. 评论抱一抱列表
194. 收藏的专栏
195. 关注歌手新歌
196. 关注歌手新MV
197. 歌手详情
198. 云盘上传
199. 二维码登录
200. 话题详情
201. 话题详情热门动态
202. 歌单详情动态
203. 绑定手机
204. 一起听状态
205. 用户历史评论
206. 云盘歌曲信息匹配纠正
207. 云贝推歌
208. 云贝推歌历史记录
209. 已购单曲
210. 获取mlog播放地址
211. 将mlog id转为视频id
212. vip成长值
213. vip成长值获取记录
214. vip任务
215. 领取vip成长值
216. 歌手粉丝
217. 数字专辑详情
218. 数字专辑销量
219. 音乐人数据概况
220. 音乐人播放趋势
221. 音乐人任务
222. 账号云豆数
223. 领取云豆
224. 获取 VIP 信息
225. 音乐人签到
226. 发送文本动态
227. 获取客户端歌曲下载 url
228. 获取歌单所有歌曲
229. 乐签信息
230. 最近播放-歌曲
231. 最近播放-视频
232. 最近播放-声音
233. 最近播放-歌单
234. 最近播放-专辑
235. 最近播放-播客
236. 签到进度
237. 重复昵称检测
238. 歌手粉丝数量
239. 音乐人任务(新)
240. 内部版本接口
241. 歌单更新播放量
242. 黑胶时光机
243. 音乐百科 - 简要信息
244. 乐谱列表
245. 乐谱内容
246. 曲风列表
247. 曲风偏好
248. 曲风详情
249. 曲风-歌曲
250. 曲风-专辑
251. 曲风-歌单
252. 曲风-歌手

## 更新日志

[changelog](https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/CHANGELOG.MD)

## 单元测试

```shell
$ npm test
```

![单元测试](https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot1.png)
![单元测试](https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot2.png)

## SDK

| 语言 |                    作者                     |                             地址                             |  类型  |
| :--: | :-----------------------------------------: | :----------------------------------------------------------: | :----: |
| Java |    [JackuXL](https://github.com/JackuXL)    | [https://github.com/JackuXL/NeteaseCloudMusicApi-SDK](https://github.com/JackuXL/NeteaseCloudMusicApi-SDK) | 第三方 |
| Java | [1015770492](https://github.com/1015770492) |       https://github.com/1015770492/yumbo-music-utils        | 第三方 |

## 贡献者

![](https://opencollective.com/NeteaseCloudMusicApi/contributors.svg?width=890)


## License

[The MIT License (MIT)](https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/LICENSE)
"
RedHatTraining/DO288-apps,JavaScript,"# DO288 Containerized Example Applications

This repository contains a collection of sample containerized applications.  To complete the course you need to fork this repo into your personal Github account."
adam-p/markdown-here,JavaScript,"# ![Markdown Here logo](https://raw.github.com/adam-p/markdown-here/master/src/common/images/icon48.png) Markdown Here

[**Visit the website.**](http://markdown-here.com)<br>
[**Get it for Chrome.**](https://chrome.google.com/webstore/detail/elifhakcjgalahccnjkneoccemfahfoa)<br>
[**Get it for Firefox.**](https://addons.mozilla.org/en-US/firefox/addon/markdown-here/)<br>
[**Get it for Safari.**](https://s3.amazonaws.com/markdown-here/markdown-here.safariextz)<br>
[**Get it for Thunderbird and Postbox.**](https://addons.mozilla.org/en-US/thunderbird/addon/markdown-here/)<br>
[**Get it for Opera.**](https://addons.opera.com/en/extensions/details/markdown-here/)<br>
[**Discuss it and ask questions in the Google Group.**](https://groups.google.com/forum/?fromgroups#!forum/markdown-here/)<br>

*Markdown Here* is a Google Chrome, Firefox, Safari, Opera, and Thunderbird extension that lets you write email<sup>&dagger;</sup> in Markdown<sup>&Dagger;</sup> and render them before sending. It also supports syntax highlighting (just specify the language in a fenced code block).

Writing email with code in it is pretty tedious. Writing Markdown with code in it is easy. I found myself writing email in Markdown in the Github in-browser editor, then copying the preview into email. This is a pretty absurd workflow, so I decided create a tool to write and render Markdown right in the email.

To discover what can be done with Markdown in *Markdown Here*, check out the [Markdown Here Cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet) and the other [wiki pages](https://github.com/adam-p/markdown-here/wiki).

<sup>&dagger;: And Google Groups posts, and Blogger posts, and Evernote notes, and Wordpress posts! [See more](#compatibility).</sup><br>
<sup>&Dagger;: And TeX mathematical formulae!</sup>

![screenshot of conversion](https://raw.github.com/adam-p/markdown-here/master/store-assets/markdown-here-image1.gimp.png)

### Table of Contents
**[Installation Instructions](#installation-instructions)**<br>
**[Usage Instructions](#usage-instructions)**<br>
**[Troubleshooting](#troubleshooting)**<br>
**[Compatibility](#compatibility)**<br>
**[Notes and Miscellaneous](#notes-and-miscellaneous)**<br>
**[Building the Extension Bundles](#building-the-extension-bundles)**<br>
**[Next Steps, Credits, Feedback, License](#next-steps)**<br>

## Installation Instructions

### Chrome

#### Chrome Web Store

Go to the [Chrome Web Store page for *Markdown Here*](https://chrome.google.com/webstore/detail/elifhakcjgalahccnjkneoccemfahfoa) and install normally.

After installing, make sure to reload your webmail or restart Chrome!

#### Manual/Development

1. Clone this repo.
2. In Chrome, open the Extensions settings. (Wrench button, Tools, Extensions.)
3. On the Extensions settings page, click the ""Developer Mode"" checkbox.
4. Click the now-visible ""Load unpacked extension…"" button. Navigate to the directory where you cloned the repo, then the `src` directory under that.
5. The *Markdown Here* extension should now be visible in your extensions list.
6. Reload your webmail page (and maybe application) before trying to convert an email.

### Firefox and Thunderbird

#### Mozilla Add-ons site

Go to the [Firefox Add-ons page for *Markdown Here*](https://addons.mozilla.org/en-US/firefox/addon/markdown-here/) and install normally.

Or go to the ""Tools > Add-ons"" menu and then search for ""Markdown Here"".

After installing, make sure to restart Firefox/Thunderbird!

**Note:** It takes up to a month for Mozilla to approve changes to the Firefox/Thunderbird extension, so updates (features, fixes) will lag behind what is shown here. You can manually choose to install the newest version before it's reviewed from the list of versions: [https://addons.mozilla.org/en-US/firefox/addon/markdown-here/versions/](https://addons.mozilla.org/en-US/firefox/addon/markdown-here/versions/)

#### Manual/Development

1. Clone this repo.
2. Follow the instructions in the MDN [""Setting up an extension development environment""](https://developer.mozilla.org/en/Setting_up_extension_development_environment) article.

### Safari

[Download the extension directly.](https://s3.amazonaws.com/markdown-here/markdown-here.safariextz) When it has finished downloading, double click it to install.

#### Preferences

To get to the Markdown Here preferences, open the Safari preferences and then go to the ""Extensions"" tab. Then click the ""Click me to show Markdown Here options"" box.

### Opera

Note that *Markdown Here* only works with Opera versions 16 and higher (i.e., the ones that are based on Chromium).

Go to the [Opera Add-ons store page for *Markdown Here*](https://addons.opera.com/en/extensions/details/markdown-here/) and install normally.

After installing, make sure to reload your webmail or restart Chrome!

## Usage Instructions

Install it, and then…

1. In Chrome/Safari/Opera, *make sure* you reload your web mail page before trying to use Markdown Here.
2. In Chrome/Firefox/Safari/Opera, log into your Gmail, Hotmail, or Yahoo account and start a new email. In Thunderbird, start a new message.
3. Make sure you're using the rich editor.
   * In Gmail, click the ""Rich formatting"" link, if it's visible.
   * In Thunderbird, make sure ""Compose messages in HTML format"" is enabled in your ""Account Settings"", ""Composition & Addressing"" pane.
4. Compose an email in Markdown. For example:

   <pre>
   **Hello** `world`.

   ```javascript
   alert('Hello syntax highlighting.');
   ```
   </pre>

5. Right-click in the compose box and choose the ""Markdown Toggle"" item from the context menu. Or click the button that appears in your address bar. Or use the hotkey (<kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>M</kbd> by default).
6. You should see your email rendered correctly from Markdown into rich HTML.
7. Send your awesome email to everyone you know. It will appear to them the same way it looks to you.

### Revert to Markdown

After rendering your Markdown to pretty HTML, you can still get back to your original Markdown. Just right-click anywhere in the newly rendered Markdown and click ""Markdown Toggle"" -- your email compose body will change back to the Markdown you had written.

Note that any changes you make to the pretty HTML will be lost when you revert to Markdown.

In Gmail, you can also use the browser's Undo command (<kbd>CTRL</kbd>+<kbd>Z</kbd> / <kbd>CMD</kbd>+<kbd>Z</kbd>, or from the Edit menu). Be warned that you might also lose the last few characters you entered.

### Replies

In Gmail, Thunderbird, and Google Groups, you can use ""Markdown Toggle"" normally: just write your reply (top, bottom, inline, wherever) and then convert. The original email that you're replying to will be left alone. (Technically: Existing `blockquote` blocks will be left intact.)

In Hotmail and Yahoo (which don't put the original in a `blockquote`), and optionally in Gmail, Thunderbird, and Google Groups, you can ensure that only the part of the reply that you wrote gets converted by selecting what you want to convert and then clicking ""Markdown Toggle"" -- see the next section.

### Selection/Piecemeal Conversion

Sometimes you don't want to convert the entire email; sometimes your email isn't entirely Markdown. To convert only part of the email, select the text (with your mouse or keyboard), right-click on it, and click the ""Markdown Toggle"" menu item. Your selection is magically rendered into pretty HTML.

To revert back to Markdown, just put your cursor anywhere in the block of converted text, right click, and click the ""Markdown Toggle"" menu item again. Now it's magically back to the original Markdown.

![screenshot of selection conversion](https://raw.github.com/adam-p/markdown-here/master/store-assets/markdown-here-image2.gimp.png)

#### Things to know about converting/reverting a selection

* If you select only part of a block of text, only that text will be converted. The converted block will be wrapped in a paragraph element, so the original line will be broken up. You probably don't want to ever do this.

* You can select and revert multiple converted blocks at the same time. One upshot of this is that you can select your entire email, click ""Markdown Toggle"", and all portions of it that you had converted will be reverted.

* If you don't have anything selected when you click ""Markdown Toggle"", *Markdown Here* will check if there are converted blocks anywhere in the message and revert them. If there no converted blocks are found, it will convert the entire email.

### Options

The *Markdown Here* Options page can be accessed via the Chrome, Firefox, Safari, or Thunderbird extensions list. The available options include:

* Styling modifications for the rendered Markdown.
* Syntax highlighting theme selection and modification.
* TeX math formulae processing enabling and customization.
* What the hotkey should be.

For Chrome and Firefox, any changes made in the *Markdown Here* Options are automatically synchronized between your other installations of that browser (if you have the sync feature enabled in the browser).

![screenshot of options](https://raw.githubusercontent.com/adam-p/markdown-here/master/store-assets/markdown-here-chrome-options-1.gimp.png)


## Troubleshooting

See the [Troubleshooting wiki page](https://github.com/adam-p/markdown-here/wiki/Troubleshooting).


## Compatibility

See the [Compatibility wiki page](https://github.com/adam-p/markdown-here/wiki/Compatibility).


## Notes and Miscellaneous

* *Markdown Here* uses [Github Flavored Markdown](http://github.github.com/github-flavored-markdown/), with the limitation that GFM special links are not supported ([issue #11](https://github.com/adam-p/markdown-here/issues/11)); nor will they be, as MDH is not Github-specific.

* Available languages for syntax highlighting (and the way they should be written in the fenced code block) can be seen on the [highlight.js demo page](http://softwaremaniacs.org/media/soft/highlight/test.html).

* Images embedded inline in your Markdown will be retained when you ""Markdown Toggle"". Gmail allows you to put images inline in your email -- this can be much easier than referencing an external image.

* Email signatures are automatically excluded from conversion. Specifically, anything after the semi-standard `'-- '` (note the trailing space) is left alone.
  * Note that Hotmail and Yahoo do *not* automatically add the `'-- '` to signatures, so you have to add it yourself.

* The ""Markdown Toggle"" menu item shows up for more element types than it can correctly render. This is intended to help people realize that they're not using a rich editor. Otherwise they just don't see the menu item and don't know why.

* Styling:
  * The use of browser-specific styles (-moz-, -webkit-) should be avoided. If used, they may not render correctly for people reading the email in a different browser from the one where the email was sent.
  * The use of state-dependent styles (like `a:hover`) don't work because they don't match at the time the styles are made explicit. (In email, styles must be explicitly applied to all elements -- stylesheets get stripped.)

* For more tweaky features, visit the [Tips and Tricks](https://github.com/adam-p/markdown-here/wiki/Tips-and-Tricks) section.

## Building the Extension Bundles

```
cd utils
node build.js
```


### Chrome and Opera extension

Create a file with a `.zip` extension containing these files and directories:

```
manifest.json
common/
chrome/
```

### Firefox/Thunderbird extension

Create a file with a `.xpi` extension containing these files and directories:

```
chrome.manifest
install.rdf
common/
firefox/
```

### Safari extension

The browser-specific code is located in the [`markdown-here-safari`](https://github.com/adam-p/markdown-here-safari) project.

Use the Safari Extension Builder.

## Next Steps

See the [issues list](https://github.com/adam-p/markdown-here/issues) and the [Notes Wiki](https://github.com/adam-p/markdown-here/wiki/Development-Notes). All ideas, bugs, plans, complaints, and dreams will end up in one of those two places.

Feel free to create a feature request issue if what you want isn't already there. If you'd prefer a less formal approach to floating an idea, post to the [""markdown-here"" Google Group](https://groups.google.com/forum/?fromgroups=#!forum/markdown-here).

It also takes a fair bit of work to stay up-to-date with the latest changes in all the applications and web sites where Markdown Here works.

## Credits

*Markdown Here* was coded on the shoulders of giants.

* Markdown-to-HTML: [chjj / marked](https://github.com/chjj/marked)
* Syntax highlighting: [isagalaev / highlight.js](https://github.com/isagalaev/highlight.js)
* HTML-to-text: [mtrimpe / jsHtmlToText](https://github.com/mtrimpe/jsHtmlToText)

## Feedback

All bugs, feature requests, pull requests, feedback, etc., are welcome. [Create an issue](https://github.com/adam-p/markdown-here/issues). Or [post to the ""markdown-here"" Google Group](https://groups.google.com/forum/?fromgroups=#!forum/markdown-here).

## License

### Code

MIT License: http://adampritchard.mit-license.org/ or see [the `LICENSE` file](https://github.com/adam-p/markdown-here/blob/master/LICENSE).

### Logo

Copyright 2015, [Austin Anderson](http://protractor.ninja/). Licensed to Markdown Here under the [MDH contributor license agreement](https://github.com/adam-p/markdown-here/blob/master/CLA-individual.md).

### Other images

[Creative Commons Attribution 3.0 Unported (CC BY 3.0) License](http://creativecommons.org/licenses/by/3.0/)

---

![Dos Equis man says](https://raw.github.com/adam-p/markdown-here/master/store-assets/dos-equis-MDH.jpg)
"
OpenZeppelin/openzeppelin-contracts,JavaScript,"# <img src=""logo.svg"" alt=""OpenZeppelin"" height=""40px"">

[![NPM Package](https://img.shields.io/npm/v/@openzeppelin/contracts.svg)](https://www.npmjs.org/package/@openzeppelin/contracts)
[![Coverage Status](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts/graph/badge.svg)](https://codecov.io/gh/OpenZeppelin/openzeppelin-contracts)
[![GitPOAPs](https://public-api.gitpoap.io/v1/repo/OpenZeppelin/openzeppelin-contracts/badge)](https://www.gitpoap.io/gh/OpenZeppelin/openzeppelin-contracts)
[![Docs](https://img.shields.io/badge/docs-%F0%9F%93%84-yellow)](https://docs.openzeppelin.com/contracts)
[![Forum](https://img.shields.io/badge/forum-%F0%9F%92%AC-yellow)](https://docs.openzeppelin.com/contracts)

**A library for secure smart contract development.** Build on a solid foundation of community-vetted code.

 * Implementations of standards like [ERC20](https://docs.openzeppelin.com/contracts/erc20) and [ERC721](https://docs.openzeppelin.com/contracts/erc721).
 * Flexible [role-based permissioning](https://docs.openzeppelin.com/contracts/access-control) scheme.
 * Reusable [Solidity components](https://docs.openzeppelin.com/contracts/utilities) to build custom contracts and complex decentralized systems.

:mage: **Not sure how to get started?** Check out [Contracts Wizard](https://wizard.openzeppelin.com/) — an interactive smart contract generator.

:building_construction: **Want to scale your decentralized application?** Check out [OpenZeppelin Defender](https://openzeppelin.com/defender) — a secure platform for automating and monitoring your operations.

## Overview

### Installation

```
$ npm install @openzeppelin/contracts
```

OpenZeppelin Contracts features a [stable API](https://docs.openzeppelin.com/contracts/releases-stability#api-stability), which means that your contracts won't break unexpectedly when upgrading to a newer minor version.

An alternative to npm is to use the GitHub repository (`openzeppelin/openzeppelin-contracts`) to retrieve the contracts. When doing this, make sure to specify the tag for a release such as `v4.5.0`, instead of using the `master` branch.

### Usage

Once installed, you can use the contracts in the library by importing them:

```solidity
pragma solidity ^0.8.0;

import ""@openzeppelin/contracts/token/ERC721/ERC721.sol"";

contract MyCollectible is ERC721 {
    constructor() ERC721(""MyCollectible"", ""MCO"") {
    }
}
```

_If you're new to smart contract development, head to [Developing Smart Contracts](https://docs.openzeppelin.com/learn/developing-smart-contracts) to learn about creating a new project and compiling your contracts._

To keep your system secure, you should **always** use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.

## Learn More

The guides in the [documentation site](https://docs.openzeppelin.com/contracts) will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:

* [Access Control](https://docs.openzeppelin.com/contracts/access-control): decide who can perform each of the actions on your system.
* [Tokens](https://docs.openzeppelin.com/contracts/tokens): create tradeable assets or collectives, and distribute them via [Crowdsales](https://docs.openzeppelin.com/contracts/crowdsales).
* [Utilities](https://docs.openzeppelin.com/contracts/utilities): generic useful tools including non-overflowing math, signature verification, and trustless paying systems.

The [full API](https://docs.openzeppelin.com/contracts/api/token/ERC20) is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the [community forum](https://forum.openzeppelin.com).

Finally, you may want to take a look at the [guides on our blog](https://blog.openzeppelin.com/guides), which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.

* [The Hitchhiker’s Guide to Smart Contracts in Ethereum](https://blog.openzeppelin.com/the-hitchhikers-guide-to-smart-contracts-in-ethereum-848f08001f05) will help you get an overview of the various tools available for smart contract development, and help you set up your environment.
* [A Gentle Introduction to Ethereum Programming, Part 1](https://blog.openzeppelin.com/a-gentle-introduction-to-ethereum-programming-part-1-783cc7796094) provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.
* For a more in-depth dive, you may read the guide [Designing the Architecture for Your Ethereum Application](https://blog.openzeppelin.com/designing-the-architecture-for-your-ethereum-application-9cec086f8317), which discusses how to better structure your application and its relationship to the real world.

## Security

This project is maintained by [OpenZeppelin](https://openzeppelin.com) with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.

The security policy is detailed in [`SECURITY.md`](./SECURITY.md), and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a [bug bounty program on Immunefi](https://immunefi.com/bounty/openzeppelin) to reward the responsible disclosure of vulnerabilities.

The engineering guidelines we follow to promote project quality can be found in [`GUIDELINES.md`](./GUIDELINES.md).

Past audits can be found in [`audits/`](./audits).

Smart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.

OpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.

## Contribute

OpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the [contribution guide](CONTRIBUTING.md)!

## License

OpenZeppelin Contracts is released under the [MIT License](LICENSE).

## Legal

Your use of this Project is governed by the terms found at www.openzeppelin.com/tos (the ""Terms"").
"
cyclic-software/starter-express-api,JavaScript,"# starter-express-api

This is the simplest possible nodejs api using express that responds to any request with: 
```
Yo!
```

### Deploy it in 7 seconds: 

[![Deploy to Cyclic](https://deploy.cyclic.app/button.svg)](https://deploy.cyclic.app/)

"
jenkins-docs/simple-node-js-react-npm-app,JavaScript,"# simple-node-js-react-npm-app

This repository is for the
[Build a Node.js and React app with npm](https://jenkins.io/doc/tutorials/build-a-node-js-and-react-app-with-npm/)
tutorial in the [Jenkins User Documentation](https://jenkins.io/doc/).

The repository contains a simple Node.js and React application which generates
a web page with the content ""Welcome to React"" and is accompanied by a test to
check that the application renders satisfactorily.

The `jenkins` directory contains an example of the `Jenkinsfile` (i.e. Pipeline)
you'll be creating yourself during the tutorial and the `scripts` subdirectory
contains shell scripts with commands that are executed when Jenkins processes
the ""Test"" and ""Deliver"" stages of your Pipeline.
"
angular-ui/bootstrap,JavaScript,"# Project Status (please read)
Due to [Angular](https://angular.io)'s continued adoption, our creation of [the Angular version of this library](https://ng-bootstrap.github.io), and the the project maintainers' moving on to other things, this project is considered feature-complete and is no longer being maintained.

We thank you for all your contributions over the years and hope you've enjoyed using this library as much as we've had developing and maintaining it.  It would not have been successful without them.

---

### UI Bootstrap - [AngularJS](http://angularjs.org/) directives specific to [Bootstrap](http://getbootstrap.com)

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angular-ui/bootstrap?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![Build Status](https://secure.travis-ci.org/angular-ui/bootstrap.svg)](http://travis-ci.org/angular-ui/bootstrap)
[![devDependency Status](https://david-dm.org/angular-ui/bootstrap/dev-status.svg?branch=master)](https://david-dm.org/angular-ui/bootstrap#info=devDependencies)
[![CDNJS](https://img.shields.io/cdnjs/v/angular-ui-bootstrap.svg)](https://cdnjs.com/libraries/angular-ui-bootstrap/)

### Quick links
- [Demo](#demo)
- [Angular 2](#angular-2)
- [Installation](#installation)
    - [NPM](#install-with-npm)
    - [Bower](#install-with-bower)
    - [NuGet](#install-with-nuget)
    - [Custom](#custom-build)
    - [Manual](#manual-download)
- [Webpack / JSPM](#webpack--jspm)
- [Support](#support)
    - [FAQ](#faq)
    - [Code of Conduct](#code-of-conduct)
    - [PREFIX MIGRATION GUIDE](#prefix-migration-guide)
    - [Supported browsers](#supported-browsers)
    - [Need help?](#need-help)
    - [Found a bug?](#found-a-bug)
- [Contributing to the project](#contributing-to-the-project)
- [Development, meeting minutes, roadmap and more.](#development-meeting-minutes-roadmap-and-more)


# Demo

Do you want to see directives in action? Visit https://angular-ui.github.io/bootstrap/!

# Angular 2

Are you interested in Angular 2? We are on our way! Check out [ng-bootstrap](https://github.com/ui-bootstrap/core).

# Installation

Installation is easy as UI Bootstrap has minimal dependencies - only the AngularJS and Twitter Bootstrap's CSS are required.
*Notes:*
* Since version 0.13.0, UI Bootstrap depends on [ngAnimate](https://docs.angularjs.org/api/ngAnimate) for transitions and animations, such as the accordion, carousel, etc. Include `ngAnimate` in the module dependencies for your app in order to enable animation.
* UI Bootstrap depends on [ngTouch](https://docs.angularjs.org/api/ngTouch) for swipe actions. Include `ngTouch` in the module dependencies for your app in order to enable swiping.

## Angular Requirements
* UI Bootstrap 1.0 and higher _requires_ Angular 1.4.x or higher and it has been tested with Angular 1.4.8.
* UI Bootstrap 0.14.3 is the _last_ version that supports Angular 1.3.x.
* UI Bootstrap 0.12.0 is the _last_ version that supports Angular 1.2.x.

## Bootstrap Requirements
* UI Bootstrap requires Bootstrap CSS version 3.x or higher and it has been tested with Bootstrap CSS 3.3.6.
* UI Bootstrap 0.8 is the _last_ version that supports Bootstrap CSS 2.3.x.

#### Install with NPM

```sh
$ npm install angular-ui-bootstrap
```

This will install AngularJS and Bootstrap NPM packages.

#### Install with Bower
```sh
$ bower install angular-bootstrap
```

Note: do not install 'angular-ui-bootstrap'.  A separate repository - [bootstrap-bower](https://github.com/angular-ui/bootstrap-bower) - hosts the compiled javascript file and bower.json.

#### Install with NuGet
To install AngularJS UI Bootstrap, run the following command in the Package Manager Console

```sh
PM> Install-Package Angular.UI.Bootstrap
```

#### Custom build

Head over to https://angular-ui.github.io/bootstrap/ and hit the *Custom build* button to create your own custom UI Bootstrap build, just the way you like it.

#### Manual download

After downloading dependencies (or better yet, referencing them from your favorite CDN) you need to download build version of this project. All the files and their purposes are described here:
https://github.com/angular-ui/bootstrap/tree/gh-pages#build-files
Don't worry, if you are not sure which file to take, opt for `ui-bootstrap-tpls-[version].min.js`.

### Adding dependency to your project

When you are done downloading all the dependencies and project files the only remaining part is to add dependencies on the `ui.bootstrap` AngularJS module:

```js
angular.module('myModule', ['ui.bootstrap']);
```

# Webpack / JSPM

To use this project with webpack, follow the [NPM](#install-with-npm) instructions.
Now, if you want to use only the accordion, you can do:

```js
import accordion from 'angular-ui-bootstrap/src/accordion';

angular.module('myModule', [accordion]);
```

You can import all the pieces you need in the same way:

```js
import accordion from 'angular-ui-bootstrap/src/accordion';
import datepicker from 'angular-ui-bootstrap/src/datepicker';

angular.module('myModule', [accordion, datepicker]);
```

This will load all the dependencies (if any) and also the templates (if any).

Be sure to have a loader able to process `css` files like `css-loader`.

If you would prefer not to load your css through your JavaScript file loader/bundler, you can choose to import the `index-nocss.js` file instead, which is available for the modules:
* carousel
* datepicker
* datepickerPopup
* dropdown
* modal
* popover
* position
* timepicker
* tooltip
* typeahead

The other modules, such as `accordion` in the example below, do not have CSS resources to load, so you should continue to import them as normal:

```js
import accordion from 'angular-ui-bootstrap/src/accordion';
import typeahead from 'angular-ui-bootstrap/src/typeahead/index-nocss.js';

angular.module('myModule', [accordion, typeahead]);
```

# Versioning

Pre-2.0.0 does not follow a particular versioning system. 2.0.0 and onwards follows [semantic versioning](http://semver.org/). All release changes can be viewed on our [changelog](CHANGELOG.md).

# Support

## FAQ

https://github.com/angular-ui/bootstrap/wiki/FAQ

# Code of Conduct

Take a moment to read our [Code of Conduct](CODE_OF_CONDUCT.md)

## PREFIX MIGRATION GUIDE

If you're updating your application to use prefixes, please check the [migration guide](https://github.com/angular-ui/bootstrap/wiki/Migration-guide-for-prefixes).

## Supported browsers

Directives from this repository are automatically tested with the following browsers:
* Chrome (stable and canary channel)
* Firefox
* IE 9 and 10
* Opera
* Safari

Modern mobile browsers should work without problems.

## Need help?
Need help using UI Bootstrap?

* Live help in the IRC (`#angularjs` channel at the `freenode` network). Use this [webchat](https://webchat.freenode.net/) or your own IRC client.
* Ask a question in [StackOverflow](http://stackoverflow.com/) under the [angular-ui-bootstrap](http://stackoverflow.com/questions/tagged/angular-ui-bootstrap) tag.

**Please do not create new issues in this repository to ask questions about using UI Bootstrap**

## Found a bug?
Please take a look at [CONTRIBUTING.md](CONTRIBUTING.md#you-think-youve-found-a-bug) and submit your issue [here](https://github.com/angular-ui/bootstrap/issues/new).


----


# Contributing to the project

We are always looking for the quality contributions! Please check the [CONTRIBUTING.md](CONTRIBUTING.md) for the contribution guidelines.

# Development, meeting minutes, roadmap and more.

Head over to the [Wiki](https://github.com/angular-ui/bootstrap/wiki) for notes on development for UI Bootstrap, meeting minutes from the UI Bootstrap team, roadmap plans, project philosophy and more.
"
learn-co-students/js-from-dom-to-node-bootcamp-prep-000,JavaScript,"# Moving Away from the DOM

Congratulations! You are now able to understand how Javascript interacts with
websites through the DOM. That's a big deal. Take a few seconds, breathe in,
breathe out and realize that you now know something you didn't before. Only a few
lessons ago, you didn't even know what the DOM was. Now you understand how to
manipulate it.

![Perspective](https://web-dev-readme-photos.s3.amazonaws.com/js/perspective.gif)

If you ever want to show your friends something cool, open up the console on any
web page and then find the selector for an element, then modify it using
Javascript in the console. Prepare to enjoy the shock and awe of your friends!

## From DOM Manipulation to Programming Logic

For the rest of this material, we will be moving from the basics of DOM
manipulation to the meat and potatoes of programming. This means we are going to
cover the ideas of conditionals, looping, encapsulation and syntax. I know those
may not be familiar to you, but over the next few lessons they will become
second nature! Remember when DOM was a scary word? Encapsulation will soon go
the way of the DOM. You're going to be encapsulating everything.

Really the goal of the rest of this course is to introduce you to _programmatic
thinking_. We will be doing that through explaining Javascript, but the goal is
for every student to begin using programmatic thinking as a general way to solve
problems. These problems may be creating the next Facebook, or it may be just
solving the best order to complete your errands. You'll notice programmatic,
logical thinking starting to permeate throughout your decision process. It's
incredibly powerful and something that has aided millions of programmers to
solve some of the hardest problems in the world.

That is the goal with this class. While we may touch on making pictures of cats
spin, we want you to internalize the thought process required to solve that
silly problem. Hopefully, you'll go off after this class and solve some slightly
more important problems :)

## Javascript Outside of the Browser

You've spent some time in the browser with Javascript. That's great. Now let's
get to where Javascript has been rapidly increasing its programming market
share: outside of the browser. You may have heard of it, but a new tool called
NodeJS was created a few years back to allow developers to write Javascript code
outside of the browser. That is what we are going to use now to be able to go
deep on programmatic thinking, without having to explain complicated browser
interactions. We want to simplify programming down to its most core elements.

### Hello World

Let's write your first code using NodeJS and non-browser Javascript. To do this,
we are going to remove your first set of training wheels. We are no longer going
to be using the CodePens that we've been using before. We are going to use a
real developer environment through the Learn IDE.

![Training Wheels](https://web-dev-readme-photos.s3.amazonaws.com/js/training_wheels.gif)

The Learn IDE is available as both an in-browser development environment as well
as a standalone application.

To choose which environment you would like to work in, on any learn.co page,
click your user image in the upper right corner of the page, then click
'Manage Account.'

![manage account menu](https://curriculum-content.s3.amazonaws.com/node-js/manage_account.png)

In Account Management, click 'Learning Environment' and choose either 'IDE In
Browser' or 'IDE Download.' Or, if you are already comfortable using an IDE and
a console and prefer your own set up, you may also choose 'Local.' This
lesson's instructions assume that you are using the Learn IDE in browser.

If you choose 'IDE In Browser' you are set and can navigate back to this lesson.
If you have chosen 'IDE Download,' you can download and set up the IDE
[here][ide].

Now, click ""Open IDE"" to open your environment. On the left side is your file
tree. In the `js-from-dom-to-node` folder, click `index.js` to open the file up.
IT'S CODING TIME.

#### Running Code in Chrome's Browser Console

First thing is first, I want to show you that everything we will do in the IDE,
you can do in the console. In your browser, right click and select Inspect.
Select the Console tab, type `console.log(""Hello, World!"")`, and press `Enter`.
You should see ""Hello, World!"" printed right below your line of code. Congrats!
You just wrote your first line of browser-less code. All this does is print out
whatever is in between the parenthesis.

Let's bring that code over to our `index.js` file on the IDE. Make sure you
are editing the `index.js` file, which is inside a folder, `js`, inside the
`js-from-dom-to-node` folder. Once in there go ahead and paste the following
code in there:

```javascript
console.log('Hello, World!');
```

Now when you hit `Enter`, nothing super interesting will happen. All that occurs
is the cursor moves to a new line. That's because you are in the text editor.
This is pretty much the same as using Word. To get this to actually return
something like we did in the Console in the browser we need to _execute_ the
`index.js` file. It sounds super official, but all we are going to do is tell
the IDE ""I'm ready, run this code and show me the result"".

First, we have to **save the file**. Next, look at the pane at the bottom of the
IDE. This is your terminal. Below your code you should see a flashing cursor
like this:

![command line in ide](https://web-dev-readme-photos.s3.amazonaws.com/js/ide-command-line.png)

Alright, let's let the magic happen! First, we need to make sure we are in the
right folder. Our goal is to make it into the ""js-from-dom-to-node"" folder. If
you look at the text next to the time, you should see `js-from-dom-to-node` or
something very similar. If you see that, you are good and you can skip the next
section. If it says something else, follow these instructions:

> If you see `code`, we need to go into our `labs` folder first. To do this type
> `cd labs`. Now if should see `labs` next to the clock. We have to go one more
> folder in. I know this by looking at the folder structure on the left. See how
> `labs` is in `code` and `js-from-dom-to-node` is in labs? Ok now we need to `cd`
> into the `js-from-dom-to-node` lab. Take a look at your folder structure on the
> right to get the _exact_ name and then type `cd EXACT-FOLDER-YOU-WANT-TO-ENTER`.
> In my case, I get `js-from-dom-to-node`. If you were successful, you'll see
> `js-from-dom-to-node` next to the clock.

#### Running Code With Node

To run your code, in your terminal, you can type `node index.js`. `node`
is the node code runner and `index.js` is the name of your file. You should see:

```js
Hello, World!
```

Woot! It worked. You just wrote your first Javascript outside of the browser.
Now let's submit it back to Learn. In your terminal type `learn submit`. This
will send your code up to Learn and you may move on to the next lesson.

If you would like to try a few more examples, take a look at the two JavaScript
files inside `more_js`. From your current directory, run `node more_js/example_one.js` and `node more_js/example_two.js` to see them in action.

#### Possible Errors

After you type in `node index.js` you get something looks like:

```sh
module.js:471
    throw err;
    ^

Error: Cannot find module '/home/jmburges/code/labs/index.js'
    at Function.Module._resolveFilename (module.js:469:15)
    at Function.Module._load (module.js:417:25)
    at Module.runMain (module.js:604:10)
    at run (bootstrap_node.js:393:7)
    at startup (bootstrap_node.js:150:9)
    at bootstrap_node.js:508:3
```

The key there is ""Error: Cannot find module"". That just means you are in the
wrong folder. Go back and read the earlier paragraph that starts ""If you see
`code`..."". That should help you out. You need to be seeing
`js-from-dom-to-node` next to the clock.

[ide]: http://help.learn.co/the-learn-ide/how-to-download-and-use-learn-ide-3
"
learn-co-curriculum/phase-0-intro-to-js-2-looping-code-along,JavaScript,"# Looping Lab

## Learning Goals

- Build a `for` loop.
- Build a `while` loop.
- Explain the purpose of a loop.
- Understand when to use each type of loop.

## Introduction

In an earlier lesson, we learned about _repetition statements_ —
statements that allow us to break out of the default sequence and repeat a
section of code multiple times. We also learned about two of JavaScript's
repetition constructs: the _while_ loop and the _do...while_ loop. In this lesson
we will learn about a third: the _for_ loop.

Let's say we have a bunch of gifts to wrap. They all happen to be the same size
and shape, so for every gift, we need to cut a similarly sized piece of wrapping
paper, fold it up over the edges of the gift, tape it together, and add a nice
little card. Then we set the wrapped gift aside and move on to the next gift.

In programming terms, we can think of our **collection** of gifts as an
**`Array`** and the act of wrapping them as a function. For example:

```js
const gifts = [""teddy bear"", ""drone"", ""doll""];

function wrapGift(gift) {
  console.log(`Wrapped ${gift} and added a bow!`);
}
```

We could then call `wrapGift()` on each gift individually:

```js
wrapGift(gifts[0]);
wrapGift(gifts[1]);
wrapGift(gifts[2]);
```

However, this isn't very efficient or extensible. It's a lot of repetitive code
to write out, and if we had more gifts we'd have to write a whole new line for
each.

This is where loops come in handy! With a loop, we can just write the repeated
action **once** and perform the action on **every item in the collection**.

This is a code-along, so follow along with the instructions in each section.
There are tests to make sure you're coding your solutions correctly. If you
haven't already, **fork and clone** this lab into your local environment.
Navigate into its directory in the terminal, then run `code .` to open the files
in Visual Studio Code.

## The `for` loop

Of the loops in JavaScript, the `for` loop is the most common. The `for` loop is
made up of four statements in the following structure:

```js
for ([initialization]; [condition]; [iteration]) {
  [loop body]
}
```

- Initialization
  - Typically used to initialize a **counter** variable.
- Condition
  - An expression evaluated before each pass through the loop. If this expression
    evaluates to `true`, the statements in the loop body are executed. If the
    expression evaluates to `false`, the loop exits.
- Iteration
  - An expression executed at the end of each iteration. Typically, this will involve
    incrementing or decrementing a counter, bringing the loop ever closer to
    completion.
- Loop body
  - Code that runs on each pass through the loop.

**_Usage_**: Use a `for` loop when you know how many times you want the loop to
run (for example, when you're looping through elements in an array).

### Examples

Let's take a look at an example and get some practice using the Node debugger.
Enter the code below into the `index.js` file.

> **Note:** You can, of course, copy/paste the code rather than typing it in
> yourself, but we recommend typing it in for now. The act of typing code
> develops muscle memory and helps your brain understand and internalize the
> syntax.

```js
for (let age = 30; age < 40; age++) {
  console.log(`I'm ${age} years old. Happy birthday to me!`);
  debugger;
}
```

In the above code, `let age = 30` is the **initialization**: we're creating a
variable, `age`, that we'll use in the next three phases of the loop. Notice
that we use `let` instead of `const` because we need to increment the value of
`age`.

The **condition** for the above loop is `age < 40`, or, in other words, ""Run the
code in the loop body until `age` is NOT less than `40`."" As long as the
condition evaluates to `true`, the code in the loop body is executed, the value
of `age` is incremented, and the condition is reevaluated. As soon as the
condition evaluates to `false`, the loop ends.

The **iteration** is `age++`, which increments the value of `age` by `1` after
every pass through the loop. We initialized `age` as `30`, and it retains that
value during the first pass through the loop. At the end of the first pass, we
increment `age` to `31`, check whether the condition still holds `true`, and,
since it does, run the loop body again with `age` as `31`. After that second
loop, we increment `age` to `32`, and so on.

The **loop body** is the set of statements that we want to run when the
condition evaluates to `true`.

Let's take a look at what's happening in our loop using debugger. Run
`node inspect index.js` in the terminal to start the debugger. You should see
the following:

![Debugger Output 1](https://curriculum-content.s3.amazonaws.com/phase-0/looping-code-along/debugger_1.png)

Now run `cont` at the `debug` prompt to start executing the loop and advance to
the breakpoint. It should look like this:

![Debugger Output 2](https://curriculum-content.s3.amazonaws.com/phase-0/looping-code-along/debugger_2.png)

Note, in the first line, that the message has been logged and that `age` is
equal to 30. To verify that, enter `repl` at the `debug` prompt to open the
REPL, then enter `age`. You should see `30` output. Now type `Ctrl-C` to exit
the repl, and enter `cont` at the `debug` prompt to advance to the next
iteration of the loop. You should see the following:

![Debugger Output 3](https://curriculum-content.s3.amazonaws.com/phase-0/looping-code-along/debugger_3.png)

Note that the logged output now shows that age is 31. You can continue to step
through the iterations by running `cont` at the `debug` prompt. At any point you
can verify the value of `age` by entering the REPL and typing `age` at the
prompt, then exit the REPL to continue stepping through. When you're done, enter
`.exit` or `Ctrl-C` twice to exit the debugger.

Now let's remove `debugger;` from our code and execute it by running
`node index.js`. You should see the following:

![Happy Birthday logged](https://curriculum-content.s3.amazonaws.com/phase-0/looping-code-along/happy-birthday-to-me.png)

### Using `for` with Arrays

The `for` loop is often used to iterate over every element in an array. Let's
rewrite our gift-wrapping action above as a `for` loop. Enter the following code
into `index.js`:

```js
const gifts = [""teddy bear"", ""drone"", ""doll""];

function wrapGifts(gifts) {
  for (let i = 0; i < gifts.length; i++) {
    console.log(`Wrapped ${gifts[i]} and added a bow!`);
    debugger;
  }

  return gifts;
}

wrapGifts(gifts);
```

We started our counter, `i`, at `0` because arrays have zero-based indexes. Our
condition states that we should run the code in the loop body while `i` is less
than `gifts.length` (`3` in the above example). Our iteration, `i++`, increments
our counter by `1` at the end of each pass through the loop.

Run `node inspect index.js` in the terminal to enter the debugger, and `cont` at
the `debug` prompt to advance to the breakpoint. You should see
`Wrapped teddy bear and added a bow!` logged. In our loop body, we reference
`gifts[i]`. Since `i` starts out as `0`, during the first pass through the loop
`gifts[i]` is `gifts[0]`, which is `'teddy bear'`. Continue stepping through the
loop by entering `cont` at the`debug` prompt and remember you can enter the REPL
at any point to check the values of our variables, `i` and `gifts[i]`.

When you're done, remove the `debugger` and execute the code by running
`node index.js`. You should see the following logged to the terminal:

```text
Wrapped teddy bear and added a bow!
Wrapped drone and added a bow!
Wrapped doll and added a bow!
```

### Assignment

In the previous section, the `wrapGifts()` function allowed us to take any array
of gifts and loop over them, logging our own message. Let's practice that with a
slightly different idea. To complement our gift wrapping function, your task is
to create a thank you card creator.

> **Note**: Recall the difference between logging and returning values from a
> function. When we log information we are simply outputting text to a terminal
> or console. When we return data from a function we will be able to reference
> and use that information elsewhere because the data is being passed out of the
> function.

In `index.js`, build a function named `writeCards()` that accepts two arguments:
an array of string names, and an event name. Create a `for` loop with a counter
that starts at `0` and increments at the end of each loop. The `for` loop should
stop once it has iterated over the length of the array.

As with our previous `wrapGifts()` function, you will create a custom message
for each name inside the loop. Unlike that example, however, instead of simply
logging the messages to the console, you will collect them in a _new_ array and
**return** this array at the end of the function. (Refer back to the Array
Methods lesson if you need a refresher on how we can add an element to an
array.) The overall process should be:

1. create a new, empty array to hold the messages;
2. iterate through the input array and, inside the loop, build out the 'thank
   you' message for each name using string interpolation, then add that message
   to the new array you created;
3. after the loop finishes and all of the messages have been added to the new
   array, return the new array.

Here is an example of what a call to the `writeCards()` function might look like:

```js
writeCards([""Charlie"", ""Samip"", ""Ali""], ""birthday"");
```

If we were to call the function using this function call, it should produce the
following array as the return value:

```js
[
  ""Thank you, Charlie, for the wonderful birthday gift!"",
  ""Thank you, Samip, for the wonderful birthday gift!"",
  ""Thank you, Ali, for the wonderful birthday gift!"",
];
```

> **Top Tip**: The debugger isn't just for debugging code — you can also use it
> to help you write your function! Try building the structure of the loop,
> putting the `debugger` inside the loop body. Even before you start writing the
> code, you can enter the debugger's REPL and try out code until you figure out
> how to create the message and add it to an array. Once it's working in the
> REPL, transfer the code to `index.js`, exit the debugger, and run the tests.

## The `while` loop

Recall from the earlier lesson that the `while` loop is similar to a `for` loop,
repeating an action in a loop based on a condition. Both will continue to loop
until that condition evaluates to `false`. Unlike `for`, `while` only requires
condition and loop statements:

```js
while ([condition]) {
  [loop body]
}
```

The initialization and iteration statements of the `for` loop have not
disappeared, though. In fact, we could rewrite our original `for` loop gift
wrapping example using a `while` loop and achieve the exact same result:

```js
const gifts = [""teddy bear"", ""drone"", ""doll""];

function wrapGifts(gifts) {
  let i = 0; // the initialization moves OUTSIDE the body of the loop!
  while (i < gifts.length) {
    console.log(`Wrapped ${gifts[i]} and added a bow!`);
    i++; // the iteration moves INSIDE the body of the loop!
  }

  return gifts;
}

wrapGifts(gifts);
// LOG: Wrapped teddy bear and added a bow!
// LOG: Wrapped drone and added a bow!
// LOG: Wrapped doll and added a bow!
// => [""teddy bear"", ""drone"", ""doll""]
```

Notice that we've just moved the initialization and iteration statements —
declaring the `i` variable _outside_ the loop, and incrementing it _inside_ the
loop.

> **CAUTION**: When using `while` loops, it is easy to forget to involve iteration. Leaving iteration out can result in a condition that _always_ evaluates to `true`, causing an infinite loop!

Using a `while` loop enables us to check conditions that aren't based on a
counter. Take a look at the following _[pseudocode][]_ for an example of how
we could use `while` in a program for planting a garden:

```js
function plantGarden() {
  let keepWorking = true;
  while (keepWorking) {
    chooseSeedLocation();
    plantSeed();
    waterSeed();
    keepWorking = checkForMoreSeeds();
  }
}
```

We can imagine that _while_ we have seeds, we take the same steps over and over:
choose a location for a seed; plant it; water it. Then, check if there are more
seeds. If _not_, do not keep working.

## When to Use `for` and `while`

JavaScript, like many programming languages, provides a variety of looping
options. Loops like `for` and `while` are actually just slight variations of the
same process. By providing a variety, we as programmers have a larger vocabulary
to work with.

Often, you will see `while` loops simply being used as an alternative to `for`
loops:

```js
let countup = 0;
while (countup < 10) {
  console.log(countup++);
}
```

This is perfectly fine as an alternative way to describe:

```js
for (let countup = 0; countup < 10; countup++) {
  console.log(countup);
}
```

If you're feeling a bit lost about when to use a `for` vs. a `while` loop, take
a deep breath. Most of the time, a regular `for` loop will suffice. It's by far
the most common looping construct in JavaScript. A general heuristic for
choosing which loop to use is to first try a `for` loop. If that doesn't serve
your purposes, then go ahead and try a `while` loop. Also, remember that you can
always refer to the [documentation on these loops][loops and iteration] at any
time.

Just don't forget: with `while`, make sure you are updating the condition
on each loop so that the loop eventually terminates!

## Assignment

To get more acquainted with `while`, your task is to write a function,
`countDown`, that takes in any positive integer and, starting from that number,
counts down to zero using `console.log()`. Note that this means that running
`countDown(10);` would actually log _11_ times:

```text
10
9
8
7
6
5
4
3
2
1
0
```

Remember the workflow:

1. Install the dependencies using `npm install`.
2. Run the tests using `npm test`.
3. Read the errors; vocalize what they're asking you to do.
4. Write code; repeat steps 2 and 3 often until a test passes.
5. Repeat as needed for the remaining tests.

## Conclusion

After some time programming in JavaScript, writing a `for` loop will come as
naturally to you as wrapping one gift after another. Just as you slowly become
comfortable using different words and vocabulary to better express yourself,
you will become more acquainted with concepts like `for` and `while` until you
are able to discern the nuanced differences in usage between them.

## Resources

- Codecademy
  - [`for` loop](http://www.codecademy.com/glossary/javascript/loops#for-loops)
  - [`while` loop](http://www.codecademy.com/glossary/javascript/loops#while-loops)
- MDN
  - [`for` loop](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for)
  - [`while` loop](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while)
  - [Loops and iteration][loops and iteration]

[loops and iteration]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration
[pseudocode]: https://en.wikipedia.org/wiki/Pseudocode
"
strapi/strapi,JavaScript,"<p align=""center"">
  <a href=""https://strapi.io/#gh-light-mode-only"">
    <img src=""https://strapi.io/assets/strapi-logo-dark.svg"" width=""318px"" alt=""Strapi logo"" />
  </a>
  <a href=""https://strapi.io/#gh-dark-mode-only"">
    <img src=""https://strapi.io/assets/strapi-logo-light.svg"" width=""318px"" alt=""Strapi logo"" />
  </a>
</p>

<h3 align=""center"">API creation made simple, secure and fast.</h3>
<p align=""center"">The most advanced open-source headless CMS to build powerful APIs with no effort.</p>
<p align=""center""><a href=""https://strapi.io/cloud"">Cloud</a> · <a href=""https://strapi.io/demo"">Try live demo</a></p>
<br />

<p align=""center"">
  <a href=""https://www.npmjs.org/package/@strapi/strapi"">
    <img src=""https://img.shields.io/npm/v/@strapi/strapi/latest.svg"" alt=""NPM Version"" />
  </a>
  <a href=""https://github.com/strapi/strapi/actions/workflows/tests.yml"">
    <img src=""https://github.com/strapi/strapi/actions/workflows/tests.yml/badge.svg?branch=main"" alt=""Tests"" />
  </a>
  <a href=""https://discord.strapi.io"">
    <img src=""https://img.shields.io/discord/811989166782021633?label=Discord"" alt=""Strapi on Discord"" />
  </a>
  <a href=""https://github.com/strapi/strapi/actions/workflows/nightly.yml"">
    <img src=""https://github.com/strapi/strapi/actions/workflows/nightly.yml/badge.svg"" alt=""Strapi Nightly Release Build Status"" />
  </a>
</p>

<br>

<p align=""center"">
  <a href=""https://strapi.io"">
    <img src=""https://raw.githubusercontent.com/strapi/strapi/0bcebf77b37182fe021cb59cc19be8f5db4a18ac/public/assets/administration_panel.png"" alt=""Administration panel"" />
  </a>
</p>

<br>

Strapi is a free and open-source headless CMS delivering your content anywhere you need.

- **Keep control over your data**. With Strapi, you know where your data is stored, and you keep full control at all times.
- **Self-hosted**. You can host and scale Strapi projects the way you want. You can choose any hosting platform you want: AWS, Render, Netlify, Heroku, a VPS, or a dedicated server. You can scale as you grow, 100% independent.
- **Database agnostic**. Strapi works with SQL databases. You can choose the database you prefer: PostgreSQL, MySQL, MariaDB, and SQLite.
- **Customizable**. You can quickly build your logic by fully customizing APIs, routes, or plugins to fit your needs perfectly.

## Getting Started

<a href=""https://docs.strapi.io/developer-docs/latest/getting-started/quick-start.html"" target=""_blank"">Read the Getting Started tutorial</a> or follow the steps below:

### ⏳ Installation

Install Strapi with this **Quickstart** command to create a Strapi project instantly:

- (Use **yarn** to install the Strapi project (recommended). [Install yarn with these docs](https://yarnpkg.com/lang/en/docs/install/).)

```bash
yarn create strapi-app my-project --quickstart
```

**or**

- (Use npm/npx to install the Strapi project.)

```bash
npx create-strapi-app my-project --quickstart
```

This command generates a brand new project with the default features (authentication, permissions, content management, content type builder & file upload). The **Quickstart** command installs Strapi using a **SQLite** database which is used for prototyping in development.

Enjoy 🎉

### 🖐 Requirements

Complete installation requirements can be found in the documentation under <a href=""https://docs.strapi.io/developer-docs/latest/setup-deployment-guides/deployment.html"">Installation Requirements</a>.

**Supported operating systems**:

- Ubuntu LTS/Debian 9.x
- CentOS/RHEL 8
- macOS Mojave
- Windows 10
- Docker

(Please note that Strapi may work on other operating systems, but these are not tested nor officially supported at this time.)

**Node:**

Strapi only supports maintenance and LTS versions of Node.js. Please refer to the <a href=""https://nodejs.org/en/about/releases/"">Node.js release schedule</a> for more information. NPM versions installed by default with Node.js are supported. Generally it's recommended to use yarn over npm where possible.

| Strapi Version | Recommended | Minimum |
| -------------- | ----------- | ------- |
| 4.3.9 and up   | 18.x        | 14.x    |
| 4.0.x to 4.3.8 | 16.x        | 14.x    |

**Database:**

| Database   | Recommended | Minimum |
| ---------- | ----------- | ------- |
| MySQL      | 8.0         | 5.7.8   |
| MariaDB    | 10.6        | 10.3    |
| PostgreSQL | 14.0        | 11.0    |
| SQLite     | 3           | 3       |

**We recommend always using the latest version of Strapi stable to start your new projects**.

## Features

- **Modern Admin Panel:** Elegant, entirely customizable and a fully extensible admin panel.
- **Secure by default:** Reusable policies, CORS, CSP, P3P, Xframe, XSS, and more.
- **Plugins Oriented:** Install the auth system, content management, custom plugins, and more, in seconds.
- **Blazing Fast:** Built on top of Node.js, Strapi delivers amazing performance.
- **Front-end Agnostic:** Use any front-end framework (React, Vue, Angular, etc.), mobile apps or even IoT.
- **Powerful CLI:** Scaffold projects and APIs on the fly.
- **SQL databases:** Works with PostgreSQL, MySQL, MariaDB, and SQLite.

**[See more on our website](https://strapi.io/overview)**.

## Contributing

Please read our [Contributing Guide](./CONTRIBUTING.md) before submitting a Pull Request to the project.

## Community support

For general help using Strapi, please refer to [the official Strapi documentation](https://docs.strapi.io). For additional help, you can use one of these channels to ask a question:

- [Discord](https://discord.strapi.io) (For live discussion with the Community and Strapi team)
- [GitHub](https://github.com/strapi/strapi) (Bug reports, Contributions)
- [Community Forum](https://forum.strapi.io) (Questions and Discussions)
- [Feedback section](https://feedback.strapi.io) (Roadmap, Feature requests)
- [Twitter](https://twitter.com/strapijs) (Get the news fast)
- [Facebook](https://www.facebook.com/Strapi-616063331867161)
- [YouTube Channel](https://www.youtube.com/strapi) (Learn from Video Tutorials)

## Migration

Follow our [migration guides](https://docs.strapi.io/developer-docs/latest/update-migration-guides/migration-guides.html) on the documentation to keep your projects up-to-date.

## Roadmap

Check out our [roadmap](https://feedback.strapi.io) to get informed of the latest features released and the upcoming ones. You may also give us insights and vote for a specific feature.

## Documentation

See our dedicated [repository](https://github.com/strapi/documentation) for the Strapi documentation, or view our documentation live:

- [Developer docs](https://docs.strapi.io/developer-docs/latest/getting-started/introduction.html)
- [User guide](https://docs.strapi.io/user-docs/latest/getting-started/introduction.html)

## Try live demo

See for yourself what's under the hood by getting access to a [hosted Strapi project](https://strapi.io/demo) with sample data.

## License

See the [LICENSE](./LICENSE) file for licensing information.
"
freeCodeCamp/boilerplate-npm,JavaScript,"# Backend Challenges boilerplate - package.json
[![Run on Repl.it](https://repl.it/badge/github/freeCodeCamp/boilerplate-npm)](https://repl.it/github/freeCodeCamp/boilerplate-npm)"
learn-co-curriculum/phase-0-pac-3-function-parameters-lab,JavaScript,"# JavaScript Function Parameters Lab

## Learning Goals

- Define a function that uses a parameter
- Define a function that uses two parameters
- Define a function with a parameter that has a default value

## Introduction

In this lab, we'll practice using parameters in our functions. We'll also learn
how to create a default value for a parameter.

If you haven't already, fork and clone this lab into your local environment.
Remember to **fork** a copy into your GitHub account first, then clone from that
copy. Once you've cloned it down, navigate into its directory in the terminal,
then run `code .` to open the files in Visual Studio Code. (If you are using a
different text editor, the command will be different.)

You will be writing your code in the `index.js` file and running the tests by
running `npm test` in the terminal. Remember to run `npm install` first to
install the lab's dependencies.

## Define a Function That Uses a Parameter

**Instructions:** Define a function called `introduction` that defines a
parameter, `name`, and returns the phrase: ""Hi, my name is ${name}.""

## Define a Function That Uses Two Parameters

Setting up your function to use two parameters is straightforward: simply
include both parameters in the parentheses in the function declaration line,
separated by a comma:

```js
function logTwoValues(value1, value2) {
  console.log(`The two values are ${value1} and ${value2}.`);
}
```

As you might expect, if we instead wanted to log three values — or ten
values — we can just continue listing the parameters in the parentheses,
with commas between each.

**Instructions:** To pass the second test, you'll need to define a function
called `introductionWithLanguage` that defines two parameters, `name` and
`language`, and returns the phrase: ""Hi, my name is [name] and I am learning to
program in [language].""

## Define a Function That Uses an Optional Parameter

In a previous lesson, we created a function that logs a personalized greeting:

```js
function sayHelloTo(firstName) {
  console.log(`Hello, ${firstName}!`);
}
```

What if we wanted to make this function work _whether or not_ a first name is
passed in as an argument? We can do this by setting a _default value_ for the
`firstName` parameter:

```js
function sayHelloTo(firstName = ""User"") {
  console.log(`Hello, ${firstName}!`);
}
```

Note that we have used the assignment operator (`=`) here to assign a default
value. The way this works is, if the function is called _with_ an argument, the
argument's value will supersede the default value. If it's called _without_ an
argument, the function will use the default value, logging ""Hello, User!""

**Instructions:** Copy the function you created for the second test and name it
`introductionWithLanguageOptional`. It should have two parameters, `name` and
`language`, and the second parameter should have a default value of
""JavaScript"".

After you have all the tests passing, remember to commit and push your changes
up to GitHub, then submit your work to Canvas using CodeGrade. If you need a
reminder, go back to the [Complete Your First Software Engineering
Assignment][complete-assignment] lesson to review the process.

[complete-assignment]: https://github.com/learn-co-curriculum/phase-0-completing-assignments-codegrade
"
learn-co-curriculum/phase-0-html-document-structure-lab,JavaScript,"# Document Structure Continued

## Learning Goals

- Recognize basic HTML document structure
- Recognize HTML comments
- Describe the `head` section and its contents
- Create an HTML document

## Introduction

Every HTML document has a specific set of required tags. Because these are
required _every_ time we create a web page, it is valuable to gain a more
in-depth understanding of what these tags do, why they are useful, and how they
work in context to the modern web.

We will be both reviewing setting up well-formed HTML documents and expanding a
bit on the `DOCTYPE`, `html` and `head` tags, as well as introducing how to add
comments within our HTML code.

## Getting Started

If you haven't already, **fork and clone** this lesson into your local
environment. Navigate into its directory in the terminal, then run `code .` to
open the files in Visual Studio Code.

## Recognize Basic HTML Document Structure

Let's start by adding the bare essentials of an HTML document to the provided
`index.html` file:

- A `DOCTYPE` tag, which looks like this: `<!DOCTYPE html>`
- Opening and closing `html` tags
- Opening and closing `head` tags nested inside the `html` tags
- Opening and closing `body` tags nested inside the `html` tags

> Note: Recall that best practice indicates that any HTML elements that are
> nested inside other HTML elements (i.e., between the opening and closing tags
> of another element) should be indented. It is not *necessary* to use
> indenting, either for the HTML to render properly or to pass the tests, but
> it's a good habit to get into. Go ahead and indent the `head` and `body` tags
> inside the `html` tags, if you haven't already.

If written correctly, running `npm test` now will pass three of the seven
tests:

- `has a DOCTYPE tag`
- `has opening and closing HTML tags`
- `has <head> and <body> tags nested in the <html> tag`

However you will not be done yet! We have to make **all** the tests pass in
order to make the test code happy! Let's get to it!

Let's take a closer look at these tags.

### `<!DOCTYPE html>`

At the top of every HTML document, you're always going to start off with the
same element, `DOCTYPE`. In the early days of the internet, there were fewer
standards, and it was important to declare the specific way we wanted browsers
to interpret the file at the top of each file. Netscape and Internet Explorer
would look for this declaration and handle the content differently depending on
what it found. These days, every current browser is compatible with HTML5, and
`DOCTYPE` is mainly used to tell the browser to render the page in standards
compliant mode.

The `DOCTYPE` element, as with all HTML, starts with a `<` and ends with a `>`.
Uniquely, the `DOCTYPE` tag starts with an exclamation point, `!`, followed by
`DOCTYPE`, then specifies which version of HTML we want to use. In HTML5, we
just write `html` and the browser interprets the rest of the document as HTML5.

### `<html>`

The next element is also always required: `<html>`. This tells the browser that
everything that falls between the opening and closing `html` tags is to be
interpreted as HTML code.

One attribute that is important to include in the `<html>` tag is `lang`, which
declares what language the webpage is written in. In our case, writing in
English, we will use `lang=""en""`. This helps search engines to know what
language a page is written in. Google, for instance, can use the `lang`
attribute to know when to prompt users about translating web content.

```html
<html lang=""en""></html>
```

Go ahead and add the language attribute to the `html` element. Now, if you run
the tests again, there should be four passing.

## Recognize HTML Comments

Sometimes we want to leave notes either for ourselves or for other developers
inside of our HTML files. An example might be a brief explanation of what some
part of the code is doing, or an important message or reminder. We can write
comments by wrapping the text we want like so:

```html
<!-- This is a comment! -->
```

Text included in a comment will not be visible on the webpage, but will be
visible in the browser console and `.html` file.

## Describe the `head` Section and its Contents

Inside our `html` tags, we divide the page into two main sections, `head`, and
`body`, which both play unique roles. The remainder of our HTML lessons will
cover everything within the `body` section, but before we get there, there are
some additional bits of information we need to understand regarding the `head`.
The `head` section is not visible to a website visitor, but it contains a lot of
useful info about our webpage.

In the `head` section, we place a number of specific tags, most notably:

- `<link>`
- `<title>`

Let's look at each of them in turn:

### `link`

The `<link>` tag is for importing files.

**CAREFUL**: It's easy to get confused here because web pages are full of links,
but also use a `<link>` tag. ""Links"" that you click on are located within the
`<body>` element. The `<link>` tags are located in the `<head>` element.

Most commonly, we'll use `<link>` to import CSS files. Go ahead and add the
following inside your `head` element (don't forget to indent!):

```html
<link rel=""stylesheet"" type=""text/css"" href=""style.css"" />
```

With a simple website, linking a single style sheet might work just fine. Often,
however, on fully developed websites, multiple style sheets are linked in the
`head`. For example, when doing the final polishing of a web site you might see
a series of `<link>` definitions like:

```html
<link
  rel=""stylesheet""
  href=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css""
/>
<link rel=""stylesheet"" type=""text/css"" href=""company.css"" />
<link rel=""stylesheet"" type=""text/css"" href=""engineering-department.css"" />
<link rel=""stylesheet"" type=""text/css"" href=""project-x-launch.css"" />
<link rel=""stylesheet"" type=""text/css"" href=""typography.css"" />
```

In this example we're getting some CSS information from the
[Bootstrap](https://getbootstrap.com/) project, we're integrating a company
style standard, an engineering style standard, a style motif for the launch of
""Project X"" and then we're adding some specific rules about font display. You
can bring in a **lot** of information with the `<link>` tag!

This specific example aside, you'll be learning a lot more about linking files
to create stylistic effect in later lessons.

Run the test again; you should now have five passing. Only two more to go!

### `title`

One more common tag we find in the `head` is `title`. The `title`, as its name
implies, is where the title of the webpage should be entered. Text added inside
the `title` tags will appear up on your browser tab. Add the following title for
our `index.html` page:

```html
<title>My Site Title</title>
```

Notice that unlike the previous tags we've discussed, `title` has an opening and
closing tag. In most modern browsers, tabs are fairly small, so it is often best
to keep the title brief, or it will not be fully visible.

Adding the title should get the last two tests passing! Run the tests one last
time to verify.

As always, don't forget to push up your code and submit it using CodeGrade once
everything is passing.

## Conclusion

In this lesson, we've reviewed the basics of document structure, as well as what
is typically contained within the `head`. Using the `head` section, we are able
to add relevant data about our webpage as a whole. As a bonus surprise, by
learning how to make our web pages _search engine friendly_, we've also dabbled
a bit into the basics of Search Engine Optimization! We are now ready to take a
deeper dive into the visual content of HTML pages.
"
learn-co-students/js-functions-lab-bootcamp-prep-000,JavaScript,"# JavaScript Functions

## Objectives

1. Write a function that returns a value
2. Write a function that takes in a parameter
3. Write a function that takes in multiple parameters

## Introduction

You'll be writing your solution in `index.js`.

In this lab, we're going to develop our communication skills in JavaScript.
We're feeling festive, so we're going to be wrapping up common holiday greetings
as functions so that we don't have to repeat ourselves. The beauty of functions
is that we could reuse these functions for the text of greeting cards, for
spoken greetings, for song lyrics, etc...

## Template Literals

There are two ways main ways to include variables inside a string. Say we had a variable named `date` that we assign to a value:

```js
var date = ""July 3rd""
```

In JavaScript, we can use operators to concatenate (join) two strings, or in this case, a string and a variable, like so:

```js
console.log(""My birthday is "" + date)
```

With `date` defined, the above code will log `My birthday is July 3rd`. However,
by using a slightly modified syntax, we can achieve the same thing by embedding
a variable into a string. These are called [template
literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals)
and rewriting the above `console.log` with one would look like this:

```js
console.log(`My birthday is ${date}`)
```

This will also log `My birthday is July 3rd`.

Now, there are two important changes to the syntax: Any variables we want to
include must be wrapped in curly braces (`{ }`) and preceded by a dollar sign
(`$`). In addition, instead of single, `` ' ``, or double quotes, `` "" ``, we
**must** use backticks, `` ` ``. If backticks are not used, JavaScript **will
interpret the dollar sign and curly braces as a normal part of the string**,
resulting in `My birthday is ${date}`! Any expression can be included in
template literals, not just variables, so we could write something like:

```js
console.log(`I have ${1 + 1} pets`)
```

And get `I have 2 pets`. Note that this will not log the same thing if you did
the following:

```js
console.log(""I have "" + 1 + 1 + "" pets"")
```

This logs `I have 11 pets`! JavaScript converts both `1`s into strings rather than adding them together first. You would need to write the following to get the same result as template literals:

```js
console.log(""I have "" + (1 + 1) + "" pets"")
```

You can use either operators or template literals to construct larger strings
with dynamic values. Template literals are just a way to make your code a little
easier to read and to help ensure JavaScript does not misinterpret when
combining different data types into strings, like we just saw.

## Instructions

1. Write a function named `happyHolidays`. This function should not accept any
   parameters and should return the string `""Happy holidays!""`.

2. Write a function named `happyHolidaysTo`. This function should accept a
   parameter of the name of the person you want to wish happy holidays, and
   return the string `` `Happy holidays, ${name}!` ``

3. Write a function named `happyCustomHolidayTo`. This function should accept two
   parameters, the holiday you want to wish them well for, and the name of the
   person you're wishing well. Order of parameters matters, so make sure to first pass in the holiday and then the name. This function should return the string
   `` `Happy ${holiday}, ${name}!` ``

4. Write a function named `holidayCountdown`. This function should accept two
   parameters, the holiday name and number of days until that holiday. The
   function should return the string 
   `` `It's ${days} days until ${holiday}!` ``. Note that although `days` is
   used first when constructing the returned string, `holidayCountdown` should
   take in the holiday name first, then the days until that holiday.
"
learn-co-students/js-if-else-files-lab-bootcamp-prep-000,JavaScript,"# Using Conditionals and Multiple Files in JS

## Introduction

We now know how to use conditionals. Now, let's use conditionals to test our
code for correctness. This is your first step towards how professional
developers write software. Professional developers test their code for
correctness. Instead of constantly clicking around their applications, most
developers write additional code, called tests that ensure their code is
outputting the right things. In fact, they may even write tests _first_ before
they actually do any work towards a project to help ensure the code they write
does what they expect it to do!

We will eventually explain how to use the professional testing tools but first,
let's go over a simple example.

## Instructions

After you open this lesson in the IDE, in the `js` folder, double-click on
`index.js`. You'll see some basic code:

```javascript
// ./js/index.js

var name = ""Joe""
var height = ""74""

// Don't worry about this
module.exports = { name, height
}
```

First of all, don't worry about the `module.exports` stuff right now, we'll get
to that later. You've seen the rest of this stuff before but let's review. This
assigns `""Joe""` to the `name` variable using the assignment operator (`=`). It
also assigns `""74""` to `height`. Both `""Joe""` and `""74""` are Strings. We know
that because they are wrapped in quotes. We have our code, but we don't have our
tests. Let's write a test right below the `var height = ""74""` line to check that
`name` is equal to `""Susan""`. That should look something like this:

```javascript
if (name === ""Susan"") {
    console.log(""The name is correct"")
}
```

Write that, and then run your `index.js` file with `node js/index.js` in the
terminal. You'll see nothing printed out. That's because our `name` variable
doesn't equal `""Susan""`. Let's put in an `else` statement that prints `""Expected
the name to be Susan""`. Give it a try on your own.

OK, you gave it a try, now let's look at the solution:

```javascript
if (name === ""Susan"") {
    console.log(""The name is correct"")
} else {
    console.log(""Expected the name to be Susan"")
}
```

See what we did there? Great! Now run your code again by typing
`node js/index.js` in the terminal and you should get
`Expected the name to be Susan` printed out. Let's fix our `name` variable to
equal `""Susan""`. Modify the first line to say:

```javascript
var name = ""Susan""
```

Re-run your code and boom! you did it :)

In later steps, we'll be doing our testing in other files. So, for now, let's
revert index.js to its original state. Make sure the index.js file is saved and
that it looks like this:

```javascript
var name = ""Joe""
var height = ""74""

// Don't worry about this
module.exports = { name, height
}
```

### Separating Tests from Application Code

As you can probably imagine, a large application will have many tests. Average
sized applications will have _thousands_ of tests. It gets a bit confusing to have
the application code mixed in with your test code. We want to separate them out
so it's not a pain to sift through our files.

Let's open up another JavaScript file and play around with separating things
out. There is a blank JS file included in this lab called `other_file.js`
located in the `js` folder. Double click on that and you'll see a blank file.
Let's say we wanted to `console.log` the `name` variable from our `index.js`
file. Seems fairly easy. Go ahead and type `console.log(name)`. Now let's run
this new file by typing `node js/other_file.js` in our terminal. BOOM! You'll get
an error that looks like this:

```bash
/home/jmburges/code/labs/js-functions-lab/test.js:1
(function (exports, require, module, __filename, __dirname) { console.log(name)
                                                                          ^

ReferenceError: name is not defined
    at Object.<anonymous> (/home/jmburges/code/labs/js-functions-lab/test.js:1:75)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)
    at run (bootstrap_node.js:393:7)
    at startup (bootstrap_node.js:150:9)
    at bootstrap_node.js:508:3
```

The important line here is the `ReferenceError: name is not defined` line. That
says that our `name` variable doesn't exist in the `other_file.js` file. That
makes sense. In `other_file.js` we never write the line of code to create
`name`. We have the line `var name = ""Joe""` in `index.js`. We need to tell
`other_file.js` about the existence of `index.js`! Let's do that by replacing
the contents of `other_file.js` with the following line of code:

```javascript
var index = require(""./index.js"")
```

This tells javascript to load the `index.js` file and put its contents inside of
the `index` variable within `other_file.js`. That's a bit confusing, but it's
fairly straight forward to use. Thanks to `require()`, we now have access to the
variables we exported from `index.js`, including `name`. To access `name` within
`other_file.js`, we can simply refer to the `name` property of the `index`
variable, which, again, is where we used `require()` to store the contents of
`index.js`. Let's add the following line to `other_file.js`:

```javascript
var index = require(""./index.js"")

console.log(index.name)
```

Give that a run by typing `node js/other_file.js` and you should see the name
getting printed out. Awesome!

### Your Turn

You now know how multiple files interact as well as how `if` statements work.
Now, you have to write your code to match some specific tests. Open up
`js/tests.js` and you will see two `if` statements. Let's give this a run to
start things off by typing `node js/tests.js`. You should get two messages:

```javascript
Expected: Susan, Received: Joe
Expected: 70, Received: 74
```

Now, it's your job to modify `index.js` so that when you run `node js/tests.js`
the messages you see logged to the console are:

```javascript
The name is correct
The height is correct
```

> **Note:** Capitalization _matters_. Also, whether or not you use a String or
> Number _matters_. Numbers don't have any quotes around them, Strings do have
> quotes around them!

When you've finished your solution, and the tests show the output above, run
`learn submit` from the console to submit your solution.
"
TheAlgorithms/Python,Python,"<div align=""center"">
<!-- Title: -->
  <a href=""https://github.com/TheAlgorithms/"">
    <img src=""https://raw.githubusercontent.com/TheAlgorithms/website/1cd824df116b27029f17c2d1b42d81731f28a920/public/logo.svg"" height=""100"">
  </a>
  <h1><a href=""https://github.com/TheAlgorithms/"">The Algorithms</a> - Python</h1>
<!-- Labels: -->
  <!-- First row: -->
  <a href=""https://gitpod.io/#https://github.com/TheAlgorithms/Python"">
    <img src=""https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&style=flat-square"" height=""20"" alt=""Gitpod Ready-to-Code"">
  </a>
  <a href=""https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md"">
    <img src=""https://img.shields.io/static/v1.svg?label=Contributions&message=Welcome&color=0059b3&style=flat-square"" height=""20"" alt=""Contributions Welcome"">
  </a>
  <img src=""https://img.shields.io/github/repo-size/TheAlgorithms/Python.svg?label=Repo%20size&style=flat-square"" height=""20"">
  <a href=""https://discord.gg/c7MnfGFGa6"">
    <img src=""https://img.shields.io/discord/808045925556682782.svg?logo=discord&colorB=7289DA&style=flat-square"" height=""20"" alt=""Discord chat"">
  </a>
  <a href=""https://gitter.im/TheAlgorithms/community"">
    <img src=""https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&logo=gitter&style=flat-square"" height=""20"" alt=""Gitter chat"">
  </a>
  <!-- Second row: -->
  <br>
  <a href=""https://github.com/TheAlgorithms/Python/actions"">
    <img src=""https://img.shields.io/github/actions/workflow/status/TheAlgorithms/Python/build.yml?branch=master&label=CI&logo=github&style=flat-square"" height=""20"" alt=""GitHub Workflow Status"">
  </a>
  <a href=""https://github.com/pre-commit/pre-commit"">
    <img src=""https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white&style=flat-square"" height=""20"" alt=""pre-commit"">
  </a>
  <a href=""https://github.com/psf/black"">
    <img src=""https://img.shields.io/static/v1?label=code%20style&message=black&color=black&style=flat-square"" height=""20"" alt=""code style: black"">
  </a>
<!-- Short description: -->
  <h3>All algorithms implemented in Python - for education</h3>
</div>

Implementations are for learning purposes only. They may be less efficient than the implementations in the Python standard library. Use them at your discretion.

## Getting Started

Read through our [Contribution Guidelines](CONTRIBUTING.md) before you contribute.

## Community Channels

We are on [Discord](https://discord.gg/c7MnfGFGa6) and [Gitter](https://gitter.im/TheAlgorithms/community)! Community channels are a great way for you to ask questions and get help. Please join us!

## List of Algorithms

See our [directory](DIRECTORY.md) for easier navigation and a better overview of the project.
"
public-apis/public-apis,Python,"<div align=""center"">
    <h1>Public APIs</h1>
    <i>A collective list of free APIs for use in software and web development</i>
</div>

<br />

<div align=""center"">
    <sup>Status</sup>
    <br />
    <a href=""https://github.com/public-apis/public-apis#index"">
        <img alt=""Number of Categories"" src=""https://img.shields.io/badge/dynamic/json?url=https://api.publicapis.org/categories&label=Number%20of%20Categories&query=$.count&color=informational"" />
    </a>
    <a href=""https://github.com/public-apis/public-apis"">
        <img alt=""Number of APIs"" src=""https://img.shields.io/badge/dynamic/json?url=https://api.publicapis.org/entries&label=Number%20of%20APIs&query=$.count&color=informational"" />
    </a>
    <br />
    <a href=""https://github.com/public-apis/public-apis/actions/workflows/test_of_push_and_pull.yml"">
        <img alt=""Tests of push and pull"" src=""https://github.com/public-apis/public-apis/actions/workflows/test_of_push_and_pull.yml/badge.svg"" />
    </a>
    <a href=""https://github.com/public-apis/public-apis/actions/workflows/validate_links.yml"">
        <img alt=""Validate links"" src=""https://github.com/public-apis/public-apis/actions/workflows/validate_links.yml/badge.svg"" />
    </a>
    <a href=""https://github.com/public-apis/public-apis/actions/workflows/test_of_validate_package.yml"">
        <img alt=""Tests of validate package"" src=""https://github.com/public-apis/public-apis/actions/workflows/test_of_validate_package.yml/badge.svg"" />
    </a>
</div>

<br />

<div align=""center"">
    <sub>The Project</sub>
    <br />
    <a href=""CONTRIBUTING.md"">Contributing Guide</a> •
    <a href=""https://github.com/davemachado/public-api"">API for this project</a> •
    <a href=""https://github.com/public-apis/public-apis/issues"">Issues</a> •
    <a href=""https://github.com/public-apis/public-apis/pulls"">Pull Requests</a> •
    <a href=""LICENSE"">License</a>
    

<br />

<div align=""center"">
    <sub>Alternative sites for the project (unofficials)</sub>
    <br />
    <a href=""https://free-apis.github.io"">Free APIs</a> •
    <a href=""https://devresourc.es/tools-and-utilities/public-apis"">Dev Resources</a> •
    <a href=""https://www.public-apis.ml"">Public APIs Site</a> •
    <a href=""https://apihouse.vercel.app"">Apihouse</a> •
    <a href=""https://collective-api.vercel.app/"">Collective APIs</a> 
</div>

<br />

---

<br />

<div align=""center"">
    <p>
        <a href=""https://opencollective.com/public-apis"">[ <strong>Become a sponsor</strong> and support Public APIs and their maintainers ]</a>
    </p>
    <p><strong>Special thanks to:</strong></p>
    <p>
        <a href=""https://apilayer.com#gh-light-mode-only"">
            <div>
                <img src="".github/cs1586-APILayerLogoUpdate2022-LJ_v2-HighRes.png"" width=""250"" alt=""APILayer Logo"" />
            </div>
            <div>
                <p><strong>The fastest way to integrate APIs into any product</strong></p>
            </div>
            <div>
                <sup>Explore, discover and consume public APIs as simpler programmable building blocks all on one platform for a 10x developer experience.</sup>
            </div>
        </a>
        <a href=""https://apilayer.com#gh-dark-mode-only"">
            <div>
                <img src=""https://raw.githubusercontent.com/public-apis/public-apis/master/.github/assets/sponsors_logo/m3o_logo_white.png"" width=""250"" alt=""APILayer Logo"" />
            </div>
            <div>
                <p><strong>The fastest way to integrate APIs into any product</strong></p>
            </div>
            <div>
                <sup>Explore, discover and consume public APIs as simpler programmable building blocks all on one platform for a 10x developer experience.</sup>
            </div>
        </a>
    </p>
</div>

<br />

---

<br />

## Index

* [Animals](#animals)
* [Anime](#anime)
* [Anti-Malware](#anti-malware)
* [Art & Design](#art--design)
* [Authentication & Authorization](#authentication--authorization)
* [Blockchain](#blockchain)
* [Books](#books)
* [Business](#business)
* [Calendar](#calendar)
* [Cloud Storage & File Sharing](#cloud-storage--file-sharing)
* [Continuous Integration](#continuous-integration)
* [Cryptocurrency](#cryptocurrency)
* [Currency Exchange](#currency-exchange)
* [Data Validation](#data-validation)
* [Development](#development)
* [Dictionaries](#dictionaries)
* [Documents & Productivity](#documents--productivity)
* [Email](#email)
* [Entertainment](#entertainment)
* [Environment](#environment)
* [Events](#events)
* [Finance](#finance)
* [Food & Drink](#food--drink)
* [Games & Comics](#games--comics)
* [Geocoding](#geocoding)
* [Government](#government)
* [Health](#health)
* [Jobs](#jobs)
* [Machine Learning](#machine-learning)
* [Music](#music)
* [News](#news)
* [Open Data](#open-data)
* [Open Source Projects](#open-source-projects)
* [Patent](#patent)
* [Personality](#personality)
* [Phone](#phone)
* [Photography](#photography)
* [Programming](#programming)
* [Science & Math](#science--math)
* [Security](#security)
* [Shopping](#shopping)
* [Social](#social)
* [Sports & Fitness](#sports--fitness)
* [Test Data](#test-data)
* [Text Analysis](#text-analysis)
* [Tracking](#tracking)
* [Transportation](#transportation)
* [URL Shorteners](#url-shorteners)
* [Vehicle](#vehicle)
* [Video](#video)
* [Weather](#weather)

### Animals
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [AdoptAPet](https://www.adoptapet.com/public/apis/pet_list.html) | Resource to help get pets adopted | `apiKey` | Yes | Yes |
| [Axolotl](https://theaxolotlapi.netlify.app/) | Collection of axolotl pictures and facts | No | Yes | No |
| [Cat Facts](https://alexwohlbruck.github.io/cat-facts/) | Daily cat facts | No | Yes | No |
| [Cataas](https://cataas.com/) | Cat as a service (cats pictures and gifs) | No | Yes | No |
| [Cats](https://docs.thecatapi.com/) | Pictures of cats from Tumblr | `apiKey` | Yes | No |
| [Dog Facts](https://dukengn.github.io/Dog-facts-API/) | Random dog facts | No | Yes | Yes |
| [Dog Facts](https://kinduff.github.io/dog-api/) | Random facts of Dogs | No | Yes | Yes |
| [Dogs](https://dog.ceo/dog-api/) | Based on the Stanford Dogs Dataset | No | Yes | Yes |
| [eBird](https://documenter.getpostman.com/view/664302/S1ENwy59) | Retrieve recent or notable birding observations within a region | `apiKey` | Yes | No |
| [FishWatch](https://www.fishwatch.gov/developers) | Information and pictures about individual fish species | No | Yes | Yes |
| [HTTP Cat](https://http.cat/) | Cat for every HTTP Status | No | Yes | Yes |
| [HTTP Dog](https://http.dog/) | Dogs for every HTTP response status code | No | Yes | Yes |
| [IUCN](http://apiv3.iucnredlist.org/api/v3/docs) | IUCN Red List of Threatened Species | `apiKey` | No | No |
| [MeowFacts](https://github.com/wh-iterabb-it/meowfacts) | Get random cat facts | No | Yes | No |
| [Movebank](https://github.com/movebank/movebank-api-doc) | Movement and Migration data of animals | No | Yes | Yes |
| [Petfinder](https://www.petfinder.com/developers/) | Petfinder is dedicated to helping pets find homes, another resource to get pets adopted | `apiKey` | Yes | Yes |
| [PlaceBear](https://placebear.com/) | Placeholder bear pictures | No | Yes | Yes |
| [PlaceDog](https://place.dog) | Placeholder Dog pictures | No | Yes | Yes |
| [PlaceKitten](https://placekitten.com/) | Placeholder Kitten pictures | No | Yes | Yes |
| [RandomDog](https://random.dog/woof.json) | Random pictures of dogs | No | Yes | Yes |
| [RandomDuck](https://random-d.uk/api) | Random pictures of ducks | No | Yes | No |
| [RandomFox](https://randomfox.ca/floof/) | Random pictures of foxes | No | Yes | No |
| [RescueGroups](https://userguide.rescuegroups.org/display/APIDG/API+Developers+Guide+Home) | Adoption | No | Yes | Unknown |
| [Shibe.Online](http://shibe.online/) | Random pictures of Shiba Inu, cats or birds | No | Yes | Yes |
| [The Dog](https://thedogapi.com/) | A public service all about Dogs, free to use when making your fancy new App, Website or Service | `apiKey` | Yes | No |
| [xeno-canto](https://xeno-canto.org/explore/api) | Bird recordings | No | Yes | Unknown |
| [Zoo Animals](https://zoo-animal-api.herokuapp.com/) | Facts and pictures of zoo animals | No | Yes | Yes |

**[⬆ Back to Index](#index)**
### Anime
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [AniAPI](https://aniapi.com/docs/) | Anime discovery, streaming & syncing with trackers | `OAuth` | Yes | Yes |
| [AniDB](https://wiki.anidb.net/HTTP_API_Definition) | Anime Database | `apiKey` | No | Unknown |
| [AniList](https://github.com/AniList/ApiV2-GraphQL-Docs) | Anime discovery & tracking | `OAuth` | Yes | Unknown |
| [AnimeChan](https://github.com/RocktimSaikia/anime-chan) | Anime quotes (over 10k+) | No | Yes | No |
| [AnimeFacts](https://chandan-02.github.io/anime-facts-rest-api/) | Anime Facts (over 100+) | No | Yes | Yes |
| [AnimeNewsNetwork](https://www.animenewsnetwork.com/encyclopedia/api.php) | Anime industry news | No | Yes | Yes |
| [Catboy](https://catboys.com/api) | Neko images, funny GIFs & more | No | Yes | Yes |
| [Danbooru Anime](https://danbooru.donmai.us/wiki_pages/help:api) | Thousands of anime artist database to find good anime art | `apiKey` | Yes | Yes |
| [Jikan](https://jikan.moe) | Unofficial MyAnimeList API | No | Yes | Yes |
| [Kitsu](https://kitsu.docs.apiary.io/) | Anime discovery platform | `OAuth` | Yes | Yes |
| [MangaDex](https://api.mangadex.org/docs.html) | Manga Database and Community | `apiKey` | Yes | Unknown |
| [Mangapi](https://rapidapi.com/pierre.carcellermeunier/api/mangapi3/) | Translate manga pages from one language to another | `apiKey` | Yes | Unknown |
| [MyAnimeList](https://myanimelist.net/clubs.php?cid=13727) | Anime and Manga Database and Community | `OAuth` | Yes | Unknown |
| [NekosBest](https://docs.nekos.best) | Neko Images & Anime roleplaying GIFs | No | Yes | Yes |
| [Shikimori](https://shikimori.one/api/doc) | Anime discovery, tracking, forum, rates | `OAuth` | Yes | Unknown |
| [Studio Ghibli](https://ghibliapi.herokuapp.com) | Resources from Studio Ghibli films | No | Yes | Yes |
| [Trace Moe](https://soruly.github.io/trace.moe-api/#/) | A useful tool to get the exact scene of an anime from a screenshot | No | Yes | No |
| [Waifu.im](https://waifu.im/docs) | Get waifu pictures from an archive of over 4000 images and multiple tags | No | Yes | Yes |
| [Waifu.pics](https://waifu.pics/docs) | Image sharing platform for anime images | No | Yes | No |

**[⬆ Back to Index](#index)**
### Anti-Malware
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [AbuseIPDB](https://docs.abuseipdb.com/) | IP/domain/URL reputation | `apiKey` | Yes | Unknown |
| [AlienVault Open Threat Exchange (OTX)](https://otx.alienvault.com/api) | IP/domain/URL reputation | `apiKey` | Yes | Unknown |
| [CAPEsandbox](https://capev2.readthedocs.io/en/latest/usage/api.html) | Malware execution and analysis | `apiKey` | Yes | Unknown |
| [Google Safe Browsing](https://developers.google.com/safe-browsing/) | Google Link/Domain Flagging | `apiKey` | Yes | Unknown |
| [MalDatabase](https://maldatabase.com/api-doc.html) | Provide malware datasets and threat intelligence feeds | `apiKey` | Yes | Unknown |
| [MalShare](https://malshare.com/doc.php) | Malware Archive / file sourcing | `apiKey` | Yes | No |
| [MalwareBazaar](https://bazaar.abuse.ch/api/) | Collect and share malware samples | `apiKey` | Yes | Unknown |
| [Metacert](https://metacert.com/) | Metacert Link Flagging | `apiKey` | Yes | Unknown |
| [NoPhishy](https://rapidapi.com/Amiichu/api/exerra-phishing-check/) | Check links to see if they're known phishing attempts | `apiKey` | Yes | Yes |
| [Phisherman](https://phisherman.gg/) | IP/domain/URL reputation | `apiKey` | Yes | Unknown |
| [Scanii](https://docs.scanii.com/) | Simple REST API that can scan submitted documents/files for the presence of threats | `apiKey` | Yes | Yes |
| [URLhaus](https://urlhaus-api.abuse.ch/) | Bulk queries and Download Malware Samples | No | Yes | Yes |
| [URLScan.io](https://urlscan.io/about-api/) | Scan and Analyse URLs | `apiKey` | Yes | Unknown |
| [VirusTotal](https://www.virustotal.com/en/documentation/public-api/) | VirusTotal File/URL Analysis | `apiKey` | Yes | Unknown |
| [Web of Trust](https://support.mywot.com/hc/en-us/sections/360004477734-API-) | IP/domain/URL reputation | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Art & Design
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Améthyste](https://api.amethyste.moe/) | Generate images for Discord users | `apiKey` | Yes | Unknown |
| [Art Institute of Chicago](https://api.artic.edu/docs/) | Art | No | Yes | Yes |
| [Colormind](http://colormind.io/api-access/) | Color scheme generator | No | No | Unknown |
| [ColourLovers](http://www.colourlovers.com/api) | Get various patterns, palettes and images | No | No | Unknown |
| [Cooper Hewitt](https://collection.cooperhewitt.org/api) | Smithsonian Design Museum | `apiKey` | Yes | Unknown |
| [Dribbble](https://developer.dribbble.com) | Discover the world’s top designers & creatives | `OAuth` | Yes | Unknown |
| [EmojiHub](https://github.com/cheatsnake/emojihub) | Get emojis by categories and groups | No | Yes | Yes |
| [Europeana](https://pro.europeana.eu/resources/apis/search) | European Museum and Galleries content | `apiKey` | Yes | Unknown |
| [Harvard Art Museums](https://github.com/harvardartmuseums/api-docs) | Art | `apiKey` | No | Unknown |
| [Icon Horse](https://icon.horse) | Favicons for any website, with fallbacks | No | Yes | Yes |
| [Iconfinder](https://developer.iconfinder.com) | Icons | `apiKey` | Yes | Unknown |
| [Icons8](https://img.icons8.com/) | Icons (find ""search icon"" hyperlink in page) | No | Yes | Unknown |
| [Lordicon](https://lordicon.com/) | Icons with predone Animations | No | Yes | Yes |
| [Metropolitan Museum of Art](https://metmuseum.github.io/) | Met Museum of Art | No | Yes | No |
| [Noun Project](http://api.thenounproject.com/index.html) | Icons | `OAuth` | No | Unknown |
| [PHP-Noise](https://php-noise.com/) | Noise Background Image Generator | No | Yes | Yes |
| [Pixel Encounter](https://pixelencounter.com/api) | SVG Icon Generator | No | Yes | No |
| [Rijksmuseum](https://data.rijksmuseum.nl/object-metadata/api/) | RijksMuseum Data | `apiKey` | Yes | Unknown |
| [Word Cloud](https://wordcloudapi.com/) | Easily create word clouds | `apiKey` | Yes | Unknown |
| [xColors](https://x-colors.herokuapp.com/) | Generate & convert colors | No | Yes | Yes |

**[⬆ Back to Index](#index)**
### Authentication & Authorization
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Auth0](https://auth0.com) | Easy to implement, adaptable authentication and authorization platform | `apiKey` | Yes | Yes |
| [GetOTP](https://otp.dev/en/docs/) | Implement OTP flow quickly | `apiKey` | Yes | No |
| [Micro User Service](https://m3o.com/user) | User management and authentication | `apiKey` | Yes | No |
| [MojoAuth](https://mojoauth.com) | Secure and modern passwordless authentication platform | `apiKey` | Yes | Yes |
| [SAWO Labs](https://sawolabs.com) | Simplify login and improve user experience by integrating passwordless authentication in your app | `apiKey` | Yes | Yes |
| [Stytch](https://stytch.com/) | User infrastructure for modern applications | `apiKey` | Yes | No |
| [Warrant](https://warrant.dev/) | APIs for authorization and access control | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Blockchain
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Bitquery](https://graphql.bitquery.io/ide) | Onchain GraphQL APIs & DEX APIs | `apiKey` | Yes | Yes |
| [Chainlink](https://chain.link/developer-resources) | Build hybrid smart contracts with Chainlink | No | Yes | Unknown |
| [Chainpoint](https://tierion.com/chainpoint/) | Chainpoint is a global network for anchoring data to the Bitcoin blockchain | No | Yes | Unknown |
| [Covalent](https://www.covalenthq.com/docs/api/) | Multi-blockchain data aggregator platform | `apiKey` | Yes | Unknown |
| [Etherscan](https://etherscan.io/apis) | Ethereum explorer API | `apiKey` | Yes | Yes |
| [Helium](https://docs.helium.com/api/blockchain/introduction/) | Helium is a global, distributed network of Hotspots that create public, long-range wireless coverage | No | Yes | Unknown |
| [Nownodes](https://nownodes.io/) | Blockchain-as-a-service solution that provides high-quality connection via API | `apiKey` | Yes | Unknown |
| [Steem](https://developers.steem.io/) | Blockchain-based blogging and social media website | No | No | No |
| [The Graph](https://thegraph.com) | Indexing protocol for querying networks like Ethereum with GraphQL | `apiKey` | Yes | Unknown |
| [Walltime](https://walltime.info/api.html) | To retrieve Walltime's market info | No | Yes | Unknown |
| [Watchdata](https://docs.watchdata.io) | Provide simple and reliable API access to Ethereum blockchain | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Books
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [A Bíblia Digital](https://www.abibliadigital.com.br/en) | Do not worry about managing the multiple versions of the Bible | `apiKey` | Yes | No |
| [Bhagavad Gita](https://docs.bhagavadgitaapi.in) | Open Source Shrimad Bhagavad Gita API including 21+ authors translation in Sanskrit/English/Hindi | `apiKey` | Yes | Yes |
| [Bhagavad Gita](https://bhagavadgita.io/api) | Bhagavad Gita text | `OAuth` | Yes | Yes |
| [Bhagavad Gita telugu](https://gita-api.vercel.app) | Bhagavad Gita API in telugu and odia languages | No | Yes | Yes |
| [Bible-api](https://bible-api.com/) | Free Bible API with multiple languages | No | Yes | Yes |
| [British National Bibliography](http://bnb.data.bl.uk/) | Books | No | No | Unknown |
| [Crossref Metadata Search](https://github.com/CrossRef/rest-api-doc) | Books & Articles Metadata | No | Yes | Unknown |
| [Ganjoor](https://api.ganjoor.net) | Classic Persian poetry works including access to related manuscripts, recitations and music tracks | `OAuth` | Yes | Yes |
| [Google Books](https://developers.google.com/books/) | Books | `OAuth` | Yes | Unknown |
| [GurbaniNow](https://github.com/GurbaniNow/api) | Fast and Accurate Gurbani RESTful API | No | Yes | Unknown |
| [Gutendex](https://gutendex.com/) | Web-API for fetching data from Project Gutenberg Books Library | No | Yes | Unknown |
| [Open Library](https://openlibrary.org/developers/api) | Books, book covers and related data | No | Yes | No |
| [Penguin Publishing](http://www.penguinrandomhouse.biz/webservices/rest/) | Books, book covers and related data | No | Yes | Yes |
| [PoetryDB](https://github.com/thundercomb/poetrydb#readme) | Enables you to get instant data from our vast poetry collection | No | Yes | Yes |
| [Quran](https://quran.api-docs.io/) | RESTful Quran API with multiple languages | No | Yes | Yes |
| [Quran Cloud](https://alquran.cloud/api) | A RESTful Quran API to retrieve an Ayah, Surah, Juz or the entire Holy Quran | No | Yes | Yes |
| [Quran-api](https://github.com/fawazahmed0/quran-api#readme) | Free Quran API Service with 90+ different languages and 400+ translations | No | Yes | Yes |
| [Rig Veda](https://aninditabasu.github.io/indica/html/rv.html) | Gods and poets, their categories, and the verse meters, with the mandal and sukta number | No | Yes | Unknown |
| [The Bible](https://docs.api.bible) | Everything you need from the Bible in one discoverable place | `apiKey` | Yes | Unknown |
| [Thirukkural](https://api-thirukkural.web.app/) | 1330 Thirukkural poems and explanation in Tamil and English | No | Yes | Yes |
| [Vedic Society](https://aninditabasu.github.io/indica/html/vs.html) | Descriptions of all nouns (names, places, animals, things) from vedic literature | No | Yes | Unknown |
| [Wizard World](https://wizard-world-api.herokuapp.com/swagger/index.html) | Get information from the Harry Potter universe | No | Yes | Yes |
| [Wolne Lektury](https://wolnelektury.pl/api/) | API for obtaining information about e-books available on the WolneLektury.pl website | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Business
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Apache Superset](https://superset.apache.org/docs/api) | API to manage your BI dashboards and data sources on Superset | `apiKey` | Yes | Yes |
| [Charity Search](http://charityapi.orghunter.com/) | Non-profit charity data | `apiKey` | No | Unknown |
| [Clearbit Logo](https://clearbit.com/docs#logo-api) | Search for company logos and embed them in your projects | `apiKey` | Yes | Unknown |
| [Domainsdb.info](https://domainsdb.info/) | Registered Domain Names Search | No | Yes | No |
| [Freelancer](https://developers.freelancer.com) | Hire freelancers to get work done | `OAuth` | Yes | Unknown |
| [Gmail](https://developers.google.com/gmail/api/) | Flexible, RESTful access to the user's inbox | `OAuth` | Yes | Unknown |
| [Google Analytics](https://developers.google.com/analytics/) | Collect, configure and analyze your data to reach the right audience | `OAuth` | Yes | Unknown |
| [Instatus](https://instatus.com/help/api) | Post to and update maintenance and incidents on your status page through an HTTP REST API | `apiKey` | Yes | Unknown |
| [Mailchimp](https://mailchimp.com/developer/) | Send marketing campaigns and transactional mails | `apiKey` | Yes | Unknown |
| [mailjet](https://www.mailjet.com/) | Marketing email can be sent and mail templates made in MJML or HTML can be sent using API | `apiKey` | Yes | Unknown |
| [markerapi](https://markerapi.com) | Trademark Search | No | No | Unknown |
| [ORB Intelligence](https://api.orb-intelligence.com/docs/) | Company lookup | `apiKey` | Yes | Unknown |
| [Redash](https://redash.io/help/user-guide/integrations-and-api/api) | Access your queries and dashboards on Redash | `apiKey` | Yes | Yes |
| [Smartsheet](https://smartsheet.redoc.ly/) | Allows you to programmatically access and Smartsheet data and account information | `OAuth` | Yes | No |
| [Square](https://developer.squareup.com/reference/square) | Easy way to take payments, manage refunds, and help customers checkout online | `OAuth` | Yes | Unknown |
| [SwiftKanban](https://www.digite.com/knowledge-base/swiftkanban/article/api-for-swift-kanban-web-services/#restapi) | Kanban software, Visualize Work, Increase Organizations Lead Time, Throughput & Productivity | `apiKey` | Yes | Unknown |
| [Tenders in Hungary](https://tenders.guru/hu/api) | Get data for procurements in Hungary in JSON format | No | Yes | Unknown |
| [Tenders in Poland](https://tenders.guru/pl/api) | Get data for procurements in Poland in JSON format | No | Yes | Unknown |
| [Tenders in Romania](https://tenders.guru/ro/api) | Get data for procurements in Romania in JSON format | No | Yes | Unknown |
| [Tenders in Spain](https://tenders.guru/es/api) | Get data for procurements in Spain in JSON format | No | Yes | Unknown |
| [Tenders in Ukraine](https://tenders.guru/ua/api) | Get data for procurements in Ukraine in JSON format | No | Yes | Unknown |
| [Tomba email finder](https://tomba.io/api) | Email Finder for B2B sales and email marketing and email verifier | `apiKey` | Yes | Yes |
| [Trello](https://developers.trello.com/) | Boards, lists and cards to help you organize and prioritize your projects | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Calendar
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Abstract Public Holidays](https://www.abstractapi.com/holidays-api) | Data on national, regional, and religious holidays via API | `apiKey` | Yes | Yes |
| [Calendarific](https://calendarific.com/) | Worldwide Holidays | `apiKey` | Yes | Unknown |
| [Checkiday - National Holiday API](https://apilayer.com/marketplace/checkiday-api) | Industry-leading Holiday API. Over 5,000 holidays and thousands of descriptions. Trusted by the World’s leading companies | `apiKey` | Yes | Unknown |
| [Church Calendar](http://calapi.inadiutorium.cz/) | Catholic liturgical calendar | No | No | Unknown |
| [Czech Namedays Calendar](https://svatky.adresa.info) | Lookup for a name and returns nameday date | No | No | Unknown |
| [Festivo Public Holidays](https://docs.getfestivo.com/docs/products/public-holidays-api/intro) | Fastest and most advanced public holiday and observance service on the market | `apiKey` | Yes | Yes |
| [Google Calendar](https://developers.google.com/google-apps/calendar/) | Display, create and modify Google calendar events | `OAuth` | Yes | Unknown |
| [Hebrew Calendar](https://www.hebcal.com/home/developer-apis) | Convert between Gregorian and Hebrew, fetch Shabbat and Holiday times, etc | No | No | Unknown |
| [Holidays](https://holidayapi.com/) | Historical data regarding holidays | `apiKey` | Yes | Unknown |
| [LectServe](http://www.lectserve.com) | Protestant liturgical calendar | No | No | Unknown |
| [Nager.Date](https://date.nager.at) | Public holidays for more than 90 countries | No | Yes | No |
| [Namedays Calendar](https://nameday.abalin.net) | Provides namedays for multiple countries | No | Yes | Yes |
| [Non-Working Days](https://github.com/gadael/icsdb) | Database of ICS files for non working days | No | Yes | Unknown |
| [Non-Working Days](https://isdayoff.ru) | Simple REST API for checking working, non-working or short days for Russia, CIS, USA and other | No | Yes | Yes |
| [Russian Calendar](https://github.com/egno/work-calendar) | Check if a date is a Russian holiday or not | No | Yes | No |
| [UK Bank Holidays](https://www.gov.uk/bank-holidays.json) | Bank holidays in England and Wales, Scotland and Northern Ireland | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Cloud Storage & File Sharing
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [AnonFiles](https://anonfiles.com/docs/api) | Upload and share your files anonymously | No | Yes | Unknown |
| [BayFiles](https://bayfiles.com/docs/api) | Upload and share your files | No | Yes | Unknown |
| [Box](https://developer.box.com/) | File Sharing and Storage | `OAuth` | Yes | Unknown |
| [ddownload](https://ddownload.com/api) | File Sharing and Storage | `apiKey` | Yes | Unknown |
| [Dropbox](https://www.dropbox.com/developers) | File Sharing and Storage | `OAuth` | Yes | Unknown |
| [File.io](https://www.file.io) | Super simple file sharing, convenient, anonymous and secure | No | Yes | Unknown |
| [Filestack](https://www.filestack.com) | Filestack File Uploader & File Upload API | `apiKey` | Yes | Unknown |   
| [GoFile](https://gofile.io/api) | Unlimited size file uploads for free | `apiKey` | Yes | Unknown |
| [Google Drive](https://developers.google.com/drive/) | File Sharing and Storage | `OAuth` | Yes | Unknown |
| [Gyazo](https://gyazo.com/api/docs) | Save & Share screen captures instantly | `apiKey` | Yes | Unknown |
| [Imgbb](https://api.imgbb.com/) | Simple and quick private image sharing | `apiKey` | Yes | Unknown |
| [OneDrive](https://developer.microsoft.com/onedrive) | File Sharing and Storage | `OAuth` | Yes | Unknown |
| [Pantry](https://getpantry.cloud/) | Free JSON storage for small projects | No | Yes | Yes |
| [Pastebin](https://pastebin.com/doc_api) | Plain Text Storage | `apiKey` | Yes | Unknown |
| [Pinata](https://docs.pinata.cloud/) | IPFS Pinning Services API | `apiKey` | Yes | Unknown |
| [Quip](https://quip.com/dev/automation/documentation) | File Sharing and Storage for groups | `apiKey` | Yes | Yes |
| [Storj](https://docs.storj.io/dcs/) | Decentralized Open-Source Cloud Storage | `apiKey` | Yes | Unknown |
| [The Null Pointer](https://0x0.st) | No-bullshit file hosting and URL shortening service | No | Yes | Unknown |
| [Web3 Storage](https://web3.storage/) | File Sharing and Storage for Free with 1TB Space | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Continuous Integration
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Azure DevOps Health](https://docs.microsoft.com/en-us/rest/api/resourcehealth) | Resource health helps you diagnose and get support when an Azure issue impacts your resources | `apiKey` | No | No |
| [Bitrise](https://api-docs.bitrise.io/) | Build tool and processes integrations to create efficient development pipelines | `apiKey` | Yes | Unknown |
| [Buddy](https://buddy.works/docs/api/getting-started/overview) | The fastest continuous integration and continuous delivery platform | `OAuth` | Yes | Unknown |
| [CircleCI](https://circleci.com/docs/api/v1-reference/) | Automate the software development process using continuous integration and continuous delivery | `apiKey` | Yes | Unknown |
| [Codeship](https://docs.cloudbees.com/docs/cloudbees-codeship/latest/api-overview/) | Codeship is a Continuous Integration Platform in the cloud | `apiKey` | Yes | Unknown |
| [Travis CI](https://docs.travis-ci.com/api/) | Sync your GitHub projects with Travis CI to test your code in minutes | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Cryptocurrency
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [0x](https://0x.org/api) | API for querying token and pool stats across various liquidity pools | No | Yes | Yes |
| [1inch](https://1inch.io/api/) | API for querying decentralize exchange | No | Yes | Unknown |
| [Alchemy Ethereum](https://docs.alchemy.com/alchemy/) | Ethereum Node-as-a-Service Provider | `apiKey` | Yes | Yes |
| [apilayer coinlayer](https://coinlayer.com) | Real-time Crypto Currency Exchange Rates | `apiKey` | Yes | Unknown |
| [Binance](https://github.com/binance/binance-spot-api-docs) | Exchange for Trading Cryptocurrencies based in China | `apiKey` | Yes | Unknown |
| [Bitcambio](https://nova.bitcambio.com.br/api/v3/docs#a-public) | Get the list of all traded assets in the exchange | No | Yes | Unknown |
| [BitcoinAverage](https://apiv2.bitcoinaverage.com/) | Digital Asset Price Data for the blockchain industry | `apiKey` | Yes | Unknown |
| [BitcoinCharts](https://bitcoincharts.com/about/exchanges/) | Financial and Technical Data related to the Bitcoin Network | No | Yes | Unknown |
| [Bitfinex](https://docs.bitfinex.com/docs) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |
| [Bitmex](https://www.bitmex.com/app/apiOverview) | Real-Time Cryptocurrency derivatives trading platform based in Hong Kong | `apiKey` | Yes | Unknown |
| [Bittrex](https://bittrex.github.io/api/v3) | Next Generation Crypto Trading Platform | `apiKey` | Yes | Unknown |
| [Block](https://block.io/docs/basic) | Bitcoin Payment, Wallet & Transaction Data | `apiKey` | Yes | Unknown |
| [Blockchain](https://www.blockchain.com/api) | Bitcoin Payment, Wallet & Transaction Data | `apiKey` | Yes | Unknown |
| [blockfrost Cardano](https://blockfrost.io/) | Interaction with the Cardano mainnet and several testnets | `apiKey` | Yes | Unknown |
| [Brave NewCoin](https://bravenewcoin.com/developers) | Real-time and historic crypto data from more than 200+ exchanges | `apiKey` | Yes | Unknown |
| [BtcTurk](https://docs.btcturk.com/) | Real-time cryptocurrency data, graphs and API that allows buy&sell | `apiKey` | Yes | Yes |
| [Bybit](https://bybit-exchange.github.io/docs/linear/#t-introduction) | Cryptocurrency data feed and algorithmic trading | `apiKey` | Yes | Unknown |
| [CoinAPI](https://docs.coinapi.io/) | All Currency Exchanges integrate under a single api | `apiKey` | Yes | No |
| [Coinbase](https://developers.coinbase.com) | Bitcoin, Bitcoin Cash, Litecoin and Ethereum Prices | `apiKey` | Yes | Unknown |
| [Coinbase Pro](https://docs.pro.coinbase.com/#api) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |
| [CoinCap](https://docs.coincap.io/) | Real time Cryptocurrency prices through a RESTful API | No | Yes | Unknown |
| [CoinDCX](https://docs.coindcx.com/) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |
| [CoinDesk](https://old.coindesk.com/coindesk-api/) | CoinDesk's Bitcoin Price Index (BPI) in multiple currencies | No | Yes | Unknown |
| [CoinGecko](http://www.coingecko.com/api) | Cryptocurrency Price, Market, and Developer/Social Data | No | Yes | Yes |
| [Coinigy](https://coinigy.docs.apiary.io) | Interacting with Coinigy Accounts and Exchange Directly | `apiKey` | Yes | Unknown |
| [Coinlib](https://coinlib.io/apidocs) | Crypto Currency Prices | `apiKey` | Yes | Unknown |
| [Coinlore](https://www.coinlore.com/cryptocurrency-data-api) | Cryptocurrencies prices, volume and more | No | Yes | Unknown |
| [CoinMarketCap](https://coinmarketcap.com/api/) | Cryptocurrencies Prices | `apiKey` | Yes | Unknown |
| [Coinpaprika](https://api.coinpaprika.com) | Cryptocurrencies prices, volume and more | No | Yes | Yes |
| [CoinRanking](https://developers.coinranking.com/api/documentation) | Live Cryptocurrency data | `apiKey` | Yes | Unknown |
| [Coinremitter](https://coinremitter.com/docs) | Cryptocurrencies Payment & Prices | `apiKey` | Yes | Unknown |
| [CoinStats](https://documenter.getpostman.com/view/5734027/RzZ6Hzr3?version=latest) | Crypto Tracker | No | Yes | Unknown |
| [CryptAPI](https://docs.cryptapi.io/) | Cryptocurrency Payment Processor | No | Yes | Unknown |
| [CryptingUp](https://www.cryptingup.com/apidoc/#introduction) | Cryptocurrency data | No | Yes | Unknown |
| [CryptoCompare](https://www.cryptocompare.com/api#) | Cryptocurrencies Comparison | No | Yes | Unknown |
| [CryptoMarket](https://api.exchange.cryptomkt.com/) | Cryptocurrencies Trading platform | `apiKey` | Yes | Yes |
| [Cryptonator](https://www.cryptonator.com/api/) | Cryptocurrencies Exchange Rates | No | Yes | Unknown |
| [dYdX](https://docs.dydx.exchange/) | Decentralized cryptocurrency exchange | `apiKey` | Yes | Unknown |
| [Ethplorer](https://github.com/EverexIO/Ethplorer/wiki/Ethplorer-API) | Ethereum tokens, balances, addresses, history of transactions, contracts, and custom structures | `apiKey` | Yes | Unknown |
| [EXMO](https://documenter.getpostman.com/view/10287440/SzYXWKPi) | Cryptocurrencies exchange based in UK | `apiKey` | Yes | Unknown |
| [FTX](https://docs.ftx.com/) | Complete REST, websocket, and FTX APIs to suit your algorithmic trading needs | `apiKey` | Yes | Yes |
| [Gateio](https://www.gate.io/api2) | API provides spot, margin and futures trading operations | `apiKey` | Yes | Unknown |
| [Gemini](https://docs.gemini.com/rest-api/) | Cryptocurrencies Exchange | No | Yes | Unknown |
| [Hirak Exchange Rates](https://rates.hirak.site/) | Exchange rates between 162 currency & 300 crypto currency update each 5 min, accurate, no limits | `apiKey` | Yes | Unknown |
| [Huobi](https://huobiapi.github.io/docs/spot/v1/en/) | Seychelles based cryptocurrency exchange | `apiKey` | Yes | Unknown |
| [icy.tools](https://developers.icy.tools/) | GraphQL based NFT API | `apiKey` | Yes | Unknown |
| [Indodax](https://github.com/btcid/indodax-official-api-docs) | Trade your Bitcoin and other assets with rupiah | `apiKey` | Yes | Unknown |
| [INFURA Ethereum](https://infura.io/product/ethereum) | Interaction with the Ethereum mainnet and several testnets | `apiKey` | Yes | Yes |
| [Kraken](https://docs.kraken.com/rest/) | Cryptocurrencies Exchange | `apiKey` | Yes | Unknown |
| [KuCoin](https://docs.kucoin.com/) | Cryptocurrency Trading Platform | `apiKey` | Yes | Unknown |
| [Localbitcoins](https://localbitcoins.com/api-docs/) | P2P platform to buy and sell Bitcoins | No | Yes | Unknown |
| [Mempool](https://mempool.space/api) | Bitcoin API Service focusing on the transaction fee | No | Yes | No |
| [MercadoBitcoin](https://www.mercadobitcoin.com.br/api-doc/) | Brazilian Cryptocurrency Information | No | Yes | Unknown |
| [Messari](https://messari.io/api) | Provides API endpoints for thousands of crypto assets | No | Yes | Unknown |
| [Nexchange](https://nexchange2.docs.apiary.io/) | Automated cryptocurrency exchange service | No | No | Yes |
| [Nomics](https://nomics.com/docs/) | Historical and realtime cryptocurrency prices and market data | `apiKey` | Yes | Yes |
| [NovaDax](https://doc.novadax.com/en-US/#introduction) | NovaDAX API to access all market data, trading management endpoints | `apiKey` | Yes | Unknown |
| [OKEx](https://www.okex.com/docs/) | Cryptocurrency exchange based in Seychelles | `apiKey` | Yes | Unknown |
| [Poloniex](https://docs.poloniex.com) | US based digital asset exchange | `apiKey` | Yes | Unknown |
| [Solana JSON RPC](https://docs.solana.com/developing/clients/jsonrpc-api) | Provides various endpoints to interact with the Solana Blockchain | No | Yes | Unknown |
| [Technical Analysis](https://technical-analysis-api.com) | Cryptocurrency prices and technical analysis | `apiKey` | Yes | No |
| [VALR](https://docs.valr.com/) | Cryptocurrency Exchange based in South Africa | `apiKey` | Yes | Unknown |
| [WorldCoinIndex](https://www.worldcoinindex.com/apiservice) | Cryptocurrencies Prices | `apiKey` | Yes | Unknown |
| [ZMOK](https://zmok.io) | Ethereum JSON RPC API and Web3 provider | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Currency Exchange
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [1Forge](https://1forge.com/forex-data-api/api-documentation) | Forex currency market data | `apiKey` | Yes | Unknown |
| [Amdoren](https://www.amdoren.com/currency-api/) | Free currency API with over 150 currencies | `apiKey` | Yes | Unknown |
| [apilayer fixer.io](https://fixer.io) | Exchange rates and currency conversion | `apiKey` | No | Unknown |
| [Bank of Russia](https://www.cbr.ru/development/SXML/) | Exchange rates and currency conversion | No | Yes | Unknown |
| [Currency-api](https://github.com/fawazahmed0/currency-api#readme) | Free Currency Exchange Rates API with 150+ Currencies & No Rate Limits | No | Yes | Yes |
| [CurrencyFreaks](https://currencyfreaks.com/) | Provides current and historical currency exchange rates with free plan 1K requests/month | `apiKey` | Yes | Yes |
| [Currencylayer](https://currencylayer.com/documentation) | Exchange rates and currency conversion | `apiKey` | Yes | Unknown |
| [CurrencyScoop](https://currencyscoop.com/api-documentation) | Real-time and historical currency rates JSON API | `apiKey` | Yes | Yes |
| [Czech National Bank](https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.xml) | A collection of exchange rates | No | Yes | Unknown |
| [Economia.Awesome](https://docs.awesomeapi.com.br/api-de-moedas) | Portuguese free currency prices and conversion with no rate limits | No | Yes | Unknown |
| [ExchangeRate-API](https://www.exchangerate-api.com) | Free currency conversion | `apiKey` | Yes | Yes |
| [Exchangerate.host](https://exchangerate.host) | Free foreign exchange & crypto rates API | No | Yes | Unknown |
| [Exchangeratesapi.io](https://exchangeratesapi.io) | Exchange rates with currency conversion | `apiKey` | Yes | Yes |
| [Frankfurter](https://www.frankfurter.app/docs) | Exchange rates, currency conversion and time series | No | Yes | Yes |
| [FreeForexAPI](https://freeforexapi.com/Home/Api) | Real-time foreign exchange rates for major currency pairs | No | Yes | No |
| [National Bank of Poland](http://api.nbp.pl/en.html) | A collection of currency exchange rates (data in XML and JSON) | No | Yes | Yes |
| [VATComply.com](https://www.vatcomply.com/documentation) | Exchange rates, geolocation and VAT number validation | No | Yes | Yes |

**[⬆ Back to Index](#index)**
### Data Validation
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Lob.com](https://lob.com/) | US Address Verification | `apiKey` | Yes | Unknown |
| [Postman Echo](https://www.postman-echo.com) | Test api server to receive and return value from HTTP method | No | Yes | Unknown |
| [PurgoMalum](http://www.purgomalum.com) | Content validator against profanity & obscenity | No | No | Unknown |
| [US Autocomplete](https://www.smarty.com/docs/cloud/us-autocomplete-pro-api) | Enter address data quickly with real-time address suggestions | `apiKey` | Yes | Yes |
| [US Extract](https://www.smarty.com/products/apis/us-extract-api) | Extract postal addresses from any text including emails | `apiKey` | Yes | Yes |
| [US Street Address](https://www.smarty.com/docs/cloud/us-street-api) | Validate and append data for any US postal address | `apiKey` | Yes | Yes |
| [vatlayer](https://vatlayer.com/documentation) | VAT number validation | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Development
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [24 Pull Requests](https://24pullrequests.com/api) | Project to promote open source collaboration during December | No | Yes | Yes |
| [Abstract Screenshot](https://www.abstractapi.com/website-screenshot-api) | Take programmatic screenshots of web pages from any website | `apiKey` | Yes | Yes |
| [Agify.io](https://agify.io) | Estimates the age from a first name | No | Yes | Yes |
| [API Grátis](https://apigratis.com.br/) | Multiples services and public APIs | No | Yes | Unknown |
| [ApicAgent](https://www.apicagent.com) | Extract device details from user-agent string | No | Yes | Yes |
| [ApiFlash](https://apiflash.com/) | Chrome based screenshot API for developers | `apiKey` | Yes | Unknown |
| [apilayer userstack](https://userstack.com/) | Secure User-Agent String Lookup JSON API | `OAuth` | Yes | Unknown |
| [APIs.guru](https://apis.guru/api-doc/) | Wikipedia for Web APIs, OpenAPI/Swagger specs for public APIs | No | Yes | Unknown |
| [Azure DevOps](https://docs.microsoft.com/en-us/rest/api/azure/devops) | The Azure DevOps basic components of a REST API request/response pair | `apiKey` | Yes | Unknown |
| [Base](https://www.base-api.io/) | Building quick backends | `apiKey` | Yes | Yes |
| [Beeceptor](https://beeceptor.com/) | Build a mock Rest API endpoint in seconds | No | Yes | Yes |
| [Bitbucket](https://developer.atlassian.com/bitbucket/api/2/reference/) | Bitbucket API | `OAuth` | Yes | Unknown |
| [Blague.xyz](https://blague.xyz/) | La plus grande API de Blagues FR/The biggest FR jokes API | `apiKey` | Yes | Yes |
| [Blitapp](https://blitapp.com/api/) | Schedule screenshots of web pages and sync them to your cloud | `apiKey` | Yes | Unknown |
| [Blynk-Cloud](https://blynkapi.docs.apiary.io/#) | Control IoT Devices from Blynk IoT Cloud | `apiKey` | No | Unknown |
| [Bored](https://www.boredapi.com/) | Find random activities to fight boredom | No | Yes | Unknown |
| [Brainshop.ai](https://brainshop.ai/) | Make A Free A.I Brain | `apiKey` | Yes | Yes |
| [Browshot](https://browshot.com/api/documentation) | Easily make screenshots of web pages in any screen size, as any device | `apiKey` | Yes | Yes |
| [CDNJS](https://api.cdnjs.com/libraries/jquery) | Library info on CDNJS | No | Yes | Unknown |
| [Changelogs.md](https://changelogs.md) | Structured changelog metadata from open source projects | No | Yes | Unknown |
| [Ciprand](https://github.com/polarspetroll/ciprand) | Secure random string generator | No | Yes | No |
| [Cloudflare Trace](https://github.com/fawazahmed0/cloudflare-trace-api) | Get IP Address, Timestamp, User Agent, Country Code, IATA, HTTP Version, TLS/SSL Version & More | No | Yes | Yes |
| [Codex](https://github.com/Jaagrav/CodeX) | Online Compiler for Various Languages | No | Yes | Unknown |
| [Contentful Images](https://www.contentful.com/developers/docs/references/images-api/) | Used to retrieve and apply transformations to images | `apiKey` | Yes | Yes |
| [CORS Proxy](https://github.com/burhanuday/cors-proxy) | Get around the dreaded CORS error by using this proxy as a middle man | No | Yes | Yes |
| [CountAPI](https://countapi.xyz) | Free and simple counting service. You can use it to track page hits and specific events | No | Yes | Yes |
| [Databricks](https://docs.databricks.com/dev-tools/api/latest/index.html) | Service to manage your databricks account,clusters, notebooks, jobs and workspaces | `apiKey` | Yes | Yes |
| [DigitalOcean Status](https://status.digitalocean.com/api) | Status of all DigitalOcean services | No | Yes | Unknown |
| [Docker Hub](https://docs.docker.com/docker-hub/api/latest/) | Interact with Docker Hub | `apiKey` | Yes | Yes |
| [DomainDb Info](https://api.domainsdb.info/) | Domain name search to find all domains containing particular words/phrases/etc | No | Yes | Unknown |
| [ExtendsClass JSON Storage](https://extendsclass.com/json-storage.html) | A simple JSON store API | No | Yes | Yes |
| [GeekFlare](https://apidocs.geekflare.com/docs/geekflare-api) | Provide numerous capabilities for important testing and monitoring methods for websites | `apiKey` | Yes | Unknown |
| [Genderize.io](https://genderize.io) | Estimates a gender from a first name | No | Yes | Yes |
| [GETPing](https://www.getping.info) | Trigger an email notification with a simple GET request | `apiKey` | Yes | Unknown |
| [Ghost](https://ghost.org/) | Get Published content into your Website, App or other embedded media | `apiKey` | Yes | Yes |
| [GitHub](https://docs.github.com/en/free-pro-team@latest/rest) | Make use of GitHub repositories, code and user info programmatically | `OAuth` | Yes | Yes |
| [Gitlab](https://docs.gitlab.com/ee/api/) | Automate GitLab interaction programmatically | `OAuth` | Yes | Unknown |
| [Gitter](https://developer.gitter.im/docs/welcome) | Chat for Developers | `OAuth` | Yes | Unknown |
| [Glitterly](https://developers.glitterly.app) | Image generation API | `apiKey` | Yes | Yes |
| [Google Docs](https://developers.google.com/docs/api/reference/rest) | API to read, write, and format Google Docs documents | `OAuth` | Yes | Unknown |
| [Google Firebase](https://firebase.google.com/docs) | Google's mobile application development platform that helps build, improve, and grow app | `apiKey` | Yes | Yes |
| [Google Fonts](https://developers.google.com/fonts/docs/developer_api) | Metadata for all families served by Google Fonts | `apiKey` | Yes | Unknown |
| [Google Keep](https://developers.google.com/keep/api/reference/rest) | API to read, write, and format Google Keep notes | `OAuth` | Yes | Unknown |
| [Google Sheets](https://developers.google.com/sheets/api/reference/rest) | API to read, write, and format Google Sheets data | `OAuth` | Yes | Unknown |
| [Google Slides](https://developers.google.com/slides/api/reference/rest) | API to read, write, and format Google Slides presentations | `OAuth` | Yes | Unknown |
| [Gorest](https://gorest.co.in/) | Online REST API for Testing and Prototyping | `OAuth` | Yes | Unknown |
| [Hasura](https://hasura.io/opensource/) | GraphQL and REST API Engine with built in Authorization | `apiKey` | Yes | Yes |
| [Heroku](https://devcenter.heroku.com/articles/platform-api-reference/) | REST API to programmatically create apps, provision add-ons and perform other task on Heroku | `OAuth` | Yes | Yes |
| [host-t.com](https://host-t.com) | Basic DNS query via HTTP GET request | No | Yes | No |
| [Host.io](https://host.io) | Domains Data API for Developers | `apiKey` | Yes | Yes |
| [HTTP2.Pro](https://http2.pro/doc/api) | Test endpoints for client and server HTTP/2 protocol support | No | Yes | Unknown |
| [Httpbin](https://httpbin.org/) | A Simple HTTP Request & Response Service | No | Yes | Yes |
| [Httpbin Cloudflare](https://cloudflare-quic.com/b/) | A Simple HTTP Request & Response Service with HTTP/3 Support by Cloudflare | No | Yes | Yes |
| [Hunter](https://hunter.io/api) | API for domain search, professional email finder, author finder and email verifier | `apiKey` | Yes | Unknown |
| [IBM Text to Speech](https://cloud.ibm.com/docs/text-to-speech/getting-started.html) | Convert text to speech | `apiKey` | Yes | Yes |
| [Icanhazepoch](https://icanhazepoch.com) | Get Epoch time | No | Yes | Yes |
| [Icanhazip](https://major.io/icanhazip-com-faq/) | IP Address API | No | Yes | Yes |
| [IFTTT](https://platform.ifttt.com/docs/connect_api) | IFTTT Connect API | No | Yes | Unknown |
| [Image-Charts](https://documentation.image-charts.com/) | Generate charts, QR codes and graph images | No | Yes | Yes |
| [import.io](http://api.docs.import.io/) | Retrieve structured data from a website or RSS feed | `apiKey` | Yes | Unknown |
| [ip-fast.com](https://ip-fast.com/docs/) | IP address, country and city | No | Yes | Yes |
| [IP2WHOIS Information Lookup](https://www.ip2whois.com/) | WHOIS domain name lookup | `apiKey` | Yes | Unknown |
| [ipfind.io](https://ipfind.io) | Geographic location of an IP address or any domain name along with some other useful information | `apiKey` | Yes | Yes |
| [IPify](https://www.ipify.org/) | A simple IP Address API | No | Yes | Unknown |
| [IPinfo](https://ipinfo.io/developers) | Another simple IP Address API | No | Yes | Unknown |
| [jsDelivr](https://github.com/jsdelivr/data.jsdelivr.com) | Package info and download stats on jsDelivr CDN | No | Yes | Yes |
| [JSON 2 JSONP](https://json2jsonp.com/) | Convert JSON to JSONP (on-the-fly) for easy cross-domain data requests using client-side JavaScript | No | Yes | Unknown |
| [JSONbin.io](https://jsonbin.io) | Free JSON storage service. Ideal for small scale Web apps, Websites and Mobile apps | `apiKey` | Yes | Yes |
| [Kroki](https://kroki.io) | Creates diagrams from textual descriptions | No | Yes | Yes |
| [License-API](https://github.com/cmccandless/license-api/blob/master/README.md) | Unofficial REST API for choosealicense.com | No | Yes | No |
| [Logs.to](https://logs.to/) | Generate logs | `apiKey` | Yes | Unknown |
| [Lua Decompiler](https://lua-decompiler.ferib.dev/) | Online Lua 5.1 Decompiler | No | Yes | Yes |
| [MAC address vendor lookup](https://macaddress.io/api) | Retrieve vendor details and other information regarding a given MAC address or an OUI | `apiKey` | Yes | Yes |
| [Micro DB](https://m3o.com/db) | Simple database service | `apiKey` | Yes | Unknown |
| [MicroENV](https://microenv.com/) | Fake Rest API for developers | No | Yes | Unknown |
| [Mocky](https://designer.mocky.io/) | Mock user defined test JSON for REST API endpoints | No | Yes | Yes |
| [MY IP](https://www.myip.com/api-docs/) | Get IP address information | No | Yes | Unknown |
| [Nationalize.io](https://nationalize.io) | Estimate the nationality of a first name | No | Yes | Yes |
| [Netlify](https://docs.netlify.com/api/get-started/) | Netlify is a hosting service for the programmable web | `OAuth` | Yes | Unknown |
| [NetworkCalc](https://networkcalc.com/api/docs) | Network calculators, including subnets, DNS, binary, and security tools | No | Yes | Yes |
| [npm Registry](https://github.com/npm/registry/blob/master/docs/REGISTRY-API.md) | Query information about your favorite Node.js libraries programatically | No | Yes | Unknown |
| [OneSignal](https://documentation.onesignal.com/docs/onesignal-api) | Self-serve customer engagement solution for Push Notifications, Email, SMS & In-App | `apiKey` | Yes | Unknown |
| [Open Page Rank](https://www.domcop.com/openpagerank/) | API for calculating and comparing metrics of different websites using Page Rank algorithm | `apiKey` | Yes | Unknown |
| [OpenAPIHub](https://hub.openapihub.com/) | The All-in-one API Platform | `X-Mashape-Key` | Yes | Unknown |
| [OpenGraphr](https://opengraphr.com/docs/1.0/overview) | Really simple API to retrieve Open Graph data from an URL | `apiKey` | Yes | Unknown |
| [oyyi](https://oyyi.xyz/docs/1.0) | API for Fake Data, image/video conversion, optimization, pdf optimization and thumbnail generation | No | Yes | Yes |
| [PageCDN](https://pagecdn.com/docs/public-api) | Public API for javascript, css and font libraries on PageCDN | `apiKey` | Yes | Yes |
| [Postman](https://www.postman.com/postman/workspace/postman-public-workspace/documentation/12959542-c8142d51-e97c-46b6-bd77-52bb66712c9a) | Tool for testing APIs | `apiKey` | Yes | Unknown |
| [ProxyCrawl](https://proxycrawl.com) | Scraping and crawling anticaptcha service | `apiKey` | Yes | Unknown |
| [ProxyKingdom](https://proxykingdom.com) | Rotating Proxy API that produces a working proxy on every request | `apiKey` | Yes | Yes |
| [Pusher Beams](https://pusher.com/beams) | Push notifications for Android & iOS | `apiKey` | Yes | Unknown |
| [QR code](https://www.qrtag.net/api/) | Create an easy to read QR code and URL shortener | No | Yes | Yes |
| [QR code](http://goqr.me/api/) | Generate and decode / read QR code graphics | No | Yes | Unknown |
| [Qrcode Monkey](https://www.qrcode-monkey.com/qr-code-api-with-logo/) | Integrate custom and unique looking QR codes into your system or workflow | No | Yes | Unknown |
| [QuickChart](https://quickchart.io/) | Generate chart and graph images | No | Yes | Yes |
| [Random Stuff](https://api-docs.pgamerx.com/) | Can be used to get AI Response, jokes, memes, and much more at lightning-fast speed | `apiKey` | Yes | Yes |
| [Rejax](https://rejax.io/) | Reverse AJAX service to notify clients | `apiKey` | Yes | No |
| [ReqRes](https://reqres.in/ ) | A hosted REST-API ready to respond to your AJAX requests | No | Yes | Unknown |
| [RSS feed to JSON](https://rss-to-json-serverless-api.vercel.app) | Returns RSS feed in JSON format using feed URL | No | Yes | Yes |
| [SavePage.io](https://www.savepage.io) | A free, RESTful API used to screenshot any desktop, or mobile website | `apiKey` | Yes | Yes |
| [ScrapeNinja](https://scrapeninja.net) | Scraping API with Chrome fingerprint and residential proxies | `apiKey` | Yes | Unknown |
| [ScraperApi](https://www.scraperapi.com) | Easily build scalable web scrapers | `apiKey` | Yes | Unknown |
| [scraperBox](https://scraperbox.com/) | Undetectable web scraping API | `apiKey` | Yes | Yes |
| [scrapestack](https://scrapestack.com/) | Real-time, Scalable Proxy & Web Scraping REST API | `apiKey` | Yes | Unknown |
| [ScrapingAnt](https://scrapingant.com) | Headless Chrome scraping with a simple API | `apiKey` | Yes | Unknown |
| [ScrapingDog](https://www.scrapingdog.com/) | Proxy API for Web scraping | `apiKey` | Yes | Unknown |
| [ScreenshotAPI.net](https://screenshotapi.net/) | Create pixel-perfect website screenshots | `apiKey` | Yes | Yes |
| [Serialif Color](https://color.serialif.com/) | Color conversion, complementary, grayscale and contrasted text | No | Yes | No |
| [serpstack](https://serpstack.com/) | Real-Time & Accurate Google Search Results API | `apiKey` | Yes | Yes |
| [Sheetsu](https://sheetsu.com/) | Easy google sheets integration | `apiKey` | Yes | Unknown |
| [SHOUTCLOUD](http://shoutcloud.io/) | ALL-CAPS AS A SERVICE | No | No | Unknown |
| [Sonar](https://github.com/Cgboal/SonarSearch) | Project Sonar DNS Enumeration API | No | Yes | Yes |
| [SonarQube](https://sonarcloud.io/web_api) | SonarQube REST APIs to detect bugs, code smells & security vulnerabilities | `OAuth` | Yes | Unknown |
| [StackExchange](https://api.stackexchange.com/) | Q&A forum for developers | `OAuth` | Yes | Unknown |
| [Statically](https://statically.io/) | A free CDN for developers | No | Yes | Yes |
| [Supportivekoala](https://developers.supportivekoala.com/) | Autogenerate images with template | `apiKey` | Yes | Yes |
| [Tyk](https://tyk.io/open-source/) | Api and service management platform | `apiKey` | Yes | Yes |
| [Wandbox](https://github.com/melpon/wandbox/blob/master/kennel2/API.rst) | Code compiler supporting 35+ languages mentioned at wandbox.org | No | Yes | Unknown |
| [WebScraping.AI](https://webscraping.ai/) | Web Scraping API with built-in proxies and JS rendering | `apiKey` | Yes | Yes |
| [ZenRows](https://www.zenrows.com/) | Web Scraping API that bypasses anti-bot solutions while offering JS rendering, and rotating proxies | `apiKey` | Yes | Unknown |


**[⬆ Back to Index](#index)**
### Dictionaries
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Chinese Character Web](http://ccdb.hemiola.com/) | Chinese character definitions and pronunciations | No | No | No |
| [Chinese Text Project](https://ctext.org/tools/api) | Online open-access digital library for pre-modern Chinese texts | No | Yes | Unknown |
| [Collins](https://api.collinsdictionary.com/api/v1/documentation/html/) | Bilingual Dictionary and Thesaurus Data | `apiKey` | Yes | Unknown |
| [Free Dictionary](https://dictionaryapi.dev/) | Definitions, phonetics, pronounciations, parts of speech, examples, synonyms | No | Yes | Unknown |
| [Indonesia Dictionary](https://new-kbbi-api.herokuapp.com/) | Indonesia dictionary many words | No | Yes | Unknown |
| [Lingua Robot](https://www.linguarobot.io) | Word definitions, pronunciations, synonyms, antonyms and others | `apiKey` | Yes | Yes |
| [Merriam-Webster](https://dictionaryapi.com/) | Dictionary and Thesaurus Data | `apiKey` | Yes | Unknown |
| [OwlBot](https://owlbot.info/) | Definitions with example sentence and photo if available | `apiKey` | Yes | Yes |
| [Oxford](https://developer.oxforddictionaries.com/) | Dictionary Data | `apiKey` | Yes | No |
| [Synonyms](https://www.synonyms.com/synonyms_api.php) | Synonyms, thesaurus and antonyms information for any given word | `apiKey` | Yes | Unknown |
| [Wiktionary](https://en.wiktionary.org/w/api.php) | Collaborative dictionary data | No | Yes | Yes |
| [Wordnik](https://developer.wordnik.com) | Dictionary Data | `apiKey` | Yes | Unknown |
| [Words](https://www.wordsapi.com/docs/) | Definitions and synonyms for more than 150,000 words | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Documents & Productivity
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Airtable](https://airtable.com/api) | Integrate with Airtable | `apiKey` | Yes | Unknown |
| [Api2Convert](https://www.api2convert.com/) | Online File Conversion API | `apiKey` | Yes | Unknown |
| [apilayer pdflayer](https://pdflayer.com) | HTML/URL to PDF | `apiKey` | Yes | Unknown |
| [Asana](https://developers.asana.com/docs) | Programmatic access to all data in your asana system | `apiKey` | Yes | Yes |
| [ClickUp](https://clickup.com/api) | ClickUp is a robust, cloud-based project management tool for boosting productivity | `OAuth` | Yes | Unknown |
| [Clockify](https://clockify.me/developers-api ) | Clockify's REST-based API can be used to push/pull data to/from it & integrate it with other systems | `apiKey` | Yes | Unknown |
| [CloudConvert](https://cloudconvert.com/api/v2) | Online file converter for audio, video, document, ebook, archive, image, spreadsheet, presentation | `apiKey` | Yes | Unknown |
| [Cloudmersive Document and Data Conversion](https://cloudmersive.com/convert-api) | HTML/URL to PDF/PNG, Office documents to PDF, image conversion | `apiKey` | Yes | Yes |
| [Code::Stats](https://codestats.net/api-docs) | Automatic time tracking for programmers | `apiKey` | Yes | No |
| [CraftMyPDF](https://craftmypdf.com) | Generate PDF documents from templates with a drop-and-drop editor and a simple API | `apiKey` | Yes | No |
| [Flowdash](https://docs.flowdash.com/docs/api-introduction) | Automate business workflows | `apiKey` | Yes | Unknown |
| [Html2PDF](https://html2pdf.app/) | HTML/URL to PDF | `apiKey` | Yes | Unknown |
| [iLovePDF](https://developer.ilovepdf.com/) | Convert, merge, split, extract text and add page numbers for PDFs. Free for 250 documents/month | `apiKey` | Yes | Yes |
| [JIRA](https://developer.atlassian.com/server/jira/platform/rest-apis/) | JIRA is a proprietary issue tracking product that allows bug tracking and agile project management | `OAuth` | Yes | Unknown |
| [Mattermost](https://api.mattermost.com/) | An open source platform for developer collaboration | `OAuth` | Yes | Unknown |
| [Mercury](https://mercury.postlight.com/web-parser/) | Web parser | `apiKey` | Yes | Unknown |
| [Monday](https://api.developer.monday.com/docs) | Programmatically access and update data inside a monday.com account | `apiKey` | Yes | Unknown |
| [Notion](https://developers.notion.com/docs/getting-started) | Integrate with Notion | `OAuth` | Yes | Unknown |
| [PandaDoc](https://developers.pandadoc.com) | DocGen and eSignatures API | `apiKey` | Yes | No |
| [Pocket](https://getpocket.com/developer/) | Bookmarking service | `OAuth` | Yes | Unknown |
| [Podio](https://developers.podio.com) | File sharing and productivity | `OAuth` | Yes | Unknown |
| [PrexView](https://prexview.com) | Data from XML or JSON to PDF, HTML or Image | `apiKey` | Yes | Unknown |
| [Restpack](https://restpack.io/) | Provides screenshot, HTML to PDF and content extraction APIs | `apiKey` | Yes | Unknown |
| [Todoist](https://developer.todoist.com) | Todo Lists | `OAuth` | Yes | Unknown |
| [Smart Image Enhancement API](https://apilayer.com/marketplace/image_enhancement-api) | Performs image upscaling by adding detail to images through multiple super-resolution algorithms | `apiKey` | Yes | Unknown |
| [Vector Express v2.0](https://vector.express) | Free vector file converting API | No | Yes | No |
| [WakaTime](https://wakatime.com/developers) | Automated time tracking leaderboards for programmers | No | Yes | Unknown |
| [Zube](https://zube.io/docs/api) | Full stack project management | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Email
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Abstract Email Validation](https://www.abstractapi.com/email-verification-validation-api) | Validate email addresses for deliverability and spam | `apiKey` | Yes | Yes |
| [apilayer mailboxlayer](https://mailboxlayer.com) | Email address validation | `apiKey` | Yes | Unknown |
| [Cloudmersive Validate](https://cloudmersive.com/validate-api) | Validate email addresses, phone numbers, VAT numbers and domain names | `apiKey` | Yes | Yes |
| [Disify](https://www.disify.com/) | Validate and detect disposable and temporary email addresses | No | Yes | Yes |
| [DropMail](https://dropmail.me/api/#live-demo) | GraphQL API for creating and managing ephemeral e-mail inboxes | No | Yes | Unknown |
| [EVA](https://eva.pingutil.com/) | Validate email addresses | No | Yes | Yes |
| [Guerrilla Mail](https://www.guerrillamail.com/GuerrillaMailAPI.html) | Disposable temporary Email addresses | No | Yes | Unknown |
| [ImprovMX](https://improvmx.com/api) | API for free email forwarding service | `apiKey` | Yes | Unknown |
| [Kickbox](https://open.kickbox.com/) | Email verification API | No | Yes | Yes |
| [mail.gw](https://docs.mail.gw) | 10 Minute Mail | No | Yes | Yes |
| [mail.tm](https://docs.mail.tm) | Temporary Email Service | No | Yes | Yes |
| [MailboxValidator](https://www.mailboxvalidator.com/api-email-free) | Validate email address to improve deliverability | `apiKey` | Yes | Unknown |
| [MailCheck.ai](https://www.mailcheck.ai/#documentation) | Prevent users to sign up with temporary email addresses | No | Yes | Unknown |
| [Mailtrap](https://mailtrap.docs.apiary.io/#) | A service for the safe testing of emails sent from the development and staging environments | `apiKey` | Yes | Unknown |
| [Sendgrid](https://docs.sendgrid.com/api-reference/) | A cloud-based SMTP provider that allows you to send emails without having to maintain email servers | `apiKey` | Yes | Unknown |
| [Sendinblue](https://developers.sendinblue.com/docs) | A service that provides solutions relating to marketing and/or transactional email and/or SMS | `apiKey` | Yes | Unknown |
| [Verifier](https://verifier.meetchopra.com/docs#/) | Verifies that a given email is real | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Entertainment
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [chucknorris.io](https://api.chucknorris.io) | JSON API for hand curated Chuck Norris jokes | No | Yes | Unknown |
| [Corporate Buzz Words](https://github.com/sameerkumar18/corporate-bs-generator-api) | REST API for Corporate Buzz Words | No | Yes | Yes |
| [Excuser](https://excuser.herokuapp.com/) | Get random excuses for various situations | No | Yes | Unknown |
| [Fun Fact](https://api.aakhilv.me) | A simple HTTPS api that can randomly select and return a fact from the FFA database | No | Yes | Yes |
| [Imgflip](https://imgflip.com/api) | Gets an array of popular memes | No | Yes | Unknown |
| [Meme Maker](https://mememaker.github.io/API/) | REST API for create your own meme | No | Yes | Unknown |
| [NaMoMemes](https://github.com/theIYD/NaMoMemes) | Memes on Narendra Modi | No | Yes | Unknown |
| [Random Useless Facts](https://uselessfacts.jsph.pl/) | Get useless, but true facts | No | Yes | Unknown |
| [Techy](https://techy-api.vercel.app/) | JSON and Plaintext API for tech-savvy sounding phrases | No | Yes | Unknown |
| [Yo Momma Jokes](https://github.com/beanboi7/yomomma-apiv2) | REST API for Yo Momma Jokes | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Environment
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [BreezoMeter Pollen](https://docs.breezometer.com/api-documentation/pollen-api/v2/) | Daily Forecast pollen conditions data for a specific location | `apiKey` | Yes | Unknown |
| [Carbon Interface](https://docs.carboninterface.com/) | API to calculate carbon (C02) emissions estimates for common C02 emitting activities | `apiKey` | Yes | Yes |
| [Climatiq](https://docs.climatiq.io) | Calculate the environmental footprint created by a broad range of emission-generating activities | `apiKey` | Yes | Yes |
| [Cloverly](https://www.cloverly.com/carbon-offset-documentation) | API calculates the impact of common carbon-intensive activities in real time | `apiKey` | Yes | Unknown |
| [CO2 Offset](https://co2offset.io/api.html) | API calculates and validates the carbon footprint | No | Yes | Unknown |
| [Danish data service Energi](https://www.energidataservice.dk/) | Open energy data from Energinet to society | No | Yes | Unknown |
| [GrünstromIndex](https://gruenstromindex.de/) | Green Power Index for Germany (Grünstromindex/GSI) | No | No | Yes |
| [IQAir](https://www.iqair.com/air-pollution-data-api) | Air quality and weather data | `apiKey` | Yes | Unknown |
| [Luchtmeetnet](https://api-docs.luchtmeetnet.nl/) | Predicted and actual air quality components for The Netherlands (RIVM) | No | Yes | Unknown |
| [National Grid ESO](https://data.nationalgrideso.com/) | Open data from Great Britain’s Electricity System Operator | No | Yes | Unknown |
| [OpenAQ](https://docs.openaq.org/) | Open air quality data | `apiKey` | Yes | Unknown |
| [PM2.5 Open Data Portal](https://pm25.lass-net.org/#apis) | Open low-cost PM2.5 sensor data | No | Yes | Unknown |
| [PM25.in](http://www.pm25.in/api_doc) | Air quality of China | `apiKey` | No | Unknown |
| [PVWatts](https://developer.nrel.gov/docs/solar/pvwatts/v6/) | Energy production photovoltaic (PV) energy systems | `apiKey` | Yes | Unknown |
| [Srp Energy](https://srpenergy-api-client-python.readthedocs.io/en/latest/api.html) | Hourly usage energy report for Srp customers | `apiKey` | Yes | No |
| [UK Carbon Intensity](https://carbon-intensity.github.io/api-definitions/#carbon-intensity-api-v1-0-0) | The Official Carbon Intensity API for Great Britain developed by National Grid | No | Yes | Unknown |
| [Website Carbon](https://api.websitecarbon.com/) | API to estimate the carbon footprint of loading web pages | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Events
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Eventbrite](https://www.eventbrite.com/platform/api/) | Find events | `OAuth` | Yes | Unknown |
| [SeatGeek](https://platform.seatgeek.com/) | Search events, venues and performers | `apiKey` | Yes | Unknown |
| [Ticketmaster](http://developer.ticketmaster.com/products-and-docs/apis/getting-started/) | Search events, attractions, or venues | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Finance
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Abstract VAT Validation](https://www.abstractapi.com/vat-validation-rates-api) | Validate VAT numbers and calculate VAT rates | `apiKey` | Yes | Yes |
| [Aletheia](https://aletheiaapi.com/) | Insider trading data, earnings call analysis, financial statements, and more | `apiKey` | Yes | Yes |
| [Alpaca](https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/) | Realtime and historical market data on all US equities and ETFs | `apiKey` | Yes | Yes |
| [Alpha Vantage](https://www.alphavantage.co/) | Realtime and historical stock data | `apiKey` | Yes | Unknown |
| [apilayer marketstack](https://marketstack.com/) | Real-Time, Intraday & Historical Market Data API | `apiKey` | Yes | Unknown |
| [Banco do Brasil](https://developers.bb.com.br/home) | All Banco do Brasil financial transaction APIs | `OAuth` | Yes | Yes |
| [Bank Data API](https://apilayer.com/marketplace/bank_data-api) | Instant IBAN and SWIFT number validation across the globe | `apiKey` | Yes | Unknown |
| [Billplz](https://www.billplz.com/api) | Payment platform | `apiKey` | Yes | Unknown |
| [Binlist](https://binlist.net/) | Public access to a database of IIN/BIN information | No | Yes | Unknown |
| [Boleto.Cloud](https://boleto.cloud/) | A api to generate boletos in Brazil | `apiKey` | Yes | Unknown |
| [Citi](https://sandbox.developerhub.citi.com/api-catalog-list) | All Citigroup account and statement data APIs | `apiKey` | Yes | Unknown |
| [Econdb](https://www.econdb.com/api/) | Global macroeconomic data | No | Yes | Yes |
| [Fed Treasury](https://fiscaldata.treasury.gov/api-documentation/) | U.S. Department of the Treasury Data | No | Yes | Unknown |
| [Finage](https://finage.co.uk) | Finage is a stock, currency, cryptocurrency, indices, and ETFs real-time & historical data provider | `apiKey` | Yes | Unknown |
| [Financial Modeling Prep](https://site.financialmodelingprep.com/developer/docs) | Realtime and historical stock data | `apiKey` | Yes | Unknown |
| [Finnhub](https://finnhub.io/docs/api) | Real-Time RESTful APIs and Websocket for Stocks, Currencies, and Crypto | `apiKey` | Yes | Unknown |
| [FRED](https://fred.stlouisfed.org/docs/api/fred/) | Economic data from the Federal Reserve Bank of St. Louis | `apiKey` | Yes | Yes |
| [Front Accounting APIs](https://frontaccounting.com/fawiki/index.php?n=Devel.SimpleAPIModule) | Front accounting is multilingual and multicurrency software for small businesses | `OAuth` | Yes | Yes |
| [Hotstoks](https://hotstoks.com?utm_source=public-apis) | Stock market data powered by SQL | `apiKey` | Yes | Yes |
| [IEX Cloud](https://iexcloud.io/docs/api/) | Realtime & Historical Stock and Market Data | `apiKey` | Yes | Yes |
| [IG](https://labs.ig.com/gettingstarted) | Spreadbetting and CFD Market Data | `apiKey` | Yes | Unknown |
| [Indian Mutual Fund](https://www.mfapi.in/) | Get complete history of India Mutual Funds Data | No | Yes | Unknown |
| [Intrinio](https://intrinio.com/) | A wide selection of financial data feeds | `apiKey` | Yes | Unknown |
| [Klarna](https://docs.klarna.com/klarna-payments/api/payments-api/) | Klarna payment and shopping service | `apiKey` | Yes | Unknown |
| [MercadoPago](https://www.mercadopago.com.br/developers/es/reference) | Mercado Pago API reference - all the information you need to develop your integrations | `apiKey` | Yes | Unknown |
| [Mono](https://mono.co/) | Connect with users’ bank accounts and access transaction data in Africa | `apiKey` | Yes | Unknown |
| [Moov](https://docs.moov.io/api/) | The Moov API makes it simple for platforms to send, receive, and store money | `apiKey` | Yes | Unknown |
| [Nordigen](https://nordigen.com/en/account_information_documenation/integration/quickstart_guide/) | Connect to bank accounts using official bank APIs and get raw transaction data | `apiKey` | Yes | Unknown |
| [OpenFIGI](https://www.openfigi.com/api) | Equity, index, futures, options symbology from Bloomberg LP | `apiKey` | Yes | Yes |
| [Plaid](https://plaid.com/) | Connect with user's bank accounts and access transaction data | `apiKey` | Yes | Unknown |
| [Polygon](https://polygon.io/) | Historical stock market data | `apiKey` | Yes | Unknown |
| [Portfolio Optimizer](https://portfoliooptimizer.io/) | Portfolio analysis and optimization | No | Yes | Yes |
| [Razorpay IFSC](https://razorpay.com/docs/) | Indian Financial Systems Code (Bank Branch Codes) | No | Yes | Unknown |
| [Real Time Finance](https://github.com/Real-time-finance/finance-websocket-API/) | Websocket API to access realtime stock data | `apiKey` | No | Unknown |
| [SEC EDGAR Data](https://www.sec.gov/edgar/sec-api-documentation) | API to access annual reports of public US companies | No | Yes | Yes |
| [SmartAPI](https://smartapi.angelbroking.com/) | Gain access to set of <SmartAPI> and create end-to-end broking services | `apiKey` | Yes | Unknown |
| [StockData](https://www.StockData.org) | Real-Time, Intraday & Historical Market Data, News and Sentiment API | `apiKey` | Yes | Yes |
| [Styvio](https://www.Styvio.com) | Realtime and historical stock data and current stock sentiment | `apiKey` | Yes | Unknown |
| [Tax Data API](https://apilayer.com/marketplace/tax_data-api) | Instant VAT number and tax validation across the globe | `apiKey` | Yes | Unkown |
| [Tradier](https://developer.tradier.com) | US equity/option market data (delayed, intraday, historical) | `OAuth` | Yes | Yes |
| [Twelve Data](https://twelvedata.com/) | Stock market data (real-time & historical) | `apiKey` | Yes | Unknown |
| [WallstreetBets](https://dashboard.nbshare.io/apps/reddit/api/) | WallstreetBets Stock Comments Sentiment Analysis | No | Yes | Unknown |
| [Yahoo Finance](https://www.yahoofinanceapi.com/) | Real time low latency Yahoo Finance API for stock market, crypto currencies, and currency exchange | `apiKey` | Yes | Yes |
| [YNAB](https://api.youneedabudget.com/) | Budgeting & Planning | `OAuth` | Yes | Yes |
| [Zoho Books](https://www.zoho.com/books/api/v3/) | Online accounting software, built for your business | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Food & Drink
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [BaconMockup](https://baconmockup.com/) | Resizable bacon placeholder images | No | Yes | Yes |
| [Chomp](https://chompthis.com/api/) | Data about various grocery products and foods | `apiKey` | Yes | Unknown |
| [Coffee](https://coffee.alexflipnote.dev/) | Random pictures of coffee | No | Yes | Unknown |
| [Edamam nutrition](https://developer.edamam.com/edamam-docs-nutrition-api) | Nutrition Analysis | `apiKey` | Yes | Unknown |
| [Edamam recipes](https://developer.edamam.com/edamam-docs-recipe-api) | Recipe Search | `apiKey` | Yes | Unknown |
| [Foodish](https://github.com/surhud004/Foodish#readme) | Random pictures of food dishes | No | Yes | Yes |
| [Fruityvice](https://www.fruityvice.com) | Data about all kinds of fruit | No | Yes | Unknown |
| [Kroger](https://developer.kroger.com/reference) | Supermarket Data | `apiKey` | Yes | Unknown |
| [LCBO](https://lcboapi.com/) | Alcohol | `apiKey` | Yes | Unknown |
| [Open Brewery DB](https://www.openbrewerydb.org) | Breweries, Cideries and Craft Beer Bottle Shops | No | Yes | Yes |
| [Open Food Facts](https://world.openfoodfacts.org/data) | Food Products Database | No | Yes | Unknown |
| [PunkAPI](https://punkapi.com/) | Brewdog Beer Recipes | No | Yes | Unknown |
| [Rustybeer](https://rustybeer.herokuapp.com/) | Beer brewing tools | No | Yes | No |
| [Spoonacular](https://spoonacular.com/food-api) | Recipes, Food Products, and Meal Planning | `apiKey` | Yes | Unknown |
| [Systembolaget](https://api-portal.systembolaget.se) | Govornment owned liqour store in Sweden | `apiKey` | Yes | Unknown |
| [TacoFancy](https://github.com/evz/tacofancy-api) | Community-driven taco database | No | No | Unknown |
| [Tasty](https://rapidapi.com/apidojo/api/tasty/) | API to query data about recipe, plan, ingredients | `apiKey` | Yes | Unknown |
| [The Report of the Week](https://github.com/andyklimczak/TheReportOfTheWeek-API) | Food & Drink Reviews | No | Yes | Unknown |
| [TheCocktailDB](https://www.thecocktaildb.com/api.php) | Cocktail Recipes | `apiKey` | Yes | Yes |
| [TheMealDB](https://www.themealdb.com/api.php) | Meal Recipes | `apiKey` | Yes | Yes |
| [Untappd](https://untappd.com/api/docs) | Social beer sharing | `OAuth` | Yes | Unknown |
| [What's on the menu?](http://nypl.github.io/menus-api/) | NYPL human-transcribed historical menu collection | `apiKey` | No | Unknown |
| [WhiskyHunter](https://whiskyhunter.net/api/) | Past online whisky auctions statistical data | No | Yes | Unknown |
| [Zestful](https://zestfuldata.com/) | Parse recipe ingredients | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Games & Comics
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Age of Empires II](https://age-of-empires-2-api.herokuapp.com) | Get information about Age of Empires II resources | No | Yes | No |
| [AmiiboAPI](https://amiiboapi.com/) | Nintendo Amiibo Information | No | Yes | Yes |
| [Animal Crossing: New Horizons](http://acnhapi.com/) | API for critters, fossils, art, music, furniture and villagers | No | Yes | Unknown |
| [Autochess VNG](https://github.com/didadadida93/autochess-vng-api) | Rest Api for Autochess VNG | No | Yes | Yes |
| [Barter.VG](https://github.com/bartervg/barter.vg/wiki) | Provides information about Game, DLC, Bundles, Giveaways, Trading | No | Yes | Yes |
| [Battle.net](https://develop.battle.net/documentation/guides/getting-started) | Diablo III, Hearthstone, StarCraft II and World of Warcraft game data APIs | `OAuth` | Yes | Yes |
| [Board Game Geek](https://boardgamegeek.com/wiki/page/BGG_XML_API2) | Board games, RPG and videogames | No | Yes | No |
| [Brawl Stars](https://developer.brawlstars.com) | Brawl Stars Game Information | `apiKey` | Yes | Unknown |
| [Bugsnax](https://www.bugsnaxapi.com/) | Get information about Bugsnax | No | Yes | Yes |
| [CheapShark](https://www.cheapshark.com/api) | Steam/PC Game Prices and Deals | No | Yes | Yes |
| [Chess.com](https://www.chess.com/news/view/published-data-api) | Chess.com read-only REST API | No | Yes | Unknown |
| [Chuck Norris Database](http://www.icndb.com/api/) | Jokes | No | No | Unknown |
| [Clash of Clans](https://developer.clashofclans.com) | Clash of Clans Game Information | `apiKey` | Yes | Unknown |
| [Clash Royale](https://developer.clashroyale.com) | Clash Royale Game Information | `apiKey` | Yes | Unknown |
| [Comic Vine](https://comicvine.gamespot.com/api/documentation) | Comics | No | Yes | Unknown |
| [Crafatar](https://crafatar.com) | API for Minecraft skins and faces | No | Yes | Yes |
| [Cross Universe](https://crossuniverse.psychpsyo.com/apiDocs.html) | Cross Universe Card Data | No | Yes | Yes |
| [Deck of Cards](http://deckofcardsapi.com/) | Deck of Cards | No | No | Unknown |
| [Destiny The Game](https://bungie-net.github.io/multi/index.html) | Bungie Platform API | `apiKey` | Yes | Unknown |
| [Digimon Information](https://digimon-api.vercel.app/) | Provides information about digimon creatures | No | Yes | Unknown |
| [Digimon TCG](https://documenter.getpostman.com/view/14059948/TzecB4fH) | Search for Digimon cards in digimoncard.io | No | Yes | Unknown |
| [Disney](https://disneyapi.dev) | Information of Disney characters | No | Yes | Yes |
| [Dota 2](https://docs.opendota.com/) | Provides information about Player stats , Match stats, Rankings for Dota 2 | `apiKey` | Yes | Unknown |
| [Dungeons and Dragons](https://www.dnd5eapi.co/docs/) | Reference for 5th edition spells, classes, monsters, and more | No | No | No |
| [Dungeons and Dragons (Alternate)](https://open5e.com/) | Includes all monsters and spells from the SRD (System Reference Document) as well as a search API | No | Yes | Yes |
| [Eve Online](https://esi.evetech.net/ui) | Third-Party Developer Documentation | `OAuth` | Yes | Unknown |
| [FFXIV Collect](https://ffxivcollect.com/) | Final Fantasy XIV data on collectables | No | Yes | Yes |
| [FIFA Ultimate Team](https://www.easports.com/fifa/ultimate-team/api/fut/item) | FIFA Ultimate Team items API | No | Yes | Unknown |
| [Final Fantasy XIV](https://xivapi.com/) | Final Fantasy XIV Game data API | No | Yes | Yes |
| [Fortnite](https://fortnitetracker.com/site-api) | Fortnite Stats | `apiKey` | Yes | Unknown |
| [Forza](https://docs.forza-api.tk) | Show random image of car from Forza | No | Yes | Unknown |
| [FreeToGame](https://www.freetogame.com/api-doc) | Free-To-Play Games Database | No | Yes | Yes |
| [Fun Facts](https://asli-fun-fact-api.herokuapp.com/) | Random Fun Facts | No | Yes | Yes |
| [FunTranslations](https://api.funtranslations.com/) | Translate Text into funny languages | No | Yes | Yes |
| [GamerPower](https://www.gamerpower.com/api-read) | Game Giveaways Tracker | No | Yes | Yes |
| [GDBrowser](https://gdbrowser.com/api) | Easy way to use the Geometry Dash Servers | No | Yes | Unknown |    
| [Geek-Jokes](https://github.com/sameerkumar18/geek-joke-api) | Fetch a random geeky/programming related joke for use in all sorts of applications | No | Yes | Yes |
| [Genshin Impact](https://genshin.dev) | Genshin Impact game data | No | Yes | Yes |
| [Giant Bomb](https://www.giantbomb.com/api/documentation) | Video Games | `apiKey` | Yes | Unknown |
| [GraphQL Pokemon](https://github.com/favware/graphql-pokemon) | GraphQL powered Pokemon API. Supports generations 1 through 8 | No | Yes | Yes |
| [Guild Wars 2](https://wiki.guildwars2.com/wiki/API:Main) | Guild Wars 2 Game Information | `apiKey` | Yes | Unknown |
| [GW2Spidy](https://github.com/rubensayshi/gw2spidy/wiki) | GW2Spidy API, Items data on the Guild Wars 2 Trade Market | No | Yes | Unknown |
| [Halo](https://developer.haloapi.com/) | Halo 5 and Halo Wars 2 Information | `apiKey` | Yes | Unknown |
| [Hearthstone](http://hearthstoneapi.com/) | Hearthstone Cards Information | `X-Mashape-Key` | Yes | Unknown |
| [Humble Bundle](https://rapidapi.com/Ziggoto/api/humble-bundle) | Humble Bundle's current bundles | `apiKey` | Yes | Unknown |
| [Humor](https://humorapi.com) | Humor, Jokes, and Memes | `apiKey` | Yes | Unknown |
| [Hypixel](https://api.hypixel.net/) | Hypixel player stats | `apiKey` | Yes | Unknown |
| [Hyrule Compendium](https://github.com/gadhagod/Hyrule-Compendium-API) | Data on all interactive items from The Legend of Zelda: BOTW | No | Yes | Unknown |
| [Hytale](https://hytale-api.com/) | Hytale blog posts and jobs | No | Yes | Unknown |
| [IGDB.com](https://api-docs.igdb.com) | Video Game Database | `apiKey` | Yes | Unknown |
| [JokeAPI](https://sv443.net/jokeapi/v2/) | Programming, Miscellaneous and Dark Jokes | No | Yes | Yes |
| [Jokes One](https://jokes.one/api/joke/) | Joke of the day and large category of jokes accessible via REST API | `apiKey` | Yes | Yes |
| [Jservice](http://jservice.io) | Jeopardy Question Database | No | No | Unknown |
| [Lichess](https://lichess.org/api) | Access to all data of users, games, puzzles and etc on Lichess | `OAuth` | Yes | Unknown |
| [Magic The Gathering](http://magicthegathering.io/) | Magic The Gathering Game Information | No | No | Unknown |
| [Mario Kart Tour](https://mario-kart-tour-api.herokuapp.com/) | API for Drivers, Karts, Gliders and Courses | `OAuth` | Yes | Unknown |
| [Marvel](https://developer.marvel.com) | Marvel Comics | `apiKey` | Yes | Unknown |
| [Minecraft Server Status](https://api.mcsrvstat.us) | API to get Information about a Minecraft Server | No | Yes | No |    
| [MMO Games](https://www.mmobomb.com/api) | MMO Games Database, News and Giveaways | No | Yes | No |
| [mod.io](https://docs.mod.io) | Cross Platform Mod API | `apiKey` | Yes | Unknown |
| [Mojang](https://wiki.vg/Mojang_API) | Mojang / Minecraft API | `apiKey` | Yes | Unknown |
| [Monster Hunter World](https://docs.mhw-db.com/) | Monster Hunter World data | No | Yes | Yes |
| [Open Trivia](https://opentdb.com/api_config.php) | Trivia Questions | No | Yes | Unknown |
| [PandaScore](https://developers.pandascore.co/) | E-sports games and results | `apiKey` | Yes | Unknown |
| [Path of Exile](https://www.pathofexile.com/developer/docs) | Path of Exile Game Information | `OAuth` | Yes | Unknown |
| [PlayerDB](https://playerdb.co/) | Query Minecraft, Steam and XBox Accounts | No | Yes | Unknown |
| [Pokéapi](https://pokeapi.co) | Pokémon Information | No | Yes | Unknown |
| [PokéAPI (GraphQL)](https://github.com/mazipan/graphql-pokeapi) | The Unofficial GraphQL for PokeAPI | No | Yes | Yes |
| [Pokémon TCG](https://pokemontcg.io) | Pokémon TCG Information | No | Yes | Unknown |
| [Psychonauts](https://psychonauts-api.netlify.app/) | Psychonauts World Characters Information and PSI Powers | No | Yes | Yes |
| [PUBG](https://developer.pubg.com/) | Access in-game PUBG data | `apiKey` | Yes | Yes |
| [Puyo Nexus](https://github.com/deltadex7/puyodb-api-deno) | Puyo Puyo information from Puyo Nexus Wiki | No | Yes | Yes |
| [quizapi.io](https://quizapi.io/) | Access to various kind of quiz questions | `apiKey` | Yes | Yes |
| [Raider](https://raider.io/api) | Provides detailed character and guild rankings for Raiding and Mythic+ content in World of Warcraft | No | Yes | Unknown |
| [RAWG.io](https://rawg.io/apidocs) | 500,000+ games for 50 platforms including mobiles | `apiKey` | Yes | Unknown |
| [Rick and Morty](https://rickandmortyapi.com) | All the Rick and Morty information, including images | No | Yes | Yes |
| [Riot Games](https://developer.riotgames.com/) | League of Legends Game Information | `apiKey` | Yes | Unknown |
| [RPS 101](https://rps101.pythonanywhere.com/api) | Rock, Paper, Scissors with 101 objects | No | Yes | Yes |
| [RuneScape](https://runescape.wiki/w/Application_programming_interface) | RuneScape and OSRS RPGs information | No | Yes | No |
| [Sakura CardCaptor](https://github.com/JessVel/sakura-card-captor-api) | Sakura CardCaptor Cards Information | No | Yes | Unknown |
| [Scryfall](https://scryfall.com/docs/api) | Magic: The Gathering database | No | Yes | Yes |
| [SpaceTradersAPI](https://spacetraders.io?rel=pub-apis) | A playable inter-galactic space trading MMOAPI | `OAuth` | Yes | Yes |
| [Steam](https://steamapi.xpaw.me/) | Steam Web API documentation | `apiKey` | Yes | No |
| [Steam](https://github.com/Revadike/InternalSteamWebAPI/wiki) | Internal Steam Web API documentation | No | Yes | No |
| [SuperHeroes](https://superheroapi.com) | All SuperHeroes and Villains data from all universes under a single API | `apiKey` | Yes | Unknown |
| [TCGdex](https://www.tcgdex.net/docs) | Multi languages Pokémon TCG Information | No | Yes | Yes |
| [Tebex](https://docs.tebex.io/plugin/) | Tebex API for information about game purchases | `X-Mashape-Key` | Yes | No |
| [TETR.IO](https://tetr.io/about/api/) | TETR.IO Tetra Channel API | No | Yes | Unknown |
| [Tronald Dump](https://www.tronalddump.io/) | The dumbest things Donald Trump has ever said | No | Yes | Unknown |
| [Universalis](https://universalis.app/docs/index.html) | Final Fantasy XIV market board data | No | Yes | Yes |
| [Valorant (non-official)](https://valorant-api.com) | An extensive API containing data of most Valorant in-game items, assets and more | No | Yes | Unknown |
| [Warface (non-official)](https://api.wfstats.cf) | Official API proxy with better data structure and more features | No | Yes | No |
| [Wargaming.net](https://developers.wargaming.net/) | Wargaming.net info and stats | `apiKey` | Yes | No |
| [When is next MCU film](https://github.com/DiljotSG/MCU-Countdown/blob/develop/docs/API.md) | Upcoming MCU film information | No | Yes | Unknown |
| [xkcd](https://xkcd.com/json.html) | Retrieve xkcd comics as JSON | No | Yes | No |
| [Yu-Gi-Oh!](https://db.ygoprodeck.com/api-guide/) | Yu-Gi-Oh! TCG Information | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Geocoding
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Abstract IP Geolocation](https://www.abstractapi.com/ip-geolocation-api) | Geolocate website visitors from their IPs | `apiKey` | Yes | Yes |
| [Actinia Grass GIS](https://actinia.mundialis.de/api_docs/) | Actinia is an open source REST API for geographical data that uses GRASS GIS | `apiKey` | Yes | Unknown |
| [administrative-divisons-db](https://github.com/kamikazechaser/administrative-divisions-db) | Get all administrative divisions of a country | No | Yes | Yes |
| [adresse.data.gouv.fr](https://adresse.data.gouv.fr) | Address database of France, geocoding and reverse | No | Yes | Unknown |
| [Airtel IP](https://sys.airtel.lv/ip2country/1.1.1.1/?full=true) | IP Geolocation API. Collecting data from multiple sources | No | Yes | Unknown |
| [Apiip](https://apiip.net/) | Get location information by IP address | `apiKey` | Yes | Yes |
| [apilayer ipstack](https://ipstack.com/) | Locate and identify website visitors by IP address | `apiKey` | Yes | Unknown |
| [Battuta](http://battuta.medunes.net) | A (country/region/city) in-cascade location API | `apiKey` | No | Unknown |
| [BigDataCloud](https://www.bigdatacloud.com/ip-geolocation-apis) | Provides fast and accurate IP geolocation APIs along with security checks and confidence area | `apiKey` | Yes | Unknown |
| [Bing Maps](https://www.microsoft.com/maps/) | Create/customize digital maps based on Bing Maps data | `apiKey` | Yes | Unknown |
| [bng2latlong](https://www.getthedata.com/bng2latlong) | Convert British OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude | No | Yes | Yes |
| [Cartes.io](https://github.com/M-Media-Group/Cartes.io/wiki/API) | Create maps and markers for anything | No | Yes | Unknown |
| [Cep.la](http://cep.la/) | Brazil RESTful API to find information about streets, zip codes, neighborhoods, cities and states | No | No | Unknown |
| [CitySDK](http://www.citysdk.eu/citysdk-toolkit/) | Open APIs for select European cities | No | Yes | Unknown |
| [Country](http://country.is/) | Get your visitor's country from their IP | No | Yes | Yes |
| [CountryStateCity](https://countrystatecity.in/) | World countries, states, regions, provinces, cities & towns in JSON, SQL, XML, YAML, & CSV format | `apiKey` | Yes | Yes |
| [Ducks Unlimited](https://gis.ducks.org/datasets/du-university-chapters/api) | API explorer that gives a query URL with a JSON response of locations and cities | No | Yes | No |
| [FreeGeoIP](https://freegeoip.app/) | Free geo ip information, no registration required. 15k/hour rate limit | No | Yes | Yes |
| [GeoApi](https://api.gouv.fr/api/geoapi.html) | French geographical data | No | Yes | Unknown |
| [Geoapify](https://www.geoapify.com/api/geocoding-api/) | Forward and reverse geocoding, address autocomplete | `apiKey` | Yes | Yes |
| [Geocod.io](https://www.geocod.io/) | Address geocoding / reverse geocoding in bulk | `apiKey` | Yes | Unknown |
| [Geocode.xyz](https://geocode.xyz/api) | Provides worldwide forward/reverse geocoding, batch geocoding and geoparsing | No | Yes | Unknown |
| [Geocodify.com](https://geocodify.com/) | Worldwide geocoding, geoparsing and autocomplete for addresses | `apiKey` | Yes | Yes |
| [Geodata.gov.gr](https://geodata.gov.gr/en/) | Open geospatial data and API service for Greece | No | Yes | Unknown |
| [GeoDataSource](https://www.geodatasource.com/web-service) | Geocoding of city name by using latitude and longitude coordinates | `apiKey` | Yes | Unknown |
| [GeoDB Cities](http://geodb-cities-api.wirefreethought.com/) | Get global city, region, and country data | `apiKey` | Yes | Unknown |
| [GeographQL](https://geographql.netlify.app) | A Country, State, and City GraphQL API | No | Yes | Yes |
| [GeoJS](https://www.geojs.io/) | IP geolocation with ChatOps integration | No | Yes | Yes |
| [Geokeo](https://geokeo.com) | Geokeo geocoding service- with 2500 free api requests daily | No | Yes | Yes |
| [GeoNames](http://www.geonames.org/export/web-services.html) | Place names and other geographical data | No | No | Unknown |
| [geoPlugin](https://www.geoplugin.com) | IP geolocation and currency conversion | No | Yes | Yes |
| [Google Earth Engine](https://developers.google.com/earth-engine/) | A cloud-based platform for planetary-scale environmental data analysis | `apiKey` | Yes | Unknown |
| [Google Maps](https://developers.google.com/maps/) | Create/customize digital maps based on Google Maps data | `apiKey` | Yes | Unknown |
| [Graph Countries](https://github.com/lennertVanSever/graphcountries) | Country-related data like currencies, languages, flags, regions+subregions and bordering countries | No | Yes | Unknown |
| [HelloSalut](https://fourtonfish.com/project/hellosalut-api/) | Get hello translation following user language | No | Yes | Unknown |
| [HERE Maps](https://developer.here.com) | Create/customize digital maps based on HERE Maps data | `apiKey` | Yes | Unknown |
| [Hirak IP to Country](https://iplocation.hirak.site/) | Ip to location with country code, currency code & currency name, fast response, unlimited requests | `apiKey` | Yes | Unknown |
| [Hong Kong GeoData Store](https://geodata.gov.hk/gs/) | API for accessing geo-data of Hong Kong | No | Yes | Unknown |
| [IBGE](https://servicodados.ibge.gov.br/api/docs/) | Aggregate services of IBGE (Brazilian Institute of Geography and Statistics) | No | Yes | Unknown |
| [IP 2 Country](https://ip2country.info) | Map an IP to a country | No | Yes | Unknown |
| [IP Address Details](https://ipinfo.io/) | Find geolocation with ip address | No | Yes | Unknown |
| [IP Vigilante](https://www.ipvigilante.com/) | Free IP Geolocation API | No | Yes | Unknown |
| [ip-api](https://ip-api.com/docs) | Find location with IP address or domain | No | No | Unknown |
| [IP2Location](https://www.ip2location.com/web-service/ip2location) | IP geolocation web service to get more than 55 parameters | `apiKey` | Yes | Unknown |
| [IP2Proxy](https://www.ip2location.com/web-service/ip2proxy) | Detect proxy and VPN using IP address | `apiKey` | Yes | Unknown |
| [ipapi.co](https://ipapi.co/api/#introduction) | Find IP address location information | No | Yes | Yes |
| [ipapi.com](https://ipapi.com/) | Real-time Geolocation & Reverse IP Lookup REST API | `apiKey` | Yes | Unknown |
| [IPGEO](https://api.techniknews.net/ipgeo/) | Unlimited free IP Address API with useful information | No | Yes | Unknown |
| [ipgeolocation](https://ipgeolocation.io/) | IP Geolocation AP with free plan 30k requests per month | `apiKey` | Yes | Yes |
| [IPInfoDB](https://www.ipinfodb.com/api) | Free Geolocation tools and APIs for country, region, city and time zone lookup by IP address | `apiKey` | Yes | Unknown |
| [Kakao Maps](https://apis.map.kakao.com) | Kakao Maps provide multiple APIs for Korean maps | `apiKey` | Yes | Unknown |
| [keycdn IP Location Finder](https://tools.keycdn.com/geo) | Get the IP geolocation data through the simple REST API. All the responses are JSON encoded | `apiKey` | Yes | Unknown |
| [LocationIQ](https://locationiq.org/docs/) | Provides forward/reverse geocoding and batch geocoding | `apiKey` | Yes | Yes |
| [Longdo Map](https://map.longdo.com/docs/) | Interactive map with detailed places and information portal in Thailand | `apiKey` | Yes | Yes |
| [Mapbox](https://docs.mapbox.com/) | Create/customize beautiful digital maps | `apiKey` | Yes | Unknown |
| [MapQuest](https://developer.mapquest.com/) | To access tools and resources to map the world | `apiKey` | Yes | No | Yes
| [Mexico](https://github.com/IcaliaLabs/sepomex) | Mexico RESTful zip codes API | No | Yes | Unknown |
| [Nominatim](https://nominatim.org/release-docs/latest/api/Overview/) | Provides worldwide forward / reverse geocoding | No | Yes | Yes |
| [One Map, Singapore](https://www.onemap.gov.sg/docs/) | Singapore Land Authority REST API services for Singapore addresses | `apiKey` | Yes | Unknown |
| [OnWater](https://onwater.io/) | Determine if a lat/lon is on water or land | No | Yes | Unknown |
| [Open Topo Data](https://www.opentopodata.org) | Elevation and ocean depth for a latitude and longitude | No | Yes | No |
| [OpenCage](https://opencagedata.com) | Forward and reverse geocoding using open data | `apiKey` | Yes | Yes |
| [openrouteservice.org](https://openrouteservice.org/) | Directions, POIs, isochrones, geocoding (+reverse), elevation, and more | `apiKey` | Yes | Unknown |
| [OpenStreetMap](http://wiki.openstreetmap.org/wiki/API) | Navigation, geolocation and geographical data | `OAuth` | No | Unknown |
| [Pinball Map](https://pinballmap.com/api/v1/docs) | A crowdsourced map of public pinball machines | No | Yes | Yes |
| [positionstack](https://positionstack.com/) | Forward & Reverse Batch Geocoding REST API | `apiKey` | Yes | Unknown |
| [Postali](https://postali.app/api) | Mexico Zip Codes API | No | Yes | Yes |
| [PostcodeData.nl](http://api.postcodedata.nl/v1/postcode/?postcode=1211EP&streetnumber=60&ref=domeinnaam.nl&type=json) | Provide geolocation data based on postcode for Dutch addresses | No | No | Unknown |
| [Postcodes.io](https://postcodes.io) | Postcode lookup & Geolocation for the UK | No | Yes | Yes |
| [Queimadas INPE](https://queimadas.dgi.inpe.br/queimadas/dados-abertos/) | Access to heat focus data (probable wildfire) | No | Yes | Unknown |
| [REST Countries](https://restcountries.com) | Get information about countries via a RESTful API | No | Yes | Yes |
| [RoadGoat Cities](https://www.roadgoat.com/business/cities-api) | Cities content & photos API | `apiKey` | Yes | No |
| [Rwanda Locations](https://rapidapi.com/victorkarangwa4/api/rwanda) | Rwanda Provences, Districts, Cities, Capital City, Sector, cells, villages and streets | No | Yes | Unknown |
| [SLF](https://github.com/slftool/slftool.github.io/blob/master/API.md) | German city, country, river, database | No | Yes | Yes |
| [SpotSense](https://spotsense.io/) | Add location based interactions to your mobile app | `apiKey` | Yes | Unknown |
| [Telize](https://rapidapi.com/fcambus/api/telize/) | Telize offers location information from any IP address | `apiKey` | Yes | Yes |
| [TomTom](https://developer.tomtom.com/) | Maps, Directions, Places and Traffic APIs | `apiKey` | Yes | Yes |
| [Uebermaps](https://uebermaps.com/api/v2) | Discover and share maps with friends | `apiKey` | Yes | Unknown |
| [US ZipCode](https://www.smarty.com/docs/cloud/us-zipcode-api) | Validate and append data for any US ZipCode | `apiKey` | Yes | Yes |
| [Utah AGRC](https://api.mapserv.utah.gov) | Utah Web API for geocoding Utah addresses | `apiKey` | Yes | Unknown |
| [ViaCep](https://viacep.com.br) | Brazil RESTful zip codes API | No | Yes | Unknown |
| [What3Words](https://what3words.com) | Three words as rememberable and unique coordinates worldwide | `apiKey` | Yes | Unknown |
| [Yandex.Maps Geocoder](https://yandex.com/dev/maps/geocoder) | Use geocoding to get an object's coordinates from its address | `apiKey` | Yes | Unknown |
| [ZipCodeAPI](https://www.zipcodeapi.com) | US zip code distance, radius and location API | `apiKey` | Yes | Unknown |
| [Zippopotam.us](http://www.zippopotam.us) | Get information about place such as country, city, state, etc | No | No | Unknown |
| [Ziptastic](https://ziptasticapi.com/) | Get the country, state, and city of any US zip-code | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Government
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Bank Negara Malaysia Open Data](https://apikijangportal.bnm.gov.my/) | Malaysia Central Bank Open Data | No | Yes | Unknown |
| [BCLaws](https://www.bclaws.gov.bc.ca/civix/template/complete/api/index.html) | Access to the laws of British Columbia | No | No | Unknown |
| [Brazil](https://brasilapi.com.br/) | Community driven API for Brazil Public Data | No | Yes | Yes |
| [Brazil Central Bank Open Data](https://dadosabertos.bcb.gov.br/) | Brazil Central Bank Open Data | No | Yes | Unknown |
| [Brazil Receita WS](https://www.receitaws.com.br/) | Consult companies by CNPJ for Brazilian companies | No | Yes | Unknown |
| [Brazilian Chamber of Deputies Open Data](https://dadosabertos.camara.leg.br/swagger/api.html) | Provides legislative information in Apis XML and JSON, as well as files in various formats | No | Yes | No |
| [Census.gov](https://www.census.gov/data/developers/data-sets.html) | The US Census Bureau provides various APIs and data sets on demographics and businesses | No | Yes | Unknown |
| [City, Berlin](https://daten.berlin.de/) | Berlin(DE) City Open Data | No | Yes | Unknown |
| [City, Gdańsk](https://ckan.multimediagdansk.pl/en) | Gdańsk (PL) City Open Data | No | Yes | Unknown |
| [City, Gdynia](http://otwartedane.gdynia.pl/en/api_doc.html) | Gdynia (PL) City Open Data | No | No | Unknown |
| [City, Helsinki](https://hri.fi/en_gb/) | Helsinki(FI) City Open Data | No | Yes | Unknown |
| [City, Lviv](https://opendata.city-adm.lviv.ua/) | Lviv(UA) City Open Data | No | Yes | Unknown |
| [City, Nantes Open Data](https://data.nantesmetropole.fr/pages/home/) | Nantes(FR) City Open Data | `apiKey` | Yes | Unknown |
| [City, New York Open Data](https://opendata.cityofnewyork.us/) | New York (US) City Open Data | No | Yes | Unknown |
| [City, Prague Open Data](http://opendata.praha.eu/en) | Prague(CZ) City Open Data | No | No | Unknown |
| [City, Toronto Open Data](https://open.toronto.ca/) | Toronto (CA) City Open Data | No | Yes | Yes |
| [Code.gov](https://code.gov) | The primary platform for Open Source and code sharing for the U.S. Federal Government | `apiKey` | Yes | Unknown |
| [Colorado Information Marketplace](https://data.colorado.gov/) | Colorado State Government Open Data | No | Yes | Unknown |
| [Data USA](https://datausa.io/about/api/) | US Public Data | No | Yes | Unknown |
| [Data.gov](https://api.data.gov/) | US Government Data | `apiKey` | Yes | Unknown |
| [Data.parliament.uk](https://explore.data.parliament.uk/?learnmore=Members) | Contains live datasets including information about petitions, bills, MP votes, attendance and more | No | No | Unknown |
| [Deutscher Bundestag DIP](https://dip.bundestag.de/documents/informationsblatt_zur_dip_api_v01.pdf) | This API provides read access to DIP entities (e.g. activities, persons, printed material) | `apiKey` | Yes | Unknown |
| [District of Columbia Open Data](http://opendata.dc.gov/pages/using-apis) | Contains D.C. government public datasets, including crime, GIS, financial data, and so on | No | Yes | Unknown |
| [EPA](https://www.epa.gov/developers/data-data-products#apis) | Web services and data sets from the US Environmental Protection Agency | No | Yes | Unknown |
| [FBI Wanted](https://www.fbi.gov/wanted/api) | Access information on the FBI Wanted program | No | Yes | Unknown |
| [FEC](https://api.open.fec.gov/developers/) | Information on campaign donations in federal elections | `apiKey` | Yes | Unknown |
| [Federal Register](https://www.federalregister.gov/reader-aids/developer-resources/rest-api) | The Daily Journal of the United States Government | No | Yes | Unknown |
| [Food Standards Agency](http://ratings.food.gov.uk/open-data/en-GB) | UK food hygiene rating data API | No | No | Unknown |
| [Gazette Data, UK](https://www.thegazette.co.uk/data) | UK official public record API | `OAuth` | Yes | Unknown |
| [Gun Policy](https://www.gunpolicy.org/api) | International firearm injury prevention and policy | `apiKey` | Yes | Unknown |
| [INEI](http://iinei.inei.gob.pe/microdatos/) | Peruvian Statistical Government Open Data | No | No | Unknown |
| [Interpol Red Notices](https://interpol.api.bund.dev/) | Access and search Interpol Red Notices | No | Yes | Unknown |
| [Istanbul (İBB) Open Data](https://data.ibb.gov.tr) | Data sets from the İstanbul Metropolitan Municipality (İBB) | No | Yes | Unknown |
| [National Park Service, US](https://www.nps.gov/subjects/developer/) | Data from the US National Park Service | `apiKey` | Yes | Yes |
| [Open Government, ACT](https://www.data.act.gov.au/) | Australian Capital Territory Open Data | No | Yes | Unknown |
| [Open Government, Argentina](https://datos.gob.ar/) | Argentina Government Open Data | No | Yes | Unknown |
| [Open Government, Australia](https://www.data.gov.au/) | Australian Government Open Data | No | Yes | Unknown |
| [Open Government, Austria](https://www.data.gv.at/) | Austria Government Open Data | No | Yes | Unknown |
| [Open Government, Belgium](https://data.gov.be/) | Belgium Government Open Data | No | Yes | Unknown |
| [Open Government, Canada](http://open.canada.ca/en) | Canadian Government Open Data | No | No | Unknown |
| [Open Government, Colombia](https://www.dane.gov.co/) | Colombia Government Open Data | No | No | Unknown |
| [Open Government, Cyprus](https://data.gov.cy/?language=en) | Cyprus Government Open Data | No | Yes | Unknown |
| [Open Government, Czech Republic](https://data.gov.cz/english/) | Czech Republic Government Open Data | No | Yes | Unknown |
| [Open Government, Denmark](https://www.opendata.dk/) | Denmark Government Open Data | No | Yes | Unknown |
| [Open Government, Estonia](https://avaandmed.eesti.ee/instructions/opendata-dataset-api) | Estonia Government Open Data | `apiKey` | Yes | Unknown |
| [Open Government, Finland](https://www.avoindata.fi/en) | Finland Government Open Data | No | Yes | Unknown |
| [Open Government, France](https://www.data.gouv.fr/) | French Government Open Data | `apiKey` | Yes | Unknown |
| [Open Government, Germany](https://www.govdata.de/daten/-/details/govdata-metadatenkatalog) | Germany Government Open Data | No | Yes | Unknown |
| [Open Government, Greece](https://data.gov.gr/) | Greece Government Open Data | `OAuth` | Yes | Unknown |
| [Open Government, India](https://data.gov.in/) | Indian Government Open Data | `apiKey` | Yes | Unknown |
| [Open Government, Ireland](https://data.gov.ie/pages/developers) | Ireland Government Open Data | No | Yes | Unknown |
| [Open Government, Italy](https://www.dati.gov.it/) | Italy Government Open Data | No | Yes | Unknown |
| [Open Government, Korea](https://www.data.go.kr/) | Korea Government Open Data | `apiKey` | Yes | Unknown |
| [Open Government, Lithuania](https://data.gov.lt/public/api/1) | Lithuania Government Open Data | No | Yes | Unknown |
| [Open Government, Luxembourg](https://data.public.lu) | Luxembourgish Government Open Data | `apiKey` | Yes | Unknown |
| [Open Government, Mexico](https://www.inegi.org.mx/datos/) | Mexican Statistical Government Open Data | No | Yes | Unknown |
| [Open Government, Mexico](https://datos.gob.mx/) | Mexico Government Open Data | No | Yes | Unknown |
| [Open Government, Netherlands](https://data.overheid.nl/en/ondersteuning/data-publiceren/api) | Netherlands Government Open Data | No | Yes | Unknown |
| [Open Government, New South Wales](https://api.nsw.gov.au/) | New South Wales Government Open Data | `apiKey` | Yes | Unknown |
| [Open Government, New Zealand](https://www.data.govt.nz/) | New Zealand Government Open Data | No | Yes | Unknown |
| [Open Government, Norway](https://data.norge.no/dataservices) | Norwegian Government Open Data | No | Yes | Yes |
| [Open Government, Peru](https://www.datosabiertos.gob.pe/) | Peru Government Open Data | No | Yes | Unknown |
| [Open Government, Poland](https://dane.gov.pl/en) | Poland Government Open Data | No | Yes | Yes |
| [Open Government, Portugal](https://dados.gov.pt/en/docapi/) | Portugal Government Open Data | No | Yes | Yes |
| [Open Government, Queensland Government](https://www.data.qld.gov.au/) | Queensland Government Open Data | No | Yes | Unknown |
| [Open Government, Romania](http://data.gov.ro/) | Romania Government Open Data | No | No | Unknown |
| [Open Government, Saudi Arabia](https://data.gov.sa) | Saudi Arabia Government Open Data | No | Yes | Unknown |
| [Open Government, Singapore](https://data.gov.sg/developer) | Singapore Government Open Data | No | Yes | Unknown |
| [Open Government, Slovakia](https://data.gov.sk/en/) | Slovakia Government Open Data | No | Yes | Unknown |
| [Open Government, Slovenia](https://podatki.gov.si/) | Slovenia Government Open Data | No | Yes | No |
| [Open Government, South Australian Government](https://data.sa.gov.au/) | South Australian Government Open Data | No | Yes | Unknown |
| [Open Government, Spain](https://datos.gob.es/en) | Spain Government Open Data | No | Yes | Unknown |
| [Open Government, Sweden](https://www.dataportal.se/en/dataservice/91_29789/api-for-the-statistical-database) | Sweden Government Open Data | No | Yes | Unknown |
| [Open Government, Switzerland](https://handbook.opendata.swiss/de/content/nutzen/api-nutzen.html) | Switzerland Government Open Data | No | Yes | Unknown |
| [Open Government, Taiwan](https://data.gov.tw/) | Taiwan Government Open Data | No | Yes | Unknown |
| [Open Government, Thailand](https://data.go.th/) | Thailand Government Open Data | `apiKey` | Yes | Unknown |
| [Open Government, UK](https://data.gov.uk/) | UK Government Open Data | No | Yes | Unknown |
| [Open Government, USA](https://www.data.gov/) | United States Government Open Data | No | Yes | Unknown |
| [Open Government, Victoria State Government](https://www.data.vic.gov.au/) | Victoria State Government Open Data | No | Yes | Unknown |
| [Open Government, West Australia](https://data.wa.gov.au/) | West Australia Open Data | No | Yes | Unknown |
| [PRC Exam Schedule](https://api.whenisthenextboardexam.com/docs/) | Unofficial Philippine Professional Regulation Commission's examination schedule | No | Yes | Yes |
| [Represent by Open North](https://represent.opennorth.ca/) | Find Canadian Government Representatives | No | Yes | Unknown |
| [UK Companies House](https://developer.company-information.service.gov.uk/) | UK Companies House Data from the UK government | `OAuth` | Yes | Unknown |
| [US Presidential Election Data by TogaTech](https://uselection.togatech.org/api/) | Basic candidate data and live electoral vote counts for top two parties in US presidential election | No | Yes | No |
| [USA.gov](https://www.usa.gov/developer) | Authoritative information on U.S. programs, events, services and more | `apiKey` | Yes | Unknown |
| [USAspending.gov](https://api.usaspending.gov/) | US federal spending data | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Health
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [CMS.gov](https://data.cms.gov/provider-data/) | Access to the data from the CMS - medicare.gov | `apiKey` | Yes | Unknown |
| [Coronavirus](https://pipedream.com/@pravin/http-api-for-latest-wuhan-coronavirus-data-2019-ncov-p_G6CLVM/readme) | HTTP API for Latest Covid-19 Data | No | Yes | Unknown |
| [Coronavirus in the UK](https://coronavirus.data.gov.uk/details/developers-guide) | UK Government coronavirus data, including deaths and cases by region | No | Yes | Unknown |
| [Covid Tracking Project](https://covidtracking.com/data/api/version-2) | Covid-19  data for the US | No | Yes | No |
| [Covid-19](https://covid19api.com/) | Covid 19 spread, infection and recovery | No | Yes | Yes |
| [Covid-19](https://github.com/M-Media-Group/Covid-19-API) | Covid 19 cases, deaths and recovery per country | No | Yes | Yes |
| [Covid-19 Datenhub](https://npgeo-corona-npgeo-de.hub.arcgis.com) | Maps, datasets, applications and more in the context of COVID-19 | No | Yes | Unknown |
| [Covid-19 Government Response](https://covidtracker.bsg.ox.ac.uk) | Government measures tracker to fight against the Covid-19 pandemic | No | Yes | Yes |
| [Covid-19 India](https://data.covid19india.org/) | Covid 19 statistics state and district wise about cases, vaccinations, recovery within India | No | Yes | Unknown |
| [Covid-19 JHU CSSE](https://nuttaphat.com/covid19-api/) | Open-source API for exploring Covid19 cases based on JHU CSSE | No | Yes | Yes |
| [Covid-19 Live Data](https://github.com/mathdroid/covid-19-api) | Global and countrywise data of Covid 19 daily Summary, confirmed cases, recovered and deaths | No | Yes | Yes |
| [Covid-19 Philippines](https://github.com/Simperfy/Covid-19-API-Philippines-DOH) | Unofficial Covid-19 Web API for Philippines from data collected by DOH | No | Yes | Yes |
| [COVID-19 Tracker Canada](https://api.covid19tracker.ca/docs/1.0/overview) | Details on Covid-19 cases across Canada | No | Yes | Unknown |
| [COVID-19 Tracker Sri Lanka](https://www.hpb.health.gov.lk/en/api-documentation) | Provides situation of the COVID-19 patients reported in Sri Lanka | No | Yes | Unknown |
| [COVID-ID](https://data.covid19.go.id/public/api/prov.json) | Indonesian government Covid data per province | No | Yes | Yes |
| [Dataflow Kit COVID-19](https://covid-19.dataflowkit.com) | COVID-19 live statistics into sites per hour | No | Yes | Unknown |
| [FoodData Central](https://fdc.nal.usda.gov/) | National Nutrient Database for Standard Reference | `apiKey` | Yes | Unknown |
| [Healthcare.gov](https://www.healthcare.gov/developers/) | Educational content about the US Health Insurance Marketplace | No | Yes | Unknown |
| [Humanitarian Data Exchange](https://data.humdata.org/) | Humanitarian Data Exchange (HDX) is open platform for sharing data across crises and organisations | No | Yes | Unknown |
| [Infermedica](https://developer.infermedica.com/docs/) | NLP based symptom checker and patient triage API for health diagnosis from text | `apiKey` | Yes | Yes |
| [LAPIS](https://cov-spectrum.ethz.ch/public) | SARS-CoV-2 genomic sequences from public sources | No | Yes | Yes |
| [Lexigram](https://docs.lexigram.io/) | NLP that extracts mentions of clinical concepts from text, gives access to clinical ontology | `apiKey` | Yes | Unknown |
| [Makeup](http://makeup-api.herokuapp.com/) | Makeup Information | No | No | Unknown |
| [MyVaccination](https://documenter.getpostman.com/view/16605343/Tzm8GG7u) | Vaccination data for Malaysia | No | Yes | Unknown |
| [NPPES](https://npiregistry.cms.hhs.gov/registry/help-api) | National Plan & Provider Enumeration System, info on healthcare providers registered in US | No | Yes | Unknown |
| [Nutritionix](https://developer.nutritionix.com/) | Worlds largest verified nutrition database | `apiKey` | Yes | Unknown |
| [Open Data NHS Scotland](https://www.opendata.nhs.scot) | Medical reference data and statistics by Public Health Scotland | No | Yes | Unknown |
| [Open Disease](https://disease.sh/) | API for Current cases and more stuff about COVID-19 and Influenza | No | Yes | Yes |
| [openFDA](https://open.fda.gov) | Public FDA data about drugs, devices and foods | `apiKey` | Yes | Unknown |
| [Orion Health](https://developer.orionhealth.io/) | Medical platform which allows the development of applications for different healthcare scenarios | `OAuth` | Yes | Unknown |
| [Quarantine](https://quarantine.country/coronavirus/api/) | Coronavirus API with free COVID-19 live updates | No | Yes | Yes |

**[⬆ Back to Index](#index)**
### Jobs
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Adzuna](https://developer.adzuna.com/overview) | Job board aggregator | `apiKey` | Yes | Unknown |
| [Arbeitnow](https://documenter.getpostman.com/view/18545278/UVJbJdKh) | API for Job board aggregator in Europe / Remote | No | Yes | Yes |
| [Arbeitsamt](https://jobsuche.api.bund.dev/) | API for the ""Arbeitsamt"", which is a german Job board aggregator | `OAuth` | Yes | Unknown |
| [Careerjet](https://www.careerjet.com/partners/api/) | Job search engine | `apiKey` | No | Unknown |
| [DevITjobs UK](https://devitjobs.uk/job_feed.xml) | Jobs with GraphQL | No | Yes | Yes |
| [Findwork](https://findwork.dev/developers/) | Job board | `apiKey` | Yes | Unknown |
| [GraphQL Jobs](https://graphql.jobs/docs/api/) | Jobs with GraphQL | No | Yes | Yes |
| [Jobs2Careers](http://api.jobs2careers.com/api/spec.pdf) | Job aggregator | `apiKey` | Yes | Unknown |
| [Jooble](https://jooble.org/api/about) | Job search engine | `apiKey` | Yes | Unknown |
| [Juju](http://www.juju.com/publisher/spec/) | Job search engine | `apiKey` | No | Unknown |
| [Open Skills](https://github.com/workforce-data-initiative/skills-api/wiki/API-Overview) | Job titles, skills and related jobs data | No | No | Unknown |
| [Reed](https://www.reed.co.uk/developers) | Job board aggregator | `apiKey` | Yes | Unknown |
| [The Muse](https://www.themuse.com/developers/api/v2) | Job board and company profiles | `apiKey` | Yes | Unknown |
| [Upwork](https://developers.upwork.com/) | Freelance job board and management system | `OAuth` | Yes | Unknown |
| [USAJOBS](https://developer.usajobs.gov/) | US government job board | `apiKey` | Yes | Unknown |
| [WhatJobs](https://www.whatjobs.com/affiliates) | Job search engine | `apiKey` | Yes | Unknown |
| [ZipRecruiter](https://www.ziprecruiter.com/publishers) | Job search app and website | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Machine Learning
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [AI For Thai](https://aiforthai.in.th/index.php) | Free Various Thai AI API | `apiKey` | Yes | Yes |
| [Clarifai](https://docs.clarifai.com/api-guide/api-overview) | Computer Vision | `OAuth` | Yes | Unknown |
| [Cloudmersive](https://www.cloudmersive.com/image-recognition-and-processing-api) | Image captioning, face recognition, NSFW classification | `apiKey` | Yes | Yes |
| [Deepcode](https://www.deepcode.ai) | AI for code review | No | Yes | Unknown |
| [Dialogflow](https://cloud.google.com/dialogflow/docs/) | Natural Language Processing | `apiKey` | Yes | Unknown |
| [EXUDE-API](http://uttesh.com/exude-api/) | Used for the primary ways for filtering the stopping, stemming words from the text data | No | Yes | Yes |
| [Hirak FaceAPI](https://faceapi.hirak.site/) | Face detection, face recognition with age estimation/gender estimation, accurate, no quota limits | `apiKey` | Yes | Unknown |    
| [Imagga](https://imagga.com/) | Image Recognition Solutions like Tagging, Visual Search, NSFW moderation | `apiKey` | Yes | Unknown |
| [Inferdo](https://rapidapi.com/user/inferdo) | Computer Vision services like Facial detection, Image labeling, NSFW classification | `apiKey` | Yes | Unknown |
| [IPS Online](https://docs.identity.ps/docs) | Face and License Plate Anonymization | `apiKey` | Yes | Unknown |
| [Irisnet](https://irisnet.de/api/) | Realtime content moderation API that blocks or blurs unwanted images in real-time | `apiKey` | Yes | Yes |
| [Keen IO](https://keen.io/) | Data Analytics | `apiKey` | Yes | Unknown |
| [Machinetutors](https://www.machinetutors.com/portfolio/MT_api.html) | AI Solutions: Video/Image Classification & Tagging, NSFW, Icon/Image/Audio Search, NLP | `apiKey` | Yes | Yes |
| [MessengerX.io](https://messengerx.rtfd.io) | A FREE API for developers to build and monetize personalized ML based chat apps | `apiKey` | Yes | Yes |
| [NLP Cloud](https://nlpcloud.io) | NLP API using spaCy and transformers for NER, sentiments, classification, summarization, and more | `apiKey` | Yes | Unknown |
| [OpenVisionAPI](https://openvisionapi.com) | Open source computer vision API based on open source models | No | Yes | Yes |
| [Perspective](https://perspectiveapi.com) | NLP API to return probability that if text is toxic, obscene, insulting or threatening | `apiKey` | Yes | Unknown |
| [Roboflow Universe](https://universe.roboflow.com) | Pre-trained computer vision models | `apiKey` | Yes | Yes |
| [SkyBiometry](https://skybiometry.com/documentation/) | Face Detection, Face Recognition and Face Grouping | `apiKey` | Yes | Unknown |
| [Time Door](https://timedoor.io) | A time series analysis API | `apiKey` | Yes | Yes |
| [Unplugg](https://unplu.gg/test_api.html) | Forecasting API for timeseries data | `apiKey` | Yes | Unknown |
| [WolframAlpha](https://products.wolframalpha.com/api/) | Provides specific answers to questions using data and algorithms | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Music
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [7digital](https://docs.7digital.com/reference) | Api of Music store 7digital | `OAuth` | Yes | Unknown |
| [AI Mastering](https://aimastering.com/api_docs/) | Automated Music Mastering | `apiKey` | Yes | Yes |
| [Audiomack](https://www.audiomack.com/data-api/docs) | Api of the streaming music hub Audiomack | `OAuth` | Yes | Unknown |
| [Bandcamp](https://bandcamp.com/developer) | API of Music store Bandcamp | `OAuth` | Yes | Unknown |
| [Bandsintown](https://app.swaggerhub.com/apis/Bandsintown/PublicAPI/3.0.0) | Music Events | No | Yes | Unknown |
| [Deezer](https://developers.deezer.com/api) | Music | `OAuth` | Yes | Unknown |
| [Discogs](https://www.discogs.com/developers/) | Music | `OAuth` | Yes | Unknown |
| [Freesound](https://freesound.org/docs/api/) | Music Samples | `apiKey` | Yes | Unknown |
| [Gaana](https://github.com/cyberboysumanjay/GaanaAPI) | API to retrieve song information from Gaana | No | Yes | Unknown |
| [Genius](https://docs.genius.com/) | Crowdsourced lyrics and music knowledge | `OAuth` | Yes | Unknown |
| [Genrenator](https://binaryjazz.us/genrenator-api/) | Music genre generator | No | Yes | Unknown |
| [iTunes Search](https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/) | Software products | No | Yes | Unknown |
| [Jamendo](https://developer.jamendo.com/v3.0/docs) | Music | `OAuth` | Yes | Unknown |
| [JioSaavn](https://github.com/cyberboysumanjay/JioSaavnAPI) | API to retrieve song information, album meta data and many more from JioSaavn | No | Yes | Unknown |
| [KKBOX](https://developer.kkbox.com) | Get music libraries, playlists, charts, and perform out of KKBOX's platform | `OAuth` | Yes | Unknown |
| [KSoft.Si Lyrics](https://docs.ksoft.si/api/lyrics-api) | API to get lyrics for songs | `apiKey` | Yes | Unknown |
| [LastFm](https://www.last.fm/api) | Music | `apiKey` | Yes | Unknown |
| [Lyrics.ovh](https://lyricsovh.docs.apiary.io) | Simple API to retrieve the lyrics of a song | No | Yes | Unknown |
| [Mixcloud](https://www.mixcloud.com/developers/) | Music | `OAuth` | Yes | Yes |
| [MusicBrainz](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2) | Music | No | Yes | Unknown |
| [Musixmatch](https://developer.musixmatch.com/) | Music | `apiKey` | Yes | Unknown |
| [Napster](https://developer.napster.com/api/v2.2) | Music | `apiKey` | Yes | Yes |
| [Openwhyd](https://openwhyd.github.io/openwhyd/API) | Download curated playlists of streaming tracks (YouTube, SoundCloud, etc...) | No | Yes | No |
| [Phishin](https://phish.in/api-docs) | A web-based archive of legal live audio recordings of the improvisational rock band Phish | `apiKey` | Yes | No |
| [Radio Browser](https://api.radio-browser.info/) | List of internet radio stations | No | Yes | Yes |
| [Songkick](https://www.songkick.com/developer/) | Music Events | `apiKey` | Yes | Unknown |
| [Songlink / Odesli](https://www.notion.so/API-d0ebe08a5e304a55928405eb682f6741) | Get all the services on which a song is available | `apiKey` | Yes | Yes |
| [Songsterr](https://www.songsterr.com/a/wa/api/) | Provides guitar, bass and drums tabs and chords | No | Yes | Unknown |
| [SoundCloud](https://developers.soundcloud.com/docs/api/guide) | With SoundCloud API you can build applications that will give more power to control your content | `OAuth` | Yes | Unknown |
| [Spotify](https://beta.developer.spotify.com/documentation/web-api/) | View Spotify music catalog, manage users' libraries, get recommendations and more | `OAuth` | Yes | Unknown |
| [TasteDive](https://tastedive.com/read/api) | Similar artist API (also works for movies and TV shows) | `apiKey` | Yes | Unknown |
| [TheAudioDB](https://www.theaudiodb.com/api_guide.php) | Music | `apiKey` | Yes | Unknown |
| [Vagalume](https://api.vagalume.com.br/docs/) | Crowdsourced lyrics and music knowledge | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### News
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [apilayer mediastack](https://mediastack.com/) | Free, Simple REST API for Live News & Blog Articles | `apiKey` | Yes | Unknown |
| [Associated Press](https://developer.ap.org/) | Search for news and metadata from Associated Press | `apiKey` | Yes | Unknown |
| [Chronicling America](http://chroniclingamerica.loc.gov/about/api/) | Provides access to millions of pages of historic US newspapers from the Library of Congress | No | No | Unknown |
| [Currents](https://currentsapi.services/) | Latest news published in various news sources, blogs and forums | `apiKey` | Yes | Yes |
| [Feedbin](https://github.com/feedbin/feedbin-api) | RSS reader | `OAuth` | Yes | Unknown |
| [GNews](https://gnews.io/) | Search for news from various sources | `apiKey` | Yes | Yes |
| [Graphs for Coronavirus](https://corona.dnsforfamily.com/api.txt) | Each Country separately and Worldwide Graphs for Coronavirus. Daily updates | No | Yes | Yes |
| [Inshorts News](https://github.com/cyberboysumanjay/Inshorts-News-API) | Provides news from inshorts | No | Yes | Unknown |
| [MarketAux](https://www.marketaux.com/) | Live stock market news with tagged tickers + sentiment and stats JSON API | `apiKey` | Yes | Yes |
| [New York Times](https://developer.nytimes.com/) | The New York Times Developer Network | `apiKey` | Yes | Unknown |
| [News](https://newsapi.org/) | Headlines currently published on a range of news sources and blogs | `apiKey` | Yes | Unknown |
| [NewsData](https://newsdata.io/docs) | News data API for live-breaking news and headlines from reputed  news sources | `apiKey` | Yes | Unknown |
| [NewsX](https://rapidapi.com/machaao-inc-machaao-inc-default/api/newsx/) | Get or Search Latest Breaking News with ML Powered Summaries 🤖 | `apiKey` | Yes | Unknown |
| [NPR One](http://dev.npr.org/api/) | Personalized news listening experience from NPR | `OAuth` | Yes | Unknown |
| [Spaceflight News](https://spaceflightnewsapi.net) | Spaceflight related news 🚀 | No | Yes | Yes |
| [The Guardian](http://open-platform.theguardian.com/) | Access all the content the Guardian creates, categorised by tags and section | `apiKey` | Yes | Unknown |
| [The Old Reader](https://github.com/theoldreader/api) | RSS reader | `apiKey` | Yes | Unknown |
| [TheNews](https://www.thenewsapi.com/) | Aggregated headlines, top story and live news JSON API | `apiKey` | Yes | Yes |
| [Trove](https://trove.nla.gov.au/about/create-something/using-api) | Search through the National Library of Australia collection of 1000s of digitised newspapers | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Open Data
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [18F](http://18f.github.io/API-All-the-X/) | Unofficial US Federal Government API Development | No | No | Unknown |
| [API Setu](https://www.apisetu.gov.in/) | An Indian Government platform that provides a lot of APIS for KYC, business, education & employment | No | Yes | Yes |
| [Archive.org](https://archive.readme.io/docs) | The Internet Archive | No | Yes | No |
| [Black History Facts](https://www.blackhistoryapi.io/docs) | Contribute or search one of the largest black history fact databases on the web | `apiKey` | Yes | Yes |
| [BotsArchive](https://botsarchive.com/docs.html) | JSON formatted details about Telegram Bots available in database | No | Yes | Unknown |
| [Callook.info](https://callook.info) | United States ham radio callsigns | No | Yes | Unknown |
| [CARTO](https://carto.com/) | Location Information Prediction | `apiKey` | Yes | Unknown |
| [CollegeScoreCard.ed.gov](https://collegescorecard.ed.gov/data/) | Data on higher education institutions in the United States | No | Yes | Unknown |
| [Enigma Public](https://developers.enigma.com/docs) | Broadest collection of public data | `apiKey` | Yes | Yes |
| [French Address Search](https://geo.api.gouv.fr/adresse) | Address search via the French Government | No | Yes | Unknown |
| [GENESIS](https://www.destatis.de/EN/Service/OpenData/api-webservice.html) | Federal Statistical Office Germany | `OAuth` | Yes | Unknown |
| [Joshua Project](https://api.joshuaproject.net/) | People groups of the world with the fewest followers of Christ | `apiKey` | Yes | Unknown |
| [Kaggle](https://www.kaggle.com/docs/api) | Create and interact with Datasets, Notebooks, and connect with Kaggle | `apiKey` | Yes | Unknown |
| [LinkPreview](https://www.linkpreview.net) | Get JSON formatted summary with title, description and preview image for any requested URL | `apiKey` | Yes | Yes |
| [Lowy Asia Power Index](https://github.com/0x0is1/lowy-index-api-docs) | Get measure resources and influence to rank the relative power of states in Asia | No | Yes | Unknown |
| [Microlink.io](https://microlink.io) | Extract structured data from any website | No | Yes | Yes |
| [Nasdaq Data Link](https://docs.data.nasdaq.com/) | Stock market data | `apiKey` | Yes | Unknown |
| [Nobel Prize](https://www.nobelprize.org/about/developer-zone-2/) | Open data about nobel prizes and events | No | Yes | Yes |
| [Open Data Minneapolis](https://opendata.minneapolismn.gov/) | Spatial (GIS) and non-spatial city data for Minneapolis | No | Yes | No |
| [openAFRICA](https://africaopendata.org/) | Large datasets repository of African open data | No | Yes | Unknown |
| [OpenCorporates](http://api.opencorporates.com/documentation/API-Reference) | Data on corporate entities and directors in many countries | `apiKey` | Yes | Unknown |
| [OpenSanctions](https://www.opensanctions.org/docs/api/) | Data on international sanctions, crime and politically exposed persons | No | Yes | Yes |
| [PeakMetrics](https://rapidapi.com/peakmetrics-peakmetrics-default/api/peakmetrics-news) | News articles and public datasets | `apiKey` | Yes | Unknown |
| [Recreation Information Database](https://ridb.recreation.gov/) | Recreational areas, federal lands, historic sites, museums, and other attractions/resources(US) | `apiKey` | Yes | Unknown |
| [Scoop.it](http://www.scoop.it/dev) | Content Curation Service | `apiKey` | No | Unknown |
| [Socrata](https://dev.socrata.com/) | Access to Open Data from Governments, Non-profits and NGOs around the world | `OAuth` | Yes | Yes |
| [Teleport](https://developers.teleport.org/) | Quality of Life Data | No | Yes | Unknown |
| [Umeå Open Data](https://opendata.umea.se/api/) | Open data of the city Umeå in northen Sweden | No | Yes | Yes |
| [Universities List](https://github.com/Hipo/university-domains-list) | University names, countries and domains | No | Yes | Unknown |
| [University of Oslo](https://data.uio.no/) | Courses, lecture videos, detailed information for courses etc. for the University of Oslo (Norway) | No | Yes | Unknown |
| [UPC database](https://upcdatabase.org/api) | More than 1.5 million barcode numbers from all around the world | `apiKey` | Yes | Unknown |
| [Urban Observatory](https://urbanobservatory.ac.uk) | The largest set of publicly available real time urban data in the UK | No | No | No |
| [Wikidata](https://www.wikidata.org/w/api.php?action=help) | Collaboratively edited knowledge base operated by the Wikimedia Foundation | `OAuth` | Yes | Unknown |
| [Wikipedia](https://www.mediawiki.org/wiki/API:Main_page) | Mediawiki Encyclopedia | No | Yes | Unknown |
| [Yelp](https://www.yelp.com/developers/documentation/v3) | Find Local Business | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Open Source Projects
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Countly](https://api.count.ly/reference) | Countly web analytics | No | No | Unknown |
| [Creative Commons Catalog](https://api.creativecommons.engineering/) | Search among openly licensed and public domain works | `OAuth` | Yes | Yes |
| [Datamuse](https://www.datamuse.com/api/) | Word-finding query engine | No | Yes | Unknown |
| [Drupal.org](https://www.drupal.org/drupalorg/docs/api) | Drupal.org | No | Yes | Unknown |
| [Evil Insult Generator](https://evilinsult.com/api) | Evil Insults | No | Yes | Yes |
| [GitHub Contribution Chart Generator](https://github-contributions.vercel.app) | Create an image of your GitHub contributions | No | Yes | Yes |
| [GitHub ReadMe Stats](https://github.com/anuraghazra/github-readme-stats) | Add dynamically generated statistics to your GitHub profile ReadMe | No | Yes | Yes |
| [Metabase](https://www.metabase.com/) | An open source Business Intelligence server to share data and analytics inside your company | No | Yes | Yes |
| [Shields](https://shields.io/) | Concise, consistent, and legible badges in SVG and raster format | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Patent
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [EPO](https://developers.epo.org/) | European patent search system api | `OAuth` | Yes | Unknown |
| [PatentsView ](https://patentsview.org/apis/purpose) | API is intended to explore and visualize trends/patterns across the US innovation landscape | No | Yes | Unknown |
| [TIPO](https://tiponet.tipo.gov.tw/Gazette/OpenData/OD/OD05.aspx?QryDS=API00) | Taiwan patent search system api | `apiKey` | Yes | Unknown |
| [USPTO](https://www.uspto.gov/learning-and-resources/open-data-and-mobility) | USA patent api services | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Personality
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Advice Slip](http://api.adviceslip.com/) | Generate random advice slips | No | Yes | Unknown |
| [Biriyani As A Service](https://biriyani.anoram.com/) | Biriyani images placeholder | No | Yes | No |
| [Dev.to](https://developers.forem.com/api) | Access Forem articles, users and other resources via API | `apiKey` | Yes | Unknown |
| [Dictum](https://github.com/fisenkodv/dictum) | API to get access to the collection of the most inspiring expressions of mankind | No | Yes | Unknown |
| [FavQs.com](https://favqs.com/api) | FavQs allows you to collect, discover and share your favorite quotes | `apiKey` | Yes | Unknown |
| [FOAAS](http://www.foaas.com/) | Fuck Off As A Service | No | No | Unknown |
| [Forismatic](http://forismatic.com/en/api/) | Inspirational Quotes | No | No | Unknown |
| [icanhazdadjoke](https://icanhazdadjoke.com/api) | The largest selection of dad jokes on the internet | No | Yes | Unknown |
| [Inspiration](https://inspiration.goprogram.ai/docs/) | Motivational and Inspirational quotes | No | Yes | Yes |
| [kanye.rest](https://kanye.rest) | REST API for random Kanye West quotes | No | Yes | Yes |
| [kimiquotes](https://kimiquotes.herokuapp.com/doc) | Team radio and interview quotes by Finnish F1 legend Kimi Räikkönen | No | Yes | Yes |
| [Medium](https://github.com/Medium/medium-api-docs) | Community of readers and writers offering unique perspectives on ideas | `OAuth` | Yes | Unknown |
| [Programming Quotes](https://github.com/skolakoda/programming-quotes-api) | Programming Quotes API for open source projects | No | Yes | Unknown |
| [Quotable Quotes](https://github.com/lukePeavey/quotable) | Quotable is a free, open source quotations API | No | Yes | Unknown |
| [Quote Garden](https://pprathameshmore.github.io/QuoteGarden/) | REST API for more than 5000 famous quotes | No | Yes | Unknown |
| [quoteclear](https://quoteclear.web.app/) | Ever-growing list of James Clear quotes from the 3-2-1 Newsletter | No | Yes | Yes |
| [Quotes on Design](https://quotesondesign.com/api/) | Inspirational Quotes | No | Yes | Unknown |
| [Stoicism Quote](https://github.com/tlcheah2/stoic-quote-lambda-public-api) | Quotes about Stoicism | No | Yes | Unknown |
| [They Said So Quotes](https://theysaidso.com/api/) | Quotes Trusted by many fortune brands around the world | No | Yes | Unknown |
| [Traitify](https://app.traitify.com/developer) | Assess, collect and analyze Personality | No | Yes | Unknown |
| [Udemy(instructor)](https://www.udemy.com/developers/instructor/) | API for instructors on Udemy | `apiKey` | Yes | Unknown |
| [Vadivelu HTTP Codes](https://vadivelu.anoram.com/) | On demand HTTP Codes with images | No | Yes | No |
| [Zen Quotes](https://zenquotes.io/) | Large collection of Zen quotes for inspiration | No | Yes | Yes |

**[⬆ Back to Index](#index)**
### Phone
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Abstract Phone Validation](https://www.abstractapi.com/phone-validation-api) | Validate phone numbers globally | `apiKey` | Yes | Yes |
| [apilayer numverify](https://numverify.com) | Phone number validation | `apiKey` | Yes | Unknown |
| [Cloudmersive Validate](https://cloudmersive.com/phone-number-validation-API) | Validate international phone numbers | `apiKey` | Yes | Yes |
| [Phone Specification](https://github.com/azharimm/phone-specs-api) | Rest Api for Phone specifications | No | Yes | Yes |
| [Veriphone](https://veriphone.io) | Phone number validation & carrier lookup | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Photography
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [apilayer screenshotlayer](https://screenshotlayer.com) | URL 2 Image | No | Yes | Unknown |
| [APITemplate.io](https://apitemplate.io) | Dynamically generate images and PDFs from templates with a simple API | `apiKey` | Yes | Yes |    
| [Bruzu](https://docs.bruzu.com) | Image generation with query string | `apiKey` | Yes | Yes |
| [CheetahO](https://cheetaho.com/docs/getting-started/) | Photo optimization and resize | `apiKey` | Yes | Unknown |
| [Dagpi](https://dagpi.xyz) | Image manipulation and processing | `apiKey` | Yes | Unknown |
| [Duply](https://duply.co/docs#getting-started-api) | Generate, Edit, Scale and Manage Images and Videos Smarter & Faster | `apiKey` | Yes | Yes |
| [DynaPictures](https://dynapictures.com/docs/) | Generate Hundreds of Personalized Images in Minutes | `apiKey` | Yes | Yes |
| [Flickr](https://www.flickr.com/services/api/) | Flickr Services | `OAuth` | Yes | Unknown |
| [Getty Images](http://developers.gettyimages.com/en/) | Build applications using the world's most powerful imagery | `OAuth` | Yes | Unknown |
| [Gfycat](https://developers.gfycat.com/api/) | Jiffier GIFs | `OAuth` | Yes | Unknown |
| [Giphy](https://developers.giphy.com/docs/) | Get all your gifs | `apiKey` | Yes | Unknown |
| [Google Photos](https://developers.google.com/photos) | Integrate Google Photos with your apps or devices | `OAuth` | Yes | Unknown |
| [Imgur](https://apidocs.imgur.com/) | Images | `OAuth` | Yes | Unknown |
| [Imsea](https://imsea.herokuapp.com/) | Free image search | No | Yes | Unknown |
| [Lorem Picsum](https://picsum.photos/) | Images from Unsplash | No | Yes | Unknown |
| [ObjectCut](https://objectcut.com/) | Image Background removal | `apiKey` | Yes | Yes |
| [Pexels](https://www.pexels.com/api/) | Free Stock Photos and Videos | `apiKey` | Yes | Yes |
| [PhotoRoom](https://www.photoroom.com/api/) | Remove background from images | `apiKey` | Yes | Unknown |
| [Pixabay](https://pixabay.com/sk/service/about/api/) | Photography | `apiKey` | Yes | Unknown |
| [PlaceKeanu](https://placekeanu.com/) | Resizable Keanu Reeves placeholder images with grayscale and young Keanu options | No | Yes | Unknown |
| [Readme typing SVG](https://github.com/DenverCoder1/readme-typing-svg) | Customizable typing and deleting text SVG | No | Yes | Unknown |
| [Remove.bg](https://www.remove.bg/api) | Image Background removal | `apiKey` | Yes | Unknown |
| [ReSmush.it](https://resmush.it/api) | Photo optimization | No | No | Unknown |
| [shutterstock](https://api-reference.shutterstock.com/) | Stock Photos and Videos | `OAuth` | Yes | Unknown |
| [Sirv](https://apidocs.sirv.com/) | Image management solutions like optimization, manipulation, hosting | `apiKey` | Yes | Unknown |
| [Unsplash](https://unsplash.com/developers) | Photography | `OAuth` | Yes | Unknown |
| [Wallhaven](https://wallhaven.cc/help/api) | Wallpapers | `apiKey` | Yes | Unknown |
| [Webdam](https://www.damsuccess.com/hc/en-us/articles/202134055-REST-API) | Images | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Programming
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Codeforces](https://codeforces.com/apiHelp) | Get access to Codeforces data | `apiKey` | Yes | Unknown |
| [Hackerearth](https://www.hackerearth.com/docs/wiki/developers/v4/) | For compiling and running code in several languages | `apiKey` | Yes | Unknown |
| [Judge0 CE](https://ce.judge0.com/) | Online code execution system | `apiKey` | Yes | Unknown |
| [KONTESTS](https://kontests.net/api) | For upcoming and ongoing competitive coding contests | No | Yes | Unknown |
| [Mintlify](https://docs.mintlify.com) | For programmatically generating documentation for code | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Science & Math
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [arcsecond.io](https://api.arcsecond.io/) | Multiple astronomy data sources | No | Yes | Unknown |
| [arXiv](https://arxiv.org/help/api/user-manual) | Curated research-sharing platform: physics, mathematics, quantitative finance, and economics | No | Yes | Unknown |
| [CORE](https://core.ac.uk/services#api) | Access the world's Open Access research papers | `apiKey` | Yes | Unknown |
| [GBIF](https://www.gbif.org/developer/summary) | Global Biodiversity Information Facility | No | Yes | Yes |
| [iDigBio](https://github.com/idigbio/idigbio-search-api/wiki) | Access millions of museum specimens from organizations around the world | No | Yes | Unknown |
| [inspirehep.net](https://github.com/inspirehep/rest-api-doc) | High Energy Physics info. system | No | Yes | Unknown |
| [isEven (humor)](https://isevenapi.xyz/) | Check if a number is even | No | Yes | Unknown |
| [ISRO](https://isro.vercel.app) | ISRO Space Crafts Information | No | Yes | No |
| [ITIS](https://www.itis.gov/ws_description.html) | Integrated Taxonomic Information System | No | Yes | Unknown |
| [Launch Library 2](https://thespacedevs.com/llapi) | Spaceflight launches and events database | No | Yes | Yes |
| [Materials Platform for Data Science](https://mpds.io) | Curated experimental data for materials science | `apiKey` | Yes | No |
| [Minor Planet Center](http://www.asterank.com/mpc) | Asterank.com Information | No | No | Unknown |
| [NASA](https://api.nasa.gov) | NASA data, including imagery | No | Yes | No |
| [NASA ADS](https://ui.adsabs.harvard.edu/help/api/api-docs.html) | NASA Astrophysics Data System | `OAuth` | Yes | Yes |
| [Newton](https://newton.vercel.app) | Symbolic and Arithmetic Math Calculator | No | Yes | No |
| [Noctua](https://api.noctuasky.com/api/v1/swaggerdoc/) | REST API used to access NoctuaSky features | No | Yes | Unknown |
| [Numbers](https://math.tools/api/numbers/) | Number of the day, random number, number facts and anything else you want to do with numbers | `apiKey` | Yes | No |
| [Numbers](http://numbersapi.com) | Facts about numbers | No | No | No |
| [Ocean Facts](https://oceanfacts.herokuapp.com/) | Facts pertaining to the physical science of Oceanography | No | Yes | Unknown |
| [Open Notify](http://open-notify.org/Open-Notify-API/) | ISS astronauts, current location, etc | No | No | No |
| [Open Science Framework](https://developer.osf.io) | Repository and archive for study designs, research materials, data, manuscripts, etc | No | Yes | Unknown |
| [Purple Air](https://www2.purpleair.com/) | Real Time Air Quality Monitoring | No | Yes | Unknown |
| [Remote Calc](https://github.com/elizabethadegbaju/remotecalc) | Decodes base64 encoding and parses it to return a solution to the calculation in JSON | No | Yes | Yes |
| [SHARE](https://share.osf.io/api/v2/) | A free, open, dataset about research and scholarly activities | No | Yes | No |
| [SpaceX](https://github.com/r-spacex/SpaceX-API) | Company, vehicle, launchpad and launch data | No | Yes | No |
| [SpaceX](https://api.spacex.land/graphql/) | GraphQL, Company, Ships, launchpad and launch data | No | Yes | Unknown |
| [Sunrise and Sunset](https://sunrise-sunset.org/api) | Sunset and sunrise times for a given latitude and longitude | No | Yes | No |
| [Times Adder](https://github.com/FranP-code/API-Times-Adder) | With this API you can add each of the times introduced in the array sended | No | Yes | No |
| [TLE](https://tle.ivanstanojevic.me/#/docs) | Satellite information | No | Yes | No |
| [USGS Earthquake Hazards Program](https://earthquake.usgs.gov/fdsnws/event/1/) | Earthquakes data real-time | No | Yes | No |
| [USGS Water Services](https://waterservices.usgs.gov/) | Water quality and level info for rivers and lakes | No | Yes | No |
| [World Bank](https://datahelpdesk.worldbank.org/knowledgebase/topics/125589) | World Data | No | Yes | No |
| [xMath](https://x-math.herokuapp.com/) | Random mathematical expressions | No | Yes | Yes |

**[⬆ Back to Index](#index)**
### Security
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Application Environment Verification](https://github.com/fingerprintjs/aev) | Android library and API to verify the safety of user devices, detect rooted devices and other risks | `apiKey` | Yes | Yes |
| [BinaryEdge](https://docs.binaryedge.io/api-v2.html) | Provide access to BinaryEdge 40fy scanning platform | `apiKey` | Yes | Yes |
| [BitWarden](https://bitwarden.com/help/api/) | Best open-source password manager | `OAuth` | Yes | Unknown |
| [Botd](https://github.com/fingerprintjs/botd) | Botd is a browser library for JavaScript bot detection | `apiKey` | Yes | Yes |
| [Bugcrowd](https://docs.bugcrowd.com/api/getting-started/) | Bugcrowd API for interacting and tracking the reported issues programmatically | `apiKey` | Yes | Unknown |
| [Censys](https://search.censys.io/api) | Search engine for Internet connected host and devices | `apiKey` | Yes | No |
| [Classify](https://classify-web.herokuapp.com/#/api) | Encrypting & decrypting text messages | No | Yes | Yes |
| [Complete Criminal Checks](https://completecriminalchecks.com/Developers) | Provides data of offenders from all U.S. States and Pureto Rico | `apiKey` | Yes | Yes |
| [CRXcavator](https://crxcavator.io/apidocs) | Chrome extension risk scoring | `apiKey` | Yes | Unknown |
| [Dehash.lt](https://github.com/Dehash-lt/api) | Hash decryption MD5, SHA1, SHA3, SHA256, SHA384, SHA512 | No | Yes | Unknown |
| [EmailRep](https://docs.emailrep.io/) | Email address threat and risk prediction | No | Yes | Unknown |
| [Escape](https://github.com/polarspetroll/EscapeAPI) | An API for escaping different kind of queries | No | Yes | No |
| [FilterLists](https://filterlists.com) | Lists of filters for adblockers and firewalls | No | Yes | Unknown |
| [FingerprintJS Pro](https://dev.fingerprintjs.com/docs) | Fraud detection API offering highly accurate browser fingerprinting | `apiKey` | Yes | Yes |
| [FraudLabs Pro](https://www.fraudlabspro.com/developer/api/screen-order) | Screen order information using AI to detect frauds | `apiKey` | Yes | Unknown |
| [FullHunt](https://api-docs.fullhunt.io/#introduction) | Searchable attack surface database of the entire internet | `apiKey` | Yes | Unknown |
| [GitGuardian](https://api.gitguardian.com/doc) | Scan files for secrets (API Keys, database credentials) | `apiKey` | Yes | No |
| [GreyNoise](https://docs.greynoise.io/reference/get_v3-community-ip) | Query IPs in the GreyNoise dataset and retrieve a subset of the full IP context data | `apiKey` | Yes | Unknown |
| [HackerOne](https://api.hackerone.com/) | The industry’s first hacker API that helps increase productivity towards creative bug bounty hunting | `apiKey` | Yes | Unknown |
| [Hashable](https://hashable.space/pages/api/) | A REST API to access high level cryptographic functions and methods | No | Yes | Yes |
| [HaveIBeenPwned](https://haveibeenpwned.com/API/v3) | Passwords which have previously been exposed in data breaches | `apiKey` | Yes | Unknown |
| [Intelligence X](https://github.com/IntelligenceX/SDK/blob/master/Intelligence%20X%20API.pdf) | Perform OSINT via Intelligence X | `apiKey` | Yes | Unknown |
| [LoginRadius](https://www.loginradius.com/docs/) | Managed User Authentication Service | `apiKey` | Yes | Yes |
| [Microsoft Security Response Center (MSRC)](https://msrc.microsoft.com/report/developer) | Programmatic interfaces to engage with the Microsoft Security Response Center (MSRC) | No | Yes | Unknown |
| [Mozilla http scanner](https://github.com/mozilla/http-observatory/blob/master/httpobs/docs/api.md) | Mozilla observatory http scanner | No | Yes | Unknown |
| [Mozilla tls scanner](https://github.com/mozilla/tls-observatory#api-endpoints) | Mozilla observatory tls scanner | No | Yes | Unknown |
| [National Vulnerability Database](https://nvd.nist.gov/vuln/Data-Feeds/JSON-feed-changelog) | U.S. National Vulnerability Database | No | Yes | Unknown |
| [Passwordinator](https://github.com/fawazsullia/password-generator/) | Generate random passwords of varying complexities | No | Yes | Yes |
| [PhishStats](https://phishstats.info/) | Phishing database | No | Yes | Unknown |
| [Privacy.com](https://privacy.com/developer/docs) | Generate merchant-specific and one-time use credit card numbers that link back to your bank | `apiKey` | Yes | Unknown |
| [Pulsedive](https://pulsedive.com/api/) | Scan, search and collect threat intelligence data in real-time | `apiKey` | Yes | Unknown |
| [SecurityTrails](https://securitytrails.com/corp/apidocs) | Domain and IP related information such as current and historical WHOIS and DNS records | `apiKey` | Yes | Unknown |
| [Shodan](https://developer.shodan.io/) | Search engine for Internet connected devices | `apiKey` | Yes | Unknown |
| [Spyse](https://spyse-dev.readme.io/reference/quick-start) | Access data on all Internet assets and build powerful attack surface management applications | `apiKey` | Yes | Unknown |
| [Threat Jammer](https://threatjammer.com/docs/index) | Risk scoring service from curated threat intelligence data | `apiKey` | Yes | Unknown |
| [UK Police](https://data.police.uk/docs/) | UK Police data | No | Yes | Unknown |
| [Virushee](https://api.virushee.com/) | Virushee file/data scanning | No | Yes | Yes |
| [VulDB](https://vuldb.com/?doc.api) | VulDB API allows to initiate queries for one or more items along with transactional bots | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Shopping
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Best Buy](https://bestbuyapis.github.io/api-documentation/#overview) | Products, Buying Options, Categories, Recommendations, Stores and Commerce | `apiKey` | Yes | Unknown |
| [Digi-Key](https://www.digikey.com/en/resources/api-solutions) | Retrieve price and inventory of electronic components as well as place orders | `OAuth` | Yes | Unknown |
| [Dummy Products](https://dummyproducts-api.herokuapp.com/) | An api to fetch dummy e-commerce products JSON data with placeholder images | `apiKey` | Yes | Yes |
| [eBay](https://developer.ebay.com/) | Sell and Buy on eBay | `OAuth` | Yes | Unknown |
| [Etsy](https://www.etsy.com/developers/documentation/getting_started/api_basics) | Manage shop and interact with listings | `OAuth` | Yes | Unknown |
| [Flipkart Marketplace](https://seller.flipkart.com/api-docs/FMSAPI.html) | Product listing management, Order Fulfilment in the Flipkart Marketplace | `OAuth` | Yes | Yes |
| [Lazada](https://open.lazada.com/doc/doc.htm) | Retrieve product ratings and seller performance metrics | `apiKey` | Yes | Unknown |
| [Mercadolibre](https://developers.mercadolibre.cl/es_ar/api-docs-es) | Manage sales, ads, products, services and Shops | `apiKey` | Yes | Unknown |
| [Octopart](https://octopart.com/api/v4/reference) | Electronic part data for manufacturing, design, and sourcing | `apiKey` | Yes | Unknown |
| [OLX Poland](https://developer.olx.pl/api/doc#section/) | Integrate with local sites by posting, managing adverts and communicating with OLX users | `apiKey` | Yes | Unknown |
| [Rappi](https://dev-portal.rappi.com/) | Manage orders from Rappi's app | `OAuth` | Yes | Unknown |
| [Shopee](https://open.shopee.com/documents?version=1) | Shopee's official API for integration of various services from Shopee | `apiKey` | Yes | Unknown |
| [Tokopedia](https://developer.tokopedia.com/openapi/guide/#/) | Tokopedia's Official API for integration of various services from Tokopedia | `OAuth` | Yes | Unknown |
| [WooCommerce](https://woocommerce.github.io/woocommerce-rest-api-docs/) | WooCommerce REST APIS to create, read, update, and delete data on wordpress website in JSON format | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Social
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [4chan](https://github.com/4chan/4chan-API) | Simple image-based bulletin board dedicated to a variety of topics | No | Yes | Yes |
| [Ayrshare](https://www.ayrshare.com) | Social media APIs to post, get analytics, and manage multiple users social media accounts | `apiKey` | Yes | Yes |
| [aztro](https://aztro.sameerkumar.website/) | Daily horoscope info for yesterday, today, and tomorrow | No | Yes | Unknown |
| [Blogger](https://developers.google.com/blogger/) | The Blogger APIs allows client applications to view and update Blogger content | `OAuth` | Yes | Unknown |
| [Cisco Spark](https://developer.ciscospark.com) | Team Collaboration Software | `OAuth` | Yes | Unknown |
| [Dangerous Discord Database](https://discord.riverside.rocks/docs/index.php) | Database of malicious Discord accounts | `apiKey` | Yes | Unknown |
| [Discord](https://discord.com/developers/docs/intro) | Make bots for Discord, integrate Discord onto an external platform | `OAuth` | Yes | Unknown |
| [Disqus](https://disqus.com/api/docs/auth/) | Communicate with Disqus data | `OAuth` | Yes | Unknown |
| [Doge-Meme](https://api.doge-meme.lol/docs) | Top meme posts from r/dogecoin which include 'Meme' flair | No | Yes | Yes |
| [Facebook](https://developers.facebook.com/) | Facebook Login, Share on FB, Social Plugins, Analytics and more | `OAuth` | Yes | Unknown |
| [Foursquare](https://developer.foursquare.com/) | Interact with Foursquare users and places (geolocation-based checkins, photos, tips, events, etc) | `OAuth` | Yes | Unknown |
| [Fuck Off as a Service](https://www.foaas.com) | Asks someone to fuck off | No | Yes | Unknown |
| [Full Contact](https://docs.fullcontact.com/) | Get Social Media profiles and contact Information | `OAuth` | Yes | Unknown |
| [HackerNews](https://github.com/HackerNews/API) | Social news for CS and entrepreneurship | No | Yes | Unknown |
| [Hashnode](https://hashnode.com) | A blogging platform built for developers | No | Yes | Unknown |
| [Instagram](https://www.instagram.com/developer/) | Instagram Login, Share on Instagram, Social Plugins and more | `OAuth` | Yes | Unknown |
| [Kakao](https://developers.kakao.com/) | Kakao Login, Share on KakaoTalk, Social Plugins and more | `OAuth` | Yes | Unknown |
| [Lanyard](https://github.com/Phineas/lanyard) | Retrieve your presence on Discord through an HTTP REST API or WebSocket | No | Yes | Yes |
| [Line](https://developers.line.biz/) | Line Login, Share on Line, Social Plugins and more | `OAuth` | Yes | Unknown |
| [LinkedIn](https://docs.microsoft.com/en-us/linkedin/?context=linkedin/context) | The foundation of all digital integrations with LinkedIn | `OAuth` | Yes | Unknown |
| [Meetup.com](https://www.meetup.com/api/guide) | Data about Meetups from Meetup.com | `apiKey` | Yes | Unknown |
| [Microsoft Graph](https://docs.microsoft.com/en-us/graph/api/overview) | Access the data and intelligence in Microsoft 365, Windows 10, and Enterprise Mobility | `OAuth` | Yes | Unknown |
| [NAVER](https://developers.naver.com/main/) | NAVER Login, Share on NAVER, Social Plugins and more | `OAuth` | Yes | Unknown |
| [Open Collective](https://docs.opencollective.com/help/developers/api) | Get Open Collective data | No | Yes | Unknown |
| [Pinterest](https://developers.pinterest.com/) | The world's catalog of ideas | `OAuth` | Yes | Unknown |
| [Product Hunt](https://api.producthunt.com/v2/docs) | The best new products in tech | `OAuth` | Yes | Unknown |
| [Reddit](https://www.reddit.com/dev/api) | Homepage of the internet | `OAuth` | Yes | Unknown |
| [Revolt](https://developers.revolt.chat/api/) | Revolt open source Discord alternative | `apiKey` | Yes | Unknown |
| [Saidit](https://www.saidit.net/dev/api) | Open Source Reddit Clone | `OAuth` | Yes | Unknown |
| [Slack](https://api.slack.com/) | Team Instant Messaging | `OAuth` | Yes | Unknown |
| [TamTam](https://dev.tamtam.chat/) | Bot API to interact with TamTam | `apiKey` | Yes | Unknown |
| [Telegram Bot](https://core.telegram.org/bots/api) | Simplified HTTP version of the MTProto API for bots | `apiKey` | Yes | Unknown |
| [Telegram MTProto](https://core.telegram.org/api#getting-started) | Read and write Telegram data | `OAuth` | Yes | Unknown |
| [Telegraph](https://telegra.ph/api) | Create attractive blogs easily, to share | `apiKey` | Yes | Unknown |
| [TikTok](https://developers.tiktok.com/doc/login-kit-web) | Fetches user info and user's video posts on TikTok platform | `OAuth` | Yes | Unknown |
| [Trash Nothing](https://trashnothing.com/developer) | A freecycling community with thousands of free items posted every day | `OAuth` | Yes | Yes |
| [Tumblr](https://www.tumblr.com/docs/en/api/v2) | Read and write Tumblr Data | `OAuth` | Yes | Unknown |
| [Twitch](https://dev.twitch.tv/docs) | Game Streaming API | `OAuth` | Yes | Unknown |
| [Twitter](https://developer.twitter.com/en/docs) | Read and write Twitter data | `OAuth` | Yes | No |
| [vk](https://vk.com/dev/sites) | Read and write vk data | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Sports & Fitness
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [API-FOOTBALL](https://www.api-football.com/documentation-v3) | Get information about Football Leagues & Cups | `apiKey` | Yes | Yes |
| [ApiMedic](https://apimedic.com/) | ApiMedic offers a medical symptom checker API primarily for patients | `apiKey` | Yes | Unknown |
| [balldontlie](https://www.balldontlie.io) | Balldontlie provides access to stats data from the NBA | No | Yes | Yes |
| [Canadian Football League (CFL)](http://api.cfl.ca/) | Official JSON API providing real-time league, team and player statistics about the CFL | `apiKey` | Yes | No |
| [City Bikes](https://api.citybik.es/v2/) | City Bikes around the world | No | Yes | Unknown |
| [Cloudbet](https://www.cloudbet.com/api/) | Official Cloudbet API provides real-time sports odds and betting API to place bets programmatically | `apiKey` | Yes | Yes |
| [CollegeFootballData.com](https://collegefootballdata.com) | Unofficial detailed American college football statistics, records, and results API | `apiKey` | Yes | Unknown |
| [Ergast F1](http://ergast.com/mrd/) | F1 data from the beginning of the world championships in 1950 | No | Yes | Unknown |
| [Fitbit](https://dev.fitbit.com/) | Fitbit Information | `OAuth` | Yes | Unknown |
| [Football](https://rapidapi.com/GiulianoCrescimbeni/api/football98/) | A simple Open Source Football API to get squads’ stats, best scorers and more | `X-Mashape-Key` | Yes | Unknown |
| [Football (Soccer) Videos](https://www.scorebat.com/video-api/) | Embed codes for goals and highlights from Premier League, Bundesliga, Serie A and many more | No | Yes | Yes |
| [Football Standings](https://github.com/azharimm/football-standings-api) | Display football standings e.g epl, la liga, serie a etc. The data is based on espn site | No | Yes | Yes |
| [Football-Data](https://www.football-data.org) | Football data with matches info, players, teams, and competitions | `X-Mashape-Key` | Yes | Unknown |
| [JCDecaux Bike](https://developer.jcdecaux.com/) | JCDecaux's self-service bicycles | `apiKey` | Yes | Unknown |
| [MLB Records and Stats](https://appac.github.io/mlb-data-api-docs/) | Current and historical MLB statistics | No | No | Unknown |
| [NBA Data](https://rapidapi.com/api-sports/api/api-nba/) | All NBA Stats DATA, Games, Livescore, Standings, Statistics | `apiKey` | Yes | Unknown |
| [NBA Stats](https://any-api.com/nba_com/nba_com/docs/API_Description) | Current and historical NBA Statistics | No | Yes | Unknown |
| [NHL Records and Stats](https://gitlab.com/dword4/nhlapi) | NHL historical data and statistics | No | Yes | Unknown |
| [Oddsmagnet](https://data.oddsmagnet.com) | Odds history from multiple UK bookmakers | No | Yes | Yes |
| [OpenLigaDB](https://www.openligadb.de) | Crowd sourced sports league results | No | Yes | Yes |
| [Premier League Standings ](https://rapidapi.com/heisenbug/api/premier-league-live-scores/) | All Current Premier League Standings and Statistics | `apiKey` | Yes | Unknown |
| [Sport Data](https://sportdataapi.com) | Get sports data from all over the world | `apiKey` | Yes | Unknown |
| [Sport List & Data](https://developers.decathlon.com/products/sports) | List of and resources related to sports | No | Yes | Yes |
| [Sport Places](https://developers.decathlon.com/products/sport-places) | Crowd-source sports places around the world | No | Yes | No |
| [Sport Vision](https://developers.decathlon.com/products/sport-vision) | Identify sport, brands and gear in an image. Also does image sports captioning | `apiKey` | Yes | Yes |
| [Sportmonks Cricket](https://docs.sportmonks.com/cricket/) | Live cricket score, player statistics and fantasy API | `apiKey` | Yes | Unknown |
| [Sportmonks Football](https://docs.sportmonks.com/football/) | Football score/schedule, news api, tv channels, stats, history, display standing e.g. epl, la liga | `apiKey` | Yes | Unknown |
| [Squiggle](https://api.squiggle.com.au) | Fixtures, results and predictions for Australian Football League matches | No | Yes | Yes |
| [Strava](https://strava.github.io/api/) | Connect with athletes, activities and more | `OAuth` | Yes | Unknown |
| [SuredBits](https://suredbits.com/api/) | Query sports data, including teams, players, games, scores and statistics | No | No | No |
| [TheSportsDB](https://www.thesportsdb.com/api.php) | Crowd-Sourced Sports Data and Artwork | `apiKey` | Yes | Yes |
| [Tredict](https://www.tredict.com/blog/oauth_docs/) | Get and set activities, health data and more | `OAuth` | Yes | Unknown |
| [Wger](https://wger.de/en/software/api) | Workout manager data as exercises, muscles or equipment | `apiKey` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Test Data
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Bacon Ipsum](https://baconipsum.com/json-api/) | A Meatier Lorem Ipsum Generator | No | Yes | Unknown |
| [Dicebear Avatars](https://avatars.dicebear.com/) | Generate random pixel-art avatars | No | Yes | No |
| [English Random Words](https://random-words-api.vercel.app/word) | Generate English Random Words with Pronunciation | No | Yes | No |
| [FakeJSON](https://fakejson.com) | Service to generate test and fake data | `apiKey` | Yes | Yes |
| [FakerAPI](https://fakerapi.it/en) | APIs collection to get fake data | No | Yes | Yes |
| [FakeStoreAPI](https://fakestoreapi.com/) | Fake store rest API for your e-commerce or shopping website prototype | No | Yes | Unknown |
| [GeneradorDNI](https://api.generadordni.es) | Data generator API. Profiles, vehicles, banks and cards, etc | `apiKey` | Yes | Unknown |
| [ItsThisForThat](https://itsthisforthat.com/api.php) | Generate Random startup ideas | No | Yes | No |
| [JSONPlaceholder](http://jsonplaceholder.typicode.com/) | Fake data for testing and prototyping | No | No | Unknown |
| [Loripsum](http://loripsum.net/) | The ""lorem ipsum"" generator that doesn't suck | No | No | Unknown |
| [Mailsac](https://mailsac.com/docs/api) | Disposable Email | `apiKey` | Yes | Unknown |
| [Metaphorsum](http://metaphorpsum.com/) | Generate demo paragraphs giving number of words and sentences | No | No | Unknown |
| [Mockaroo](https://www.mockaroo.com/docs) | Generate fake data to JSON, CSV, TXT, SQL and XML | `apiKey` | Yes | Unknown |
| [QuickMocker](https://quickmocker.com) | API mocking tool to generate contextual, fake or random data | No | Yes | Yes |
| [Random Data](https://random-data-api.com) | Random data generator | No | Yes | Unknown |
| [Randommer](https://randommer.io/randommer-api) | Random data generator | `apiKey` | Yes | Yes |
| [RandomUser](https://randomuser.me) | Generates and list user data | No | Yes | Unknown |
| [RoboHash](https://robohash.org/) | Generate random robot/alien avatars | No | Yes | Unknown |
| [Spanish random names](https://random-names-api.herokuapp.com/public) | Generate spanish names (with gender) randomly | No | Yes | Unknown |
| [Spanish random words](https://palabras-aleatorias-public-api.herokuapp.com) | Generate spanish words randomly | No | Yes | Unknown |
| [This Person Does not Exist](https://thispersondoesnotexist.com) | Generates real-life faces of people who do not exist | No | Yes | Unknown |
| [Toolcarton](https://testimonialapi.toolcarton.com/) | Generate random testimonial data | No | Yes | Unknown |
| [UUID Generator](https://www.uuidtools.com/docs) | Generate UUIDs | No | Yes | No |
| [What The Commit](http://whatthecommit.com/index.txt) | Random commit message generator | No | No | Yes |
| [Yes No](https://yesno.wtf/api) | Generate yes or no randomly | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Text Analysis
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Code Detection API](https://codedetectionapi.runtime.dev) | Detect, label, format and enrich the code in your app or in your data pipeline | `OAuth` | Yes | Unknown |
| [apilayer languagelayer](https://languagelayer.com/) | Language Detection JSON API supporting 173 languages | `OAuth` | Yes | Unknown |
| [Aylien Text Analysis](https://docs.aylien.com/textapi/#getting-started) | A collection of information retrieval and natural language APIs | `apiKey` | Yes | Unknown |
| [Cloudmersive Natural Language Processing](https://www.cloudmersive.com/nlp-api) | Natural language processing and text analysis | `apiKey` | Yes | Yes |
| [Detect Language](https://detectlanguage.com/) | Detects text language | `apiKey` | Yes | Unknown |
| [ELI](https://nlp.insightera.co.th/docs/v1.0) | Natural Language Processing Tools for Thai Language | `apiKey` | Yes | Unknown |
| [Google Cloud Natural](https://cloud.google.com/natural-language/docs/) | Natural language understanding technology, including sentiment, entity and syntax analysis | `apiKey` | Yes | Unknown |
| [Hirak OCR](https://ocr.hirak.site/) | Image to text -text recognition- from image more than 100 language, accurate, unlimited requests | `apiKey` | Yes | Unknown |
| [Hirak Translation](https://translate.hirak.site/) | Translate between 21 of most used languages, accurate, unlimited requests | `apiKey` | Yes | Unknown |
| [Lecto Translation](https://rapidapi.com/lecto-lecto-default/api/lecto-translation/) | Translation API with free tier and reasonable prices | `apiKey` | Yes | Yes |
| [LibreTranslate](https://libretranslate.com/docs) | Translation tool with 17 available languages | No | Yes | Unknown |
| [Semantria](https://semantria.readme.io/docs) | Text Analytics with sentiment analysis, categorization & named entity extraction | `OAuth` | Yes | Unknown |
| [Sentiment Analysis](https://www.meaningcloud.com/developer/sentiment-analysis) | Multilingual sentiment analysis of texts from different sources | `apiKey` | Yes | Yes |
| [Tisane](https://tisane.ai/) | Text Analytics with focus on detection of abusive content and law enforcement applications | `OAuth` | Yes | Yes |
| [Watson Natural Language Understanding](https://cloud.ibm.com/apidocs/natural-language-understanding/natural-language-understanding) | Natural language processing for advanced text analysis | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Tracking
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Aftership](https://developers.aftership.com/reference/quick-start) | API to update, manage and track shipment efficiently | `apiKey` | Yes | Yes |
| [Correios](https://cws.correios.com.br/ajuda) | Integration to provide information and prepare shipments using Correio's services | `apiKey` | Yes | Unknown |
| [Pixela](https://pixe.la) | API for recording and tracking habits or effort, routines | `X-Mashape-Key` | Yes | Yes |
| [PostalPinCode](http://www.postalpincode.in/Api-Details) | API for getting Pincode details in India | No | Yes | Unknown |
| [Postmon](http://postmon.com.br) | An API to query Brazilian ZIP codes and orders easily, quickly and free | No | No | Unknown |
| [PostNord](https://developer.postnord.com/api) | Provides information about parcels in transport for Sweden and Denmark | `apiKey` | No | Unknown |
| [UPS](https://www.ups.com/upsdeveloperkit) | Shipment and Address information | `apiKey` | Yes | Unknown |
| [WeCanTrack](https://docs.wecantrack.com) | Automatically place subids in affiliate links to attribute affiliate conversions to click data | `apiKey` | Yes | Yes |
| [WhatPulse](https://developer.whatpulse.org/#web-api) | Small application that measures your keyboard/mouse usage | No | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Transportation
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [ADS-B Exchange](https://www.adsbexchange.com/data/) | Access real-time and historical data of any and all airborne aircraft | No | Yes | Unknown |
| [airportsapi](https://airport-web.appspot.com/api/docs/) | Get name and website-URL for airports by ICAO code | No | Yes | Unknown |
| [AIS Hub](http://www.aishub.net/api) | Real-time data of any marine and inland vessel equipped with AIS tracking system | `apiKey` | No | Unknown |
| [Amadeus for Developers](https://developers.amadeus.com/self-service) | Travel Search - Limited usage | `OAuth` | Yes | Unknown |
| [apilayer aviationstack](https://aviationstack.com/) | Real-time Flight Status & Global Aviation Data API | `OAuth` | Yes | Unknown |
| [AviationAPI](https://docs.aviationapi.com) | FAA Aeronautical Charts and Publications, Airport Information, and Airport Weather | No | Yes | No |
| [AZ511](https://www.az511.com/developers/doc) | Access traffic data from the ADOT API | `apiKey` | Yes | Unknown |
| [Bay Area Rapid Transit](http://api.bart.gov) | Stations and predicted arrivals for BART | `apiKey` | No | Unknown |
| [BC Ferries](https://www.bcferriesapi.ca) | Sailing times and capacities for BC Ferries | No | Yes | Yes |
| [BIC-Boxtech](https://docs.bic-boxtech.org/) | Container technical detail for the global container fleet | `OAuth` | Yes | Unknown |
| [BlaBlaCar](https://dev.blablacar.com) | Search car sharing trips | `apiKey` | Yes | Unknown |
| [Boston MBTA Transit](https://www.mbta.com/developers/v3-api) | Stations and predicted arrivals for MBTA | `apiKey` | Yes | Unknown |
| [Community Transit](https://github.com/transitland/transitland-datastore/blob/master/README.md#api-endpoints) | Transitland API | No | Yes | Unknown |
| [Compare Flight Prices](https://rapidapi.com/obryan-software-obryan-software-default/api/compare-flight-prices/) | API for comparing flight prices across platforms | `apiKey` | Yes | Unknown |
| [CTS](https://api.cts-strasbourg.eu/) | CTS Realtime API | `apiKey` | Yes | Yes |
| [Grab](https://developer.grab.com/docs/) | Track deliveries, ride fares, payments and loyalty points | `OAuth` | Yes | Unknown |
| [GraphHopper](https://docs.graphhopper.com/) | A-to-B routing with turn-by-turn instructions | `apiKey` | Yes | Unknown |
| [Icelandic APIs](http://docs.apis.is/) | Open APIs that deliver services in or regarding Iceland | No | Yes | Unknown |
| [Impala Hotel Bookings](https://docs.impala.travel/docs/booking-api/) | Hotel content, rates and room bookings | `apiKey` | Yes | No |
| [Izi](http://api-docs.izi.travel/) | Audio guide for travellers | `apiKey` | Yes | Unknown |
| [Land Transport Authority DataMall, Singapore](https://datamall.lta.gov.sg/content/dam/datamall/datasets/LTA_DataMall_API_User_Guide.pdf) | Singapore transport information | `apiKey` | No | Unknown |
| [Metro Lisboa](http://app.metrolisboa.pt/status/getLinhas.php) | Delays in subway lines | No | No | No |
| [Navitia](https://doc.navitia.io/) | The open API for building cool stuff with transport data | `apiKey` | Yes | Unknown |
| [Open Charge Map](https://openchargemap.org/site/develop/api) | Global public registry of electric vehicle charging locations | `apiKey` | Yes | Yes |
| [OpenSky Network](https://opensky-network.org/apidoc/index.html) | Free real-time ADS-B aviation data | No | Yes | Unknown |
| [Railway Transport for France](https://www.digital.sncf.com/startup/api) | SNCF public API | `apiKey` | Yes | Unknown |
| [REFUGE Restrooms](https://www.refugerestrooms.org/api/docs/#!/restrooms) | Provides safe restroom access for transgender, intersex and gender nonconforming individuals | No | Yes | Unknown |
| [Sabre for Developers](https://developer.sabre.com/guides/travel-agency/quickstart/getting-started-in-travel) | Travel Search - Limited usage | `apiKey` | Yes | Unknown |
| [Schiphol Airport](https://developer.schiphol.nl/) | Schiphol | `apiKey` | Yes | Unknown |
| [Tankerkoenig](https://creativecommons.tankerkoenig.de/swagger/) | German realtime gas/diesel prices | `apiKey` | Yes | Yes |
| [TransitLand](https://www.transit.land/documentation/datastore/api-endpoints.html) | Transit Aggregation | No | Yes | Unknown |
| [Transport for Atlanta, US](http://www.itsmarta.com/app-developer-resources.aspx) | Marta | No | No | Unknown |
| [Transport for Auckland, New Zealand](https://dev-portal.at.govt.nz/) | Auckland Transport | No | Yes | Unknown |
| [Transport for Belgium](https://docs.irail.be/) | The iRail API is a third-party API for Belgian public transport by train | No | Yes | Yes |
| [Transport for Berlin, Germany](https://github.com/derhuerst/vbb-rest/blob/3/docs/index.md) | Third-party VBB API | No | Yes | Unknown |
| [Transport for Bordeaux, France](https://opendata.bordeaux-metropole.fr/explore/) | Bordeaux Métropole public transport and more (France) | `apiKey` | Yes | Unknown |
| [Transport for Budapest, Hungary](https://bkkfutar.docs.apiary.io) | Budapest public transport API | No | Yes | Unknown |
| [Transport for Chicago, US](http://www.transitchicago.com/developers/) | Chicago Transit Authority (CTA) | `apiKey` | No | Unknown |
| [Transport for Czech Republic](https://www.chaps.cz/eng/products/idos-internet) | Czech transport API | No | Yes | Unknown |
| [Transport for Denver, US](http://www.rtd-denver.com/gtfs-developer-guide.shtml) | RTD | No | No | Unknown |
| [Transport for Finland](https://digitransit.fi/en/developers/ ) | Finnish transport API | No | Yes | Unknown |
| [Transport for Germany](http://data.deutschebahn.com/dataset/api-fahrplan) | Deutsche Bahn (DB) API | `apiKey` | No | Unknown |
| [Transport for Grenoble, France](https://www.mobilites-m.fr/pages/opendata/OpenDataApi.html) | Grenoble public transport | No | No | No |
| [Transport for Hessen, Germany](https://opendata.rmv.de/site/start.html) | RMV API (Public Transport in Hessen) | No | Yes | Unknown |
| [Transport for Honolulu, US](http://hea.thebus.org/api_info.asp) | Honolulu Transportation Information | `apiKey` | No | Unknown |
| [Transport for Lisbon, Portugal](https://emel.city-platform.com/opendata/) | Data about buses routes, parking and traffic | `apiKey` | Yes | Unknown |
| [Transport for London, England](https://api.tfl.gov.uk) | TfL API | `apiKey` | Yes | Unknown |
| [Transport for Los Angeles, US](https://developer.metro.net/api/) | Data about positions of Metro vehicles in real time and travel their routes | No | Yes | Unknown |
| [Transport for Manchester, England](https://developer.tfgm.com/) | TfGM transport network data | `apiKey` | Yes | No |
| [Transport for Norway](https://developer.entur.org/) | Transport APIs and dataset for Norway | No | Yes | Unknown |
| [Transport for Ottawa, Canada](https://www.octranspo.com/en/plan-your-trip/travel-tools/developers) | OC Transpo API | `apiKey` | Yes | Unknown |
| [Transport for Paris, France](http://data.ratp.fr/api/v1/console/datasets/1.0/search/) | RATP Open Data API | No | No | Unknown |
| [Transport for Philadelphia, US](http://www3.septa.org/hackathon/) | SEPTA APIs | No | No | Unknown |
| [Transport for Sao Paulo, Brazil](http://www.sptrans.com.br/desenvolvedores/api-do-olho-vivo-guia-de-referencia/documentacao-api/) | SPTrans | `OAuth` | No | Unknown |
| [Transport for Spain](https://data.renfe.com/api/1/util/snippet/api_info.html?resource_id=a2368cff-1562-4dde-8466-9635ea3a572a) | Public trains of Spain | No | Yes | Unknown |
| [Transport for Sweden](https://www.trafiklab.se/api) | Public Transport consumer | `OAuth` | Yes | Unknown |
| [Transport for Switzerland](https://opentransportdata.swiss/en/) | Official Swiss Public Transport Open Data | `apiKey` | Yes | Unknown |
| [Transport for Switzerland](https://transport.opendata.ch/) | Swiss public transport API | No | Yes | Unknown |
| [Transport for The Netherlands](http://www.ns.nl/reisinformatie/ns-api) | NS, only trains | `apiKey` | No | Unknown |
| [Transport for The Netherlands](https://github.com/skywave/KV78Turbo-OVAPI/wiki) | OVAPI, country-wide public transport | No | Yes | Unknown |
| [Transport for Toronto, Canada](https://myttc.ca/developers) | TTC | No | Yes | Unknown |
| [Transport for UK](https://developer.transportapi.com) | Transport API and dataset for UK | `apiKey` | Yes | Unknown |
| [Transport for United States](https://retro.umoiq.com/xmlFeedDocs/NextBusXMLFeed.pdf) | NextBus API | No | No | Unknown |
| [Transport for Vancouver, Canada](https://developer.translink.ca/) | TransLink | `OAuth` | Yes | Unknown |
| [Transport for Washington, US](https://developer.wmata.com/) | Washington Metro transport API | `OAuth` | Yes | Unknown |
| [transport.rest](https://transport.rest) | Community maintained, developer-friendly public transport API | No | Yes | Yes |
| [Tripadvisor](https://developer-tripadvisor.com/home/) | Rating content for a hotel, restaurant, attraction or destination | `apiKey` | Yes | Unknown |
| [Uber](https://developer.uber.com/products) | Uber ride requests and price estimation | `OAuth` | Yes | Yes |
| [Velib metropolis, Paris, France](https://www.velib-metropole.fr/donnees-open-data-gbfs-du-service-velib-metropole) | Velib Open Data API | No | Yes | No |

**[⬆ Back to Index](#index)**
### URL Shorteners
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [1pt](https://github.com/1pt-co/api/blob/main/README.md) | A simple URL shortener | No | Yes | Yes |
| [Bitly](http://dev.bitly.com/get_started.html) | URL shortener and link management | `OAuth` | Yes | Unknown |
| [CleanURI](https://cleanuri.com/docs) | URL shortener service | No | Yes | Yes |
| [ClickMeter](https://support.clickmeter.com/hc/en-us/categories/201474986) | Monitor, compare and optimize your marketing links | `apiKey` | Yes | Unknown |
| [Clico](https://cli.com/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config) | URL shortener service | `apiKey` | Yes | Unknown |
| [Cutt.ly](https://cutt.ly/api-documentation/cuttly-links-api) | URL shortener service | `apiKey` | Yes | Unknown |
| [Drivet URL Shortener](https://wiki.drivet.xyz/en/url-shortener/add-links) | Shorten a long URL easily and fast | No | Yes | Unknown |
| [Free Url Shortener](https://ulvis.net/developer.html) | Free URL Shortener offers a powerful API to interact with other sites | No | Yes | Unknown |
| [Git.io](https://github.blog/2011-11-10-git-io-github-url-shortener/) | Git.io URL shortener | No | Yes | Unknown |
| [GoTiny](https://github.com/robvanbakel/gotiny-api) | A lightweight URL shortener, focused on ease-of-use for the developer and end-user | No | Yes | Yes |
| [Kutt](https://docs.kutt.it/) | Free Modern URL Shortener | `apiKey` | Yes | Yes |
| [Mgnet.me](http://mgnet.me/api.html) | Torrent URL shorten API | No | Yes | No |
| [owo](https://owo.vc/api) | A simple link obfuscator/shortener | No | Yes | Unknown |
| [Rebrandly](https://developers.rebrandly.com/v1/docs) | Custom URL shortener for sharing branded links | `apiKey` | Yes | Unknown |
| [Short Link](https://github.com/FayasNoushad/Short-Link-API) | Short URLs support so many domains | No | Yes | Unknown |
| [Shrtcode](https://shrtco.de/docs) | URl Shortener with multiple Domains | No | Yes | Yes |
| [Shrtlnk](https://shrtlnk.dev/developer) | Simple and efficient short link creation | `apiKey` | Yes | Yes |
| [TinyURL](https://tinyurl.com/app/dev) | Shorten long URLs | `apiKey` | Yes | No |
| [UrlBae](https://urlbae.com/developers) | Simple and efficient short link creation | `apiKey` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Vehicle
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [Brazilian Vehicles and Prices](https://deividfortuna.github.io/fipe/) | Vehicles information from Fundação Instituto de Pesquisas Econômicas - Fipe | No | Yes | No |
| [Helipaddy sites](https://helipaddy.com/api/) | Helicopter and passenger drone landing site directory, Helipaddy data and much more | `apiKey` | Yes | Unknown |
| [Kelley Blue Book](http://developer.kbb.com/#!/data/1-Default) | Vehicle info, pricing, configuration, plus much more | `apiKey` | Yes | No |
| [Mercedes-Benz](https://developer.mercedes-benz.com/apis) | Telematics data, remotely access vehicle functions, car configurator, locate service dealers | `apiKey` | Yes | No |
| [NHTSA](https://vpic.nhtsa.dot.gov/api/) | NHTSA Product Information Catalog and Vehicle Listing | No | Yes | Unknown |
| [Smartcar](https://smartcar.com/docs/) | Lock and unlock vehicles and get data like odometer reading and location. Works on most new cars | `OAuth` | Yes | Yes |

**[⬆ Back to Index](#index)**
### Video
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [An API of Ice And Fire](https://anapioficeandfire.com/) | Game Of Thrones API | No | Yes | Unknown |
| [Bob's Burgers](https://bobs-burgers-api-ui.herokuapp.com) | Bob's Burgers API | No | Yes | Yes |
| [Breaking Bad](https://breakingbadapi.com/documentation) | Breaking Bad API | No | Yes | Unknown |
| [Breaking Bad Quotes](https://github.com/shevabam/breaking-bad-quotes) | Some Breaking Bad quotes | No | Yes | Unknown |
| [Catalogopolis](https://api.catalogopolis.xyz/docs/) | Doctor Who API | No | Yes | Unknown |
| [Catch The Show](https://catchtheshow.herokuapp.com/api/documentation) | REST API for next-episode.net | No | Yes | Unknown |
| [Czech Television](http://www.ceskatelevize.cz/xml/tv-program/) | TV programme of Czech TV | No | No | Unknown |
| [Dailymotion](https://developer.dailymotion.com/) | Dailymotion Developer API | `OAuth` | Yes | Unknown |
| [Dune](https://github.com/ywalia01/dune-api) | A simple API which provides you with book, character, movie and quotes JSON data | No | Yes | Yes |
| [Final Space](https://finalspaceapi.com/docs/) | Final Space API | No | Yes | Yes |
| [Game of Thrones Quotes](https://gameofthronesquotes.xyz/) | Some Game of Thrones quotes | No | Yes | Unknown |
| [Harry Potter Charactes](https://hp-api.herokuapp.com/) | Harry Potter Characters Data with with imagery | No | Yes | Unknown |
| [IMDb-API](https://imdb-api.com/) | API for receiving movie, serial and cast information | `apiKey` | Yes | Unknown |
| [IMDbOT](https://github.com/SpEcHiDe/IMDbOT) | Unofficial IMDb Movie / Series Information | No | Yes | Yes |
| [JSON2Video](https://json2video.com) | Create and edit videos programmatically: watermarks,resizing,slideshows,voice-over,text animations | `apiKey` | Yes | No |
| [Lucifer Quotes](https://github.com/shadowoff09/lucifer-quotes) | Returns Lucifer quotes | No | Yes | Unknown |
| [MCU Countdown](https://github.com/DiljotSG/MCU-Countdown) | A Countdown to the next MCU Film | No | Yes | Yes |
| [Motivational Quotes](https://nodejs-quoteapp.herokuapp.com/) | Random Motivational Quotes | No | Yes | Unknown |
| [Movie Quote](https://github.com/F4R4N/movie-quote/) | Random Movie and Series Quotes | No | Yes | Yes |
| [Open Movie Database](http://www.omdbapi.com/) | Movie information | `apiKey` | Yes | Unknown |
| [Owen Wilson Wow](https://owen-wilson-wow-api.herokuapp.com) | API for actor Owen Wilson's ""wow"" exclamations in movies | No | Yes | Yes |
| [Ron Swanson Quotes](https://github.com/jamesseanwright/ron-swanson-quotes#ron-swanson-quotes-api) | Television | No | Yes | Unknown |
| [Simkl](https://simkl.docs.apiary.io) | Movie, TV and Anime data | `apiKey` | Yes | Unknown |
| [STAPI](http://stapi.co) | Information on all things Star Trek | No | No | No |
| [Stranger Things Quotes](https://github.com/shadowoff09/strangerthings-quotes) | Returns Stranger Things quotes | No | Yes | Unknown |
| [Stream](https://api.stream.cz/graphiql) | Czech internet television, films, series and online videos for free | No | Yes | No |
| [Stromberg Quotes](https://www.stromberg-api.de/) | Returns Stromberg quotes and more | No | Yes | Unknown |
| [SWAPI](https://swapi.dev/) | All the Star Wars data you've ever wanted | No | Yes | Yes |
| [SWAPI](https://www.swapi.tech) | All things Star Wars | No | Yes | Yes |
| [SWAPI GraphQL](https://graphql.org/swapi-graphql) | Star Wars GraphQL API | No | Yes | Unknown |
| [The Lord of the Rings](https://the-one-api.dev/) | The Lord of the Rings API | `apiKey` | Yes | Unknown |
| [The Vampire Diaries](https://vampire-diaries-api.netlify.app/) | TV Show Data | `apiKey` | Yes | Yes |
| [ThronesApi](https://thronesapi.com/) | Game Of Thrones Characters Data with imagery | No | Yes | Unknown |
| [TMDb](https://www.themoviedb.org/documentation/api) | Community-based movie data | `apiKey` | Yes | Unknown |
| [TrailerAddict](https://www.traileraddict.com/trailerapi) | Easily embed trailers from TrailerAddict | `apiKey` | No | Unknown |    
| [Trakt](https://trakt.docs.apiary.io/) | Movie and TV Data | `apiKey` | Yes | Yes |
| [TVDB](https://thetvdb.com/api-information) | Television data | `apiKey` | Yes | Unknown |
| [TVMaze](http://www.tvmaze.com/api) | TV Show Data | No | No | Unknown |
| [uNoGS](https://rapidapi.com/unogs/api/unogsng) | Unofficial Netflix Online Global Search, Search all netflix regions in one place | `apiKey` | Yes | Yes |
| [Vimeo](https://developer.vimeo.com/) | Vimeo Developer API | `OAuth` | Yes | Unknown |
| [Watchmode](https://api.watchmode.com/) | API for finding out the streaming availability of movies & shows | `apiKey` | Yes | Unknown |
| [Web Series Quotes Generator](https://github.com/yogeshwaran01/web-series-quotes) | API generates various Web Series Quote Images | No | Yes | Yes |
| [YouTube](https://developers.google.com/youtube/) | Add YouTube functionality to your sites and apps | `OAuth` | Yes | Unknown |

**[⬆ Back to Index](#index)**
### Weather
API | Description | Auth | HTTPS | CORS |
|---|---|---|---|---|
| [7Timer!](http://www.7timer.info/doc.php?lang=en) | Weather, especially for Astroweather | No | No | Unknown |
| [AccuWeather](https://developer.accuweather.com/apis) | Weather and forecast data | `apiKey` | No | Unknown |
| [Aemet](https://opendata.aemet.es/centrodedescargas/inicio) | Weather and forecast data from Spain | `apiKey` | Yes | Unknown |
| [apilayer weatherstack](https://weatherstack.com/) | Real-Time & Historical World Weather Data API | `apiKey` | Yes | Unknown |
| [APIXU](https://www.apixu.com/doc/request.aspx) | Weather | `apiKey` | Yes | Unknown |
| [AQICN](https://aqicn.org/api/) | Air Quality Index Data for over 1000 cities | `apiKey` | Yes | Unknown |
| [AviationWeather](https://www.aviationweather.gov/dataserver) | NOAA aviation weather forecasts and observations | No | Yes | Unknown |
| [ColorfulClouds](https://open.caiyunapp.com/ColorfulClouds_Weather_API) | Weather | `apiKey` | Yes | Yes |
| [Euskalmet](https://opendata.euskadi.eus/api-euskalmet/-/api-de-euskalmet/) | Meteorological data of the Basque Country | `apiKey` | Yes | Unknown |
| [Foreca](https://developer.foreca.com) | Weather | `OAuth` | Yes | Unknown |
| [HG Weather](https://hgbrasil.com/status/weather) | Provides weather forecast data for cities in Brazil | `apiKey` | Yes | Yes |
| [Hong Kong Obervatory](https://www.hko.gov.hk/en/abouthko/opendata_intro.htm) | Provide weather information, earthquake information, and climate data | No | Yes | Unknown |
| [MetaWeather](https://www.metaweather.com/api/) | Weather | No | Yes | No |
| [Meteorologisk Institutt](https://api.met.no/weatherapi/documentation) | Weather and climate data | `User-Agent` | Yes | Unknown |
| [Micro Weather](https://m3o.com/weather/api) | Real time weather forecasts and historic data | `apiKey` | Yes | Unknown |
| [ODWeather](http://api.oceandrivers.com/static/docs.html) | Weather and weather webcams | No | No | Unknown |
| [Oikolab](https://docs.oikolab.com) | 70+ years of global, hourly historical and forecast weather data from NOAA and ECMWF | `apiKey` | Yes | Yes |
| [Open-Meteo](https://open-meteo.com/) | Global weather forecast API for non-commercial use | No | Yes | Yes |
| [openSenseMap](https://api.opensensemap.org/) | Data from Personal Weather Stations called senseBoxes | No | Yes | Yes |
| [OpenUV](https://www.openuv.io) | Real-time UV Index Forecast | `apiKey` | Yes | Unknown |
| [OpenWeatherMap](https://openweathermap.org/api) | Weather | `apiKey` | Yes | Unknown |
| [QWeather](https://dev.qweather.com/en/) | Location-based weather data | `apiKey` | Yes | Yes |
| [RainViewer](https://www.rainviewer.com/api.html) | Radar data collected from different websites across the Internet | No | Yes | Unknown |
| [Storm Glass](https://stormglass.io/) | Global marine weather from multiple sources | `apiKey` | Yes | Yes |
| [Tomorrow](https://docs.tomorrow.io) | Weather API Powered by Proprietary Technology | `apiKey` | Yes | Unknown |
| [US Weather](https://www.weather.gov/documentation/services-web-api) | US National Weather Service | No | Yes | Yes |
| [Visual Crossing](https://www.visualcrossing.com/weather-api) | Global historical and weather forecast data | `apiKey` | Yes | Yes |
| [weather-api](https://github.com/robertoduessmann/weather-api) | A RESTful free API to check the weather | No | Yes | No |
| [WeatherAPI](https://www.weatherapi.com/) | Weather API with other stuff like Astronomy and Geolocation API | `apiKey` | Yes | Yes |
| [Weatherbit](https://www.weatherbit.io/api) | Weather | `apiKey` | Yes | Unknown |
| [Yandex.Weather](https://yandex.com/dev/weather/) | Assesses weather condition in specific locations | `apiKey` | Yes | No |

**[⬆ Back to Index](#index)**

<br>

## License
[MIT](LICENSE) (c) 2022 public-apis
"
huggingface/transformers,Python,"<!---
Copyright 2020 The HuggingFace Team. All rights reserved.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<p align=""center"">
  <picture>
    <source media=""(prefers-color-scheme: dark)"" srcset=""https://huggingface.co/datasets/huggingface/documentation-images/raw/main/transformers-logo-dark.svg"">
    <source media=""(prefers-color-scheme: light)"" srcset=""https://huggingface.co/datasets/huggingface/documentation-images/raw/main/transformers-logo-light.svg"">
    <img alt=""Hugging Face Transformers Library"" src=""https://huggingface.co/datasets/huggingface/documentation-images/raw/main/transformers-logo-light.svg"" width=""352"" height=""59"" style=""max-width: 100%;"">
  </picture>
  <br/>
  <br/>
</p>

<p align=""center"">
    <a href=""https://circleci.com/gh/huggingface/transformers"">
        <img alt=""Build"" src=""https://img.shields.io/circleci/build/github/huggingface/transformers/main"">
    </a>
    <a href=""https://github.com/huggingface/transformers/blob/main/LICENSE"">
        <img alt=""GitHub"" src=""https://img.shields.io/github/license/huggingface/transformers.svg?color=blue"">
    </a>
    <a href=""https://huggingface.co/docs/transformers/index"">
        <img alt=""Documentation"" src=""https://img.shields.io/website/http/huggingface.co/docs/transformers/index.svg?down_color=red&down_message=offline&up_message=online"">
    </a>
    <a href=""https://github.com/huggingface/transformers/releases"">
        <img alt=""GitHub release"" src=""https://img.shields.io/github/release/huggingface/transformers.svg"">
    </a>
    <a href=""https://github.com/huggingface/transformers/blob/main/CODE_OF_CONDUCT.md"">
        <img alt=""Contributor Covenant"" src=""https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg"">
    </a>
    <a href=""https://zenodo.org/badge/latestdoi/155220641""><img src=""https://zenodo.org/badge/155220641.svg"" alt=""DOI""></a>
</p>

<h4 align=""center"">
    <p>
        <b>English</b> |
        <a href=""https://github.com/huggingface/transformers/blob/main/README_zh-hans.md"">简体中文</a> |
        <a href=""https://github.com/huggingface/transformers/blob/main/README_zh-hant.md"">繁體中文</a> |
        <a href=""https://github.com/huggingface/transformers/blob/main/README_ko.md"">한국어</a> |
        <a href=""https://github.com/huggingface/transformers/blob/main/README_es.md"">Español</a> |
        <a href=""https://github.com/huggingface/transformers/blob/main/README_ja.md"">日本語</a> |
        <a href=""https://github.com/huggingface/transformers/blob/main/README_hd.md"">हिन्दी</a>
    <p>
</h4>

<h3 align=""center"">
    <p>State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow</p>
</h3>

<h3 align=""center"">
    <a href=""https://hf.co/course""><img src=""https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/course_banner.png""></a>
</h3>

🤗 Transformers provides thousands of pretrained models to perform tasks on different modalities such as text, vision, and audio.

These models can be applied on:

* 📝 Text, for tasks like text classification, information extraction, question answering, summarization, translation, text generation, in over 100 languages.
* 🖼️ Images, for tasks like image classification, object detection, and segmentation.
* 🗣️ Audio, for tasks like speech recognition and audio classification.

Transformer models can also perform tasks on **several modalities combined**, such as table question answering, optical character recognition, information extraction from scanned documents, video classification, and visual question answering.

🤗 Transformers provides APIs to quickly download and use those pretrained models on a given text, fine-tune them on your own datasets and then share them with the community on our [model hub](https://huggingface.co/models). At the same time, each python module defining an architecture is fully standalone and can be modified to enable quick research experiments.

🤗 Transformers is backed by the three most popular deep learning libraries — [Jax](https://jax.readthedocs.io/en/latest/), [PyTorch](https://pytorch.org/) and [TensorFlow](https://www.tensorflow.org/) — with a seamless integration between them. It's straightforward to train your models with one before loading them for inference with the other.

## Online demos

You can test most of our models directly on their pages from the [model hub](https://huggingface.co/models). We also offer [private model hosting, versioning, & an inference API](https://huggingface.co/pricing) for public and private models.

Here are a few examples:

 In Natural Language Processing:
- [Masked word completion with BERT](https://huggingface.co/bert-base-uncased?text=Paris+is+the+%5BMASK%5D+of+France)
- [Name Entity Recognition with Electra](https://huggingface.co/dbmdz/electra-large-discriminator-finetuned-conll03-english?text=My+name+is+Sarah+and+I+live+in+London+city)
- [Text generation with GPT-2](https://huggingface.co/gpt2?text=A+long+time+ago%2C+)
- [Natural Language Inference with RoBERTa](https://huggingface.co/roberta-large-mnli?text=The+dog+was+lost.+Nobody+lost+any+animal)
- [Summarization with BART](https://huggingface.co/facebook/bart-large-cnn?text=The+tower+is+324+metres+%281%2C063+ft%29+tall%2C+about+the+same+height+as+an+81-storey+building%2C+and+the+tallest+structure+in+Paris.+Its+base+is+square%2C+measuring+125+metres+%28410+ft%29+on+each+side.+During+its+construction%2C+the+Eiffel+Tower+surpassed+the+Washington+Monument+to+become+the+tallest+man-made+structure+in+the+world%2C+a+title+it+held+for+41+years+until+the+Chrysler+Building+in+New+York+City+was+finished+in+1930.+It+was+the+first+structure+to+reach+a+height+of+300+metres.+Due+to+the+addition+of+a+broadcasting+aerial+at+the+top+of+the+tower+in+1957%2C+it+is+now+taller+than+the+Chrysler+Building+by+5.2+metres+%2817+ft%29.+Excluding+transmitters%2C+the+Eiffel+Tower+is+the+second+tallest+free-standing+structure+in+France+after+the+Millau+Viaduct)
- [Question answering with DistilBERT](https://huggingface.co/distilbert-base-uncased-distilled-squad?text=Which+name+is+also+used+to+describe+the+Amazon+rainforest+in+English%3F&context=The+Amazon+rainforest+%28Portuguese%3A+Floresta+Amaz%C3%B4nica+or+Amaz%C3%B4nia%3B+Spanish%3A+Selva+Amaz%C3%B3nica%2C+Amazon%C3%ADa+or+usually+Amazonia%3B+French%3A+For%C3%AAt+amazonienne%3B+Dutch%3A+Amazoneregenwoud%29%2C+also+known+in+English+as+Amazonia+or+the+Amazon+Jungle%2C+is+a+moist+broadleaf+forest+that+covers+most+of+the+Amazon+basin+of+South+America.+This+basin+encompasses+7%2C000%2C000+square+kilometres+%282%2C700%2C000+sq+mi%29%2C+of+which+5%2C500%2C000+square+kilometres+%282%2C100%2C000+sq+mi%29+are+covered+by+the+rainforest.+This+region+includes+territory+belonging+to+nine+nations.+The+majority+of+the+forest+is+contained+within+Brazil%2C+with+60%25+of+the+rainforest%2C+followed+by+Peru+with+13%25%2C+Colombia+with+10%25%2C+and+with+minor+amounts+in+Venezuela%2C+Ecuador%2C+Bolivia%2C+Guyana%2C+Suriname+and+French+Guiana.+States+or+departments+in+four+nations+contain+%22Amazonas%22+in+their+names.+The+Amazon+represents+over+half+of+the+planet%27s+remaining+rainforests%2C+and+comprises+the+largest+and+most+biodiverse+tract+of+tropical+rainforest+in+the+world%2C+with+an+estimated+390+billion+individual+trees+divided+into+16%2C000+species)
- [Translation with T5](https://huggingface.co/t5-base?text=My+name+is+Wolfgang+and+I+live+in+Berlin)

In Computer Vision:
- [Image classification with ViT](https://huggingface.co/google/vit-base-patch16-224)
- [Object Detection with DETR](https://huggingface.co/facebook/detr-resnet-50)
- [Semantic Segmentation with SegFormer](https://huggingface.co/nvidia/segformer-b0-finetuned-ade-512-512)
- [Panoptic Segmentation with MaskFormer](https://huggingface.co/facebook/maskformer-swin-small-coco)
- [Depth Estimation with DPT](https://huggingface.co/docs/transformers/model_doc/dpt)
- [Video Classification with VideoMAE](https://huggingface.co/docs/transformers/model_doc/videomae)
- [Universal Segmentation with OneFormer](https://huggingface.co/shi-labs/oneformer_ade20k_dinat_large)

In Audio:
- [Automatic Speech Recognition with Wav2Vec2](https://huggingface.co/facebook/wav2vec2-base-960h)
- [Keyword Spotting with Wav2Vec2](https://huggingface.co/superb/wav2vec2-base-superb-ks)
- [Audio Classification with Audio Spectrogram Transformer](https://huggingface.co/MIT/ast-finetuned-audioset-10-10-0.4593)

In Multimodal tasks:
- [Table Question Answering with TAPAS](https://huggingface.co/google/tapas-base-finetuned-wtq)
- [Visual Question Answering with ViLT](https://huggingface.co/dandelin/vilt-b32-finetuned-vqa)
- [Zero-shot Image Classification with CLIP](https://huggingface.co/openai/clip-vit-large-patch14)
- [Document Question Answering with LayoutLM](https://huggingface.co/impira/layoutlm-document-qa)
- [Zero-shot Video Classification with X-CLIP](https://huggingface.co/docs/transformers/model_doc/xclip)

**[Write With Transformer](https://transformer.huggingface.co)**, built by the Hugging Face team, is the official demo of this repo’s text generation capabilities.


## 100 projects using Transformers

Transformers is more than a toolkit to use pretrained models: it's a community of projects built around it and the 
Hugging Face Hub. We want Transformers to enable developers, researchers, students, professors, engineers, and anyone 
else to build their dream projects.

In order to celebrate the 100,000 stars of transformers, we have decided to put the spotlight on the
community, and we have created the [awesome-transformers](./awesome-transformers.md) page which lists 100
incredible projects built in the vicinity of transformers.

If you own or use a project that you believe should be part of the list, please open a PR to add it!

## If you are looking for custom support from the Hugging Face team

<a target=""_blank"" href=""https://huggingface.co/support"">
    <img alt=""HuggingFace Expert Acceleration Program"" src=""https://cdn-media.huggingface.co/marketing/transformers/new-support-improved.png"" style=""max-width: 600px; border: 1px solid #eee; border-radius: 4px; box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);"">
</a><br>

## Quick tour

To immediately use a model on a given input (text, image, audio, ...), we provide the `pipeline` API. Pipelines group together a pretrained model with the preprocessing that was used during that model's training. Here is how to quickly use a pipeline to classify positive versus negative texts:

```python
>>> from transformers import pipeline

# Allocate a pipeline for sentiment-analysis
>>> classifier = pipeline('sentiment-analysis')
>>> classifier('We are very happy to introduce pipeline to the transformers repository.')
[{'label': 'POSITIVE', 'score': 0.9996980428695679}]
```

The second line of code downloads and caches the pretrained model used by the pipeline, while the third evaluates it on the given text. Here the answer is ""positive"" with a confidence of 99.97%.

Many tasks have a pre-trained `pipeline` ready to go, in NLP but also in computer vision and speech. For example, we can easily extract detected objects in an image:

``` python
>>> import requests
>>> from PIL import Image
>>> from transformers import pipeline

# Download an image with cute cats
>>> url = ""https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample.png""
>>> image_data = requests.get(url, stream=True).raw
>>> image = Image.open(image_data)

# Allocate a pipeline for object detection
>>> object_detector = pipeline('object-detection')
>>> object_detector(image)
[{'score': 0.9982201457023621,
  'label': 'remote',
  'box': {'xmin': 40, 'ymin': 70, 'xmax': 175, 'ymax': 117}},
 {'score': 0.9960021376609802,
  'label': 'remote',
  'box': {'xmin': 333, 'ymin': 72, 'xmax': 368, 'ymax': 187}},
 {'score': 0.9954745173454285,
  'label': 'couch',
  'box': {'xmin': 0, 'ymin': 1, 'xmax': 639, 'ymax': 473}},
 {'score': 0.9988006353378296,
  'label': 'cat',
  'box': {'xmin': 13, 'ymin': 52, 'xmax': 314, 'ymax': 470}},
 {'score': 0.9986783862113953,
  'label': 'cat',
  'box': {'xmin': 345, 'ymin': 23, 'xmax': 640, 'ymax': 368}}]
```

Here we get a list of objects detected in the image, with a box surrounding the object and a confidence score. Here is the original image on the left, with the predictions displayed on the right:

<h3 align=""center"">
    <a><img src=""https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample.png"" width=""400""></a>
    <a><img src=""https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample_post_processed.png"" width=""400""></a>
</h3>

You can learn more about the tasks supported by the `pipeline` API in [this tutorial](https://huggingface.co/docs/transformers/task_summary).

In addition to `pipeline`, to download and use any of the pretrained models on your given task, all it takes is three lines of code. Here is the PyTorch version:
```python
>>> from transformers import AutoTokenizer, AutoModel

>>> tokenizer = AutoTokenizer.from_pretrained(""bert-base-uncased"")
>>> model = AutoModel.from_pretrained(""bert-base-uncased"")

>>> inputs = tokenizer(""Hello world!"", return_tensors=""pt"")
>>> outputs = model(**inputs)
```

And here is the equivalent code for TensorFlow:
```python
>>> from transformers import AutoTokenizer, TFAutoModel

>>> tokenizer = AutoTokenizer.from_pretrained(""bert-base-uncased"")
>>> model = TFAutoModel.from_pretrained(""bert-base-uncased"")

>>> inputs = tokenizer(""Hello world!"", return_tensors=""tf"")
>>> outputs = model(**inputs)
```

The tokenizer is responsible for all the preprocessing the pretrained model expects, and can be called directly on a single string (as in the above examples) or a list. It will output a dictionary that you can use in downstream code or simply directly pass to your model using the ** argument unpacking operator.

The model itself is a regular [Pytorch `nn.Module`](https://pytorch.org/docs/stable/nn.html#torch.nn.Module) or a [TensorFlow `tf.keras.Model`](https://www.tensorflow.org/api_docs/python/tf/keras/Model) (depending on your backend) which you can use as usual. [This tutorial](https://huggingface.co/docs/transformers/training) explains how to integrate such a model into a classic PyTorch or TensorFlow training loop, or how to use our `Trainer` API to quickly fine-tune on a new dataset.

## Why should I use transformers?

1. Easy-to-use state-of-the-art models:
    - High performance on natural language understanding & generation, computer vision, and audio tasks.
    - Low barrier to entry for educators and practitioners.
    - Few user-facing abstractions with just three classes to learn.
    - A unified API for using all our pretrained models.

1. Lower compute costs, smaller carbon footprint:
    - Researchers can share trained models instead of always retraining.
    - Practitioners can reduce compute time and production costs.
    - Dozens of architectures with over 60,000 pretrained models across all modalities.

1. Choose the right framework for every part of a model's lifetime:
    - Train state-of-the-art models in 3 lines of code.
    - Move a single model between TF2.0/PyTorch/JAX frameworks at will.
    - Seamlessly pick the right framework for training, evaluation and production.

1. Easily customize a model or an example to your needs:
    - We provide examples for each architecture to reproduce the results published by its original authors.
    - Model internals are exposed as consistently as possible.
    - Model files can be used independently of the library for quick experiments.

## Why shouldn't I use transformers?

- This library is not a modular toolbox of building blocks for neural nets. The code in the model files is not refactored with additional abstractions on purpose, so that researchers can quickly iterate on each of the models without diving into additional abstractions/files.
- The training API is not intended to work on any model but is optimized to work with the models provided by the library. For generic machine learning loops, you should use another library (possibly, [Accelerate](https://huggingface.co/docs/accelerate)).
- While we strive to present as many use cases as possible, the scripts in our [examples folder](https://github.com/huggingface/transformers/tree/main/examples) are just that: examples. It is expected that they won't work out-of-the box on your specific problem and that you will be required to change a few lines of code to adapt them to your needs.

## Installation

### With pip

This repository is tested on Python 3.6+, Flax 0.3.2+, PyTorch 1.3.1+ and TensorFlow 2.3+.

You should install 🤗 Transformers in a [virtual environment](https://docs.python.org/3/library/venv.html). If you're unfamiliar with Python virtual environments, check out the [user guide](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/).

First, create a virtual environment with the version of Python you're going to use and activate it.

Then, you will need to install at least one of Flax, PyTorch or TensorFlow.
Please refer to [TensorFlow installation page](https://www.tensorflow.org/install/), [PyTorch installation page](https://pytorch.org/get-started/locally/#start-locally) and/or [Flax](https://github.com/google/flax#quick-install) and [Jax](https://github.com/google/jax#installation) installation pages regarding the specific installation command for your platform.

When one of those backends has been installed, 🤗 Transformers can be installed using pip as follows:

```bash
pip install transformers
```

If you'd like to play with the examples or need the bleeding edge of the code and can't wait for a new release, you must [install the library from source](https://huggingface.co/docs/transformers/installation#installing-from-source).

### With conda

Since Transformers version v4.0.0, we now have a conda channel: `huggingface`.

🤗 Transformers can be installed using conda as follows:

```shell script
conda install -c huggingface transformers
```

Follow the installation pages of Flax, PyTorch or TensorFlow to see how to install them with conda.

> **_NOTE:_**  On Windows, you may be prompted to activate Developer Mode in order to benefit from caching. If this is not an option for you, please let us know in [this issue](https://github.com/huggingface/huggingface_hub/issues/1062).

## Model architectures

**[All the model checkpoints](https://huggingface.co/models)** provided by 🤗 Transformers are seamlessly integrated from the huggingface.co [model hub](https://huggingface.co/models) where they are uploaded directly by [users](https://huggingface.co/users) and [organizations](https://huggingface.co/organizations).

Current number of checkpoints: ![](https://img.shields.io/endpoint?url=https://huggingface.co/api/shields/models&color=brightgreen)

🤗 Transformers currently provides the following architectures (see [here](https://huggingface.co/docs/transformers/model_summary) for a high-level summary of each them):

1. **[ALBERT](https://huggingface.co/docs/transformers/model_doc/albert)** (from Google Research and the Toyota Technological Institute at Chicago) released with the paper [ALBERT: A Lite BERT for Self-supervised Learning of Language Representations](https://arxiv.org/abs/1909.11942), by Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, Radu Soricut.
1. **[ALIGN](https://huggingface.co/docs/transformers/model_doc/align)** (from Google Research) released with the paper [Scaling Up Visual and Vision-Language Representation Learning With Noisy Text Supervision](https://arxiv.org/abs/2102.05918) by Chao Jia, Yinfei Yang, Ye Xia, Yi-Ting Chen, Zarana Parekh, Hieu Pham, Quoc V. Le, Yunhsuan Sung, Zhen Li, Tom Duerig.
1. **[AltCLIP](https://huggingface.co/docs/transformers/model_doc/altclip)** (from BAAI) released with the paper [AltCLIP: Altering the Language Encoder in CLIP for Extended Language Capabilities](https://arxiv.org/abs/2211.06679) by Chen, Zhongzhi and Liu, Guang and Zhang, Bo-Wen and Ye, Fulong and Yang, Qinghong and Wu, Ledell.
1. **[Audio Spectrogram Transformer](https://huggingface.co/docs/transformers/model_doc/audio-spectrogram-transformer)** (from MIT) released with the paper [AST: Audio Spectrogram Transformer](https://arxiv.org/abs/2104.01778) by Yuan Gong, Yu-An Chung, James Glass.
1. **[BART](https://huggingface.co/docs/transformers/model_doc/bart)** (from Facebook) released with the paper [BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension](https://arxiv.org/abs/1910.13461) by Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov and Luke Zettlemoyer.
1. **[BARThez](https://huggingface.co/docs/transformers/model_doc/barthez)** (from École polytechnique) released with the paper [BARThez: a Skilled Pretrained French Sequence-to-Sequence Model](https://arxiv.org/abs/2010.12321) by Moussa Kamal Eddine, Antoine J.-P. Tixier, Michalis Vazirgiannis.
1. **[BARTpho](https://huggingface.co/docs/transformers/model_doc/bartpho)** (from VinAI Research) released with the paper [BARTpho: Pre-trained Sequence-to-Sequence Models for Vietnamese](https://arxiv.org/abs/2109.09701) by Nguyen Luong Tran, Duong Minh Le and Dat Quoc Nguyen.
1. **[BEiT](https://huggingface.co/docs/transformers/model_doc/beit)** (from Microsoft) released with the paper [BEiT: BERT Pre-Training of Image Transformers](https://arxiv.org/abs/2106.08254) by Hangbo Bao, Li Dong, Furu Wei.
1. **[BERT](https://huggingface.co/docs/transformers/model_doc/bert)** (from Google) released with the paper [BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding](https://arxiv.org/abs/1810.04805) by Jacob Devlin, Ming-Wei Chang, Kenton Lee and Kristina Toutanova.
1. **[BERT For Sequence Generation](https://huggingface.co/docs/transformers/model_doc/bert-generation)** (from Google) released with the paper [Leveraging Pre-trained Checkpoints for Sequence Generation Tasks](https://arxiv.org/abs/1907.12461) by Sascha Rothe, Shashi Narayan, Aliaksei Severyn.
1. **[BERTweet](https://huggingface.co/docs/transformers/model_doc/bertweet)** (from VinAI Research) released with the paper [BERTweet: A pre-trained language model for English Tweets](https://aclanthology.org/2020.emnlp-demos.2/) by Dat Quoc Nguyen, Thanh Vu and Anh Tuan Nguyen.
1. **[BigBird-Pegasus](https://huggingface.co/docs/transformers/model_doc/bigbird_pegasus)** (from Google Research) released with the paper [Big Bird: Transformers for Longer Sequences](https://arxiv.org/abs/2007.14062) by Manzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, Amr Ahmed.
1. **[BigBird-RoBERTa](https://huggingface.co/docs/transformers/model_doc/big_bird)** (from Google Research) released with the paper [Big Bird: Transformers for Longer Sequences](https://arxiv.org/abs/2007.14062) by Manzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, Amr Ahmed.
1. **[BioGpt](https://huggingface.co/docs/transformers/model_doc/biogpt)** (from Microsoft Research AI4Science) released with the paper [BioGPT: generative pre-trained transformer for biomedical text generation and mining](https://academic.oup.com/bib/advance-article/doi/10.1093/bib/bbac409/6713511?guestAccessKey=a66d9b5d-4f83-4017-bb52-405815c907b9) by Renqian Luo, Liai Sun, Yingce Xia, Tao Qin, Sheng Zhang, Hoifung Poon and Tie-Yan Liu.
1. **[BiT](https://huggingface.co/docs/transformers/model_doc/bit)** (from Google AI) released with the paper [Big Transfer (BiT): General Visual Representation Learning](https://arxiv.org/abs/1912.11370) by Alexander Kolesnikov, Lucas Beyer, Xiaohua Zhai, Joan Puigcerver, Jessica Yung, Sylvain Gelly, Neil Houlsby.
1. **[Blenderbot](https://huggingface.co/docs/transformers/model_doc/blenderbot)** (from Facebook) released with the paper [Recipes for building an open-domain chatbot](https://arxiv.org/abs/2004.13637) by Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston.
1. **[BlenderbotSmall](https://huggingface.co/docs/transformers/model_doc/blenderbot-small)** (from Facebook) released with the paper [Recipes for building an open-domain chatbot](https://arxiv.org/abs/2004.13637) by Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston.
1. **[BLIP](https://huggingface.co/docs/transformers/model_doc/blip)** (from Salesforce) released with the paper [BLIP: Bootstrapping Language-Image Pre-training for Unified Vision-Language Understanding and Generation](https://arxiv.org/abs/2201.12086) by Junnan Li, Dongxu Li, Caiming Xiong, Steven Hoi.
1. **[BLIP-2](https://huggingface.co/docs/transformers/model_doc/blip-2)** (from Salesforce) released with the paper [BLIP-2: Bootstrapping Language-Image Pre-training with Frozen Image Encoders and Large Language Models](https://arxiv.org/abs/2301.12597) by Junnan Li, Dongxu Li, Silvio Savarese, Steven Hoi.
1. **[BLOOM](https://huggingface.co/docs/transformers/model_doc/bloom)** (from BigScience workshop) released by the [BigScience Workshop](https://bigscience.huggingface.co/).
1. **[BORT](https://huggingface.co/docs/transformers/model_doc/bort)** (from Alexa) released with the paper [Optimal Subarchitecture Extraction For BERT](https://arxiv.org/abs/2010.10499) by Adrian de Wynter and Daniel J. Perry.
1. **[BridgeTower](https://huggingface.co/docs/transformers/model_doc/bridgetower)** (from Harbin Institute of Technology/Microsoft Research Asia/Intel Labs) released with the paper [BridgeTower: Building Bridges Between Encoders in Vision-Language Representation Learning](https://arxiv.org/abs/2206.08657) by Xiao Xu, Chenfei Wu, Shachar Rosenman, Vasudev Lal, Wanxiang Che, Nan Duan.
1. **[ByT5](https://huggingface.co/docs/transformers/model_doc/byt5)** (from Google Research) released with the paper [ByT5: Towards a token-free future with pre-trained byte-to-byte models](https://arxiv.org/abs/2105.13626) by Linting Xue, Aditya Barua, Noah Constant, Rami Al-Rfou, Sharan Narang, Mihir Kale, Adam Roberts, Colin Raffel.
1. **[CamemBERT](https://huggingface.co/docs/transformers/model_doc/camembert)** (from Inria/Facebook/Sorbonne) released with the paper [CamemBERT: a Tasty French Language Model](https://arxiv.org/abs/1911.03894) by Louis Martin*, Benjamin Muller*, Pedro Javier Ortiz Suárez*, Yoann Dupont, Laurent Romary, Éric Villemonte de la Clergerie, Djamé Seddah and Benoît Sagot.
1. **[CANINE](https://huggingface.co/docs/transformers/model_doc/canine)** (from Google Research) released with the paper [CANINE: Pre-training an Efficient Tokenization-Free Encoder for Language Representation](https://arxiv.org/abs/2103.06874) by Jonathan H. Clark, Dan Garrette, Iulia Turc, John Wieting.
1. **[Chinese-CLIP](https://huggingface.co/docs/transformers/model_doc/chinese_clip)** (from OFA-Sys) released with the paper [Chinese CLIP: Contrastive Vision-Language Pretraining in Chinese](https://arxiv.org/abs/2211.01335) by An Yang, Junshu Pan, Junyang Lin, Rui Men, Yichang Zhang, Jingren Zhou, Chang Zhou.
1. **[CLAP](https://huggingface.co/docs/transformers/model_doc/clap)** (from LAION-AI) released with the paper [Large-scale Contrastive Language-Audio Pretraining with Feature Fusion and Keyword-to-Caption Augmentation](https://arxiv.org/abs/2211.06687) by Yusong Wu, Ke Chen, Tianyu Zhang, Yuchen Hui, Taylor Berg-Kirkpatrick, Shlomo Dubnov.
1. **[CLIP](https://huggingface.co/docs/transformers/model_doc/clip)** (from OpenAI) released with the paper [Learning Transferable Visual Models From Natural Language Supervision](https://arxiv.org/abs/2103.00020) by Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, Gretchen Krueger, Ilya Sutskever.
1. **[CLIPSeg](https://huggingface.co/docs/transformers/model_doc/clipseg)** (from University of Göttingen) released with the paper [Image Segmentation Using Text and Image Prompts](https://arxiv.org/abs/2112.10003) by Timo Lüddecke and Alexander Ecker.
1. **[CodeGen](https://huggingface.co/docs/transformers/model_doc/codegen)** (from Salesforce) released with the paper [A Conversational Paradigm for Program Synthesis](https://arxiv.org/abs/2203.13474) by Erik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu, Huan Wang, Yingbo Zhou, Silvio Savarese, Caiming Xiong.
1. **[Conditional DETR](https://huggingface.co/docs/transformers/model_doc/conditional_detr)** (from Microsoft Research Asia) released with the paper [Conditional DETR for Fast Training Convergence](https://arxiv.org/abs/2108.06152) by Depu Meng, Xiaokang Chen, Zejia Fan, Gang Zeng, Houqiang Li, Yuhui Yuan, Lei Sun, Jingdong Wang.
1. **[ConvBERT](https://huggingface.co/docs/transformers/model_doc/convbert)** (from YituTech) released with the paper [ConvBERT: Improving BERT with Span-based Dynamic Convolution](https://arxiv.org/abs/2008.02496) by Zihang Jiang, Weihao Yu, Daquan Zhou, Yunpeng Chen, Jiashi Feng, Shuicheng Yan.
1. **[ConvNeXT](https://huggingface.co/docs/transformers/model_doc/convnext)** (from Facebook AI) released with the paper [A ConvNet for the 2020s](https://arxiv.org/abs/2201.03545) by Zhuang Liu, Hanzi Mao, Chao-Yuan Wu, Christoph Feichtenhofer, Trevor Darrell, Saining Xie.
1. **[ConvNeXTV2](https://huggingface.co/docs/transformers/model_doc/convnextv2)** (from Facebook AI) released with the paper [ConvNeXt V2: Co-designing and Scaling ConvNets with Masked Autoencoders](https://arxiv.org/abs/2301.00808) by Sanghyun Woo, Shoubhik Debnath, Ronghang Hu, Xinlei Chen, Zhuang Liu, In So Kweon, Saining Xie.
1. **[CPM](https://huggingface.co/docs/transformers/model_doc/cpm)** (from Tsinghua University) released with the paper [CPM: A Large-scale Generative Chinese Pre-trained Language Model](https://arxiv.org/abs/2012.00413) by Zhengyan Zhang, Xu Han, Hao Zhou, Pei Ke, Yuxian Gu, Deming Ye, Yujia Qin, Yusheng Su, Haozhe Ji, Jian Guan, Fanchao Qi, Xiaozhi Wang, Yanan Zheng, Guoyang Zeng, Huanqi Cao, Shengqi Chen, Daixuan Li, Zhenbo Sun, Zhiyuan Liu, Minlie Huang, Wentao Han, Jie Tang, Juanzi Li, Xiaoyan Zhu, Maosong Sun.
1. **[CPM-Ant](https://huggingface.co/docs/transformers/model_doc/cpmant)** (from OpenBMB) released by the [OpenBMB](https://www.openbmb.org/).
1. **[CTRL](https://huggingface.co/docs/transformers/model_doc/ctrl)** (from Salesforce) released with the paper [CTRL: A Conditional Transformer Language Model for Controllable Generation](https://arxiv.org/abs/1909.05858) by Nitish Shirish Keskar*, Bryan McCann*, Lav R. Varshney, Caiming Xiong and Richard Socher.
1. **[CvT](https://huggingface.co/docs/transformers/model_doc/cvt)** (from Microsoft) released with the paper [CvT: Introducing Convolutions to Vision Transformers](https://arxiv.org/abs/2103.15808) by Haiping Wu, Bin Xiao, Noel Codella, Mengchen Liu, Xiyang Dai, Lu Yuan, Lei Zhang.
1. **[Data2Vec](https://huggingface.co/docs/transformers/model_doc/data2vec)** (from Facebook) released with the paper [Data2Vec:  A General Framework for Self-supervised Learning in Speech, Vision and Language](https://arxiv.org/abs/2202.03555) by Alexei Baevski, Wei-Ning Hsu, Qiantong Xu, Arun Babu, Jiatao Gu, Michael Auli.
1. **[DeBERTa](https://huggingface.co/docs/transformers/model_doc/deberta)** (from Microsoft) released with the paper [DeBERTa: Decoding-enhanced BERT with Disentangled Attention](https://arxiv.org/abs/2006.03654) by Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen.
1. **[DeBERTa-v2](https://huggingface.co/docs/transformers/model_doc/deberta-v2)** (from Microsoft) released with the paper [DeBERTa: Decoding-enhanced BERT with Disentangled Attention](https://arxiv.org/abs/2006.03654) by Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen.
1. **[Decision Transformer](https://huggingface.co/docs/transformers/model_doc/decision_transformer)** (from Berkeley/Facebook/Google) released with the paper [Decision Transformer: Reinforcement Learning via Sequence Modeling](https://arxiv.org/abs/2106.01345) by Lili Chen, Kevin Lu, Aravind Rajeswaran, Kimin Lee, Aditya Grover, Michael Laskin, Pieter Abbeel, Aravind Srinivas, Igor Mordatch.
1. **[Deformable DETR](https://huggingface.co/docs/transformers/model_doc/deformable_detr)** (from SenseTime Research) released with the paper [Deformable DETR: Deformable Transformers for End-to-End Object Detection](https://arxiv.org/abs/2010.04159) by Xizhou Zhu, Weijie Su, Lewei Lu, Bin Li, Xiaogang Wang, Jifeng Dai.
1. **[DeiT](https://huggingface.co/docs/transformers/model_doc/deit)** (from Facebook) released with the paper [Training data-efficient image transformers & distillation through attention](https://arxiv.org/abs/2012.12877) by Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, Hervé Jégou.
1. **[DePlot](https://huggingface.co/docs/transformers/model_doc/deplot)** (from Google AI) released with the paper [DePlot: One-shot visual language reasoning by plot-to-table translation](https://arxiv.org/abs/2212.10505) by Fangyu Liu, Julian Martin Eisenschlos, Francesco Piccinno, Syrine Krichene, Chenxi Pang, Kenton Lee, Mandar Joshi, Wenhu Chen, Nigel Collier, Yasemin Altun.
1. **[DETA](https://huggingface.co/docs/transformers/model_doc/deta)** (from The University of Texas at Austin) released with the paper [NMS Strikes Back](https://arxiv.org/abs/2212.06137) by Jeffrey Ouyang-Zhang, Jang Hyun Cho, Xingyi Zhou, Philipp Krähenbühl.
1. **[DETR](https://huggingface.co/docs/transformers/model_doc/detr)** (from Facebook) released with the paper [End-to-End Object Detection with Transformers](https://arxiv.org/abs/2005.12872) by Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, Sergey Zagoruyko.
1. **[DialoGPT](https://huggingface.co/docs/transformers/model_doc/dialogpt)** (from Microsoft Research) released with the paper [DialoGPT: Large-Scale Generative Pre-training for Conversational Response Generation](https://arxiv.org/abs/1911.00536) by Yizhe Zhang, Siqi Sun, Michel Galley, Yen-Chun Chen, Chris Brockett, Xiang Gao, Jianfeng Gao, Jingjing Liu, Bill Dolan.
1. **[DiNAT](https://huggingface.co/docs/transformers/model_doc/dinat)** (from SHI Labs) released with the paper [Dilated Neighborhood Attention Transformer](https://arxiv.org/abs/2209.15001) by Ali Hassani and Humphrey Shi.
1. **[DistilBERT](https://huggingface.co/docs/transformers/model_doc/distilbert)** (from HuggingFace), released together with the paper [DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter](https://arxiv.org/abs/1910.01108) by Victor Sanh, Lysandre Debut and Thomas Wolf. The same method has been applied to compress GPT2 into [DistilGPT2](https://github.com/huggingface/transformers/tree/main/examples/research_projects/distillation), RoBERTa into [DistilRoBERTa](https://github.com/huggingface/transformers/tree/main/examples/research_projects/distillation), Multilingual BERT into [DistilmBERT](https://github.com/huggingface/transformers/tree/main/examples/research_projects/distillation) and a German version of DistilBERT.
1. **[DiT](https://huggingface.co/docs/transformers/model_doc/dit)** (from Microsoft Research) released with the paper [DiT: Self-supervised Pre-training for Document Image Transformer](https://arxiv.org/abs/2203.02378) by Junlong Li, Yiheng Xu, Tengchao Lv, Lei Cui, Cha Zhang, Furu Wei.
1. **[Donut](https://huggingface.co/docs/transformers/model_doc/donut)** (from NAVER), released together with the paper [OCR-free Document Understanding Transformer](https://arxiv.org/abs/2111.15664) by Geewook Kim, Teakgyu Hong, Moonbin Yim, Jeongyeon Nam, Jinyoung Park, Jinyeong Yim, Wonseok Hwang, Sangdoo Yun, Dongyoon Han, Seunghyun Park.
1. **[DPR](https://huggingface.co/docs/transformers/model_doc/dpr)** (from Facebook) released with the paper [Dense Passage Retrieval for Open-Domain Question Answering](https://arxiv.org/abs/2004.04906) by Vladimir Karpukhin, Barlas Oğuz, Sewon Min, Patrick Lewis, Ledell Wu, Sergey Edunov, Danqi Chen, and Wen-tau Yih.
1. **[DPT](https://huggingface.co/docs/transformers/master/model_doc/dpt)** (from Intel Labs) released with the paper [Vision Transformers for Dense Prediction](https://arxiv.org/abs/2103.13413) by René Ranftl, Alexey Bochkovskiy, Vladlen Koltun.
1. **[EfficientFormer](https://huggingface.co/docs/transformers/model_doc/efficientformer)** (from Snap Research) released with the paper [EfficientFormer: Vision Transformers at MobileNetSpeed](https://arxiv.org/abs/2206.01191) by Yanyu Li, Geng Yuan, Yang Wen, Ju Hu, Georgios Evangelidis, Sergey Tulyakov, Yanzhi Wang, Jian Ren.
1. **[EfficientNet](https://huggingface.co/docs/transformers/model_doc/efficientnet)** (from Google Brain) released with the paper [EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks](https://arxiv.org/abs/1905.11946) by Mingxing Tan, Quoc V. Le.
1. **[ELECTRA](https://huggingface.co/docs/transformers/model_doc/electra)** (from Google Research/Stanford University) released with the paper [ELECTRA: Pre-training text encoders as discriminators rather than generators](https://arxiv.org/abs/2003.10555) by Kevin Clark, Minh-Thang Luong, Quoc V. Le, Christopher D. Manning.
1. **[EncoderDecoder](https://huggingface.co/docs/transformers/model_doc/encoder-decoder)** (from Google Research) released with the paper [Leveraging Pre-trained Checkpoints for Sequence Generation Tasks](https://arxiv.org/abs/1907.12461) by Sascha Rothe, Shashi Narayan, Aliaksei Severyn.
1. **[ERNIE](https://huggingface.co/docs/transformers/model_doc/ernie)** (from Baidu) released with the paper [ERNIE: Enhanced Representation through Knowledge Integration](https://arxiv.org/abs/1904.09223) by Yu Sun, Shuohuan Wang, Yukun Li, Shikun Feng, Xuyi Chen, Han Zhang, Xin Tian, Danxiang Zhu, Hao Tian, Hua Wu.
1. **[ErnieM](https://huggingface.co/docs/transformers/model_doc/ernie_m)** (from Baidu) released with the paper [ERNIE-M: Enhanced Multilingual Representation by Aligning Cross-lingual Semantics with Monolingual Corpora](https://arxiv.org/abs/2012.15674) by Xuan Ouyang, Shuohuan Wang, Chao Pang, Yu Sun, Hao Tian, Hua Wu, Haifeng Wang.
1. **[ESM](https://huggingface.co/docs/transformers/model_doc/esm)** (from Meta AI) are transformer protein language models.  **ESM-1b** was released with the paper [Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences](https://www.pnas.org/content/118/15/e2016239118) by Alexander Rives, Joshua Meier, Tom Sercu, Siddharth Goyal, Zeming Lin, Jason Liu, Demi Guo, Myle Ott, C. Lawrence Zitnick, Jerry Ma, and Rob Fergus. **ESM-1v** was released with the paper [Language models enable zero-shot prediction of the effects of mutations on protein function](https://doi.org/10.1101/2021.07.09.450648) by Joshua Meier, Roshan Rao, Robert Verkuil, Jason Liu, Tom Sercu and Alexander Rives. **ESM-2 and ESMFold** were released with the paper [Language models of protein sequences at the scale of evolution enable accurate structure prediction](https://doi.org/10.1101/2022.07.20.500902) by Zeming Lin, Halil Akin, Roshan Rao, Brian Hie, Zhongkai Zhu, Wenting Lu, Allan dos Santos Costa, Maryam Fazel-Zarandi, Tom Sercu, Sal Candido, Alexander Rives.
1. **[FLAN-T5](https://huggingface.co/docs/transformers/model_doc/flan-t5)** (from Google AI) released in the repository [google-research/t5x](https://github.com/google-research/t5x/blob/main/docs/models.md#flan-t5-checkpoints) by Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Eric Li, Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, Albert Webson, Shixiang Shane Gu, Zhuyun Dai, Mirac Suzgun, Xinyun Chen, Aakanksha Chowdhery, Sharan Narang, Gaurav Mishra, Adams Yu, Vincent Zhao, Yanping Huang, Andrew Dai, Hongkun Yu, Slav Petrov, Ed H. Chi, Jeff Dean, Jacob Devlin, Adam Roberts, Denny Zhou, Quoc V. Le, and Jason Wei
1. **[FLAN-UL2](https://huggingface.co/docs/transformers/model_doc/flan-ul2)** (from Google AI) released in the repository [google-research/t5x](https://github.com/google-research/t5x/blob/main/docs/models.md#flan-ul2-checkpoints) by Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Eric Li, Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, Albert Webson, Shixiang Shane Gu, Zhuyun Dai, Mirac Suzgun, Xinyun Chen, Aakanksha Chowdhery, Sharan Narang, Gaurav Mishra, Adams Yu, Vincent Zhao, Yanping Huang, Andrew Dai, Hongkun Yu, Slav Petrov, Ed H. Chi, Jeff Dean, Jacob Devlin, Adam Roberts, Denny Zhou, Quoc V. Le, and Jason Wei
1. **[FlauBERT](https://huggingface.co/docs/transformers/model_doc/flaubert)** (from CNRS) released with the paper [FlauBERT: Unsupervised Language Model Pre-training for French](https://arxiv.org/abs/1912.05372) by Hang Le, Loïc Vial, Jibril Frej, Vincent Segonne, Maximin Coavoux, Benjamin Lecouteux, Alexandre Allauzen, Benoît Crabbé, Laurent Besacier, Didier Schwab.
1. **[FLAVA](https://huggingface.co/docs/transformers/model_doc/flava)** (from Facebook AI) released with the paper [FLAVA: A Foundational Language And Vision Alignment Model](https://arxiv.org/abs/2112.04482) by Amanpreet Singh, Ronghang Hu, Vedanuj Goswami, Guillaume Couairon, Wojciech Galuba, Marcus Rohrbach, and Douwe Kiela.
1. **[FNet](https://huggingface.co/docs/transformers/model_doc/fnet)** (from Google Research) released with the paper [FNet: Mixing Tokens with Fourier Transforms](https://arxiv.org/abs/2105.03824) by James Lee-Thorp, Joshua Ainslie, Ilya Eckstein, Santiago Ontanon.
1. **[FocalNet](https://huggingface.co/docs/transformers/model_doc/focalnet)** (from Microsoft Research) released with the paper [Focal Modulation Networks](https://arxiv.org/abs/2203.11926) by Jianwei Yang, Chunyuan Li, Xiyang Dai, Lu Yuan, Jianfeng Gao.
1. **[Funnel Transformer](https://huggingface.co/docs/transformers/model_doc/funnel)** (from CMU/Google Brain) released with the paper [Funnel-Transformer: Filtering out Sequential Redundancy for Efficient Language Processing](https://arxiv.org/abs/2006.03236) by Zihang Dai, Guokun Lai, Yiming Yang, Quoc V. Le.
1. **[GIT](https://huggingface.co/docs/transformers/model_doc/git)** (from Microsoft Research) released with the paper [GIT: A Generative Image-to-text Transformer for Vision and Language](https://arxiv.org/abs/2205.14100) by Jianfeng Wang, Zhengyuan Yang, Xiaowei Hu, Linjie Li, Kevin Lin, Zhe Gan, Zicheng Liu, Ce Liu, Lijuan Wang.
1. **[GLPN](https://huggingface.co/docs/transformers/model_doc/glpn)** (from KAIST) released with the paper [Global-Local Path Networks for Monocular Depth Estimation with Vertical CutDepth](https://arxiv.org/abs/2201.07436) by Doyeon Kim, Woonghyun Ga, Pyungwhan Ahn, Donggyu Joo, Sehwan Chun, Junmo Kim.
1. **[GPT](https://huggingface.co/docs/transformers/model_doc/openai-gpt)** (from OpenAI) released with the paper [Improving Language Understanding by Generative Pre-Training](https://blog.openai.com/language-unsupervised/) by Alec Radford, Karthik Narasimhan, Tim Salimans and Ilya Sutskever.
1. **[GPT Neo](https://huggingface.co/docs/transformers/model_doc/gpt_neo)** (from EleutherAI) released in the repository [EleutherAI/gpt-neo](https://github.com/EleutherAI/gpt-neo) by Sid Black, Stella Biderman, Leo Gao, Phil Wang and Connor Leahy.
1. **[GPT NeoX](https://huggingface.co/docs/transformers/model_doc/gpt_neox)** (from EleutherAI) released with the paper [GPT-NeoX-20B: An Open-Source Autoregressive Language Model](https://arxiv.org/abs/2204.06745) by Sid Black, Stella Biderman, Eric Hallahan, Quentin Anthony, Leo Gao, Laurence Golding, Horace He, Connor Leahy, Kyle McDonell, Jason Phang, Michael Pieler, USVSN Sai Prashanth, Shivanshu Purohit, Laria Reynolds, Jonathan Tow, Ben Wang, Samuel Weinbach
1. **[GPT NeoX Japanese](https://huggingface.co/docs/transformers/model_doc/gpt_neox_japanese)** (from ABEJA) released by Shinya Otani, Takayoshi Makabe, Anuj Arora, and Kyo Hattori.
1. **[GPT-2](https://huggingface.co/docs/transformers/model_doc/gpt2)** (from OpenAI) released with the paper [Language Models are Unsupervised Multitask Learners](https://blog.openai.com/better-language-models/) by Alec Radford*, Jeffrey Wu*, Rewon Child, David Luan, Dario Amodei** and Ilya Sutskever**.
1. **[GPT-J](https://huggingface.co/docs/transformers/model_doc/gptj)** (from EleutherAI) released in the repository [kingoflolz/mesh-transformer-jax](https://github.com/kingoflolz/mesh-transformer-jax/) by Ben Wang and Aran Komatsuzaki.
1. **[GPT-Sw3](https://huggingface.co/docs/transformers/model_doc/gpt-sw3)** (from AI-Sweden) released with the paper [Lessons Learned from GPT-SW3: Building the First Large-Scale Generative Language Model for Swedish](http://www.lrec-conf.org/proceedings/lrec2022/pdf/2022.lrec-1.376.pdf) by Ariel Ekgren, Amaru Cuba Gyllensten, Evangelia Gogoulou, Alice Heiman, Severine Verlinden, Joey Öhman, Fredrik Carlsson, Magnus Sahlgren.
1. **[GPTBigCode](https://huggingface.co/docs/transformers/model_doc/gpt_bigcode)** (from BigCode) released with the paper [SantaCoder: don't reach for the stars!](https://arxiv.org/abs/2301.03988) by Loubna Ben Allal, Raymond Li, Denis Kocetkov, Chenghao Mou, Christopher Akiki, Carlos Munoz Ferrandis, Niklas Muennighoff, Mayank Mishra, Alex Gu, Manan Dey, Logesh Kumar Umapathi, Carolyn Jane Anderson, Yangtian Zi, Joel Lamy Poirier, Hailey Schoelkopf, Sergey Troshin, Dmitry Abulkhanov, Manuel Romero, Michael Lappert, Francesco De Toni, Bernardo García del Río, Qian Liu, Shamik Bose, Urvashi Bhattacharyya, Terry Yue Zhuo, Ian Yu, Paulo Villegas, Marco Zocca, Sourab Mangrulkar, David Lansky, Huu Nguyen, Danish Contractor, Luis Villa, Jia Li, Dzmitry Bahdanau, Yacine Jernite, Sean Hughes, Daniel Fried, Arjun Guha, Harm de Vries, Leandro von Werra.
1. **[GPTSAN-japanese](https://huggingface.co/docs/transformers/model_doc/gptsan-japanese)** released in the repository [tanreinama/GPTSAN](https://github.com/tanreinama/GPTSAN/blob/main/report/model.md) by Toshiyuki Sakamoto(tanreinama).
1. **[Graphormer](https://huggingface.co/docs/transformers/model_doc/graphormer)** (from Microsoft) released with the paper [Do Transformers Really Perform Bad for Graph Representation?](https://arxiv.org/abs/2106.05234) by Chengxuan Ying, Tianle Cai, Shengjie Luo, Shuxin Zheng, Guolin Ke, Di He, Yanming Shen, Tie-Yan Liu.
1. **[GroupViT](https://huggingface.co/docs/transformers/model_doc/groupvit)** (from UCSD, NVIDIA) released with the paper [GroupViT: Semantic Segmentation Emerges from Text Supervision](https://arxiv.org/abs/2202.11094) by Jiarui Xu, Shalini De Mello, Sifei Liu, Wonmin Byeon, Thomas Breuel, Jan Kautz, Xiaolong Wang.
1. **[Hubert](https://huggingface.co/docs/transformers/model_doc/hubert)** (from Facebook) released with the paper [HuBERT: Self-Supervised Speech Representation Learning by Masked Prediction of Hidden Units](https://arxiv.org/abs/2106.07447) by Wei-Ning Hsu, Benjamin Bolte, Yao-Hung Hubert Tsai, Kushal Lakhotia, Ruslan Salakhutdinov, Abdelrahman Mohamed.
1. **[I-BERT](https://huggingface.co/docs/transformers/model_doc/ibert)** (from Berkeley) released with the paper [I-BERT: Integer-only BERT Quantization](https://arxiv.org/abs/2101.01321) by Sehoon Kim, Amir Gholami, Zhewei Yao, Michael W. Mahoney, Kurt Keutzer.
1. **[ImageGPT](https://huggingface.co/docs/transformers/model_doc/imagegpt)** (from OpenAI) released with the paper [Generative Pretraining from Pixels](https://openai.com/blog/image-gpt/) by Mark Chen, Alec Radford, Rewon Child, Jeffrey Wu, Heewoo Jun, David Luan, Ilya Sutskever.
1. **[Informer](https://huggingface.co/docs/transformers/model_doc/informer)** (from Beihang University, UC Berkeley, Rutgers University, SEDD Company) released with the paper [Informer: Beyond Efficient Transformer for Long Sequence Time-Series Forecasting](https://arxiv.org/abs/2012.07436) by Haoyi Zhou, Shanghang Zhang, Jieqi Peng, Shuai Zhang, Jianxin Li, Hui Xiong, and Wancai Zhang.
1. **[Jukebox](https://huggingface.co/docs/transformers/model_doc/jukebox)** (from OpenAI) released with the paper [Jukebox: A Generative Model for Music](https://arxiv.org/pdf/2005.00341.pdf) by Prafulla Dhariwal, Heewoo Jun, Christine Payne, Jong Wook Kim, Alec Radford, Ilya Sutskever.
1. **[LayoutLM](https://huggingface.co/docs/transformers/model_doc/layoutlm)** (from Microsoft Research Asia) released with the paper [LayoutLM: Pre-training of Text and Layout for Document Image Understanding](https://arxiv.org/abs/1912.13318) by Yiheng Xu, Minghao Li, Lei Cui, Shaohan Huang, Furu Wei, Ming Zhou.
1. **[LayoutLMv2](https://huggingface.co/docs/transformers/model_doc/layoutlmv2)** (from Microsoft Research Asia) released with the paper [LayoutLMv2: Multi-modal Pre-training for Visually-Rich Document Understanding](https://arxiv.org/abs/2012.14740) by Yang Xu, Yiheng Xu, Tengchao Lv, Lei Cui, Furu Wei, Guoxin Wang, Yijuan Lu, Dinei Florencio, Cha Zhang, Wanxiang Che, Min Zhang, Lidong Zhou.
1. **[LayoutLMv3](https://huggingface.co/docs/transformers/model_doc/layoutlmv3)** (from Microsoft Research Asia) released with the paper [LayoutLMv3: Pre-training for Document AI with Unified Text and Image Masking](https://arxiv.org/abs/2204.08387) by Yupan Huang, Tengchao Lv, Lei Cui, Yutong Lu, Furu Wei.
1. **[LayoutXLM](https://huggingface.co/docs/transformers/model_doc/layoutxlm)** (from Microsoft Research Asia) released with the paper [LayoutXLM: Multimodal Pre-training for Multilingual Visually-rich Document Understanding](https://arxiv.org/abs/2104.08836) by Yiheng Xu, Tengchao Lv, Lei Cui, Guoxin Wang, Yijuan Lu, Dinei Florencio, Cha Zhang, Furu Wei.
1. **[LED](https://huggingface.co/docs/transformers/model_doc/led)** (from AllenAI) released with the paper [Longformer: The Long-Document Transformer](https://arxiv.org/abs/2004.05150) by Iz Beltagy, Matthew E. Peters, Arman Cohan.
1. **[LeViT](https://huggingface.co/docs/transformers/model_doc/levit)** (from Meta AI) released with the paper [LeViT: A Vision Transformer in ConvNet's Clothing for Faster Inference](https://arxiv.org/abs/2104.01136) by Ben Graham, Alaaeldin El-Nouby, Hugo Touvron, Pierre Stock, Armand Joulin, Hervé Jégou, Matthijs Douze.
1. **[LiLT](https://huggingface.co/docs/transformers/model_doc/lilt)** (from South China University of Technology) released with the paper [LiLT: A Simple yet Effective Language-Independent Layout Transformer for Structured Document Understanding](https://arxiv.org/abs/2202.13669) by Jiapeng Wang, Lianwen Jin, Kai Ding.
1. **[LLaMA](https://huggingface.co/docs/transformers/model_doc/llama)** (from The FAIR team of Meta AI) released with the paper [LLaMA: Open and Efficient Foundation Language Models](https://arxiv.org/abs/2302.13971) by Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timothée Lacroix, Baptiste Rozière, Naman Goyal, Eric Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin, Edouard Grave, Guillaume Lample.
1. **[Longformer](https://huggingface.co/docs/transformers/model_doc/longformer)** (from AllenAI) released with the paper [Longformer: The Long-Document Transformer](https://arxiv.org/abs/2004.05150) by Iz Beltagy, Matthew E. Peters, Arman Cohan.
1. **[LongT5](https://huggingface.co/docs/transformers/model_doc/longt5)** (from Google AI) released with the paper [LongT5: Efficient Text-To-Text Transformer for Long Sequences](https://arxiv.org/abs/2112.07916) by Mandy Guo, Joshua Ainslie, David Uthus, Santiago Ontanon, Jianmo Ni, Yun-Hsuan Sung, Yinfei Yang.
1. **[LUKE](https://huggingface.co/docs/transformers/model_doc/luke)** (from Studio Ousia) released with the paper [LUKE: Deep Contextualized Entity Representations with Entity-aware Self-attention](https://arxiv.org/abs/2010.01057) by Ikuya Yamada, Akari Asai, Hiroyuki Shindo, Hideaki Takeda, Yuji Matsumoto.
1. **[LXMERT](https://huggingface.co/docs/transformers/model_doc/lxmert)** (from UNC Chapel Hill) released with the paper [LXMERT: Learning Cross-Modality Encoder Representations from Transformers for Open-Domain Question Answering](https://arxiv.org/abs/1908.07490) by Hao Tan and Mohit Bansal.
1. **[M-CTC-T](https://huggingface.co/docs/transformers/model_doc/mctct)** (from Facebook) released with the paper [Pseudo-Labeling For Massively Multilingual Speech Recognition](https://arxiv.org/abs/2111.00161) by Loren Lugosch, Tatiana Likhomanenko, Gabriel Synnaeve, and Ronan Collobert.
1. **[M2M100](https://huggingface.co/docs/transformers/model_doc/m2m_100)** (from Facebook) released with the paper [Beyond English-Centric Multilingual Machine Translation](https://arxiv.org/abs/2010.11125) by Angela Fan, Shruti Bhosale, Holger Schwenk, Zhiyi Ma, Ahmed El-Kishky, Siddharth Goyal, Mandeep Baines, Onur Celebi, Guillaume Wenzek, Vishrav Chaudhary, Naman Goyal, Tom Birch, Vitaliy Liptchinsky, Sergey Edunov, Edouard Grave, Michael Auli, Armand Joulin.
1. **[MarianMT](https://huggingface.co/docs/transformers/model_doc/marian)** Machine translation models trained using [OPUS](http://opus.nlpl.eu/) data by Jörg Tiedemann. The [Marian Framework](https://marian-nmt.github.io/) is being developed by the Microsoft Translator Team.
1. **[MarkupLM](https://huggingface.co/docs/transformers/model_doc/markuplm)** (from Microsoft Research Asia) released with the paper [MarkupLM: Pre-training of Text and Markup Language for Visually-rich Document Understanding](https://arxiv.org/abs/2110.08518) by Junlong Li, Yiheng Xu, Lei Cui, Furu Wei.
1. **[Mask2Former](https://huggingface.co/docs/transformers/model_doc/mask2former)** (from FAIR and UIUC) released with the paper [Masked-attention Mask Transformer for Universal Image Segmentation](https://arxiv.org/abs/2112.01527) by Bowen Cheng, Ishan Misra, Alexander G. Schwing, Alexander Kirillov, Rohit Girdhar.
1. **[MaskFormer](https://huggingface.co/docs/transformers/model_doc/maskformer)** (from Meta and UIUC) released with the paper [Per-Pixel Classification is Not All You Need for Semantic Segmentation](https://arxiv.org/abs/2107.06278) by Bowen Cheng, Alexander G. Schwing, Alexander Kirillov.
1. **[MatCha](https://huggingface.co/docs/transformers/model_doc/matcha)** (from Google AI) released with the paper [MatCha: Enhancing Visual Language Pretraining with Math Reasoning and Chart Derendering](https://arxiv.org/abs/2212.09662) by Fangyu Liu, Francesco Piccinno, Syrine Krichene, Chenxi Pang, Kenton Lee, Mandar Joshi, Yasemin Altun, Nigel Collier, Julian Martin Eisenschlos.
1. **[mBART](https://huggingface.co/docs/transformers/model_doc/mbart)** (from Facebook) released with the paper [Multilingual Denoising Pre-training for Neural Machine Translation](https://arxiv.org/abs/2001.08210) by Yinhan Liu, Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov, Marjan Ghazvininejad, Mike Lewis, Luke Zettlemoyer.
1. **[mBART-50](https://huggingface.co/docs/transformers/model_doc/mbart)** (from Facebook) released with the paper [Multilingual Translation with Extensible Multilingual Pretraining and Finetuning](https://arxiv.org/abs/2008.00401) by Yuqing Tang, Chau Tran, Xian Li, Peng-Jen Chen, Naman Goyal, Vishrav Chaudhary, Jiatao Gu, Angela Fan.
1. **[MEGA](https://huggingface.co/docs/transformers/model_doc/mega)** (from Facebook) released with the paper [Mega: Moving Average Equipped Gated Attention](https://arxiv.org/abs/2209.10655) by Xuezhe Ma, Chunting Zhou, Xiang Kong, Junxian He, Liangke Gui, Graham Neubig, Jonathan May, and Luke Zettlemoyer.
1. **[Megatron-BERT](https://huggingface.co/docs/transformers/model_doc/megatron-bert)** (from NVIDIA) released with the paper [Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism](https://arxiv.org/abs/1909.08053) by Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper and Bryan Catanzaro.
1. **[Megatron-GPT2](https://huggingface.co/docs/transformers/model_doc/megatron_gpt2)** (from NVIDIA) released with the paper [Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism](https://arxiv.org/abs/1909.08053) by Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper and Bryan Catanzaro.
1. **[MGP-STR](https://huggingface.co/docs/transformers/model_doc/mgp-str)** (from Alibaba Research) released with the paper [Multi-Granularity Prediction for Scene Text Recognition](https://arxiv.org/abs/2209.03592) by Peng Wang, Cheng Da, and Cong Yao.
1. **[mLUKE](https://huggingface.co/docs/transformers/model_doc/mluke)** (from Studio Ousia) released with the paper [mLUKE: The Power of Entity Representations in Multilingual Pretrained Language Models](https://arxiv.org/abs/2110.08151) by Ryokan Ri, Ikuya Yamada, and Yoshimasa Tsuruoka.
1. **[MobileBERT](https://huggingface.co/docs/transformers/model_doc/mobilebert)** (from CMU/Google Brain) released with the paper [MobileBERT: a Compact Task-Agnostic BERT for Resource-Limited Devices](https://arxiv.org/abs/2004.02984) by Zhiqing Sun, Hongkun Yu, Xiaodan Song, Renjie Liu, Yiming Yang, and Denny Zhou.
1. **[MobileNetV1](https://huggingface.co/docs/transformers/model_doc/mobilenet_v1)** (from Google Inc.) released with the paper [MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications](https://arxiv.org/abs/1704.04861) by Andrew G. Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko, Weijun Wang, Tobias Weyand, Marco Andreetto, Hartwig Adam.
1. **[MobileNetV2](https://huggingface.co/docs/transformers/model_doc/mobilenet_v2)** (from Google Inc.) released with the paper [MobileNetV2: Inverted Residuals and Linear Bottlenecks](https://arxiv.org/abs/1801.04381) by Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, Liang-Chieh Chen.
1. **[MobileViT](https://huggingface.co/docs/transformers/model_doc/mobilevit)** (from Apple) released with the paper [MobileViT: Light-weight, General-purpose, and Mobile-friendly Vision Transformer](https://arxiv.org/abs/2110.02178) by Sachin Mehta and Mohammad Rastegari.
1. **[MPNet](https://huggingface.co/docs/transformers/model_doc/mpnet)** (from Microsoft Research) released with the paper [MPNet: Masked and Permuted Pre-training for Language Understanding](https://arxiv.org/abs/2004.09297) by Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, Tie-Yan Liu.
1. **[MT5](https://huggingface.co/docs/transformers/model_doc/mt5)** (from Google AI) released with the paper [mT5: A massively multilingual pre-trained text-to-text transformer](https://arxiv.org/abs/2010.11934) by Linting Xue, Noah Constant, Adam Roberts, Mihir Kale, Rami Al-Rfou, Aditya Siddhant, Aditya Barua, Colin Raffel.
1. **[MVP](https://huggingface.co/docs/transformers/model_doc/mvp)** (from RUC AI Box) released with the paper [MVP: Multi-task Supervised Pre-training for Natural Language Generation](https://arxiv.org/abs/2206.12131) by Tianyi Tang, Junyi Li, Wayne Xin Zhao and Ji-Rong Wen.
1. **[NAT](https://huggingface.co/docs/transformers/model_doc/nat)** (from SHI Labs) released with the paper [Neighborhood Attention Transformer](https://arxiv.org/abs/2204.07143) by Ali Hassani, Steven Walton, Jiachen Li, Shen Li, and Humphrey Shi.
1. **[Nezha](https://huggingface.co/docs/transformers/model_doc/nezha)** (from Huawei Noah’s Ark Lab) released with the paper [NEZHA: Neural Contextualized Representation for Chinese Language Understanding](https://arxiv.org/abs/1909.00204) by Junqiu Wei, Xiaozhe Ren, Xiaoguang Li, Wenyong Huang, Yi Liao, Yasheng Wang, Jiashu Lin, Xin Jiang, Xiao Chen and Qun Liu.
1. **[NLLB](https://huggingface.co/docs/transformers/model_doc/nllb)** (from Meta) released with the paper [No Language Left Behind: Scaling Human-Centered Machine Translation](https://arxiv.org/abs/2207.04672) by the NLLB team.
1. **[NLLB-MOE](https://huggingface.co/docs/transformers/model_doc/nllb-moe)** (from Meta) released with the paper [No Language Left Behind: Scaling Human-Centered Machine Translation](https://arxiv.org/abs/2207.04672) by the NLLB team.
1. **[Nyströmformer](https://huggingface.co/docs/transformers/model_doc/nystromformer)** (from the University of Wisconsin - Madison) released with the paper [Nyströmformer: A Nyström-Based Algorithm for Approximating Self-Attention](https://arxiv.org/abs/2102.03902) by Yunyang Xiong, Zhanpeng Zeng, Rudrasis Chakraborty, Mingxing Tan, Glenn Fung, Yin Li, Vikas Singh.
1. **[OneFormer](https://huggingface.co/docs/transformers/model_doc/oneformer)** (from SHI Labs) released with the paper [OneFormer: One Transformer to Rule Universal Image Segmentation](https://arxiv.org/abs/2211.06220) by Jitesh Jain, Jiachen Li, MangTik Chiu, Ali Hassani, Nikita Orlov, Humphrey Shi.
1. **[OpenLlama](https://huggingface.co/docs/transformers/model_doc/open-llama)** (from [s-JoL](https://huggingface.co/s-JoL)) released in [Open-Llama](https://github.com/s-JoL/Open-Llama). 
1. **[OPT](https://huggingface.co/docs/transformers/master/model_doc/opt)** (from Meta AI) released with the paper [OPT: Open Pre-trained Transformer Language Models](https://arxiv.org/abs/2205.01068) by Susan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen et al.
1. **[OWL-ViT](https://huggingface.co/docs/transformers/model_doc/owlvit)** (from Google AI) released with the paper [Simple Open-Vocabulary Object Detection with Vision Transformers](https://arxiv.org/abs/2205.06230) by Matthias Minderer, Alexey Gritsenko, Austin Stone, Maxim Neumann, Dirk Weissenborn, Alexey Dosovitskiy, Aravindh Mahendran, Anurag Arnab, Mostafa Dehghani, Zhuoran Shen, Xiao Wang, Xiaohua Zhai, Thomas Kipf, and Neil Houlsby.
1. **[Pegasus](https://huggingface.co/docs/transformers/model_doc/pegasus)** (from Google) released with the paper [PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization](https://arxiv.org/abs/1912.08777) by Jingqing Zhang, Yao Zhao, Mohammad Saleh and Peter J. Liu.
1. **[PEGASUS-X](https://huggingface.co/docs/transformers/model_doc/pegasus_x)** (from Google) released with the paper [Investigating Efficiently Extending Transformers for Long Input Summarization](https://arxiv.org/abs/2208.04347) by Jason Phang, Yao Zhao, and Peter J. Liu.
1. **[Perceiver IO](https://huggingface.co/docs/transformers/model_doc/perceiver)** (from Deepmind) released with the paper [Perceiver IO: A General Architecture for Structured Inputs & Outputs](https://arxiv.org/abs/2107.14795) by Andrew Jaegle, Sebastian Borgeaud, Jean-Baptiste Alayrac, Carl Doersch, Catalin Ionescu, David Ding, Skanda Koppula, Daniel Zoran, Andrew Brock, Evan Shelhamer, Olivier Hénaff, Matthew M. Botvinick, Andrew Zisserman, Oriol Vinyals, João Carreira.
1. **[PhoBERT](https://huggingface.co/docs/transformers/model_doc/phobert)** (from VinAI Research) released with the paper [PhoBERT: Pre-trained language models for Vietnamese](https://www.aclweb.org/anthology/2020.findings-emnlp.92/) by Dat Quoc Nguyen and Anh Tuan Nguyen.
1. **[Pix2Struct](https://huggingface.co/docs/transformers/model_doc/pix2struct)** (from Google) released with the paper [Pix2Struct: Screenshot Parsing as Pretraining for Visual Language Understanding](https://arxiv.org/abs/2210.03347) by Kenton Lee, Mandar Joshi, Iulia Turc, Hexiang Hu, Fangyu Liu, Julian Eisenschlos, Urvashi Khandelwal, Peter Shaw, Ming-Wei Chang, Kristina Toutanova.
1. **[PLBart](https://huggingface.co/docs/transformers/model_doc/plbart)** (from UCLA NLP) released with the paper [Unified Pre-training for Program Understanding and Generation](https://arxiv.org/abs/2103.06333) by Wasi Uddin Ahmad, Saikat Chakraborty, Baishakhi Ray, Kai-Wei Chang.
1. **[PoolFormer](https://huggingface.co/docs/transformers/model_doc/poolformer)** (from Sea AI Labs) released with the paper [MetaFormer is Actually What You Need for Vision](https://arxiv.org/abs/2111.11418) by Yu, Weihao and Luo, Mi and Zhou, Pan and Si, Chenyang and Zhou, Yichen and Wang, Xinchao and Feng, Jiashi and Yan, Shuicheng.
1. **[ProphetNet](https://huggingface.co/docs/transformers/model_doc/prophetnet)** (from Microsoft Research) released with the paper [ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training](https://arxiv.org/abs/2001.04063) by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.
1. **[QDQBert](https://huggingface.co/docs/transformers/model_doc/qdqbert)** (from NVIDIA) released with the paper [Integer Quantization for Deep Learning Inference: Principles and Empirical Evaluation](https://arxiv.org/abs/2004.09602) by Hao Wu, Patrick Judd, Xiaojie Zhang, Mikhail Isaev and Paulius Micikevicius.
1. **[RAG](https://huggingface.co/docs/transformers/model_doc/rag)** (from Facebook) released with the paper [Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks](https://arxiv.org/abs/2005.11401) by Patrick Lewis, Ethan Perez, Aleksandara Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal, Heinrich Küttler, Mike Lewis, Wen-tau Yih, Tim Rocktäschel, Sebastian Riedel, Douwe Kiela.
1. **[REALM](https://huggingface.co/docs/transformers/model_doc/realm.html)** (from Google Research) released with the paper [REALM: Retrieval-Augmented Language Model Pre-Training](https://arxiv.org/abs/2002.08909) by Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat and Ming-Wei Chang.
1. **[Reformer](https://huggingface.co/docs/transformers/model_doc/reformer)** (from Google Research) released with the paper [Reformer: The Efficient Transformer](https://arxiv.org/abs/2001.04451) by Nikita Kitaev, Łukasz Kaiser, Anselm Levskaya.
1. **[RegNet](https://huggingface.co/docs/transformers/model_doc/regnet)** (from META Platforms) released with the paper [Designing Network Design Space](https://arxiv.org/abs/2003.13678) by Ilija Radosavovic, Raj Prateek Kosaraju, Ross Girshick, Kaiming He, Piotr Dollár.
1. **[RemBERT](https://huggingface.co/docs/transformers/model_doc/rembert)** (from Google Research) released with the paper [Rethinking embedding coupling in pre-trained language models](https://arxiv.org/abs/2010.12821) by Hyung Won Chung, Thibault Févry, Henry Tsai, M. Johnson, Sebastian Ruder.
1. **[ResNet](https://huggingface.co/docs/transformers/model_doc/resnet)** (from Microsoft Research) released with the paper [Deep Residual Learning for Image Recognition](https://arxiv.org/abs/1512.03385) by Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun.
1. **[RoBERTa](https://huggingface.co/docs/transformers/model_doc/roberta)** (from Facebook), released together with the paper [RoBERTa: A Robustly Optimized BERT Pretraining Approach](https://arxiv.org/abs/1907.11692) by Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov.
1. **[RoBERTa-PreLayerNorm](https://huggingface.co/docs/transformers/model_doc/roberta-prelayernorm)** (from Facebook) released with the paper [fairseq: A Fast, Extensible Toolkit for Sequence Modeling](https://arxiv.org/abs/1904.01038) by Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier, Michael Auli.
1. **[RoCBert](https://huggingface.co/docs/transformers/model_doc/roc_bert)** (from WeChatAI) released with the paper [RoCBert: Robust Chinese Bert with Multimodal Contrastive Pretraining](https://aclanthology.org/2022.acl-long.65.pdf) by HuiSu, WeiweiShi, XiaoyuShen, XiaoZhou, TuoJi, JiaruiFang, JieZhou.
1. **[RoFormer](https://huggingface.co/docs/transformers/model_doc/roformer)** (from ZhuiyiTechnology), released together with the paper [RoFormer: Enhanced Transformer with Rotary Position Embedding](https://arxiv.org/abs/2104.09864) by Jianlin Su and Yu Lu and Shengfeng Pan and Bo Wen and Yunfeng Liu.
1. **[RWKV](https://huggingface.co/docs/transformers/model_doc/rwkv)** (from Bo Peng), released on [this repo](https://github.com/BlinkDL/RWKV-LM) by Bo Peng.
1. **[SegFormer](https://huggingface.co/docs/transformers/model_doc/segformer)** (from NVIDIA) released with the paper [SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers](https://arxiv.org/abs/2105.15203) by Enze Xie, Wenhai Wang, Zhiding Yu, Anima Anandkumar, Jose M. Alvarez, Ping Luo.
1. **[Segment Anything](https://huggingface.co/docs/transformers/model_doc/sam)** (from Meta AI) released with the paper [Segment Anything](https://arxiv.org/pdf/2304.02643v1.pdf) by Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alex Berg, Wan-Yen Lo, Piotr Dollar, Ross Girshick.
1. **[SEW](https://huggingface.co/docs/transformers/model_doc/sew)** (from ASAPP) released with the paper [Performance-Efficiency Trade-offs in Unsupervised Pre-training for Speech Recognition](https://arxiv.org/abs/2109.06870) by Felix Wu, Kwangyoun Kim, Jing Pan, Kyu Han, Kilian Q. Weinberger, Yoav Artzi.
1. **[SEW-D](https://huggingface.co/docs/transformers/model_doc/sew_d)** (from ASAPP) released with the paper [Performance-Efficiency Trade-offs in Unsupervised Pre-training for Speech Recognition](https://arxiv.org/abs/2109.06870) by Felix Wu, Kwangyoun Kim, Jing Pan, Kyu Han, Kilian Q. Weinberger, Yoav Artzi.
1. **[SpeechT5](https://huggingface.co/docs/transformers/model_doc/speecht5)** (from Microsoft Research) released with the paper [SpeechT5: Unified-Modal Encoder-Decoder Pre-Training for Spoken Language Processing](https://arxiv.org/abs/2110.07205) by Junyi Ao, Rui Wang, Long Zhou, Chengyi Wang, Shuo Ren, Yu Wu, Shujie Liu, Tom Ko, Qing Li, Yu Zhang, Zhihua Wei, Yao Qian, Jinyu Li, Furu Wei.
1. **[SpeechToTextTransformer](https://huggingface.co/docs/transformers/model_doc/speech_to_text)** (from Facebook), released together with the paper [fairseq S2T: Fast Speech-to-Text Modeling with fairseq](https://arxiv.org/abs/2010.05171) by Changhan Wang, Yun Tang, Xutai Ma, Anne Wu, Dmytro Okhonko, Juan Pino.
1. **[SpeechToTextTransformer2](https://huggingface.co/docs/transformers/model_doc/speech_to_text_2)** (from Facebook), released together with the paper [Large-Scale Self- and Semi-Supervised Learning for Speech Translation](https://arxiv.org/abs/2104.06678) by Changhan Wang, Anne Wu, Juan Pino, Alexei Baevski, Michael Auli, Alexis Conneau.
1. **[Splinter](https://huggingface.co/docs/transformers/model_doc/splinter)** (from Tel Aviv University), released together with the paper [Few-Shot Question Answering by Pretraining Span Selection](https://arxiv.org/abs/2101.00438) by Ori Ram, Yuval Kirstain, Jonathan Berant, Amir Globerson, Omer Levy.
1. **[SqueezeBERT](https://huggingface.co/docs/transformers/model_doc/squeezebert)** (from Berkeley) released with the paper [SqueezeBERT: What can computer vision teach NLP about efficient neural networks?](https://arxiv.org/abs/2006.11316) by Forrest N. Iandola, Albert E. Shaw, Ravi Krishna, and Kurt W. Keutzer.
1. **[SwiftFormer](https://huggingface.co/docs/transformers/main/model_doc/swiftformer)** (from MBZUAI) released with the paper [SwiftFormer: Efficient Additive Attention for Transformer-based Real-time Mobile Vision Applications](https://arxiv.org/abs/2303.15446) by Abdelrahman Shaker, Muhammad Maaz, Hanoona Rasheed, Salman Khan, Ming-Hsuan Yang, Fahad Shahbaz Khan.
1. **[Swin Transformer](https://huggingface.co/docs/transformers/model_doc/swin)** (from Microsoft) released with the paper [Swin Transformer: Hierarchical Vision Transformer using Shifted Windows](https://arxiv.org/abs/2103.14030) by Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, Baining Guo.
1. **[Swin Transformer V2](https://huggingface.co/docs/transformers/model_doc/swinv2)** (from Microsoft) released with the paper [Swin Transformer V2: Scaling Up Capacity and Resolution](https://arxiv.org/abs/2111.09883) by Ze Liu, Han Hu, Yutong Lin, Zhuliang Yao, Zhenda Xie, Yixuan Wei, Jia Ning, Yue Cao, Zheng Zhang, Li Dong, Furu Wei, Baining Guo.
1. **[Swin2SR](https://huggingface.co/docs/transformers/model_doc/swin2sr)** (from University of Würzburg) released with the paper [Swin2SR: SwinV2 Transformer for Compressed Image Super-Resolution and Restoration](https://arxiv.org/abs/2209.11345) by Marcos V. Conde, Ui-Jin Choi, Maxime Burchi, Radu Timofte.
1. **[SwitchTransformers](https://huggingface.co/docs/transformers/model_doc/switch_transformers)** (from Google) released with the paper [Switch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity](https://arxiv.org/abs/2101.03961) by William Fedus, Barret Zoph, Noam Shazeer.
1. **[T5](https://huggingface.co/docs/transformers/model_doc/t5)** (from Google AI) released with the paper [Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer](https://arxiv.org/abs/1910.10683) by Colin Raffel and Noam Shazeer and Adam Roberts and Katherine Lee and Sharan Narang and Michael Matena and Yanqi Zhou and Wei Li and Peter J. Liu.
1. **[T5v1.1](https://huggingface.co/docs/transformers/model_doc/t5v1.1)** (from Google AI) released in the repository [google-research/text-to-text-transfer-transformer](https://github.com/google-research/text-to-text-transfer-transformer/blob/main/released_checkpoints.md#t511) by Colin Raffel and Noam Shazeer and Adam Roberts and Katherine Lee and Sharan Narang and Michael Matena and Yanqi Zhou and Wei Li and Peter J. Liu.
1. **[Table Transformer](https://huggingface.co/docs/transformers/model_doc/table-transformer)** (from Microsoft Research) released with the paper [PubTables-1M: Towards Comprehensive Table Extraction From Unstructured Documents](https://arxiv.org/abs/2110.00061) by Brandon Smock, Rohith Pesala, Robin Abraham.
1. **[TAPAS](https://huggingface.co/docs/transformers/model_doc/tapas)** (from Google AI) released with the paper [TAPAS: Weakly Supervised Table Parsing via Pre-training](https://arxiv.org/abs/2004.02349) by Jonathan Herzig, Paweł Krzysztof Nowak, Thomas Müller, Francesco Piccinno and Julian Martin Eisenschlos.
1. **[TAPEX](https://huggingface.co/docs/transformers/model_doc/tapex)** (from Microsoft Research) released with the paper [TAPEX: Table Pre-training via Learning a Neural SQL Executor](https://arxiv.org/abs/2107.07653) by Qian Liu, Bei Chen, Jiaqi Guo, Morteza Ziyadi, Zeqi Lin, Weizhu Chen, Jian-Guang Lou.
1. **[Time Series Transformer](https://huggingface.co/docs/transformers/model_doc/time_series_transformer)** (from HuggingFace).
1. **[TimeSformer](https://huggingface.co/docs/transformers/model_doc/timesformer)** (from Facebook) released with the paper [Is Space-Time Attention All You Need for Video Understanding?](https://arxiv.org/abs/2102.05095) by Gedas Bertasius, Heng Wang, Lorenzo Torresani.
1. **[Trajectory Transformer](https://huggingface.co/docs/transformers/model_doc/trajectory_transformers)** (from the University of California at Berkeley) released with the paper [Offline Reinforcement Learning as One Big Sequence Modeling Problem](https://arxiv.org/abs/2106.02039) by Michael Janner, Qiyang Li, Sergey Levine
1. **[Transformer-XL](https://huggingface.co/docs/transformers/model_doc/transfo-xl)** (from Google/CMU) released with the paper [Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context](https://arxiv.org/abs/1901.02860) by Zihang Dai*, Zhilin Yang*, Yiming Yang, Jaime Carbonell, Quoc V. Le, Ruslan Salakhutdinov.
1. **[TrOCR](https://huggingface.co/docs/transformers/model_doc/trocr)** (from Microsoft), released together with the paper [TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models](https://arxiv.org/abs/2109.10282) by Minghao Li, Tengchao Lv, Lei Cui, Yijuan Lu, Dinei Florencio, Cha Zhang, Zhoujun Li, Furu Wei.
1. **[TVLT](https://huggingface.co/docs/transformers/model_doc/tvlt)** (from UNC Chapel Hill) released with the paper [TVLT: Textless Vision-Language Transformer](https://arxiv.org/abs/2209.14156) by Zineng Tang, Jaemin Cho, Yixin Nie, Mohit Bansal.
1. **[UL2](https://huggingface.co/docs/transformers/model_doc/ul2)** (from Google Research) released with the paper [Unifying Language Learning Paradigms](https://arxiv.org/abs/2205.05131v1) by Yi Tay, Mostafa Dehghani, Vinh Q. Tran, Xavier Garcia, Dara Bahri, Tal Schuster, Huaixiu Steven Zheng, Neil Houlsby, Donald Metzler
1. **[UniSpeech](https://huggingface.co/docs/transformers/model_doc/unispeech)** (from Microsoft Research) released with the paper [UniSpeech: Unified Speech Representation Learning with Labeled and Unlabeled Data](https://arxiv.org/abs/2101.07597) by Chengyi Wang, Yu Wu, Yao Qian, Kenichi Kumatani, Shujie Liu, Furu Wei, Michael Zeng, Xuedong Huang.
1. **[UniSpeechSat](https://huggingface.co/docs/transformers/model_doc/unispeech-sat)** (from Microsoft Research) released with the paper [UNISPEECH-SAT: UNIVERSAL SPEECH REPRESENTATION LEARNING WITH SPEAKER AWARE PRE-TRAINING](https://arxiv.org/abs/2110.05752) by Sanyuan Chen, Yu Wu, Chengyi Wang, Zhengyang Chen, Zhuo Chen, Shujie Liu, Jian Wu, Yao Qian, Furu Wei, Jinyu Li, Xiangzhan Yu.
1. **[UPerNet](https://huggingface.co/docs/transformers/model_doc/upernet)** (from Peking University) released with the paper [Unified Perceptual Parsing for Scene Understanding](https://arxiv.org/abs/1807.10221) by Tete Xiao, Yingcheng Liu, Bolei Zhou, Yuning Jiang, Jian Sun.
1. **[VAN](https://huggingface.co/docs/transformers/model_doc/van)** (from Tsinghua University and Nankai University) released with the paper [Visual Attention Network](https://arxiv.org/abs/2202.09741) by Meng-Hao Guo, Cheng-Ze Lu, Zheng-Ning Liu, Ming-Ming Cheng, Shi-Min Hu.
1. **[VideoMAE](https://huggingface.co/docs/transformers/model_doc/videomae)** (from Multimedia Computing Group, Nanjing University) released with the paper [VideoMAE: Masked Autoencoders are Data-Efficient Learners for Self-Supervised Video Pre-Training](https://arxiv.org/abs/2203.12602) by Zhan Tong, Yibing Song, Jue Wang, Limin Wang.
1. **[ViLT](https://huggingface.co/docs/transformers/model_doc/vilt)** (from NAVER AI Lab/Kakao Enterprise/Kakao Brain) released with the paper [ViLT: Vision-and-Language Transformer Without Convolution or Region Supervision](https://arxiv.org/abs/2102.03334) by Wonjae Kim, Bokyung Son, Ildoo Kim.
1. **[Vision Transformer (ViT)](https://huggingface.co/docs/transformers/model_doc/vit)** (from Google AI) released with the paper [An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale](https://arxiv.org/abs/2010.11929) by Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby.
1. **[VisualBERT](https://huggingface.co/docs/transformers/model_doc/visual_bert)** (from UCLA NLP) released with the paper [VisualBERT: A Simple and Performant Baseline for Vision and Language](https://arxiv.org/pdf/1908.03557) by Liunian Harold Li, Mark Yatskar, Da Yin, Cho-Jui Hsieh, Kai-Wei Chang.
1. **[ViT Hybrid](https://huggingface.co/docs/transformers/model_doc/vit_hybrid)** (from Google AI) released with the paper [An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale](https://arxiv.org/abs/2010.11929) by Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby.
1. **[ViTMAE](https://huggingface.co/docs/transformers/model_doc/vit_mae)** (from Meta AI) released with the paper [Masked Autoencoders Are Scalable Vision Learners](https://arxiv.org/abs/2111.06377) by Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Dollár, Ross Girshick.
1. **[ViTMSN](https://huggingface.co/docs/transformers/model_doc/vit_msn)** (from Meta AI) released with the paper [Masked Siamese Networks for Label-Efficient Learning](https://arxiv.org/abs/2204.07141) by Mahmoud Assran, Mathilde Caron, Ishan Misra, Piotr Bojanowski, Florian Bordes, Pascal Vincent, Armand Joulin, Michael Rabbat, Nicolas Ballas.
1. **[Wav2Vec2](https://huggingface.co/docs/transformers/model_doc/wav2vec2)** (from Facebook AI) released with the paper [wav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations](https://arxiv.org/abs/2006.11477) by Alexei Baevski, Henry Zhou, Abdelrahman Mohamed, Michael Auli.
1. **[Wav2Vec2-Conformer](https://huggingface.co/docs/transformers/model_doc/wav2vec2-conformer)** (from Facebook AI) released with the paper [FAIRSEQ S2T: Fast Speech-to-Text Modeling with FAIRSEQ](https://arxiv.org/abs/2010.05171) by Changhan Wang, Yun Tang, Xutai Ma, Anne Wu, Sravya Popuri, Dmytro Okhonko, Juan Pino.
1. **[Wav2Vec2Phoneme](https://huggingface.co/docs/transformers/model_doc/wav2vec2_phoneme)** (from Facebook AI) released with the paper [Simple and Effective Zero-shot Cross-lingual Phoneme Recognition](https://arxiv.org/abs/2109.11680) by Qiantong Xu, Alexei Baevski, Michael Auli.
1. **[WavLM](https://huggingface.co/docs/transformers/model_doc/wavlm)** (from Microsoft Research) released with the paper [WavLM: Large-Scale Self-Supervised Pre-Training for Full Stack Speech Processing](https://arxiv.org/abs/2110.13900) by Sanyuan Chen, Chengyi Wang, Zhengyang Chen, Yu Wu, Shujie Liu, Zhuo Chen, Jinyu Li, Naoyuki Kanda, Takuya Yoshioka, Xiong Xiao, Jian Wu, Long Zhou, Shuo Ren, Yanmin Qian, Yao Qian, Jian Wu, Michael Zeng, Furu Wei.
1. **[Whisper](https://huggingface.co/docs/transformers/model_doc/whisper)** (from OpenAI) released with the paper [Robust Speech Recognition via Large-Scale Weak Supervision](https://cdn.openai.com/papers/whisper.pdf) by Alec Radford, Jong Wook Kim, Tao Xu, Greg Brockman, Christine McLeavey, Ilya Sutskever.
1. **[X-CLIP](https://huggingface.co/docs/transformers/model_doc/xclip)** (from Microsoft Research) released with the paper [Expanding Language-Image Pretrained Models for General Video Recognition](https://arxiv.org/abs/2208.02816) by Bolin Ni, Houwen Peng, Minghao Chen, Songyang Zhang, Gaofeng Meng, Jianlong Fu, Shiming Xiang, Haibin Ling.
1. **[X-MOD](https://huggingface.co/docs/transformers/model_doc/xmod)** (from Meta AI) released with the paper [Lifting the Curse of Multilinguality by Pre-training Modular Transformers](http://dx.doi.org/10.18653/v1/2022.naacl-main.255) by Jonas Pfeiffer, Naman Goyal, Xi Lin, Xian Li, James Cross, Sebastian Riedel, Mikel Artetxe.
1. **[XGLM](https://huggingface.co/docs/transformers/model_doc/xglm)** (From Facebook AI) released with the paper [Few-shot Learning with Multilingual Language Models](https://arxiv.org/abs/2112.10668) by Xi Victoria Lin, Todor Mihaylov, Mikel Artetxe, Tianlu Wang, Shuohui Chen, Daniel Simig, Myle Ott, Naman Goyal, Shruti Bhosale, Jingfei Du, Ramakanth Pasunuru, Sam Shleifer, Punit Singh Koura, Vishrav Chaudhary, Brian O'Horo, Jeff Wang, Luke Zettlemoyer, Zornitsa Kozareva, Mona Diab, Veselin Stoyanov, Xian Li.
1. **[XLM](https://huggingface.co/docs/transformers/model_doc/xlm)** (from Facebook) released together with the paper [Cross-lingual Language Model Pretraining](https://arxiv.org/abs/1901.07291) by Guillaume Lample and Alexis Conneau.
1. **[XLM-ProphetNet](https://huggingface.co/docs/transformers/model_doc/xlm-prophetnet)** (from Microsoft Research) released with the paper [ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training](https://arxiv.org/abs/2001.04063) by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.
1. **[XLM-RoBERTa](https://huggingface.co/docs/transformers/model_doc/xlm-roberta)** (from Facebook AI), released together with the paper [Unsupervised Cross-lingual Representation Learning at Scale](https://arxiv.org/abs/1911.02116) by Alexis Conneau*, Kartikay Khandelwal*, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco Guzmán, Edouard Grave, Myle Ott, Luke Zettlemoyer and Veselin Stoyanov.
1. **[XLM-RoBERTa-XL](https://huggingface.co/docs/transformers/model_doc/xlm-roberta-xl)** (from Facebook AI), released together with the paper [Larger-Scale Transformers for Multilingual Masked Language Modeling](https://arxiv.org/abs/2105.00572) by Naman Goyal, Jingfei Du, Myle Ott, Giri Anantharaman, Alexis Conneau.
1. **[XLM-V](https://huggingface.co/docs/transformers/model_doc/xlm-v)** (from Meta AI) released with the paper [XLM-V: Overcoming the Vocabulary Bottleneck in Multilingual Masked Language Models](https://arxiv.org/abs/2301.10472) by Davis Liang, Hila Gonen, Yuning Mao, Rui Hou, Naman Goyal, Marjan Ghazvininejad, Luke Zettlemoyer, Madian Khabsa.
1. **[XLNet](https://huggingface.co/docs/transformers/model_doc/xlnet)** (from Google/CMU) released with the paper [​XLNet: Generalized Autoregressive Pretraining for Language Understanding](https://arxiv.org/abs/1906.08237) by Zhilin Yang*, Zihang Dai*, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, Quoc V. Le.
1. **[XLS-R](https://huggingface.co/docs/transformers/model_doc/xls_r)** (from Facebook AI) released with the paper [XLS-R: Self-supervised Cross-lingual Speech Representation Learning at Scale](https://arxiv.org/abs/2111.09296) by Arun Babu, Changhan Wang, Andros Tjandra, Kushal Lakhotia, Qiantong Xu, Naman Goyal, Kritika Singh, Patrick von Platen, Yatharth Saraf, Juan Pino, Alexei Baevski, Alexis Conneau, Michael Auli.
1. **[XLSR-Wav2Vec2](https://huggingface.co/docs/transformers/model_doc/xlsr_wav2vec2)** (from Facebook AI) released with the paper [Unsupervised Cross-Lingual Representation Learning For Speech Recognition](https://arxiv.org/abs/2006.13979) by Alexis Conneau, Alexei Baevski, Ronan Collobert, Abdelrahman Mohamed, Michael Auli.
1. **[YOLOS](https://huggingface.co/docs/transformers/model_doc/yolos)** (from Huazhong University of Science & Technology) released with the paper [You Only Look at One Sequence: Rethinking Transformer in Vision through Object Detection](https://arxiv.org/abs/2106.00666) by Yuxin Fang, Bencheng Liao, Xinggang Wang, Jiemin Fang, Jiyang Qi, Rui Wu, Jianwei Niu, Wenyu Liu.
1. **[YOSO](https://huggingface.co/docs/transformers/model_doc/yoso)** (from the University of Wisconsin - Madison) released with the paper [You Only Sample (Almost) Once: Linear Cost Self-Attention Via Bernoulli Sampling](https://arxiv.org/abs/2111.09714) by Zhanpeng Zeng, Yunyang Xiong, Sathya N. Ravi, Shailesh Acharya, Glenn Fung, Vikas Singh.
1. Want to contribute a new model? We have added a **detailed guide and templates** to guide you in the process of adding a new model. You can find them in the [`templates`](./templates) folder of the repository. Be sure to check the [contributing guidelines](./CONTRIBUTING.md) and contact the maintainers or open an issue to collect feedbacks before starting your PR.

To check if each model has an implementation in Flax, PyTorch or TensorFlow, or has an associated tokenizer backed by the 🤗 Tokenizers library, refer to [this table](https://huggingface.co/docs/transformers/index#supported-frameworks).

These implementations have been tested on several datasets (see the example scripts) and should match the performance of the original implementations. You can find more details on performance in the Examples section of the [documentation](https://github.com/huggingface/transformers/tree/main/examples).


## Learn more

| Section | Description |
|-|-|
| [Documentation](https://huggingface.co/docs/transformers/) | Full API documentation and tutorials |
| [Task summary](https://huggingface.co/docs/transformers/task_summary) | Tasks supported by 🤗 Transformers |
| [Preprocessing tutorial](https://huggingface.co/docs/transformers/preprocessing) | Using the `Tokenizer` class to prepare data for the models |
| [Training and fine-tuning](https://huggingface.co/docs/transformers/training) | Using the models provided by 🤗 Transformers in a PyTorch/TensorFlow training loop and the `Trainer` API |
| [Quick tour: Fine-tuning/usage scripts](https://github.com/huggingface/transformers/tree/main/examples) | Example scripts for fine-tuning models on a wide range of tasks |
| [Model sharing and uploading](https://huggingface.co/docs/transformers/model_sharing) | Upload and share your fine-tuned models with the community |
| [Migration](https://huggingface.co/docs/transformers/migration) | Migrate to 🤗 Transformers from `pytorch-transformers` or `pytorch-pretrained-bert` |

## Citation

We now have a [paper](https://www.aclweb.org/anthology/2020.emnlp-demos.6/) you can cite for the 🤗 Transformers library:
```bibtex
@inproceedings{wolf-etal-2020-transformers,
    title = ""Transformers: State-of-the-Art Natural Language Processing"",
    author = ""Thomas Wolf and Lysandre Debut and Victor Sanh and Julien Chaumond and Clement Delangue and Anthony Moi and Pierric Cistac and Tim Rault and Rémi Louf and Morgan Funtowicz and Joe Davison and Sam Shleifer and Patrick von Platen and Clara Ma and Yacine Jernite and Julien Plu and Canwen Xu and Teven Le Scao and Sylvain Gugger and Mariama Drame and Quentin Lhoest and Alexander M. Rush"",
    booktitle = ""Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations"",
    month = oct,
    year = ""2020"",
    address = ""Online"",
    publisher = ""Association for Computational Linguistics"",
    url = ""https://www.aclweb.org/anthology/2020.emnlp-demos.6"",
    pages = ""38--45""
}
```
"
shadowsocks/shadowsocks,Python,"Removed according to regulations.
"
zero-to-mastery/start-here-guidelines,Python,"## One rule of this community:

We don't care if you break things. This is a playground, and we encourage failing often. Use this as a practice ground, and enjoy contributing to projects you create with your fellow students. Many students have gained real-world experience ""working in teams"" by working on these projects.

## A Guide to Get Started (used to be the 4 step guide)

1. Check out [Andrei's videos on github](https://www.youtube.com/watch?v=JN63v_czZqI) if you haven't watched it already.

2. On the [GitHub page for this repository](https://github.com/zero-to-mastery/start-here-guidelines), click on the button ""Fork.""

   ![fork image](https://docs.github.com/assets/cb-28613/images/help/repository/fork_button.png)

3. Clone _your forked repository_ to your computer:

   ![code ui](https://docs.github.com/assets/images/help/repository/code-button.png)

   For example, run this command inside your terminal:

   ```bash
   git clone https://github.com/<your-github-username>/start-here-guidelines.git
   ```

   **Replace \<your-github-username\>!**

   Learn more about [forking](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) and [cloning a repo](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository).

4. Shift to project directory:

   ```bash
   cd start-here-guidelines
   ```

5. Before you make any changes, [keep your fork in sync](https://www.freecodecamp.org/news/how-to-sync-your-fork-with-the-original-git-repository/) to avoid merge conflicts:

   ```bash
   git remote add upstream https://github.com/zero-to-mastery/start-here-guidelines.git
   git pull upstream master
   ```

   If you run into a **merge conflict**, you have to resolve the conflict. There are a lot of guides online, or you can [watch this tutorial](https://www.youtube.com/watch?v=9ZRb01WhuoE&list=PL2HX_yT71umC0SWrtpzaXt0QzwhWyNI4c&index=4).

6. After adding the upstream and checking that all files are up to date, we now will create new branch before editing any files. There are two ways to do so:

   ```bash
   git checkout -b <branch-name>
   ```

   ```bash
   git branch <branch-name>
   git switch <branch-name>
   ```

7. On your computer, open your text editor, and add your name to the `CONTRIBUTORS.md` file.

- ⚠️ **IMPORTANT NOTE #1:** Add your name somewhere in the middle. Not at the top or bottom in order to avoid the chance of you getting a [merge conflict](https://www.youtube.com/watch?v=9ZRb01WhuoE&list=PL2HX_yT71umC0SWrtpzaXt0QzwhWyNI4c&index=4)!
- ⚠️ **IMPORTANT NOTE #2:** Please do **NOT** edit or remove other people from the list, even to fix their indentation etc. This will likely prevent your PR from being merged.

8. Add the changes with `git add`, `git commit` ([write a good commit message](https://chris.beams.io/posts/git-commit/), if possible):

   ```bash
   git add CONTRIBUTORS.md
   git commit -m ""Add <your-github-username>""
   ```

   **Replace \<your-github-username\>!**

9. Push your changes _to your repository_:

   ```bash
   git push origin <branch-name>
   ```

10. Go to the GitHub page of _your fork_, and make a pull request:

    ![pull request image](https://docs.github.com/assets/cb-87213/images/help/pull_requests/pull-request-review-edit-branch.png)

    Read more about pull requests on the [GitHub help pages](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).

11. Wait until Zerobot or one of the maintainers merges your pull request. If there are any conflicts, you will get a notification and be required to resolve the conflict.

12. Go join a project and start contributing or create your own group apps. Don't be shy and enjoy creating things together (We have over 20 projects for all levels of programmers)! [Check out this guide](https://github.com/zero-to-mastery/start-here-guidelines/blob/master/Get_Started.md) for more information on selecting a project.

13. To see the Zero to Mastery Icon in your GitHub profile, [follow these steps](https://help.github.com/articles/publicizing-or-hiding-organization-membership/) (you must complete steps 1 and 2 for this to work).

## Anatomy of an open-source project:

Every open-source community is different.

Spending years on one open-source project means you’ve gotten to know _one_ open-source project. Move to a different project, and you might find the vocabulary, norms, and communication styles are completely different.

That said, many open-source projects follow a similar organizational structure. Understanding the different community roles and overall process will help you get quickly oriented to any new project.

A typical open-source project has the following types of people:

**Author**: The person(s) or organization that created the project.

**Owner**: The person(s) who has administrative ownership over the organization or repository (not always the same as the original author).

**Maintainers**: Contributors who are responsible for driving the vision and managing the organizational aspects of the project (may also be authors or owners of the project).

**Contributors**: Everyone who has contributed something back to the project.

**Community Members**: People who use the project. They might be active in conversations or express their opinion on the project’s direction.

Bigger projects may also have subcommittees or working groups focused on different tasks, such as tooling, triage, community moderation, and event organizing. Look on a project’s website for a “team” page or in the repository for governance documentation to find this information.

A project also has documentation. These files are usually listed in the top level of a repository.

**LICENSE**: By definition, every open-source project must have an open-source license. If the project does not have a license, it is not open source.

**README**: The README is the instruction manual that welcomes new community members to the project. It explains why the project is useful and how to get started.

**CONTRIBUTING**: Whereas READMEs help people use the project, contributing docs help people contribute to the project. It explains what types of contributions are needed and how the process works. While not every project has a CONTRIBUTING file, its presence signals that this is a welcoming project to contribute to.

**CODE_OF_CONDUCT**: The code of conduct sets ground rules for participants’ behavior and helps to facilitate a friendly, welcoming environment. While not every project has a CODE_OF_CONDUCT file, its presence signals that this is a welcoming project to contribute to.

**Other documentation**: There might be additional documentation such as tutorials, walkthroughs, or governance policies, especially on bigger projects.

Finally, open-source projects use the following tools to organize discussion. Reading through the archives will give you a good picture of how the community thinks and works.

**Issue tracker**: Where people discuss issues related to the project.

**Pull requests**: Where people discuss and review changes that are in progress.

**Discussion forums or mailing lists**: Some projects may use these channels for conversational topics (for example, “How do I…“ or “What do you think about…“ instead of bug reports or feature requests). Others use the issue tracker for all conversations.

**Synchronous chat channel**: Some projects use chat channels (such as Discord or IRC) for casual conversation, collaboration, and quick exchanges.

**Get all the ZTM Courses, for one monthly subscription** [here](https://zerotomastery.io/courses?utm_source=github&utm_medium=start-here-guidelines).
"
josephmisiti/awesome-machine-learning,Python,"# Awesome Machine Learning [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome) [![Track Awesome List](https://www.trackawesomelist.com/badge.svg)](https://www.trackawesomelist.com/josephmisiti/awesome-machine-learning/)

A curated list of awesome machine learning frameworks, libraries and software (by language). Inspired by `awesome-php`.

_If you want to contribute to this list (please do), send me a pull request or contact me [@josephmisiti](https://twitter.com/josephmisiti)._
Also, a listed repository should be deprecated if:

* Repository's owner explicitly says that ""this library is not maintained"".
* Not committed for a long time (2~3 years).

Further resources:

* For a list of free machine learning books available for download, go [here](https://github.com/josephmisiti/awesome-machine-learning/blob/master/books.md).

* For a list of professional machine learning events, go [here](https://github.com/josephmisiti/awesome-machine-learning/blob/master/events.md).

* For a list of (mostly) free machine learning courses available online, go [here](https://github.com/josephmisiti/awesome-machine-learning/blob/master/courses.md).

* For a list of blogs and newsletters on data science and machine learning, go [here](https://github.com/josephmisiti/awesome-machine-learning/blob/master/blogs.md).

* For a list of free-to-attend meetups and local events, go [here](https://github.com/josephmisiti/awesome-machine-learning/blob/master/meetups.md).

## Table of Contents

### Frameworks and Libraries
<!-- MarkdownTOC depth=4 -->

- [Awesome Machine Learning ![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](#awesome-machine-learning-)
  - [Table of Contents](#table-of-contents)
    - [Frameworks and Libraries](#frameworks-and-libraries)
    - [Tools](#tools)
  - [APL](#apl)
      - [General-Purpose Machine Learning](#apl-general-purpose-machine-learning)
  - [C](#c)
      - [General-Purpose Machine Learning](#c-general-purpose-machine-learning)
      - [Computer Vision](#c-computer-vision)
  - [C++](#cpp)
      - [Computer Vision](#cpp-computer-vision)
      - [General-Purpose Machine Learning](#cpp-general-purpose-machine-learning)
      - [Natural Language Processing](#cpp-natural-language-processing)
      - [Speech Recognition](#cpp-speech-recognition)
      - [Sequence Analysis](#cpp-sequence-analysis)
      - [Gesture Detection](#cpp-gesture-detection)
  - [Common Lisp](#common-lisp)
      - [General-Purpose Machine Learning](#common-lisp-general-purpose-machine-learning)
  - [Clojure](#clojure)
      - [Natural Language Processing](#clojure-natural-language-processing)
      - [General-Purpose Machine Learning](#clojure-general-purpose-machine-learning)
      - [Deep Learning](#clojure-deep-learning)
      - [Data Analysis](#clojure-data-analysis--data-visualization)
      - [Data Visualization](#clojure-data-visualization)
      - [Interop](#clojure-interop)
      - [Misc](#clojure-misc)
      - [Extra](#clojure-extra)
  - [Crystal](#crystal)
      - [General-Purpose Machine Learning](#crystal-general-purpose-machine-learning)
  - [Elixir](#elixir)
      - [General-Purpose Machine Learning](#elixir-general-purpose-machine-learning)
      - [Natural Language Processing](#elixir-natural-language-processing)
  - [Erlang](#erlang)
      - [General-Purpose Machine Learning](#erlang-general-purpose-machine-learning)
  - [Fortran](#fortran)
      - [General-Purpose Machine Learning](#fortran-general-purpose-machine-learning)
      - [Data Analysis / Data Visualization](#fortran-data-analysis--data-visualization)
  - [Go](#go)
      - [Natural Language Processing](#go-natural-language-processing)
      - [General-Purpose Machine Learning](#go-general-purpose-machine-learning)
      - [Spatial analysis and geometry](#go-spatial-analysis-and-geometry)
      - [Data Analysis / Data Visualization](#go-data-analysis--data-visualization)
      - [Computer vision](#go-computer-vision)
      - [Reinforcement learning](#go-reinforcement-learning)
  - [Haskell](#haskell)
      - [General-Purpose Machine Learning](#haskell-general-purpose-machine-learning)
  - [Java](#java)
      - [Natural Language Processing](#java-natural-language-processing)
      - [General-Purpose Machine Learning](#java-general-purpose-machine-learning)
      - [Speech Recognition](#java-speech-recognition)
      - [Data Analysis / Data Visualization](#java-data-analysis--data-visualization)
      - [Deep Learning](#java-deep-learning)
  - [Javascript](#javascript)
      - [Natural Language Processing](#javascript-natural-language-processing)
      - [Data Analysis / Data Visualization](#javascript-data-analysis--data-visualization)
      - [General-Purpose Machine Learning](#javascript-general-purpose-machine-learning)
      - [Misc](#javascript-misc)
      - [Demos and Scripts](#javascript-demos-and-scripts)
  - [Julia](#julia)
      - [General-Purpose Machine Learning](#julia-general-purpose-machine-learning)
      - [Natural Language Processing](#julia-natural-language-processing)
      - [Data Analysis / Data Visualization](#julia-data-analysis--data-visualization)
      - [Misc Stuff / Presentations](#julia-misc-stuff--presentations)
  - [Kotlin](#kotlin)
      - [Deep Learning](#kotlin-deep-learning)
  - [Lua](#lua)
      - [General-Purpose Machine Learning](#lua-general-purpose-machine-learning)
      - [Demos and Scripts](#lua-demos-and-scripts)
  - [Matlab](#matlab)
      - [Computer Vision](#matlab-computer-vision)
      - [Natural Language Processing](#matlab-natural-language-processing)
      - [General-Purpose Machine Learning](#matlab-general-purpose-machine-learning)
      - [Data Analysis / Data Visualization](#matlab-data-analysis--data-visualization)
  - [.NET](#net)
      - [Computer Vision](#net-computer-vision)
      - [Natural Language Processing](#net-natural-language-processing)
      - [General-Purpose Machine Learning](#net-general-purpose-machine-learning)
      - [Data Analysis / Data Visualization](#net-data-analysis--data-visualization)
  - [Objective C](#objective-c)
    - [General-Purpose Machine Learning](#objective-c-general-purpose-machine-learning)
  - [OCaml](#ocaml)
    - [General-Purpose Machine Learning](#ocaml-general-purpose-machine-learning)
  - [OpenCV](#opencv)
    - [Computer Vision](#opencv-Computer-Vision)
    - [Text-Detection](#Text-Character-Number-Detection)
  - [Perl](#perl)
    - [Data Analysis / Data Visualization](#perl-data-analysis--data-visualization)
    - [General-Purpose Machine Learning](#perl-general-purpose-machine-learning)
  - [Perl 6](#perl-6)
    - [Data Analysis / Data Visualization](#perl-6-data-analysis--data-visualization)
    - [General-Purpose Machine Learning](#perl-6-general-purpose-machine-learning)
  - [PHP](#php)
    - [Natural Language Processing](#php-natural-language-processing)
    - [General-Purpose Machine Learning](#php-general-purpose-machine-learning)
  - [Python](#python)
      - [Computer Vision](#python-computer-vision)
      - [Natural Language Processing](#python-natural-language-processing)
      - [General-Purpose Machine Learning](#python-general-purpose-machine-learning)
      - [Data Analysis / Data Visualization](#python-data-analysis--data-visualization)
      - [Misc Scripts / iPython Notebooks / Codebases](#python-misc-scripts--ipython-notebooks--codebases)
      - [Neural Networks](#python-neural-networks)
      - [Survival Analysis](#python-survival-analysis)
      - [Federated Learning](#python-federated-learning)
      - [Kaggle Competition Source Code](#python-kaggle-competition-source-code)
      - [Reinforcement Learning](#python-reinforcement-learning)
  - [Ruby](#ruby)
      - [Natural Language Processing](#ruby-natural-language-processing)
      - [General-Purpose Machine Learning](#ruby-general-purpose-machine-learning)
      - [Data Analysis / Data Visualization](#ruby-data-analysis--data-visualization)
      - [Misc](#ruby-misc)
  - [Rust](#rust)
      - [General-Purpose Machine Learning](#rust-general-purpose-machine-learning)
  - [R](#r)
      - [General-Purpose Machine Learning](#r-general-purpose-machine-learning)
      - [Data Analysis / Data Visualization](#r-data-analysis--data-visualization)
  - [SAS](#sas)
      - [General-Purpose Machine Learning](#sas-general-purpose-machine-learning)
      - [Data Analysis / Data Visualization](#sas-data-analysis--data-visualization)
      - [Natural Language Processing](#sas-natural-language-processing)
      - [Demos and Scripts](#sas-demos-and-scripts)
  - [Scala](#scala)
      - [Natural Language Processing](#scala-natural-language-processing)
      - [Data Analysis / Data Visualization](#scala-data-analysis--data-visualization)
      - [General-Purpose Machine Learning](#scala-general-purpose-machine-learning)
  - [Scheme](#scheme)
      - [Neural Networks](#scheme-neural-networks)
  - [Swift](#swift)
      - [General-Purpose Machine Learning](#swift-general-purpose-machine-learning)
  - [TensorFlow](#tensorflow)
      - [General-Purpose Machine Learning](#tensorflow-general-purpose-machine-learning)

### [Tools](#tools-1)

- [Neural Networks](#tools-neural-networks)
- [Misc](#tools-misc)


[Credits](#credits)

<!-- /MarkdownTOC -->

<a name=""apl""></a>
## APL

<a name=""apl-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning
* [naive-apl](https://github.com/mattcunningham/naive-apl) - Naive Bayesian Classifier implementation in APL. **[Deprecated]**

<a name=""c""></a>
## C

<a name=""c-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning
* [Darknet](https://github.com/pjreddie/darknet) - Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.
* [Recommender](https://github.com/GHamrouni/Recommender) - A C library for product recommendations/suggestions using collaborative filtering (CF).
* [Hybrid Recommender System](https://github.com/SeniorSA/hybrid-rs-trainner) - A hybrid recommender system based upon scikit-learn algorithms. **[Deprecated]**
* [neonrvm](https://github.com/siavashserver/neonrvm) - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.
* [cONNXr](https://github.com/alrevuelta/cONNXr) - An `ONNX` runtime written in pure C (99) with zero dependencies focused on small embedded devices. Run inference on your machine learning models no matter which framework you train it with. Easy to install and compiles everywhere, even in very old devices.
* [libonnx](https://github.com/xboot/libonnx) - A lightweight, portable pure C99 onnx inference engine for embedded devices with hardware acceleration support.

<a name=""c-computer-vision""></a>
#### Computer Vision

* [CCV](https://github.com/liuliu/ccv) - C-based/Cached/Core Computer Vision Library, A Modern Computer Vision Library.
* [VLFeat](http://www.vlfeat.org/) - VLFeat is an open and portable library of computer vision algorithms, which has a Matlab toolbox.

<a name=""cpp""></a>
## C++

<a name=""cpp-computer-vision""></a>
#### Computer Vision

* [DLib](http://dlib.net/imaging.html) - DLib has C++ and Python interfaces for face detection and training general object detectors.
* [EBLearn](http://eblearn.sourceforge.net/) - Eblearn is an object-oriented C++ library that implements various machine learning models **[Deprecated]**
* [OpenCV](https://opencv.org) - OpenCV has C++, C, Python, Java and MATLAB interfaces and supports Windows, Linux, Android and Mac OS.
* [VIGRA](https://github.com/ukoethe/vigra) - VIGRA is a genertic cross-platform C++ computer vision and machine learning library for volumes of arbitrary dimensionality with Python bindings.
* [Openpose](https://github.com/CMU-Perceptual-Computing-Lab/openpose) - A real-time multi-person keypoint detection library for body, face, hands, and foot estimation

<a name=""cpp-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Speedster](https://github.com/nebuly-ai/nebullvm/tree/main/apps/accelerate/speedster) -Automatically apply SOTA optimization techniques to achieve the maximum inference speed-up on your hardware. [DEEP LEARNING]
* [BanditLib](https://github.com/jkomiyama/banditlib) - A simple Multi-armed Bandit library. **[Deprecated]**
* [Caffe](https://github.com/BVLC/caffe) - A deep learning framework developed with cleanliness, readability, and speed in mind. [DEEP LEARNING]
* [CatBoost](https://github.com/catboost/catboost) - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.
* [CNTK](https://github.com/Microsoft/CNTK) - The Computational Network Toolkit (CNTK) by Microsoft Research, is a unified deep-learning toolkit that describes neural networks as a series of computational steps via a directed graph.
* [CUDA](https://code.google.com/p/cuda-convnet/) - This is a fast C++/CUDA implementation of convolutional [DEEP LEARNING]
* [DeepDetect](https://github.com/jolibrain/deepdetect) - A machine learning API and server written in C++11. It makes state of the art machine learning easy to work with and integrate into existing applications.
* [Distributed Machine learning Tool Kit (DMTK)](http://www.dmtk.io/) - A distributed machine learning (parameter server) framework by Microsoft. Enables training models on large data sets across multiple machines. Current tools bundled with it include: LightLDA and Distributed (Multisense) Word Embedding.
* [DLib](http://dlib.net/ml.html) - A suite of ML tools designed to be easy to imbed in other applications.
* [DSSTNE](https://github.com/amznlabs/amazon-dsstne) - A software library created by Amazon for training and deploying deep neural networks using GPUs which emphasizes speed and scale over experimental flexibility.
* [DyNet](https://github.com/clab/dynet) - A dynamic neural network library working well with networks that have dynamic structures that change for every training instance. Written in C++ with bindings in Python.
* [Fido](https://github.com/FidoProject/Fido) - A highly-modular C++ machine learning library for embedded electronics and robotics.
* [igraph](http://igraph.org/) - General purpose graph library.
* [Intel® oneAPI Data Analytics Library](https://github.com/oneapi-src/oneDAL) - A high performance software library developed by Intel and optimized for Intel's architectures. Library provides algorithmic building blocks for all stages of data analytics and allows to process data in batch, online and distributed modes.
* [LightGBM](https://github.com/Microsoft/LightGBM) - Microsoft's fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.
* [libfm](https://github.com/srendle/libfm) - A generic approach that allows to mimic most factorization models by feature engineering.
* [MLDB](https://mldb.ai) - The Machine Learning Database is a database designed for machine learning. Send it commands over a RESTful API to store data, explore it using SQL, then train machine learning models and expose them as APIs.
* [mlpack](https://www.mlpack.org/) - A scalable C++ machine learning library.
* [MXNet](https://github.com/apache/incubator-mxnet) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.
* [N2D2](https://github.com/CEA-LIST/N2D2) - CEA-List's CAD framework for designing and simulating Deep Neural Network, and building full DNN-based applications on embedded platforms
* [oneDNN](https://github.com/oneapi-src/oneDNN) - An open-source cross-platform performance library for deep learning applications.
* [ParaMonte](https://github.com/cdslaborg/paramonte) - A general-purpose library with C/C++ interface for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found [here](https://www.cdslab.org/paramonte/).
* [proNet-core](https://github.com/cnclabs/proNet-core) - A general-purpose network embedding framework: pair-wise representations optimization Network Edit.
* [PyCaret](https://github.com/pycaret/pycaret) - An open-source, low-code machine learning library in Python that automates machine learning workflows.
* [PyCUDA](https://mathema.tician.de/software/pycuda/) - Python interface to CUDA
* [ROOT](https://root.cern.ch) - A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualization and storage.
* [shark](http://image.diku.dk/shark/sphinx_pages/build/html/index.html) - A fast, modular, feature-rich open-source C++ machine learning library.
* [Shogun](https://github.com/shogun-toolbox/shogun) - The Shogun Machine Learning Toolbox.
* [sofia-ml](https://code.google.com/archive/p/sofia-ml) - Suite of fast incremental algorithms.
* [Stan](http://mc-stan.org/) - A probabilistic programming language implementing full Bayesian statistical inference with Hamiltonian Monte Carlo sampling.
* [Timbl](https://languagemachines.github.io/timbl/) - A software package/C++ library implementing several memory-based learning algorithms, among which IB1-IG, an implementation of k-nearest neighbor classification, and IGTree, a decision-tree approximation of IB1-IG. Commonly used for NLP.
* [Vowpal Wabbit (VW)](https://github.com/VowpalWabbit/vowpal_wabbit) - A fast out-of-core learning system.
* [Warp-CTC](https://github.com/baidu-research/warp-ctc) - A fast parallel implementation of Connectionist Temporal Classification (CTC), on both CPU and GPU.
* [XGBoost](https://github.com/dmlc/xgboost) - A parallelized optimized general purpose gradient boosting library.
* [ThunderGBM](https://github.com/Xtra-Computing/thundergbm) - A fast library for GBDTs and Random Forests on GPUs.
* [ThunderSVM](https://github.com/Xtra-Computing/thundersvm) - A fast SVM library on GPUs and CPUs.
* [LKYDeepNN](https://github.com/mosdeo/LKYDeepNN) - A header-only C++11 Neural Network library. Low dependency, native traditional chinese document.
* [xLearn](https://github.com/aksnzhy/xlearn) - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertising and recommender systems.
* [Featuretools](https://github.com/featuretools/featuretools) - A library for automated feature engineering. It excels at transforming transactional and relational datasets into feature matrices for machine learning using reusable feature engineering ""primitives"".
* [skynet](https://github.com/Tyill/skynet) - A library for learning neural networks, has C-interface, net set in JSON. Written in C++ with bindings in Python, C++ and C#.
* [Feast](https://github.com/gojek/feast) - A feature store for the management, discovery, and access of machine learning features. Feast provides a consistent view of feature data for both model training and model serving.
* [Hopsworks](https://github.com/logicalclocks/hopsworks) - A data-intensive platform for AI with the industry's first open-source feature store. The Hopsworks Feature Store provides both a feature warehouse for training and batch based on Apache Hive and a feature serving database, based on MySQL Cluster, for online applications.
* [Polyaxon](https://github.com/polyaxon/polyaxon) - A platform for reproducible and scalable machine learning and deep learning.
* [QuestDB](https://questdb.io/) A relational column-oriented database designed for real-time analytics on time series and event data.

<a name=""cpp-natural-language-processing""></a>
#### Natural Language Processing

* [BLLIP Parser](https://github.com/BLLIP/bllip-parser) - BLLIP Natural Language Parser (also known as the Charniak-Johnson parser).
* [colibri-core](https://github.com/proycon/colibri-core) - C++ library, command line tools, and Python binding for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.
* [CRF++](https://taku910.github.io/crfpp/) - Open source implementation of Conditional Random Fields (CRFs) for segmenting/labeling sequential data & other Natural Language Processing tasks. **[Deprecated]**
* [CRFsuite](http://www.chokkan.org/software/crfsuite/) - CRFsuite is an implementation of Conditional Random Fields (CRFs) for labeling sequential data. **[Deprecated]**
* [frog](https://github.com/LanguageMachines/frog) - Memory-based NLP suite developed for Dutch: PoS tagger, lemmatiser, dependency parser, NER, shallow parser, morphological analyzer.
* [libfolia](https://github.com/LanguageMachines/libfolia) - C++ library for the [FoLiA format](https://proycon.github.io/folia/)
* [MeTA](https://github.com/meta-toolkit/meta) - [MeTA : ModErn Text Analysis](https://meta-toolkit.org/) is a C++ Data Sciences Toolkit that facilitates mining big text data.
* [MIT Information Extraction Toolkit](https://github.com/mit-nlp/MITIE) - C, C++, and Python tools for named entity recognition and relation extraction
* [ucto](https://github.com/LanguageMachines/ucto) - Unicode-aware regular-expression based tokenizer for various languages. Tool and C++ library. Supports FoLiA format.

<a name=""cpp-speech-recognition""></a>
#### Speech Recognition
* [Kaldi](https://github.com/kaldi-asr/kaldi) - Kaldi is a toolkit for speech recognition written in C++ and licensed under the Apache License v2.0. Kaldi is intended for use by speech recognition researchers.

<a name=""cpp-sequence-analysis""></a>
#### Sequence Analysis
* [ToPS](https://github.com/ayoshiaki/tops) - This is an object-oriented framework that facilitates the integration of probabilistic models for sequences over a user defined alphabet. **[Deprecated]**

<a name=""cpp-gesture-detection""></a>
#### Gesture Detection
* [grt](https://github.com/nickgillian/grt) - The Gesture Recognition Toolkit (GRT) is a cross-platform, open-source, C++ machine learning library designed for real-time gesture recognition.

<a name=""common-lisp""></a>
## Common Lisp

<a name=""common-lisp-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [mgl](https://github.com/melisgl/mgl/) - Neural networks (boltzmann machines, feed-forward and recurrent nets), Gaussian Processes.
* [mgl-gpr](https://github.com/melisgl/mgl-gpr/) - Evolutionary algorithms. **[Deprecated]**
* [cl-libsvm](https://github.com/melisgl/cl-libsvm/) - Wrapper for the libsvm support vector machine library. **[Deprecated]**
* [cl-online-learning](https://github.com/masatoi/cl-online-learning) - Online learning algorithms (Perceptron, AROW, SCW, Logistic Regression).
* [cl-random-forest](https://github.com/masatoi/cl-random-forest) - Implementation of Random Forest in Common Lisp.

<a name=""clojure""></a>
## Clojure

<a name=""clojure-natural-language-processing""></a>
#### Natural Language Processing

* [Clojure-openNLP](https://github.com/dakrone/clojure-opennlp) - Natural Language Processing in Clojure (opennlp).
* [Infections-clj](https://github.com/r0man/inflections-clj) - Rails-like inflection library for Clojure and ClojureScript.

<a name=""clojure-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [scicloj.ml](https://github.com/scicloj/scicloj.ml) -  A idiomatic Clojure machine learning library based on tech.ml.dataset with a unique approach for immutable data processing pipelines.
* [clj-ml](https://github.com/joshuaeckroth/clj-ml/) - A machine learning library for Clojure built on top of Weka and friends.
* [clj-boost](https://gitlab.com/alanmarazzi/clj-boost) - Wrapper for XGBoost
* [Touchstone](https://github.com/ptaoussanis/touchstone) - Clojure A/B testing library.
* [Clojush](https://github.com/lspector/Clojush) - The Push programming language and the PushGP genetic programming system implemented in Clojure.
* [lambda-ml](https://github.com/cloudkj/lambda-ml) - Simple, concise implementations of machine learning techniques and utilities in Clojure.
* [Infer](https://github.com/aria42/infer) - Inference and machine learning in Clojure. **[Deprecated]**
* [Encog](https://github.com/jimpil/enclog) - Clojure wrapper for Encog (v3) (Machine-Learning framework that specializes in neural-nets). **[Deprecated]**
* [Fungp](https://github.com/vollmerm/fungp) - A genetic programming library for Clojure. **[Deprecated]**
* [Statistiker](https://github.com/clojurewerkz/statistiker) - Basic Machine Learning algorithms in Clojure. **[Deprecated]**
* [clortex](https://github.com/htm-community/clortex) - General Machine Learning library using Numenta’s Cortical Learning Algorithm. **[Deprecated]**
* [comportex](https://github.com/htm-community/comportex) - Functionally composable Machine Learning library using Numenta’s Cortical Learning Algorithm. **[Deprecated]**

<a name=""clojure-deep-learning""></a>
#### Deep Learning
* [MXNet](https://mxnet.apache.org/versions/1.7.0/api/clojure) - Bindings to Apache MXNet - part of the MXNet project
* [Deep Diamond](https://github.com/uncomplicate/deep-diamond) - A fast Clojure Tensor & Deep Learning library
* [jutsu.ai](https://github.com/hswick/jutsu.ai) - Clojure wrapper for deeplearning4j with some added syntactic sugar.
* [cortex](https://github.com/originrose/cortex) - Neural networks, regression and feature learning in Clojure.
* [Flare](https://github.com/aria42/flare) - Dynamic Tensor Graph library in Clojure (think PyTorch, DynNet, etc.)
* [dl4clj](https://github.com/yetanalytics/dl4clj) - Clojure wrapper for Deeplearning4j.

<a name=""clojure-data-analysis--data-visualization""></a>
#### Data Analysis
* [tech.ml.dataset](https://github.com/techascent/tech.ml.dataset) - Clojure dataframe library and pipeline for data processing and machine learning
* [Tablecloth](https://github.com/scicloj/tablecloth) - A dataframe grammar wrapping tech.ml.dataset, inspired by several R libraries
* [Panthera](https://github.com/alanmarazzi/panthera) - Clojure API wrapping Python's Pandas library
* [Incanter](http://incanter.org/) - Incanter is a Clojure-based, R-like platform for statistical computing and graphics.
* [PigPen](https://github.com/Netflix/PigPen) - Map-Reduce for Clojure.
* [Geni](https://github.com/zero-one-group/geni) - a Clojure dataframe library that runs on Apache Spark

<a name=""clojure-data-visualization""></a>
#### Data Visualization
* [Hanami](https://github.com/jsa-aerial/hanami) : Clojure(Script) library and framework for creating interactive visualization applications based in Vega-Lite (VGL) and/or Vega (VG) specifications. Automatic framing and layouts along with a powerful templating system for abstracting visualization specs
* [Saite](https://github.com/jsa-aerial/saite) -  Clojure(Script) client/server application for dynamic interactive explorations and the creation of live shareable documents capturing them using Vega/Vega-Lite, CodeMirror, markdown, and LaTeX
* [Oz](https://github.com/metasoarous/oz) - Data visualisation using Vega/Vega-Lite and Hiccup, and a live-reload platform for literate-programming
* [Envision](https://github.com/clojurewerkz/envision) - Clojure Data Visualisation library, based on Statistiker and D3.
* [Pink Gorilla Notebook](https://github.com/pink-gorilla/gorilla-notebook) - A Clojure/Clojurescript notebook application/-library based on Gorilla-REPL
* [clojupyter](https://github.com/clojupyter/clojupyter) -  A Jupyter kernel for Clojure - run Clojure code in Jupyter Lab, Notebook and Console.
* [notespace](https://github.com/scicloj/notespace) - Notebook experience in your Clojure namespace
* [Delight](https://github.com/datamechanics/delight) - A listener that streams your spark events logs to delight, a free and improved spark UI

<a name=""clojure-interop""></a>
#### Interop

* [Java Interop](https://clojure.org/reference/java_interop) - Clojure has Native Java Interop from which Java's ML ecosystem can be accessed
* [JavaScript Interop](https://clojurescript.org/reference/javascript-api) - ClojureScript has Native JavaScript Interop from which JavaScript's ML ecosystem can be accessed
* [Libpython-clj](https://github.com/clj-python/libpython-clj) - Interop with Python
* [ClojisR](https://github.com/scicloj/clojisr) - Interop with R and Renjin (R on the JVM)

<a name=""clojure-misc""></a>
#### Misc
* [Neanderthal](https://neanderthal.uncomplicate.org/) - Fast Clojure Matrix Library (native CPU, GPU, OpenCL, CUDA)
* [kixistats](https://github.com/MastodonC/kixi.stats) - A library of statistical distribution sampling and transducing functions
* [fastmath](https://github.com/generateme/fastmath) - A collection of functions for mathematical and statistical computing, macine learning, etc., wrapping several JVM libraries
* [matlib](https://github.com/atisharma/matlib) - a Clojure library of optimisation and control theory tools and convenience functions based on Neanderthal.

<a name=""clojure-extra""></a>
#### Extra
* [Scicloj](https://scicloj.github.io/pages/libraries/) - Curated list of ML related resources for Clojure.

<a name=""crystal""></a>
## Crystal

<a name=""crystal-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [machine](https://github.com/mathieulaporte/machine) - Simple machine learning algorithm.
* [crystal-fann](https://github.com/NeuraLegion/crystal-fann) - FANN (Fast Artificial Neural Network) binding.

<a name=""elixir""></a>
## Elixir

<a name=""elixir-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Simple Bayes](https://github.com/fredwu/simple_bayes) - A Simple Bayes / Naive Bayes implementation in Elixir.
* [emel](https://github.com/mrdimosthenis/emel) - A simple and functional machine learning library written in Elixir.
* [Tensorflex](https://github.com/anshuman23/tensorflex) - Tensorflow bindings for the Elixir programming language.

<a name=""elixir-natural-language-processing""></a>
#### Natural Language Processing

* [Stemmer](https://github.com/fredwu/stemmer) - An English (Porter2) stemming implementation in Elixir.

<a name=""erlang""></a>
## Erlang

<a name=""erlang-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Disco](https://github.com/discoproject/disco/) - Map Reduce in Erlang. **[Deprecated]**

<a name=""fortran""></a>
## Fortran

<a name=""fortran-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [neural-fortran](https://github.com/modern-fortran/neural-fortran) - A parallel neural net microframework.
Read the paper [here](https://arxiv.org/abs/1902.06714).

<a name=""fortran-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [ParaMonte](https://github.com/cdslaborg/paramonte) - A general-purpose Fortran library for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found [here](https://www.cdslab.org/paramonte/).

<a name=""go""></a>
## Go

<a name=""go-natural-language-processing""></a>
#### Natural Language Processing

* [snowball](https://github.com/tebeka/snowball) - Snowball Stemmer for Go.
* [word-embedding](https://github.com/ynqa/word-embedding) - Word Embeddings: the full implementation of word2vec, GloVe in Go.
* [sentences](https://github.com/neurosnap/sentences) - Golang implementation of Punkt sentence tokenizer.
* [go-ngram](https://github.com/Lazin/go-ngram) - In-memory n-gram index with compression. *[Deprecated]*
* [paicehusk](https://github.com/Rookii/paicehusk) - Golang implementation of the Paice/Husk Stemming Algorithm. *[Deprecated]*
* [go-porterstemmer](https://github.com/reiver/go-porterstemmer) - A native Go clean room implementation of the Porter Stemming algorithm. **[Deprecated]**

<a name=""go-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [birdland](https://github.com/rlouf/birdland) - A recommendation library in Go.
* [eaopt](https://github.com/MaxHalford/eaopt) - An evolutionary optimization library.
* [leaves](https://github.com/dmitryikh/leaves) - A pure Go implementation of the prediction part of GBRTs, including XGBoost and LightGBM.
* [gobrain](https://github.com/goml/gobrain) - Neural Networks written in Go.
* [go-featureprocessing](https://github.com/nikolaydubina/go-featureprocessing) - Fast and convenient feature processing for low latency machine learning in Go.
* [go-mxnet-predictor](https://github.com/songtianyi/go-mxnet-predictor) - Go binding for MXNet c_predict_api to do inference with a pre-trained model.
* [go-ml-benchmarks](https://github.com/nikolaydubina/go-ml-benchmarks) — benchmarks of machine learning inference for Go.
* [go-ml-transpiler](https://github.com/znly/go-ml-transpiler) - An open source Go transpiler for machine learning models.
* [golearn](https://github.com/sjwhitworth/golearn) - Machine learning for Go.
* [goml](https://github.com/cdipaolo/goml) - Machine learning library written in pure Go.
* [gorgonia](https://github.com/gorgonia/gorgonia) - Deep learning in Go.
* [goro](https://github.com/aunum/goro) - A high-level machine learning library in the vein of Keras.
* [gorse](https://github.com/zhenghaoz/gorse) - An offline recommender system backend based on collaborative filtering written in Go.
* [therfoo](https://github.com/therfoo/therfoo) - An embedded deep learning library for Go.
* [neat](https://github.com/jinyeom/neat) - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT). **[Deprecated]**
* [go-pr](https://github.com/daviddengcn/go-pr) - Pattern recognition package in Go lang. **[Deprecated]**
* [go-ml](https://github.com/alonsovidales/go_ml) - Linear / Logistic regression, Neural Networks, Collaborative Filtering and Gaussian Multivariate Distribution. **[Deprecated]**
* [GoNN](https://github.com/fxsjy/gonn) - GoNN is an implementation of Neural Network in Go Language, which includes BPNN, RBF, PCN. **[Deprecated]**
* [bayesian](https://github.com/jbrukh/bayesian) - Naive Bayesian Classification for Golang. **[Deprecated]**
* [go-galib](https://github.com/thoj/go-galib) - Genetic Algorithms library written in Go / Golang. **[Deprecated]**
* [Cloudforest](https://github.com/ryanbressler/CloudForest) - Ensembles of decision trees in Go/Golang. **[Deprecated]**
* [go-dnn](https://github.com/sudachen/go-dnn) - Deep Neural Networks for Golang (powered by MXNet)

<a name=""go-spatial-analysis-and-geometry""></a>
#### Spatial analysis and geometry

* [go-geom](https://github.com/twpayne/go-geom) - Go library to handle geometries.
* [gogeo](https://github.com/golang/geo) - Spherical geometry in Go.

<a name=""go-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [dataframe-go](https://github.com/rocketlaunchr/dataframe-go) - Dataframes for machine-learning and statistics (similar to pandas).
* [gota](https://github.com/go-gota/gota) - Dataframes.
* [gonum/mat](https://godoc.org/gonum.org/v1/gonum/mat) - A linear algebra package for Go.
* [gonum/optimize](https://godoc.org/gonum.org/v1/gonum/optimize) - Implementations of optimization algorithms.
* [gonum/plot](https://godoc.org/gonum.org/v1/plot) - A plotting library.
* [gonum/stat](https://godoc.org/gonum.org/v1/gonum/stat) - A statistics library.
* [SVGo](https://github.com/ajstarks/svgo) - The Go Language library for SVG generation.
* [glot](https://github.com/arafatk/glot) - Glot is a plotting library for Golang built on top of gnuplot.
* [globe](https://github.com/mmcloughlin/globe) - Globe wireframe visualization.
* [gonum/graph](https://godoc.org/gonum.org/v1/gonum/graph) - General-purpose graph library.
* [go-graph](https://github.com/StepLg/go-graph) - Graph library for Go/Golang language. **[Deprecated]**
* [RF](https://github.com/fxsjy/RF.go) - Random forests implementation in Go. **[Deprecated]**

<a name=""go-computer-vision""></a>
#### Computer vision

* [GoCV](https://github.com/hybridgroup/gocv) - Package for computer vision using OpenCV 4 and beyond.

<a name=""go-reinforcement-learning""></a>
#### Reinforcement learning

* [gold](https://github.com/aunum/gold) - A reinforcement learning library.

<a name=""haskell""></a>
## Haskell

<a name=""haskell-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning
* [haskell-ml](https://github.com/ajtulloch/haskell-ml) - Haskell implementations of various ML algorithms. **[Deprecated]**
* [HLearn](https://github.com/mikeizbicki/HLearn) - a suite of libraries for interpreting machine learning models according to their algebraic structure. **[Deprecated]**
* [hnn](https://github.com/alpmestan/HNN) - Haskell Neural Network library.
* [hopfield-networks](https://github.com/ajtulloch/hopfield-networks) - Hopfield Networks for unsupervised learning in Haskell. **[Deprecated]**
* [DNNGraph](https://github.com/ajtulloch/dnngraph) - A DSL for deep neural networks. **[Deprecated]**
* [LambdaNet](https://github.com/jbarrow/LambdaNet) - Configurable Neural Networks in Haskell. **[Deprecated]**

<a name=""java""></a>
## Java

<a name=""java-natural-language-processing""></a>
#### Natural Language Processing
* [Cortical.io](https://www.cortical.io/) - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain.
* [IRIS](https://github.com/cortical-io/Iris) - [Cortical.io's](https://cortical.io) FREE NLP, Retina API Analysis Tool (written in JavaFX!) - [See the Tutorial Video](https://www.youtube.com/watch?v=CsF4pd7fGF0).
* [CoreNLP](https://nlp.stanford.edu/software/corenlp.shtml) - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words.
* [Stanford Parser](https://nlp.stanford.edu/software/lex-parser.shtml) - A natural language parser is a program that works out the grammatical structure of sentences.
* [Stanford POS Tagger](https://nlp.stanford.edu/software/tagger.shtml) - A Part-Of-Speech Tagger (POS Tagger).
* [Stanford Name Entity Recognizer](https://nlp.stanford.edu/software/CRF-NER.shtml) - Stanford NER is a Java implementation of a Named Entity Recognizer.
* [Stanford Word Segmenter](https://nlp.stanford.edu/software/segmenter.shtml) - Tokenization of raw text is a standard pre-processing step for many NLP tasks.
* [Tregex, Tsurgeon and Semgrex](https://nlp.stanford.edu/software/tregex.shtml) - Tregex is a utility for matching patterns in trees, based on tree relationships and regular expression matches on nodes (the name is short for ""tree regular expressions"").
* [Stanford Phrasal: A Phrase-Based Translation System](https://nlp.stanford.edu/phrasal/)
* [Stanford English Tokenizer](https://nlp.stanford.edu/software/tokenizer.shtml) - Stanford Phrasal is a state-of-the-art statistical phrase-based machine translation system, written in Java.
* [Stanford Tokens Regex](https://nlp.stanford.edu/software/tokensregex.shtml) - A tokenizer divides text into a sequence of tokens, which roughly correspond to ""words"".
* [Stanford Temporal Tagger](https://nlp.stanford.edu/software/sutime.shtml) - SUTime is a library for recognizing and normalizing time expressions.
* [Stanford SPIED](https://nlp.stanford.edu/software/patternslearning.shtml) - Learning entities from unlabeled text starting with seed sets using patterns in an iterative fashion.
* [Twitter Text Java](https://github.com/twitter/twitter-text/tree/master/java) - A Java implementation of Twitter's text processing library.
* [MALLET](http://mallet.cs.umass.edu/) - A Java-based package for statistical natural language processing, document classification, clustering, topic modelling, information extraction, and other machine learning applications to text.
* [OpenNLP](https://opennlp.apache.org/) - a machine learning based toolkit for the processing of natural language text.
* [LingPipe](http://alias-i.com/lingpipe/index.html) - A tool kit for processing text using computational linguistics.
* [ClearTK](https://github.com/ClearTK/cleartk) - ClearTK provides a framework for developing statistical natural language processing (NLP) components in Java and is built on top of Apache UIMA. **[Deprecated]**
* [Apache cTAKES](https://ctakes.apache.org/) - Apache Clinical Text Analysis and Knowledge Extraction System (cTAKES) is an open-source natural language processing system for information extraction from electronic medical record clinical free-text.
* [NLP4J](https://github.com/emorynlp/nlp4j) - The NLP4J project provides software and resources for natural language processing. The project started at the Center for Computational Language and EducAtion Research, and is currently developed by the Center for Language and Information Research at Emory University. **[Deprecated]**
* [CogcompNLP](https://github.com/CogComp/cogcomp-nlp) - This project collects a number of core libraries for Natural Language Processing (NLP) developed in the University of Illinois' Cognitive Computation Group, for example `illinois-core-utilities` which provides a set of NLP-friendly data structures and a number of NLP-related utilities that support writing NLP applications, running experiments, etc, `illinois-edison` a library for feature extraction from illinois-core-utilities data structures and many other packages.

<a name=""java-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [aerosolve](https://github.com/airbnb/aerosolve) - A machine learning library by Airbnb designed from the ground up to be human friendly.
* [AMIDST Toolbox](http://www.amidsttoolbox.com/) - A Java Toolbox for Scalable Probabilistic Machine Learning.
* [Chips-n-Salsa](https://github.com/cicirello/Chips-n-Salsa) - A Java library for genetic algorithms, evolutionary computation, and stochastic local search, with a focus on self-adaptation / self-tuning, as well as parallel execution.
* [Datumbox](https://github.com/datumbox/datumbox-framework) - Machine Learning framework for rapid development of Machine Learning and Statistical applications.
* [ELKI](https://elki-project.github.io/) - Java toolkit for data mining. (unsupervised: clustering, outlier detection etc.)
* [Encog](https://github.com/encog/encog-java-core) - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trainings using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.
* [FlinkML in Apache Flink](https://ci.apache.org/projects/flink/flink-docs-master/dev/libs/ml/index.html) - Distributed machine learning library in Flink.
* [H2O](https://github.com/h2oai/h2o-3) - ML engine that supports distributed learning on Hadoop, Spark or your laptop via APIs in R, Python, Scala, REST/JSON.
* [htm.java](https://github.com/numenta/htm.java) - General Machine Learning library using Numenta’s Cortical Learning Algorithm.
* [liblinear-java](https://github.com/bwaldvogel/liblinear-java) - Java version of liblinear.
* [Mahout](https://github.com/apache/mahout) - Distributed machine learning.
* [Meka](http://meka.sourceforge.net/) - An open source implementation of methods for multi-label classification and evaluation (extension to Weka).
* [MLlib in Apache Spark](https://spark.apache.org/docs/latest/mllib-guide.html) - Distributed machine learning library in Spark.
* [Hydrosphere Mist](https://github.com/Hydrospheredata/mist) - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.
* [Neuroph](http://neuroph.sourceforge.net/) - Neuroph is lightweight Java neural network framework.
* [ORYX](https://github.com/oryxproject/oryx) - Lambda Architecture Framework using Apache Spark and Apache Kafka with a specialization for real-time large-scale machine learning.
* [Samoa](https://samoa.incubator.apache.org/) SAMOA is a framework that includes distributed machine learning for data streams with an interface to plug-in different stream processing platforms.
* [RankLib](https://sourceforge.net/p/lemur/wiki/RankLib/) - RankLib is a library of learning to rank algorithms. **[Deprecated]**
* [rapaio](https://github.com/padreati/rapaio) - statistics, data mining and machine learning toolbox in Java.
* [RapidMiner](https://rapidminer.com) - RapidMiner integration into Java code.
* [Stanford Classifier](https://nlp.stanford.edu/software/classifier.shtml) - A classifier is a machine learning tool that will take data items and place them into one of k classes.
* [Smile](https://haifengl.github.io/) - Statistical Machine Intelligence & Learning Engine.
* [SystemML](https://github.com/apache/systemml) - flexible, scalable machine learning (ML) language.
* [Tribou](https://tribuo.org) - a machine learning library written in Java by Oracle.
* [Weka](https://www.cs.waikato.ac.nz/ml/weka/) - Weka is a collection of machine learning algorithms for data mining tasks.
* [LBJava](https://github.com/CogComp/lbjava) - Learning Based Java is a modelling language for the rapid development of software systems, offers a convenient, declarative syntax for classifier and constraint definition directly in terms of the objects in the programmer's application.
* [knn-java-library](https://github.com/felipexw/knn-java-library) - Just a simple implementation of K-Nearest Neighbors algorithm using with a bunch of similarity measures.

<a name=""java-speech-recognition""></a>
#### Speech Recognition
* [CMU Sphinx](https://cmusphinx.github.io) - Open Source Toolkit For Speech Recognition purely based on Java speech recognition library.

<a name=""java-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [Flink](https://flink.apache.org/) - Open source platform for distributed stream and batch data processing.
* [Hadoop](https://github.com/apache/hadoop) - Hadoop/HDFS.
* [Onyx](https://github.com/onyx-platform/onyx) - Distributed, masterless, high performance, fault tolerant data processing. Written entirely in Clojure.
* [Spark](https://github.com/apache/spark) - Spark is a fast and general engine for large-scale data processing.
* [Storm](https://storm.apache.org/) - Storm is a distributed realtime computation system.
* [Impala](https://github.com/cloudera/impala) - Real-time Query for Hadoop.
* [DataMelt](https://jwork.org/dmelt/) - Mathematics software for numeric computation, statistics, symbolic calculations, data analysis and data visualization.
* [Dr. Michael Thomas Flanagan's Java Scientific Library.](https://www.ee.ucl.ac.uk/~mflanaga/java/) **[Deprecated]**

<a name=""java-deep-learning""></a>
#### Deep Learning

* [Deeplearning4j](https://github.com/deeplearning4j/deeplearning4j) - Scalable deep learning for industry with parallel GPUs.
* [Keras Beginner Tutorial](https://victorzhou.com/blog/keras-neural-network-tutorial/) - Friendly guide on using Keras to implement a simple Neural Network in Python.
* [deepjavalibrary/djl](https://github.com/deepjavalibrary/djl) - Deep Java Library (DJL) is an open-source, high-level, engine-agnostic Java framework for deep learning, designed to be easy to get started with and simple to use for Java developers.

<a name=""javascript""></a>
## JavaScript

<a name=""javascript-natural-language-processing""></a>
#### Natural Language Processing

* [Twitter-text](https://github.com/twitter/twitter-text) - A JavaScript implementation of Twitter's text processing library.
* [natural](https://github.com/NaturalNode/natural) - General natural language facilities for node.
* [Knwl.js](https://github.com/loadfive/Knwl.js) - A Natural Language Processor in JS.
* [Retext](https://github.com/retextjs/retext) - Extensible system for analyzing and manipulating natural language.
* [NLP Compromise](https://github.com/spencermountain/compromise) - Natural Language processing in the browser.
* [nlp.js](https://github.com/axa-group/nlp.js) - An NLP library built in node over Natural, with entity extraction, sentiment analysis, automatic language identify, and so more.



<a name=""javascript-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [D3.js](https://d3js.org/)
* [High Charts](https://www.highcharts.com/)
* [NVD3.js](http://nvd3.org/)
* [dc.js](https://dc-js.github.io/dc.js/)
* [chartjs](https://www.chartjs.org/)
* [dimple](http://dimplejs.org/)
* [amCharts](https://www.amcharts.com/)
* [D3xter](https://github.com/NathanEpstein/D3xter) - Straight forward plotting built on D3. **[Deprecated]**
* [statkit](https://github.com/rigtorp/statkit) - Statistics kit for JavaScript. **[Deprecated]**
* [datakit](https://github.com/nathanepstein/datakit) - A lightweight framework for data analysis in JavaScript
* [science.js](https://github.com/jasondavies/science.js/) - Scientific and statistical computing in JavaScript. **[Deprecated]**
* [Z3d](https://github.com/NathanEpstein/Z3d) - Easily make interactive 3d plots built on Three.js **[Deprecated]**
* [Sigma.js](http://sigmajs.org/) - JavaScript library dedicated to graph drawing.
* [C3.js](https://c3js.org/) - customizable library based on D3.js for easy chart drawing.
* [Datamaps](https://datamaps.github.io/) - Customizable SVG map/geo visualizations using D3.js. **[Deprecated]**
* [ZingChart](https://www.zingchart.com/) - library written on Vanilla JS for big data visualization.
* [cheminfo](https://www.cheminfo.org/) - Platform for data visualization and analysis, using the [visualizer](https://github.com/npellet/visualizer) project.
* [Learn JS Data](http://learnjsdata.com/)
* [AnyChart](https://www.anychart.com/)
* [FusionCharts](https://www.fusioncharts.com/)
* [Nivo](https://nivo.rocks) - built on top of the awesome d3 and Reactjs libraries


<a name=""javascript-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Auto ML](https://github.com/ClimbsRocks/auto_ml) - Automated machine learning, data formatting, ensembling, and hyperparameter optimization for competitions and exploration- just give it a .csv file! **[Deprecated]**
* [Convnet.js](https://cs.stanford.edu/people/karpathy/convnetjs/) - ConvNetJS is a JavaScript library for training Deep Learning models[DEEP LEARNING] **[Deprecated]**
* [Clusterfck](https://harthur.github.io/clusterfck/) - Agglomerative hierarchical clustering implemented in JavaScript for Node.js and the browser. **[Deprecated]**
* [Clustering.js](https://github.com/emilbayes/clustering.js) - Clustering algorithms implemented in JavaScript for Node.js and the browser. **[Deprecated]**
* [Decision Trees](https://github.com/serendipious/nodejs-decision-tree-id3) - NodeJS Implementation of Decision Tree using ID3 Algorithm. **[Deprecated]**
* [DN2A](https://github.com/antoniodeluca/dn2a.js) - Digital Neural Networks Architecture. **[Deprecated]**
* [figue](https://code.google.com/archive/p/figue) - K-means, fuzzy c-means and agglomerative clustering.
* [Gaussian Mixture Model](https://github.com/lukapopijac/gaussian-mixture-model) - Unsupervised machine learning with multivariate Gaussian mixture model.
* [Node-fann](https://github.com/rlidwka/node-fann) - FANN (Fast Artificial Neural Network Library) bindings for Node.js **[Deprecated]**
* [Keras.js](https://github.com/transcranial/keras-js) - Run Keras models in the browser, with GPU support provided by WebGL 2.
* [Kmeans.js](https://github.com/emilbayes/kMeans.js) - Simple JavaScript implementation of the k-means algorithm, for node.js and the browser. **[Deprecated]**
* [LDA.js](https://github.com/primaryobjects/lda) - LDA topic modelling for Node.js
* [Learning.js](https://github.com/yandongliu/learningjs) - JavaScript implementation of logistic regression/c4.5 decision tree **[Deprecated]**
* [machinelearn.js](https://github.com/machinelearnjs/machinelearnjs) - Machine Learning library for the web, Node.js and developers
* [mil-tokyo](https://github.com/mil-tokyo) - List of several machine learning libraries.
* [Node-SVM](https://github.com/nicolaspanel/node-svm) - Support Vector Machine for Node.js
* [Brain](https://github.com/harthur/brain) - Neural networks in JavaScript **[Deprecated]**
* [Brain.js](https://github.com/BrainJS/brain.js) - Neural networks in JavaScript - continued community fork of [Brain](https://github.com/harthur/brain).
* [Bayesian-Bandit](https://github.com/omphalos/bayesian-bandit.js) - Bayesian bandit implementation for Node and the browser. **[Deprecated]**
* [Synaptic](https://github.com/cazala/synaptic) - Architecture-free neural network library for Node.js and the browser.
* [kNear](https://github.com/NathanEpstein/kNear) - JavaScript implementation of the k nearest neighbors algorithm for supervised learning.
* [NeuralN](https://github.com/totemstech/neuraln) - C++ Neural Network library for Node.js. It has advantage on large dataset and multi-threaded training. **[Deprecated]**
* [kalman](https://github.com/itamarwe/kalman) - Kalman filter for JavaScript. **[Deprecated]**
* [shaman](https://github.com/luccastera/shaman) - Node.js library with support for both simple and multiple linear regression. **[Deprecated]**
* [ml.js](https://github.com/mljs/ml) - Machine learning and numerical analysis tools for Node.js and the Browser!
* [ml5](https://github.com/ml5js/ml5-library) - Friendly machine learning for the web!
* [Pavlov.js](https://github.com/NathanEpstein/Pavlov.js) - Reinforcement learning using Markov Decision Processes.
* [MXNet](https://github.com/apache/incubator-mxnet) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.
* [TensorFlow.js](https://js.tensorflow.org/) - A WebGL accelerated, browser based JavaScript library for training and deploying ML models.
* [JSMLT](https://github.com/jsmlt/jsmlt) - Machine learning toolkit with classification and clustering for Node.js; supports visualization (see [visualml.io](https://visualml.io)).
* [xgboost-node](https://github.com/nuanio/xgboost-node) - Run XGBoost model and make predictions in Node.js.
* [Netron](https://github.com/lutzroeder/netron) - Visualizer for machine learning models.
* [tensor-js](https://github.com/Hoff97/tensorjs) - A deep learning library for the browser, accelerated by WebGL and WebAssembly.
* [WebDNN](https://github.com/mil-tokyo/webdnn) - Fast Deep Neural Network JavaScript Framework. WebDNN uses next generation JavaScript API, WebGPU for GPU execution, and WebAssembly for CPU execution.

<a name=""javascript-misc""></a>
#### Misc

* [stdlib](https://github.com/stdlib-js/stdlib) - A standard library for JavaScript and Node.js, with an emphasis on numeric computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.
* [sylvester](https://github.com/jcoglan/sylvester) - Vector and Matrix math for JavaScript. **[Deprecated]**
* [simple-statistics](https://github.com/simple-statistics/simple-statistics) - A JavaScript implementation of descriptive, regression, and inference statistics. Implemented in literate JavaScript with no dependencies, designed to work in all modern browsers (including IE) as well as in Node.js.
* [regression-js](https://github.com/Tom-Alexander/regression-js) - A javascript library containing a collection of least squares fitting methods for finding a trend in a set of data.
* [Lyric](https://github.com/flurry/Lyric) - Linear Regression library. **[Deprecated]**
* [GreatCircle](https://github.com/mwgg/GreatCircle) - Library for calculating great circle distance.
* [MLPleaseHelp](https://github.com/jgreenemi/MLPleaseHelp) - MLPleaseHelp is a simple ML resource search engine. You can use this search engine right now at [https://jgreenemi.github.io/MLPleaseHelp/](https://jgreenemi.github.io/MLPleaseHelp/), provided via GitHub Pages.
* [Pipcook](https://github.com/alibaba/pipcook) - A JavaScript application framework for machine learning and its engineering.

<a name=""javascript-demos-and-scripts""></a>
#### Demos and Scripts
* [The Bot](https://github.com/sta-ger/TheBot) - Example of how the neural network learns to predict the angle between two points created with [Synaptic](https://github.com/cazala/synaptic).
* [Half Beer](https://github.com/sta-ger/HalfBeer) - Beer glass classifier created with [Synaptic](https://github.com/cazala/synaptic).
* [NSFWJS](http://nsfwjs.com) - Indecent content checker with TensorFlow.js
* [Rock Paper Scissors](https://rps-tfjs.netlify.com/) - Rock Paper Scissors trained in the browser with TensorFlow.js
* [Heroes Wear Masks](https://heroeswearmasks.fun/) - A fun TensorFlow.js-based oracle that tells, whether one wears a face mask or not. It can even tell when one wears the mask incorrectly.

<a name=""julia""></a>
## Julia

<a name=""julia-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [MachineLearning](https://github.com/benhamner/MachineLearning.jl) - Julia Machine Learning library. **[Deprecated]**
* [MLBase](https://github.com/JuliaStats/MLBase.jl) - A set of functions to support the development of machine learning algorithms.
* [PGM](https://github.com/JuliaStats/PGM.jl) - A Julia framework for probabilistic graphical models.
* [DA](https://github.com/trthatcher/DiscriminantAnalysis.jl) - Julia package for Regularized Discriminant Analysis.
* [Regression](https://github.com/lindahua/Regression.jl) - Algorithms for regression analysis (e.g. linear regression and logistic regression). **[Deprecated]**
* [Local Regression](https://github.com/JuliaStats/Loess.jl) - Local regression, so smooooth!
* [Naive Bayes](https://github.com/nutsiepully/NaiveBayes.jl) - Simple Naive Bayes implementation in Julia. **[Deprecated]**
* [Mixed Models](https://github.com/dmbates/MixedModels.jl) - A Julia package for fitting (statistical) mixed-effects models.
* [Simple MCMC](https://github.com/fredo-dedup/SimpleMCMC.jl) - basic MCMC sampler implemented in Julia. **[Deprecated]**
* [Distances](https://github.com/JuliaStats/Distances.jl) - Julia module for Distance evaluation.
* [Decision Tree](https://github.com/bensadeghi/DecisionTree.jl) - Decision Tree Classifier and Regressor.
* [Neural](https://github.com/compressed/BackpropNeuralNet.jl) - A neural network in Julia.
* [MCMC](https://github.com/doobwa/MCMC.jl) - MCMC tools for Julia. **[Deprecated]**
* [Mamba](https://github.com/brian-j-smith/Mamba.jl) - Markov chain Monte Carlo (MCMC) for Bayesian analysis in Julia.
* [GLM](https://github.com/JuliaStats/GLM.jl) - Generalized linear models in Julia.
* [Gaussian Processes](https://github.com/STOR-i/GaussianProcesses.jl) - Julia package for Gaussian processes.
* [Online Learning](https://github.com/lendle/OnlineLearning.jl) **[Deprecated]**
* [GLMNet](https://github.com/simonster/GLMNet.jl) - Julia wrapper for fitting Lasso/ElasticNet GLM models using glmnet.
* [Clustering](https://github.com/JuliaStats/Clustering.jl) - Basic functions for clustering data: k-means, dp-means, etc.
* [SVM](https://github.com/JuliaStats/SVM.jl) - SVM for Julia. **[Deprecated]**
* [Kernel Density](https://github.com/JuliaStats/KernelDensity.jl) - Kernel density estimators for Julia.
* [MultivariateStats](https://github.com/JuliaStats/MultivariateStats.jl) - Methods for dimensionality reduction.
* [NMF](https://github.com/JuliaStats/NMF.jl) - A Julia package for non-negative matrix factorization.
* [ANN](https://github.com/EricChiang/ANN.jl) - Julia artificial neural networks. **[Deprecated]**
* [Mocha](https://github.com/pluskid/Mocha.jl) - Deep Learning framework for Julia inspired by Caffe. **[Deprecated]**
* [XGBoost](https://github.com/dmlc/XGBoost.jl) - eXtreme Gradient Boosting Package in Julia.
* [ManifoldLearning](https://github.com/wildart/ManifoldLearning.jl) - A Julia package for manifold learning and nonlinear dimensionality reduction.
* [MXNet](https://github.com/apache/incubator-mxnet) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.
* [Merlin](https://github.com/hshindo/Merlin.jl) - Flexible Deep Learning Framework in Julia.
* [ROCAnalysis](https://github.com/davidavdav/ROCAnalysis.jl) - Receiver Operating Characteristics and functions for evaluation probabilistic binary classifiers.
* [GaussianMixtures](https://github.com/davidavdav/GaussianMixtures.jl) - Large scale Gaussian Mixture Models.
* [ScikitLearn](https://github.com/cstjean/ScikitLearn.jl) - Julia implementation of the scikit-learn API.
* [Knet](https://github.com/denizyuret/Knet.jl) - Koç University Deep Learning Framework.
* [Flux](https://fluxml.ai/) - Relax! Flux is the ML library that doesn't make you tensor
* [MLJ](https://github.com/alan-turing-institute/MLJ.jl) - A Julia machine learning framework.

<a name=""julia-natural-language-processing""></a>
#### Natural Language Processing

* [Topic Models](https://github.com/slycoder/TopicModels.jl) - TopicModels for Julia. **[Deprecated]**
* [Text Analysis](https://github.com/JuliaText/TextAnalysis.jl) - Julia package for text analysis.
* [Word Tokenizers](https://github.com/JuliaText/WordTokenizers.jl) - Tokenizers for Natural Language Processing in Julia
* [Corpus Loaders](https://github.com/JuliaText/CorpusLoaders.jl) - A Julia package providing a variety of loaders for various NLP corpora.
* [Embeddings](https://github.com/JuliaText/Embeddings.jl) - Functions and data dependencies for loading various word embeddings
* [Languages](https://github.com/JuliaText/Languages.jl) - Julia package for working with various human languages
* [WordNet](https://github.com/JuliaText/WordNet.jl) - A Julia package for Princeton's WordNet

<a name=""julia-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [Graph Layout](https://github.com/IainNZ/GraphLayout.jl) - Graph layout algorithms in pure Julia.
* [LightGraphs](https://github.com/JuliaGraphs/LightGraphs.jl) - Graph modelling and analysis.
* [Data Frames Meta](https://github.com/JuliaData/DataFramesMeta.jl) - Metaprogramming tools for DataFrames.
* [Julia Data](https://github.com/nfoti/JuliaData) - library for working with tabular data in Julia. **[Deprecated]**
* [Data Read](https://github.com/queryverse/ReadStat.jl) - Read files from Stata, SAS, and SPSS.
* [Hypothesis Tests](https://github.com/JuliaStats/HypothesisTests.jl) - Hypothesis tests for Julia.
* [Gadfly](https://github.com/GiovineItalia/Gadfly.jl) - Crafty statistical graphics for Julia.
* [Stats](https://github.com/JuliaStats/StatsKit.jl) - Statistical tests for Julia.
* [RDataSets](https://github.com/johnmyleswhite/RDatasets.jl) - Julia package for loading many of the data sets available in R.
* [DataFrames](https://github.com/JuliaData/DataFrames.jl) - library for working with tabular data in Julia.
* [Distributions](https://github.com/JuliaStats/Distributions.jl) - A Julia package for probability distributions and associated functions.
* [Data Arrays](https://github.com/JuliaStats/DataArrays.jl) - Data structures that allow missing values. **[Deprecated]**
* [Time Series](https://github.com/JuliaStats/TimeSeries.jl) - Time series toolkit for Julia.
* [Sampling](https://github.com/lindahua/Sampling.jl) - Basic sampling algorithms for Julia.

<a name=""julia-misc-stuff--presentations""></a>
#### Misc Stuff / Presentations

* [DSP](https://github.com/JuliaDSP/DSP.jl) - Digital Signal Processing (filtering, periodograms, spectrograms, window functions).
* [JuliaCon Presentations](https://github.com/JuliaCon/presentations) - Presentations for JuliaCon.
* [SignalProcessing](https://github.com/JuliaDSP/DSP.jl) - Signal Processing tools for Julia.
* [Images](https://github.com/JuliaImages/Images.jl) - An image library for Julia.
* [DataDeps](https://github.com/oxinabox/DataDeps.jl) - Reproducible data setup for reproducible science.

<a name=""kotlin""></a>
## Kotlin

<a name=""kotlin-deep-learning""></a>
#### Deep Learning
* [KotlinDL](https://github.com/JetBrains/KotlinDL) - Deep learning framework written in Kotlin.

<a name=""lua""></a>
## Lua

<a name=""lua-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Torch7](http://torch.ch/)
  * [cephes](https://github.com/deepmind/torch-cephes) - Cephes mathematical functions library, wrapped for Torch. Provides and wraps the 180+ special mathematical functions from the Cephes mathematical library, developed by Stephen L. Moshier. It is used, among many other places, at the heart of SciPy. **[Deprecated]**
  * [autograd](https://github.com/twitter/torch-autograd) - Autograd automatically differentiates native Torch code. Inspired by the original Python version.
  * [graph](https://github.com/torch/graph) - Graph package for Torch. **[Deprecated]**
  * [randomkit](https://github.com/deepmind/torch-randomkit) - Numpy's randomkit, wrapped for Torch. **[Deprecated]**
  * [signal](https://github.com/soumith/torch-signal) - A signal processing toolbox for Torch-7. FFT, DCT, Hilbert, cepstrums, stft.
  * [nn](https://github.com/torch/nn) - Neural Network package for Torch.
  * [torchnet](https://github.com/torchnet/torchnet) - framework for torch which provides a set of abstractions aiming at encouraging code re-use as well as encouraging modular programming.
  * [nngraph](https://github.com/torch/nngraph) - This package provides graphical computation for nn library in Torch7.
  * [nnx](https://github.com/clementfarabet/lua---nnx) - A completely unstable and experimental package that extends Torch's builtin nn library.
  * [rnn](https://github.com/Element-Research/rnn) - A Recurrent Neural Network library that extends Torch's nn. RNNs, LSTMs, GRUs, BRNNs, BLSTMs, etc.
  * [dpnn](https://github.com/Element-Research/dpnn) - Many useful features that aren't part of the main nn package.
  * [dp](https://github.com/nicholas-leonard/dp) - A deep learning library designed for streamlining research and development using the Torch7 distribution. It emphasizes flexibility through the elegant use of object-oriented design patterns. **[Deprecated]**
  * [optim](https://github.com/torch/optim) - An optimization library for Torch. SGD, Adagrad, Conjugate-Gradient, LBFGS, RProp and more.
  * [unsup](https://github.com/koraykv/unsup) - A package for unsupervised learning in Torch. Provides modules that are compatible with nn (LinearPsd, ConvPsd, AutoEncoder, ...), and self-contained algorithms (k-means, PCA). **[Deprecated]**
  * [manifold](https://github.com/clementfarabet/manifold) - A package to manipulate manifolds.
  * [svm](https://github.com/koraykv/torch-svm) - Torch-SVM library. **[Deprecated]**
  * [lbfgs](https://github.com/clementfarabet/lbfgs) - FFI Wrapper for liblbfgs. **[Deprecated]**
  * [vowpalwabbit](https://github.com/clementfarabet/vowpal_wabbit) - An old vowpalwabbit interface to torch. **[Deprecated]**
  * [OpenGM](https://github.com/clementfarabet/lua---opengm) - OpenGM is a C++ library for graphical modelling, and inference. The Lua bindings provide a simple way of describing graphs, from Lua, and then optimizing them with OpenGM. **[Deprecated]**
  * [spaghetti](https://github.com/MichaelMathieu/lua---spaghetti) - Spaghetti (sparse linear) module for torch7 by @MichaelMathieu **[Deprecated]**
  * [LuaSHKit](https://github.com/ocallaco/LuaSHkit) - A Lua wrapper around the Locality sensitive hashing library SHKit **[Deprecated]**
  * [kernel smoothing](https://github.com/rlowrance/kernel-smoothers) - KNN, kernel-weighted average, local linear regression smoothers. **[Deprecated]**
  * [cutorch](https://github.com/torch/cutorch) - Torch CUDA Implementation.
  * [cunn](https://github.com/torch/cunn) - Torch CUDA Neural Network Implementation.
  * [imgraph](https://github.com/clementfarabet/lua---imgraph) - An image/graph library for Torch. This package provides routines to construct graphs on images, segment them, build trees out of them, and convert them back to images. **[Deprecated]**
  * [videograph](https://github.com/clementfarabet/videograph) - A video/graph library for Torch. This package provides routines to construct graphs on videos, segment them, build trees out of them, and convert them back to videos. **[Deprecated]**
  * [saliency](https://github.com/marcoscoffier/torch-saliency) - code and tools around integral images. A library for finding interest points based on fast integral histograms. **[Deprecated]**
  * [stitch](https://github.com/marcoscoffier/lua---stitch) - allows us to use hugin to stitch images and apply same stitching to a video sequence. **[Deprecated]**
  * [sfm](https://github.com/marcoscoffier/lua---sfm) - A bundle adjustment/structure from motion package. **[Deprecated]**
  * [fex](https://github.com/koraykv/fex) - A package for feature extraction in Torch. Provides SIFT and dSIFT modules. **[Deprecated]**
  * [OverFeat](https://github.com/sermanet/OverFeat) - A state-of-the-art generic dense feature extractor. **[Deprecated]**
  * [wav2letter](https://github.com/facebookresearch/wav2letter) - a simple and efficient end-to-end Automatic Speech Recognition (ASR) system from Facebook AI Research.
* [Numeric Lua](http://numlua.luaforge.net/)
* [Lunatic Python](https://labix.org/lunatic-python)
* [SciLua](http://scilua.org/)
* [Lua - Numerical Algorithms](https://bitbucket.org/lucashnegri/lna) **[Deprecated]**
* [Lunum](https://github.com/jzrake/lunum) **[Deprecated]**

<a name=""lua-demos-and-scripts""></a>
#### Demos and Scripts
* [Core torch7 demos repository](https://github.com/e-lab/torch7-demos).
  * linear-regression, logistic-regression
  * face detector (training and detection as separate demos)
  * mst-based-segmenter
  * train-a-digit-classifier
  * train-autoencoder
  * optical flow demo
  * train-on-housenumbers
  * train-on-cifar
  * tracking with deep nets
  * kinect demo
  * filter-bank visualization
  * saliency-networks
* [Training a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)](https://github.com/soumith/galaxyzoo)
* [torch-datasets](https://github.com/rosejn/torch-datasets) - Scripts to load several popular datasets including:
  * BSR 500
  * CIFAR-10
  * COIL
  * Street View House Numbers
  * MNIST
  * NORB
* [Atari2600](https://github.com/fidlej/aledataset) - Scripts to generate a dataset with static frames from the Arcade Learning Environment.



<a name=""matlab""></a>
## Matlab

<a name=""matlab-computer-vision""></a>
#### Computer Vision

* [Contourlets](http://www.ifp.illinois.edu/~minhdo/software/contourlet_toolbox.tar) - MATLAB source code that implements the contourlet transform and its utility functions.
* [Shearlets](https://www3.math.tu-berlin.de/numerik/www.shearlab.org/software) - MATLAB code for shearlet transform.
* [Curvelets](http://www.curvelet.org/software.html) - The Curvelet transform is a higher dimensional generalization of the Wavelet transform designed to represent images at different scales and different angles.
* [Bandlets](http://www.cmap.polytechnique.fr/~peyre/download/) - MATLAB code for bandlet transform.
* [mexopencv](https://kyamagu.github.io/mexopencv/) - Collection and a development kit of MATLAB mex functions for OpenCV library.

<a name=""matlab-natural-language-processing""></a>
#### Natural Language Processing

* [NLP](https://amplab.cs.berkeley.edu/an-nlp-library-for-matlab/) - A NLP library for Matlab.

<a name=""matlab-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Training a deep autoencoder or a classifier
on MNIST digits](https://www.cs.toronto.edu/~hinton/MatlabForSciencePaper.html) - Training a deep autoencoder or a classifier
on MNIST digits[DEEP LEARNING].
* [Convolutional-Recursive Deep Learning for 3D Object Classification](https://www.socher.org/index.php/Main/Convolutional-RecursiveDeepLearningFor3DObjectClassification) - Convolutional-Recursive Deep Learning for 3D Object Classification[DEEP LEARNING].
* [Spider](https://people.kyb.tuebingen.mpg.de/spider/) - The spider is intended to be a complete object orientated environment for machine learning in Matlab.
* [LibSVM](https://www.csie.ntu.edu.tw/~cjlin/libsvm/#matlab) - A Library for Support Vector Machines.
* [ThunderSVM](https://github.com/Xtra-Computing/thundersvm) - An Open-Source SVM Library on GPUs and CPUs
* [LibLinear](https://www.csie.ntu.edu.tw/~cjlin/liblinear/#download) - A Library for Large Linear Classification.
* [Machine Learning Module](https://github.com/josephmisiti/machine-learning-module) - Class on machine w/ PDF, lectures, code
* [Caffe](https://github.com/BVLC/caffe) - A deep learning framework developed with cleanliness, readability, and speed in mind.
* [Pattern Recognition Toolbox](https://github.com/covartech/PRT) - A complete object-oriented environment for machine learning in Matlab.
* [Pattern Recognition and Machine Learning](https://github.com/PRML/PRMLT) - This package contains the matlab implementation of the algorithms described in the book Pattern Recognition and Machine Learning by C. Bishop.
* [Optunity](https://optunity.readthedocs.io/en/latest/) - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly with MATLAB.
* [MXNet](https://github.com/apache/incubator-mxnet/) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.
* [Machine Learning in MatLab/Octave](https://github.com/trekhleb/machine-learning-octave) - examples of popular machine learning algorithms (neural networks, linear/logistic regressions, K-Means, etc.) with code examples and mathematics behind them being explained.


<a name=""matlab-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [ParaMonte](https://github.com/cdslaborg/paramonte) - A general-purpose MATLAB library for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found [here](https://www.cdslab.org/paramonte/).
* [matlab_bgl](https://www.cs.purdue.edu/homes/dgleich/packages/matlab_bgl/) - MatlabBGL is a Matlab package for working with graphs.
* [gaimc](https://www.mathworks.com/matlabcentral/fileexchange/24134-gaimc---graph-algorithms-in-matlab-code) - Efficient pure-Matlab implementations of graph algorithms to complement MatlabBGL's mex functions.

<a name=""net""></a>
## .NET

<a name=""net-computer-vision""></a>
#### Computer Vision

* [OpenCVDotNet](https://code.google.com/archive/p/opencvdotnet) - A wrapper for the OpenCV project to be used with .NET applications.
* [Emgu CV](http://www.emgu.com/wiki/index.php/Main_Page) - Cross platform wrapper of OpenCV which can be compiled in Mono to be run on Windows, Linus, Mac OS X, iOS, and Android.
* [AForge.NET](http://www.aforgenet.com/framework/) - Open source C# framework for developers and researchers in the fields of Computer Vision and Artificial Intelligence. Development has now shifted to GitHub.
* [Accord.NET](http://accord-framework.net) - Together with AForge.NET, this library can provide image processing and computer vision algorithms to Windows, Windows RT and Windows Phone. Some components are also available for Java and Android.

<a name=""net-natural-language-processing""></a>
#### Natural Language Processing

* [Stanford.NLP for .NET](https://github.com/sergey-tihon/Stanford.NLP.NET/) - A full port of Stanford NLP packages to .NET and also available precompiled as a NuGet package.

<a name=""net-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Accord-Framework](http://accord-framework.net/) -The Accord.NET Framework is a complete framework for building machine learning, computer vision, computer audition, signal processing and statistical applications.
* [Accord.MachineLearning](https://www.nuget.org/packages/Accord.MachineLearning/) - Support Vector Machines, Decision Trees, Naive Bayesian models, K-means, Gaussian Mixture models and general algorithms such as Ransac, Cross-validation and Grid-Search for machine-learning applications. This package is part of the Accord.NET Framework.
* [DiffSharp](https://diffsharp.github.io/DiffSharp/) - An automatic differentiation (AD) library providing exact and efficient derivatives (gradients, Hessians, Jacobians, directional derivatives, and matrix-free Hessian- and Jacobian-vector products) for machine learning and optimization applications. Operations can be nested to any level, meaning that you can compute exact higher-order derivatives and differentiate functions that are internally making use of differentiation, for applications such as hyperparameter optimization.
* [Encog](https://www.nuget.org/packages/encog-dotnet-core/) - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.
* [GeneticSharp](https://github.com/giacomelli/GeneticSharp) - Multi-platform genetic algorithm library for .NET Core and .NET Framework. The library has several implementations of GA operators, like: selection, crossover, mutation, reinsertion and termination.
* [Infer.NET](https://dotnet.github.io/infer/) - Infer.NET is a framework for running Bayesian inference in graphical models. One can use Infer.NET to solve many different kinds of machine learning problems, from standard problems like classification, recommendation or clustering through to customized solutions to domain-specific problems. Infer.NET has been used in a wide variety of domains including information retrieval, bioinformatics, epidemiology, vision, and many others.
* [ML.NET](https://github.com/dotnet/machinelearning) - ML.NET is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers. ML.NET was originally developed in Microsoft Research and evolved into a significant framework over the last decade and is used across many product groups in Microsoft like Windows, Bing, PowerPoint, Excel and more.
* [Neural Network Designer](https://sourceforge.net/projects/nnd/) - DBMS management system and designer for neural networks. The designer application is developed using WPF, and is a user interface which allows you to design your neural network, query the network, create and configure chat bots that are capable of asking questions and learning from your feedback. The chat bots can even scrape the internet for information to return in their output as well as to use for learning.
* [Synapses](https://github.com/mrdimosthenis/Synapses) - Neural network library in F#.
* [Vulpes](https://github.com/fsprojects/Vulpes) - Deep belief and deep learning implementation written in F# and leverages CUDA GPU execution with Alea.cuBase.
* [MxNet.Sharp](https://github.com/tech-quantum/MxNet.Sharp) - .NET Standard bindings for Apache MxNet with Imperative, Symbolic and Gluon Interface for developing, training and deploying Machine Learning models in C#. https://mxnet.tech-quantum.com/

<a name=""net-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [numl](https://www.nuget.org/packages/numl/) - numl is a machine learning library intended to ease the use of using standard modelling techniques for both prediction and clustering.
* [Math.NET Numerics](https://www.nuget.org/packages/MathNet.Numerics/) - Numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and everyday use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 and Windows 8 with PCL Portable Profiles 47 and 344; Android/iOS with Xamarin.
* [Sho](https://www.microsoft.com/en-us/research/project/sho-the-net-playground-for-data/) - Sho is an interactive environment for data analysis and scientific computing that lets you seamlessly connect scripts (in IronPython) with compiled code (in .NET) to enable fast and flexible prototyping. The environment includes powerful and efficient libraries for linear algebra as well as data visualization that can be used from any .NET language, as well as a feature-rich interactive shell for rapid development.

<a name=""objective-c""></a>
## Objective C

<a name=""objective-c-general-purpose-machine-learning""></a>
### General-Purpose Machine Learning

* [YCML](https://github.com/yconst/YCML) - A Machine Learning framework for Objective-C and Swift (OS X / iOS).
* [MLPNeuralNet](https://github.com/nikolaypavlov/MLPNeuralNet) - Fast multilayer perceptron neural network library for iOS and Mac OS X. MLPNeuralNet predicts new examples by trained neural networks. It is built on top of the Apple's Accelerate Framework, using vectorized operations and hardware acceleration if available. **[Deprecated]**
* [MAChineLearning](https://github.com/gianlucabertani/MAChineLearning) - An Objective-C multilayer perceptron library, with full support for training through backpropagation. Implemented using vDSP and vecLib, it's 20 times faster than its Java equivalent. Includes sample code for use from Swift.
* [BPN-NeuralNetwork](https://github.com/Kalvar/ios-BPN-NeuralNetwork) - It implemented 3 layers of neural networks ( Input Layer, Hidden Layer and Output Layer ) and it was named Back Propagation Neural Networks (BPN). This network can be used in products recommendation, user behavior analysis, data mining and data analysis. **[Deprecated]**
* [Multi-Perceptron-NeuralNetwork](https://github.com/Kalvar/ios-Multi-Perceptron-NeuralNetwork) - it implemented multi-perceptrons neural network (ニューラルネットワーク) based on Back Propagation Neural Networks (BPN) and designed unlimited-hidden-layers.
* [KRHebbian-Algorithm](https://github.com/Kalvar/ios-KRHebbian-Algorithm) - It is a non-supervisor and self-learning algorithm (adjust the weights) in the neural network of Machine Learning. **[Deprecated]**
* [KRKmeans-Algorithm](https://github.com/Kalvar/ios-KRKmeans-Algorithm) - It implemented K-Means  clustering and classification algorithm. It could be used in data mining and image compression. **[Deprecated]**
* [KRFuzzyCMeans-Algorithm](https://github.com/Kalvar/ios-KRFuzzyCMeans-Algorithm) - It implemented Fuzzy C-Means (FCM) the fuzzy clustering / classification algorithm on Machine Learning. It could be used in data mining and image compression. **[Deprecated]**

<a name=""ocaml""></a>
## OCaml

<a name=""ocaml-general-purpose-machine-learning""></a>
### General-Purpose Machine Learning

* [Oml](https://github.com/rleonid/oml) - A general statistics and machine learning library.
* [GPR](https://mmottl.github.io/gpr/) - Efficient Gaussian Process Regression in OCaml.
* [Libra-Tk](https://libra.cs.uoregon.edu) - Algorithms for learning and inference with discrete probabilistic models.
* [TensorFlow](https://github.com/LaurentMazare/tensorflow-ocaml) - OCaml bindings for TensorFlow.

<a name=""opencv""></a>
## OpenCV

<a name=""opencv-ComputerVision and Text Detection""></a>
### OpenSource-Computer-Vision

* [OpenCV](https://github.com/opencv/opencv) - A OpenSource Computer Vision Library

<a name=""perl""></a>
## Perl

<a name=""perl-data-analysis--data-visualization""></a>
### Data Analysis / Data Visualization

* [Perl Data Language](https://metacpan.org/pod/Paws::MachineLearning), a pluggable architecture for data and image processing, which can
be [used for machine learning](https://github.com/zenogantner/PDL-ML).

<a name=""perl-general-purpose-machine-learning""></a>
### General-Purpose Machine Learning

* [MXnet for Deep Learning, in Perl](https://github.com/apache/incubator-mxnet/tree/master/perl-package),
also [released in CPAN](https://metacpan.org/pod/AI::MXNet).
* [Perl Data Language](https://metacpan.org/pod/Paws::MachineLearning),
using AWS machine learning platform from Perl.
* [Algorithm::SVMLight](https://metacpan.org/pod/Algorithm::SVMLight),
  implementation of Support Vector Machines with SVMLight under it. **[Deprecated]**
* Several machine learning and artificial intelligence models are
  included in the [`AI`](https://metacpan.org/search?size=20&q=AI)
  namespace. For instance, you can
  find [Naïve Bayes](https://metacpan.org/pod/AI::NaiveBayes).

<a name=""perl6""></a>
## Perl 6

* [Support Vector Machines](https://github.com/titsuki/p6-Algorithm-LibSVM)
* [Naïve Bayes](https://github.com/titsuki/p6-Algorithm-NaiveBayes)

<a name=""perl-6-data-analysis--data-visualization""></a>
### Data Analysis / Data Visualization

* [Perl Data Language](https://metacpan.org/pod/Paws::MachineLearning),
a pluggable architecture for data and image processing, which can
be
[used for machine learning](https://github.com/zenogantner/PDL-ML).

<a name=""perl-6-general-purpose-machine-learning""></a>
### General-Purpose Machine Learning

<a name=""php""></a>
## PHP

<a name=""php-natural-language-processing""></a>
### Natural Language Processing

* [jieba-php](https://github.com/fukuball/jieba-php) - Chinese Words Segmentation Utilities.

<a name=""php-general-purpose-machine-learning""></a>
### General-Purpose Machine Learning

* [PHP-ML](https://gitlab.com/php-ai/php-ml) - Machine Learning library for PHP. Algorithms, Cross Validation, Neural Network, Preprocessing, Feature Extraction and much more in one library.
* [PredictionBuilder](https://github.com/denissimon/prediction-builder) - A library for machine learning that builds predictions using a linear regression.
* [Rubix ML](https://github.com/RubixML) - A high-level machine learning (ML) library that lets you build programs that learn from data using the PHP language.
* [19 Questions](https://github.com/fulldecent/19-questions) - A machine learning / bayesian inference assigning attributes to objects.

<a name=""python""></a>
## Python

<a name=""python-computer-vision""></a>
#### Computer Vision

* [Scikit-Image](https://github.com/scikit-image/scikit-image) - A collection of algorithms for image processing in Python.
* [Scikit-Opt](https://github.com/guofei9987/scikit-opt) - Swarm Intelligence in Python (Genetic Algorithm, Particle Swarm Optimization, Simulated Annealing, Ant Colony Algorithm, Immune Algorithm, Artificial Fish Swarm Algorithm in Python)
* [SimpleCV](http://simplecv.org/) - An open source computer vision framework that gives access to several high-powered computer vision libraries, such as OpenCV. Written on Python and runs on Mac, Windows, and Ubuntu Linux.
* [Vigranumpy](https://github.com/ukoethe/vigra) - Python bindings for the VIGRA C++ computer vision library.
* [OpenFace](https://cmusatyalab.github.io/openface/) - Free and open source face recognition with deep neural networks.
* [PCV](https://github.com/jesolem/PCV) - Open source Python module for computer vision. **[Deprecated]**
* [face_recognition](https://github.com/ageitgey/face_recognition) - Face recognition library that recognizes and manipulates faces from Python or from the command line.
* [deepface](https://github.com/serengil/deepface) - A lightweight face recognition and facial attribute analysis (age, gender, emotion and race) framework for Python covering cutting-edge models such as VGG-Face, FaceNet, OpenFace, DeepFace, DeepID, Dlib and ArcFace.
* [retinaface](https://github.com/serengil/retinaface) - deep learning based cutting-edge facial detector for Python coming with facial landmarks
* [dockerface](https://github.com/natanielruiz/dockerface) - Easy to install and use deep learning Faster R-CNN face detection for images and video in a docker container. **[Deprecated]**
* [Detectron](https://github.com/facebookresearch/Detectron) - FAIR's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework. **[Deprecated]**
* [detectron2](https://github.com/facebookresearch/detectron2) - FAIR's next-generation research platform for object detection and segmentation. It is a ground-up rewrite of the previous version, Detectron, and is powered by the PyTorch deep learning framework.
* [albumentations](https://github.com/albu/albumentations) - А fast and framework agnostic image augmentation library that implements a diverse set of augmentation techniques. Supports classification, segmentation, detection out of the box. Was used to win a number of Deep Learning competitions at Kaggle, Topcoder and those that were a part of the CVPR workshops.
* [pytessarct](https://github.com/madmaze/pytesseract) - Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and ""read"" the text embedded in images. Python-tesseract is a wrapper for [Google's Tesseract-OCR Engine](https://github.com/tesseract-ocr/tesseract).
* [imutils](https://github.com/jrosebr1/imutils) - A library containing Convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.
* [PyTorchCV](https://github.com/donnyyou/PyTorchCV) - A PyTorch-Based Framework for Deep Learning in Computer Vision.
* [Self-supervised learning](https://pytorch-lightning-bolts.readthedocs.io/en/latest/self_supervised_models.html)
* [neural-style-pt](https://github.com/ProGamerGov/neural-style-pt) - A PyTorch implementation of Justin Johnson's neural-style (neural style transfer).
* [Detecto](https://github.com/alankbi/detecto) - Train and run a computer vision model with 5-10 lines of code.
* [neural-dream](https://github.com/ProGamerGov/neural-dream) - A PyTorch implementation of DeepDream.
* [Openpose](https://github.com/CMU-Perceptual-Computing-Lab/openpose) - A real-time multi-person keypoint detection library for body, face, hands, and foot estimation
* [Deep High-Resolution-Net](https://github.com/leoxiaobin/deep-high-resolution-net.pytorch) - A PyTorch implementation of CVPR2019 paper ""Deep High-Resolution Representation Learning for Human Pose Estimation""
* [dream-creator](https://github.com/ProGamerGov/dream-creator) - A PyTorch implementation of DeepDream. Allows individuals to quickly and easily train their own custom GoogleNet models with custom datasets for DeepDream.
* [Lucent](https://github.com/greentfrapp/lucent) - Tensorflow and OpenAI Clarity's Lucid adapted for PyTorch.
* [lightly](https://github.com/lightly-ai/lightly) - Lightly is a computer vision framework for self-supervised learning.
* [Learnergy](https://github.com/gugarosa/learnergy) - Energy-based machine learning models built upon PyTorch.
* [OpenVisionAPI](https://github.com/openvisionapi) - Open source computer vision API based on open source models.
* [IoT Owl](https://github.com/Ret2Me/IoT-Owl) - Light face detection and recognition system with huge possibilities, based on Microsoft Face API and TensorFlow made for small IoT devices like raspberry pi.
* [Exadel CompreFace](https://github.com/exadel-inc/CompreFace) - face recognition system that can be easily integrated into any system without prior machine learning skills. CompreFace provides REST API for face recognition, face verification, face detection, face mask detection, landmark detection, age, and gender recognition and is easily deployed with docker.
* [computer-vision-in-action](https://github.com/Charmve/computer-vision-in-action) - as known as ``L0CV``, is a new generation of computer vision open source online learning media, a cross-platform interactive learning framework integrating graphics, source code and HTML. the L0CV ecosystem — Notebook, Datasets, Source Code, and from Diving-in to Advanced — as well as the L0CV Hub.
* [timm](https://github.com/rwightman/pytorch-image-models) - PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, EfficientNetV2, NFNet, Vision Transformer, MixNet, MobileNet-V3/V2, RegNet, DPN, CSPNet, and more.

<a name=""python-natural-language-processing""></a>
#### Natural Language Processing

* [pkuseg-python](https://github.com/lancopku/pkuseg-python) - A better version of Jieba, developed by Peking University.
* [NLTK](https://www.nltk.org/) - A leading platform for building Python programs to work with human language data.
* [Pattern](https://github.com/clips/pattern) - A web mining module for the Python programming language. It has tools for natural language processing, machine learning, among others.
* [Quepy](https://github.com/machinalis/quepy) - A python framework to transform natural language questions to queries in a database query language.
* [TextBlob](http://textblob.readthedocs.io/en/dev/) - Providing a consistent API for diving into common natural language processing (NLP) tasks. Stands on the giant shoulders of NLTK and Pattern, and plays nicely with both.
* [YAlign](https://github.com/machinalis/yalign) - A sentence aligner, a friendly tool for extracting parallel sentences from comparable corpora. **[Deprecated]**
* [jieba](https://github.com/fxsjy/jieba#jieba-1) - Chinese Words Segmentation Utilities.
* [SnowNLP](https://github.com/isnowfy/snownlp) - A library for processing Chinese text.
* [spammy](https://github.com/tasdikrahman/spammy) - A library for email Spam filtering built on top of NLTK
* [loso](https://github.com/fangpenlin/loso) - Another Chinese segmentation library. **[Deprecated]**
* [genius](https://github.com/duanhongyi/genius) - A Chinese segment based on Conditional Random Field.
* [KoNLPy](http://konlpy.org) - A Python package for Korean natural language processing.
* [nut](https://github.com/pprett/nut) - Natural language Understanding Toolkit. **[Deprecated]**
* [Rosetta](https://github.com/columbia-applied-data-science/rosetta) - Text processing tools and wrappers (e.g. Vowpal Wabbit)
* [BLLIP Parser](https://pypi.org/project/bllipparser/) - Python bindings for the BLLIP Natural Language Parser (also known as the Charniak-Johnson parser). **[Deprecated]**
* [PyNLPl](https://github.com/proycon/pynlpl) - Python Natural Language Processing Library. General purpose NLP library for Python. Also contains some specific modules for parsing common NLP formats, most notably for [FoLiA](https://proycon.github.io/folia/), but also ARPA language models, Moses phrasetables, GIZA++ alignments.
* [PySS3](https://github.com/sergioburdisso/pyss3) - Python package that implements a novel white-box machine learning model for text classification, called SS3. Since SS3 has the ability to visually explain its rationale, this package also comes with easy-to-use interactive visualizations tools ([online demos](http://tworld.io/ss3/)).
* [python-ucto](https://github.com/proycon/python-ucto) - Python binding to ucto (a unicode-aware rule-based tokenizer for various languages).
* [python-frog](https://github.com/proycon/python-frog) - Python binding to Frog, an NLP suite for Dutch. (pos tagging, lemmatisation, dependency parsing, NER)
* [python-zpar](https://github.com/EducationalTestingService/python-zpar) - Python bindings for [ZPar](https://github.com/frcchang/zpar), a statistical part-of-speech-tagger, constituency parser, and dependency parser for English.
* [colibri-core](https://github.com/proycon/colibri-core) - Python binding to C++ library for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.
* [spaCy](https://github.com/explosion/spaCy) - Industrial strength NLP with Python and Cython.
* [PyStanfordDependencies](https://github.com/dmcc/PyStanfordDependencies) - Python interface for converting Penn Treebank trees to Stanford Dependencies.
* [Distance](https://github.com/doukremt/distance) - Levenshtein and Hamming distance computation. **[Deprecated]**
* [Fuzzy Wuzzy](https://github.com/seatgeek/fuzzywuzzy) - Fuzzy String Matching in Python.
* [jellyfish](https://github.com/jamesturk/jellyfish) - a python library for doing approximate and phonetic matching of strings.
* [editdistance](https://pypi.org/project/editdistance/) - fast implementation of edit distance.
* [textacy](https://github.com/chartbeat-labs/textacy) - higher-level NLP built on Spacy.
* [stanford-corenlp-python](https://github.com/dasmith/stanford-corenlp-python) - Python wrapper for [Stanford CoreNLP](https://github.com/stanfordnlp/CoreNLP) **[Deprecated]**
* [CLTK](https://github.com/cltk/cltk) - The Classical Language Toolkit.
* [Rasa](https://github.com/RasaHQ/rasa) - A ""machine learning framework to automate text-and voice-based conversations.""
* [yase](https://github.com/PPACI/yase) - Transcode sentence (or other sequence) to list of word vector .
* [Polyglot](https://github.com/aboSamoor/polyglot) - Multilingual text (NLP) processing toolkit.
* [DrQA](https://github.com/facebookresearch/DrQA) - Reading Wikipedia to answer open-domain questions.
* [Dedupe](https://github.com/dedupeio/dedupe) - A python library for accurate and scalable fuzzy matching, record deduplication and entity-resolution.
* [Snips NLU](https://github.com/snipsco/snips-nlu) - Natural Language Understanding library for intent classification and entity extraction
* [NeuroNER](https://github.com/Franck-Dernoncourt/NeuroNER) - Named-entity recognition using neural networks providing state-of-the-art-results
* [DeepPavlov](https://github.com/deepmipt/DeepPavlov/) - conversational AI library with many pre-trained Russian NLP models.
* [BigARTM](https://github.com/bigartm/bigartm) - topic modelling platform.
* [NALP](https://github.com/gugarosa/nalp) - A Natural Adversarial Language Processing framework built over Tensorflow.
* [DL Translate](https://github.com/xhlulu/dl-translate) - A deep learning-based translation library between 50 languages, built with `transformers`.
* [Haystack](https://github.com/deepset-ai/haystack) - A framework for building industrial-strength applications with Transformer models and LLMs.

<a name=""python-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

 * [RexMex](https://github.com/AstraZeneca/rexmex) -> A general purpose recommender metrics library for fair evaluation.
 * [ChemicalX](https://github.com/AstraZeneca/chemicalx) -> A PyTorch based deep learning library for drug pair scoring
 * [Microsoft ML for Apache Spark](https://github.com/Azure/mmlspark) -> A distributed machine learning framework Apache Spark
 * [Shapley](https://github.com/benedekrozemberczki/shapley) -> A data-driven framework to quantify the value of classifiers in a machine learning ensemble.
 * [igel](https://github.com/nidhaloff/igel) -> A delightful machine learning tool that allows you to train/fit, test and use models **without writing code**
 * [ML Model building](https://github.com/Shanky-21/Machine_learning) -> A Repository Containing Classification, Clustering, Regression, Recommender Notebooks with illustration to make them.
 * [ML/DL project template](https://github.com/PyTorchLightning/deep-learning-project-template)
 * [PyTorch Geometric Temporal](https://github.com/benedekrozemberczki/pytorch_geometric_temporal) -> A temporal extension of PyTorch Geometric for dynamic graph representation learning.
 * [Little Ball of Fur](https://github.com/benedekrozemberczki/littleballoffur) -> A graph sampling extension library for NetworkX with a Scikit-Learn like API.
 * [Karate Club](https://github.com/benedekrozemberczki/karateclub) -> An unsupervised machine learning extension library for NetworkX with a Scikit-Learn like API.
* [Auto_ViML](https://github.com/AutoViML/Auto_ViML) -> Automatically Build Variant Interpretable ML models fast! Auto_ViML is pronounced ""auto vimal"", is a comprehensive and scalable Python AutoML toolkit with imbalanced handling, ensembling, stacking and built-in feature selection. Featured in <a href=""https://towardsdatascience.com/why-automl-is-an-essential-new-tool-for-data-scientists-2d9ab4e25e46?source=friends_link&sk=d03a0cc55c23deb497d546d6b9be0653"">Medium article</a>.
* [PyOD](https://github.com/yzhao062/pyod) -> Python Outlier Detection, comprehensive and scalable Python toolkit for detecting outlying objects in multivariate data. Featured for Advanced models, including Neural Networks/Deep Learning and Outlier Ensembles.
* [steppy](https://github.com/neptune-ml/steppy) -> Lightweight, Python library for fast and reproducible machine learning experimentation. Introduces a very simple interface that enables clean machine learning pipeline design.
* [steppy-toolkit](https://github.com/neptune-ml/steppy-toolkit) -> Curated collection of the neural networks, transformers and models that make your machine learning work faster and more effective.
* [CNTK](https://github.com/Microsoft/CNTK) - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. Documentation can be found [here](https://docs.microsoft.com/cognitive-toolkit/).
* [Couler](https://github.com/couler-proj/couler) - Unified interface for constructing and managing machine learning workflows on different workflow engines, such as Argo Workflows, Tekton Pipelines, and Apache Airflow.
* [auto_ml](https://github.com/ClimbsRocks/auto_ml) - Automated machine learning for production and analytics. Lets you focus on the fun parts of ML, while outputting production-ready code, and detailed analytics of your dataset and results. Includes support for NLP, XGBoost, CatBoost, LightGBM, and soon, deep learning.
* [dtaidistance](https://github.com/wannesm/dtaidistance) - High performance library for time series distances (DTW) and time series clustering.
* [einops](https://github.com/arogozhnikov/einops) - Deep learning operations reinvented (for pytorch, tensorflow, jax and others).
* [machine learning](https://github.com/jeff1evesque/machine-learning) - automated build consisting of a [web-interface](https://github.com/jeff1evesque/machine-learning#web-interface), and set of [programmatic-interface](https://github.com/jeff1evesque/machine-learning#programmatic-interface) API, for support vector machines. Corresponding dataset(s) are stored into a SQL database, then generated model(s) used for prediction(s), are stored into a NoSQL datastore.
* [XGBoost](https://github.com/dmlc/xgboost) - Python bindings for eXtreme Gradient Boosting (Tree) Library.
* [ChefBoost](https://github.com/serengil/chefboost) - a lightweight decision tree framework for Python with categorical feature support covering regular decision tree algorithms such as ID3, C4.5, CART, CHAID and regression tree; also some advanved bagging and boosting techniques such as gradient boosting, random forest and adaboost.
* [Apache SINGA](https://singa.apache.org) - An Apache Incubating project for developing an open source machine learning library.
* [Bayesian Methods for Hackers](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers) - Book/iPython notebooks on Probabilistic Programming in Python.
* [Featureforge](https://github.com/machinalis/featureforge) A set of tools for creating and testing machine learning features, with a scikit-learn compatible API.
* [MLlib in Apache Spark](http://spark.apache.org/docs/latest/mllib-guide.html) - Distributed machine learning library in Spark
* [Hydrosphere Mist](https://github.com/Hydrospheredata/mist) - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.
* [Towhee](https://towhee.io) - A Python module that encode unstructured data into embeddings.
* [scikit-learn](https://scikit-learn.org/) - A Python module for machine learning built on top of SciPy.
* [metric-learn](https://github.com/metric-learn/metric-learn) - A Python module for metric learning.
* [OpenMetricLearning](https://github.com/OML-Team/open-metric-learning) - A PyTorch-based framework to train and validate the models producing high-quality embeddings.
* [Intel(R) Extension for Scikit-learn](https://github.com/intel/scikit-learn-intelex) - A seamless way to speed up your Scikit-learn applications with no accuracy loss and code changes.
* [SimpleAI](https://github.com/simpleai-team/simpleai) Python implementation of many of the artificial intelligence algorithms described in the book ""Artificial Intelligence, a Modern Approach"". It focuses on providing an easy to use, well documented and tested library.
* [astroML](https://www.astroml.org/) - Machine Learning and Data Mining for Astronomy.
* [graphlab-create](https://turi.com/products/create/docs/) - A library with various machine learning models (regression, clustering, recommender systems, graph analytics, etc.) implemented on top of a disk-backed DataFrame.
* [BigML](https://bigml.com) - A library that contacts external servers.
* [pattern](https://github.com/clips/pattern) - Web mining module for Python.
* [NuPIC](https://github.com/numenta/nupic) - Numenta Platform for Intelligent Computing.
* [Pylearn2](https://github.com/lisa-lab/pylearn2) - A Machine Learning library based on [Theano](https://github.com/Theano/Theano). **[Deprecated]**
* [keras](https://github.com/keras-team/keras) - High-level neural networks frontend for [TensorFlow](https://github.com/tensorflow/tensorflow), [CNTK](https://github.com/Microsoft/CNTK) and [Theano](https://github.com/Theano/Theano).
* [Lasagne](https://github.com/Lasagne/Lasagne) - Lightweight library to build and train neural networks in Theano.
* [hebel](https://github.com/hannes-brt/hebel) - GPU-Accelerated Deep Learning Library in Python. **[Deprecated]**
* [Chainer](https://github.com/chainer/chainer) - Flexible neural network framework.
* [prophet](https://facebook.github.io/prophet/) - Fast and automated time series forecasting framework by Facebook.
* [gensim](https://github.com/RaRe-Technologies/gensim) - Topic Modelling for Humans.
* [topik](https://github.com/ContinuumIO/topik) - Topic modelling toolkit. **[Deprecated]**
* [PyBrain](https://github.com/pybrain/pybrain) - Another Python Machine Learning Library.
* [Brainstorm](https://github.com/IDSIA/brainstorm) - Fast, flexible and fun neural networks. This is the successor of PyBrain.
* [Surprise](https://surpriselib.com) - A scikit for building and analyzing recommender systems.
* [implicit](https://implicit.readthedocs.io/en/latest/quickstart.html) - Fast Python Collaborative Filtering for Implicit Datasets.
* [LightFM](https://making.lyst.com/lightfm/docs/home.html) -  A Python implementation of a number of popular recommendation algorithms for both implicit and explicit feedback.
* [Crab](https://github.com/muricoca/crab) - A flexible, fast recommender engine. **[Deprecated]**
* [python-recsys](https://github.com/ocelma/python-recsys) - A Python library for implementing a Recommender System.
* [thinking bayes](https://github.com/AllenDowney/ThinkBayes) - Book on Bayesian Analysis.
* [Image-to-Image Translation with Conditional Adversarial Networks](https://github.com/williamFalcon/pix2pix-keras) - Implementation of image to image (pix2pix) translation from the paper by [isola et al](https://arxiv.org/pdf/1611.07004.pdf).[DEEP LEARNING]
* [Restricted Boltzmann Machines](https://github.com/echen/restricted-boltzmann-machines) -Restricted Boltzmann Machines in Python. [DEEP LEARNING]
* [Bolt](https://github.com/pprett/bolt) - Bolt Online Learning Toolbox. **[Deprecated]**
* [CoverTree](https://github.com/patvarilly/CoverTree) - Python implementation of cover trees, near-drop-in replacement for scipy.spatial.kdtree **[Deprecated]**
* [nilearn](https://github.com/nilearn/nilearn) - Machine learning for NeuroImaging in Python.
* [neuropredict](https://github.com/raamana/neuropredict) - Aimed at novice machine learners and non-expert programmers, this package offers easy (no coding needed) and comprehensive machine learning (evaluation and full report of predictive performance WITHOUT requiring you to code) in Python for NeuroImaging and any other type of features. This is aimed at absorbing much of the ML workflow, unlike other packages like nilearn and pymvpa, which require you to learn their API and code to produce anything useful.
* [imbalanced-learn](https://imbalanced-learn.org/stable/) - Python module to perform under sampling and oversampling with various techniques.
* [imbalanced-ensemble](https://github.com/ZhiningLiu1998/imbalanced-ensemble) - Python toolbox for quick implementation, modification, evaluation, and visualization of ensemble learning algorithms for class-imbalanced data. Supports out-of-the-box multi-class imbalanced (long-tailed) classification.
* [Shogun](https://github.com/shogun-toolbox/shogun) - The Shogun Machine Learning Toolbox.
* [Pyevolve](https://github.com/perone/Pyevolve) - Genetic algorithm framework. **[Deprecated]**
* [Caffe](https://github.com/BVLC/caffe) - A deep learning framework developed with cleanliness, readability, and speed in mind.
* [breze](https://github.com/breze-no-salt/breze) - Theano based library for deep and recurrent neural networks.
* [Cortex](https://github.com/cortexlabs/cortex) - Open source platform for deploying machine learning models in production.
* [pyhsmm](https://github.com/mattjj/pyhsmm) - library for approximate unsupervised inference in Bayesian Hidden Markov Models (HMMs) and explicit-duration Hidden semi-Markov Models (HSMMs), focusing on the Bayesian Nonparametric extensions, the HDP-HMM and HDP-HSMM, mostly with weak-limit approximations.
* [SKLL](https://github.com/EducationalTestingService/skll) - A wrapper around scikit-learn that makes it simpler to conduct experiments.
* [neurolab](https://github.com/zueve/neurolab)
* [Spearmint](https://github.com/HIPS/Spearmint) - Spearmint is a package to perform Bayesian optimization according to the algorithms outlined in the paper: Practical Bayesian Optimization of Machine Learning Algorithms. Jasper Snoek, Hugo Larochelle and Ryan P. Adams. Advances in Neural Information Processing Systems, 2012. **[Deprecated]**
* [Pebl](https://github.com/abhik/pebl/) - Python Environment for Bayesian Learning. **[Deprecated]**
* [Theano](https://github.com/Theano/Theano/) - Optimizing GPU-meta-programming code generating array oriented optimizing math compiler in Python.
* [TensorFlow](https://github.com/tensorflow/tensorflow/) - Open source software library for numerical computation using data flow graphs.
* [pomegranate](https://github.com/jmschrei/pomegranate) - Hidden Markov Models for Python, implemented in Cython for speed and efficiency.
* [python-timbl](https://github.com/proycon/python-timbl) - A Python extension module wrapping the full TiMBL C++ programming interface. Timbl is an elaborate k-Nearest Neighbours machine learning toolkit.
* [deap](https://github.com/deap/deap) - Evolutionary algorithm framework.
* [pydeep](https://github.com/andersbll/deeppy) - Deep Learning In Python. **[Deprecated]**
* [mlxtend](https://github.com/rasbt/mlxtend) - A library consisting of useful tools for data science and machine learning tasks.
* [neon](https://github.com/NervanaSystems/neon) - Nervana's [high-performance](https://github.com/soumith/convnet-benchmarks) Python-based Deep Learning framework [DEEP LEARNING]. **[Deprecated]**
* [Optunity](https://optunity.readthedocs.io/en/latest/) - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search.
* [Neural Networks and Deep Learning](https://github.com/mnielsen/neural-networks-and-deep-learning) - Code samples for my book ""Neural Networks and Deep Learning"" [DEEP LEARNING].
* [Annoy](https://github.com/spotify/annoy) - Approximate nearest neighbours implementation.
* [TPOT](https://github.com/EpistasisLab/tpot) - Tool that automatically creates and optimizes machine learning pipelines using genetic programming. Consider it your personal data science assistant, automating a tedious part of machine learning.
* [pgmpy](https://github.com/pgmpy/pgmpy) A python library for working with Probabilistic Graphical Models.
* [DIGITS](https://github.com/NVIDIA/DIGITS) - The Deep Learning GPU Training System (DIGITS) is a web application for training deep learning models.
* [Orange](https://orange.biolab.si/) - Open source data visualization and data analysis for novices and experts.
* [MXNet](https://github.com/apache/incubator-mxnet) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.
* [milk](https://github.com/luispedro/milk) - Machine learning toolkit focused on supervised classification. **[Deprecated]**
* [TFLearn](https://github.com/tflearn/tflearn) - Deep learning library featuring a higher-level API for TensorFlow.
* [REP](https://github.com/yandex/rep) - an IPython-based environment for conducting data-driven research in a consistent and reproducible way. REP is not trying to substitute scikit-learn, but extends it and provides better user experience. **[Deprecated]**
* [rgf_python](https://github.com/RGF-team/rgf) - Python bindings for Regularized Greedy Forest (Tree) Library.
* [skbayes](https://github.com/AmazaspShumik/sklearn-bayes) - Python package for Bayesian Machine Learning with scikit-learn API.
* [fuku-ml](https://github.com/fukuball/fuku-ml) - Simple machine learning library, including Perceptron, Regression, Support Vector Machine, Decision Tree and more, it's easy to use and easy to learn for beginners.
* [Xcessiv](https://github.com/reiinakano/xcessiv) - A web-based application for quick, scalable, and automated hyperparameter tuning and stacked ensembling.
* [PyTorch](https://github.com/pytorch/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration
* [PyTorch Lightning](https://github.com/PyTorchLightning/pytorch-lightning) - The lightweight PyTorch wrapper for high-performance AI research.
* [PyTorch Lightning Bolts](https://github.com/PyTorchLightning/pytorch-lightning-bolts) - Toolbox of models, callbacks, and datasets for AI/ML researchers.
* [skorch](https://github.com/skorch-dev/skorch) - A scikit-learn compatible neural network library that wraps PyTorch.
* [ML-From-Scratch](https://github.com/eriklindernoren/ML-From-Scratch) - Implementations of Machine Learning models from scratch in Python with a focus on transparency. Aims to showcase the nuts and bolts of ML in an accessible way.
* [Edward](http://edwardlib.org/) - A library for probabilistic modelling, inference, and criticism. Built on top of TensorFlow.
* [xRBM](https://github.com/omimo/xRBM) - A library for Restricted Boltzmann Machine (RBM) and its conditional variants in Tensorflow.
* [CatBoost](https://github.com/catboost/catboost) - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, well documented and supports CPU and GPU (even multi-GPU) computation.
* [stacked_generalization](https://github.com/fukatani/stacked_generalization) - Implementation of machine learning stacking technique as a handy library in Python.
* [modAL](https://github.com/modAL-python/modAL) - A modular active learning framework for Python, built on top of scikit-learn.
* [Cogitare](https://github.com/cogitare-ai/cogitare): A Modern, Fast, and Modular Deep Learning and Machine Learning framework for Python.
* [Parris](https://github.com/jgreenemi/Parris) - Parris, the automated infrastructure setup tool for machine learning algorithms.
* [neonrvm](https://github.com/siavashserver/neonrvm) - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.
* [Turi Create](https://github.com/apple/turicreate) - Machine learning from Apple. Turi Create simplifies the development of custom machine learning models. You don't have to be a machine learning expert to add recommendations, object detection, image classification, image similarity or activity classification to your app.
* [xLearn](https://github.com/aksnzhy/xlearn) - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.
* [mlens](https://github.com/flennerhag/mlens) - A high performance, memory efficient, maximally parallelized ensemble learning, integrated with scikit-learn.
* [Thampi](https://github.com/scoremedia/thampi) - Machine Learning Prediction System on AWS Lambda
* [MindsDB](https://github.com/mindsdb/mindsdb) - Open Source framework to streamline use of neural networks.
* [Microsoft Recommenders](https://github.com/Microsoft/Recommenders): Examples and best practices for building recommendation systems, provided as Jupyter notebooks. The repo contains some of the latest state of the art algorithms from Microsoft Research as well as from other companies and institutions.
* [StellarGraph](https://github.com/stellargraph/stellargraph): Machine Learning on Graphs, a Python library for machine learning on graph-structured (network-structured) data.
* [BentoML](https://github.com/bentoml/bentoml): Toolkit for package and deploy machine learning models for serving in production
* [MiraiML](https://github.com/arthurpaulino/miraiml): An asynchronous engine for continuous & autonomous machine learning, built for real-time usage.
* [numpy-ML](https://github.com/ddbourgin/numpy-ml): Reference implementations of ML models written in numpy
* [Neuraxle](https://github.com/Neuraxio/Neuraxle): A framework providing the right abstractions to ease research, development, and deployment of your ML pipelines.
* [Cornac](https://github.com/PreferredAI/cornac) - A comparative framework for multimodal recommender systems with a focus on models leveraging auxiliary data.
* [JAX](https://github.com/google/jax) - JAX is Autograd and XLA, brought together for high-performance machine learning research.
* [Catalyst](https://github.com/catalyst-team/catalyst) - High-level utils for PyTorch DL & RL research. It was developed with a focus on reproducibility, fast experimentation and code/ideas reusing. Being able to research/develop something new, rather than write another regular train loop.
* [Fastai](https://github.com/fastai/fastai) - High-level wrapper built on the top of Pytorch which supports vision, text, tabular data and collaborative filtering.
* [scikit-multiflow](https://github.com/scikit-multiflow/scikit-multiflow) - A machine learning framework for multi-output/multi-label and stream data.
* [Lightwood](https://github.com/mindsdb/lightwood) - A Pytorch based framework that breaks down machine learning problems into smaller blocks that can be glued together seamlessly with objective to build predictive models with one line of code.
* [bayeso](https://github.com/jungtaekkim/bayeso) - A simple, but essential Bayesian optimization package, written in Python.
* [mljar-supervised](https://github.com/mljar/mljar-supervised) - An Automated Machine Learning (AutoML) python package for tabular data. It can handle: Binary Classification, MultiClass Classification and Regression. It provides explanations and markdown reports.
* [evostra](https://github.com/alirezamika/evostra) - A fast Evolution Strategy implementation in Python.
* [Determined](https://github.com/determined-ai/determined) - Scalable deep learning training platform, including integrated support for distributed training, hyperparameter tuning, experiment tracking, and model management.
* [PySyft](https://github.com/OpenMined/PySyft) - A Python library for secure and private Deep Learning built on PyTorch and TensorFlow.
* [PyGrid](https://github.com/OpenMined/PyGrid/) - Peer-to-peer network of data owners and data scientists who can collectively train AI models using PySyft
* [sktime](https://github.com/alan-turing-institute/sktime) - A unified framework for machine learning with time series
* [OPFython](https://github.com/gugarosa/opfython) - A Python-inspired implementation of the Optimum-Path Forest classifier.
* [Opytimizer](https://github.com/gugarosa/opytimizer) - Python-based meta-heuristic optimization techniques.
* [Gradio](https://github.com/gradio-app/gradio) - A Python library for quickly creating and sharing demos of models. Debug models interactively in your browser, get feedback from collaborators, and generate public links without deploying anything.
* [Hub](https://github.com/activeloopai/Hub) - Fastest unstructured dataset management for TensorFlow/PyTorch. Stream & version-control data. Store even petabyte-scale data in a single numpy-like array on the cloud accessible on any machine. Visit [activeloop.ai](https://activeloop.ai) for more info.
* [Synthia](https://github.com/dmey/synthia) - Multidimensional synthetic data generation in Python.
* [ByteHub](https://github.com/bytehub-ai/bytehub) - An easy-to-use, Python-based feature store. Optimized for time-series data.
* [Backprop](https://github.com/backprop-ai/backprop) - Backprop makes it simple to use, finetune, and deploy state-of-the-art ML models.
* [River](https://github.com/online-ml/river): A framework for general purpose online machine learning.
* [FEDOT](https://github.com/nccr-itmo/FEDOT): An AutoML framework for the automated design of composite modelling pipelines. It can handle classification, regression, and time series forecasting tasks on different types of data (including multi-modal datasets).
* [Sklearn-genetic-opt](https://github.com/rodrigo-arenas/Sklearn-genetic-opt): An AutoML package for hyperparameters tuning using evolutionary algorithms, with built-in callbacks, plotting, remote logging and more.
* [Evidently](https://github.com/evidentlyai/evidently): Interactive reports to analyze machine learning models during validation or production monitoring.
* [Streamlit](https://github.com/streamlit/streamlit): Streamlit is an framework to create beautiful data apps in hours, not weeks.
* [Optuna](https://github.com/optuna/optuna): Optuna is an automatic hyperparameter optimization software framework, particularly designed for machine learning.
* [Deepchecks](https://github.com/deepchecks/deepchecks): Validation & testing of machine learning models and data during model development, deployment, and production. This includes checks and suites related to various types of issues, such as model performance, data integrity, distribution mismatches, and more.
* [Shapash](https://github.com/MAIF/shapash) : Shapash is a Python library that provides several types of visualization that display explicit labels that everyone can understand.
* [Eurybia](https://github.com/MAIF/eurybia): Eurybia monitors data and model drift over time and securizes model deployment with data validation.
* [Colossal-AI](https://github.com/hpcaitech/ColossalAI): An open-source deep learning system for large-scale model training and inference with high efficiency and low cost.
* [dirty_cat](https://github.com/dirty-cat/dirty_cat) - facilitates machine-learning on dirty, non-curated categories. It provides transformers and encoders robust to morphological variants, such as typos.
* [Upgini](https://github.com/upgini/upgini): Free automated data & feature enrichment library for machine learning - automatically searches through thousands of ready-to-use features from public and community shared data sources and enriches your training dataset with only the accuracy improving features.
* [AutoML-Implementation-for-Static-and-Dynamic-Data-Analytics](https://github.com/Western-OC2-Lab/AutoML-Implementation-for-Static-and-Dynamic-Data-Analytics): A tutorial to help machine learning researchers to automatically obtain optimized machine learning models with the optimal learning performance on any specific task.
* [SKBEL](https://github.com/robinthibaut/skbel): A Python library for Bayesian Evidential Learning (BEL) in order to estimate the uncertainty of a prediction.
* [NannyML](https://bit.ly/nannyml-github-machinelearning): Python library capable of fully capturing the impact of data drift on performance. Allows estimation of post-deployment model performance without access to targets.
* [cleanlab](https://github.com/cleanlab/cleanlab): The standard data-centric AI package for data quality and machine learning with messy, real-world data and labels.
* [AutoGluon](https://github.com/awslabs/autogluon): AutoML for Image, Text, Tabular, Time-Series, and MultiModal Data.
* [PyBroker](https://github.com/edtechre/pybroker) - Algorithmic Trading with Machine Learning.
* [Frouros](https://github.com/IFCA/frouros): Frouros is an open source Python library for drift detection in machine learning systems.


<a name=""python-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization
* [DataVisualization](https://github.com/Shanky-21/Data_visualization) - A GitHub Repository Where you can Learn Datavisualizatoin Basics to Intermediate level.
* [Cartopy](https://scitools.org.uk/cartopy/docs/latest/) - Cartopy is a Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses.
* [SciPy](https://www.scipy.org/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.
* [NumPy](https://www.numpy.org/) - A fundamental package for scientific computing with Python.
* [AutoViz](https://github.com/AutoViML/AutoViz) AutoViz performs automatic visualization of any dataset with a single line of Python code. Give it any input file (CSV, txt or JSON) of any size and AutoViz will visualize it. See <a href=""https://towardsdatascience.com/autoviz-a-new-tool-for-automated-visualization-ec9c1744a6ad?source=friends_link&sk=c9e9503ec424b191c6096d7e3f515d10"">Medium article</a>.
* [Numba](https://numba.pydata.org/) - Python JIT (just in time) compiler to LLVM aimed at scientific Python by the developers of Cython and NumPy.
* [Mars](https://github.com/mars-project/mars) - A tensor-based framework for large-scale data computation which is often regarded as a parallel and distributed version of NumPy.
* [NetworkX](https://networkx.github.io/) - A high-productivity software for complex networks.
* [igraph](https://igraph.org/python/) - binding to igraph library - General purpose graph library.
* [Pandas](https://pandas.pydata.org/) - A library providing high-performance, easy-to-use data structures and data analysis tools.
* [ParaMonte](https://github.com/cdslaborg/paramonte) - A general-purpose Python library for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found [here](https://www.cdslab.org/paramonte/).
* [Vaex](https://github.com/vaexio/vaex) - A high performance Python library for lazy Out-of-Core DataFrames (similar to Pandas), to visualize and explore big tabular datasets. Documentation can be found [here](https://vaex.io/docs/index.html).
* [Open Mining](https://github.com/mining/mining) - Business Intelligence (BI) in Python (Pandas web interface) **[Deprecated]**
* [PyMC](https://github.com/pymc-devs/pymc) - Markov Chain Monte Carlo sampling toolkit.
* [zipline](https://github.com/quantopian/zipline) - A Pythonic algorithmic trading library.
* [PyDy](https://www.pydy.org/) - Short for Python Dynamics, used to assist with workflow in the modelling of dynamic motion based around NumPy, SciPy, IPython, and matplotlib.
* [SymPy](https://github.com/sympy/sympy) - A Python library for symbolic mathematics.
* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modelling and econometrics in Python.
* [astropy](https://www.astropy.org/) - A community Python library for Astronomy.
* [matplotlib](https://matplotlib.org/) - A Python 2D plotting library.
* [bokeh](https://github.com/bokeh/bokeh) - Interactive Web Plotting for Python.
* [plotly](https://plot.ly/python/) - Collaborative web plotting for Python and matplotlib.
* [altair](https://github.com/altair-viz/altair) - A Python to Vega translator.
* [d3py](https://github.com/mikedewar/d3py) - A plotting library for Python, based on [D3.js](https://d3js.org/).
* [PyDexter](https://github.com/D3xterjs/pydexter) - Simple plotting for Python. Wrapper for D3xterjs; easily render charts in-browser.
* [ggplot](https://github.com/yhat/ggpy) - Same API as ggplot2 for R. **[Deprecated]**
* [ggfortify](https://github.com/sinhrks/ggfortify) - Unified interface to ggplot2 popular R packages.
* [Kartograph.py](https://github.com/kartograph/kartograph.py) - Rendering beautiful SVG maps in Python.
* [pygal](http://pygal.org/en/stable/) - A Python SVG Charts Creator.
* [PyQtGraph](https://github.com/pyqtgraph/pyqtgraph) - A pure-python graphics and GUI library built on PyQt4 / PySide and NumPy.
* [pycascading](https://github.com/twitter/pycascading) **[Deprecated]**
* [Petrel](https://github.com/AirSage/Petrel) - Tools for writing, submitting, debugging, and monitoring Storm topologies in pure Python.
* [Blaze](https://github.com/blaze/blaze) - NumPy and Pandas interface to Big Data.
* [emcee](https://github.com/dfm/emcee) - The Python ensemble sampling toolkit for affine-invariant MCMC.
* [windML](https://github.com/cigroup-ol/windml) - A Python Framework for Wind Energy Analysis and Prediction.
* [vispy](https://github.com/vispy/vispy) - GPU-based high-performance interactive OpenGL 2D/3D data visualization library.
* [cerebro2](https://github.com/numenta/nupic.cerebro2) A web-based visualization and debugging platform for NuPIC. **[Deprecated]**
* [NuPIC Studio](https://github.com/htm-community/nupic.studio) An all-in-one NuPIC Hierarchical Temporal Memory visualization and debugging super-tool! **[Deprecated]**
* [SparklingPandas](https://github.com/sparklingpandas/sparklingpandas) Pandas on PySpark (POPS).
* [Seaborn](https://seaborn.pydata.org/) - A python visualization library based on matplotlib.
* [ipychart](https://github.com/nicohlr/ipychart) - The power of Chart.js in Jupyter Notebook.
* [bqplot](https://github.com/bloomberg/bqplot) - An API for plotting in Jupyter (IPython).
* [pastalog](https://github.com/rewonc/pastalog) - Simple, realtime visualization of neural network training performance.
* [Superset](https://github.com/apache/incubator-superset) - A data exploration platform designed to be visual, intuitive, and interactive.
* [Dora](https://github.com/nathanepstein/dora) - Tools for exploratory data analysis in Python.
* [Ruffus](http://www.ruffus.org.uk) - Computation Pipeline library for python.
* [SOMPY](https://github.com/sevamoo/SOMPY) - Self Organizing Map written in Python (Uses neural networks for data analysis).
* [somoclu](https://github.com/peterwittek/somoclu) Massively parallel self-organizing maps: accelerate training on multicore CPUs, GPUs, and clusters, has python API.
* [HDBScan](https://github.com/lmcinnes/hdbscan) - implementation of the hdbscan algorithm in Python - used for clustering
* [visualize_ML](https://github.com/ayush1997/visualize_ML) - A python package for data exploration and data analysis. **[Deprecated]**
* [scikit-plot](https://github.com/reiinakano/scikit-plot) - A visualization library for quick and easy generation of common plots in data analysis and machine learning.
* [Bowtie](https://github.com/jwkvam/bowtie) - A dashboard library for interactive visualizations using flask socketio and react.
* [lime](https://github.com/marcotcr/lime) - Lime is about explaining what machine learning classifiers (or models) are doing. It is able to explain any black box classifier, with two or more classes.
* [PyCM](https://github.com/sepandhaghighi/pycm) - PyCM is a multi-class confusion matrix library written in Python that supports both input data vectors and direct matrix, and a proper tool for post-classification model evaluation that supports most classes and overall statistics parameters
* [Dash](https://github.com/plotly/dash) - A framework for creating analytical web applications built on top of Plotly.js, React, and Flask
* [Lambdo](https://github.com/asavinov/lambdo) - A workflow engine for solving machine learning problems by combining in one analysis pipeline (i) feature engineering and machine learning (ii) model training and prediction (iii) table population and column evaluation via user-defined (Python) functions.
* [TensorWatch](https://github.com/microsoft/tensorwatch) - Debugging and visualization tool for machine learning and data science. It extensively leverages Jupyter Notebook to show real-time visualizations of data in running processes such as machine learning training.
* [dowel](https://github.com/rlworkgroup/dowel) - A little logger for machine learning research. Output any object to the terminal, CSV, TensorBoard, text logs on disk, and more with just one call to `logger.log()`.

<a name=""python-misc-scripts--ipython-notebooks--codebases""></a>
#### Misc Scripts / iPython Notebooks / Codebases
* [MiniGrad](https://github.com/kennysong/minigrad) – A minimal, educational, Pythonic implementation of autograd (~100 loc).
* [Map/Reduce implementations of common ML algorithms](https://github.com/Yannael/BigDataAnalytics_INFOH515): Jupyter notebooks that cover how to implement from scratch different ML algorithms (ordinary least squares, gradient descent, k-means, alternating least squares), using Python NumPy, and how to then make these implementations scalable using Map/Reduce and Spark.
* [BioPy](https://github.com/jaredthecoder/BioPy) - Biologically-Inspired and Machine Learning Algorithms in Python. **[Deprecated]**
* [CAEs for Data Assimilation](https://github.com/julianmack/Data_Assimilation) - Convolutional autoencoders for 3D image/field compression applied to reduced order [Data Assimilation](https://en.wikipedia.org/wiki/Data_assimilation).
* [handsonml](https://github.com/ageron/handson-ml) - Fundamentals of machine learning in python.
* [SVM Explorer](https://github.com/plotly/dash-svm) - Interactive SVM Explorer, using Dash and scikit-learn
* [pattern_classification](https://github.com/rasbt/pattern_classification)
* [thinking stats 2](https://github.com/Wavelets/ThinkStats2)
* [hyperopt](https://github.com/hyperopt/hyperopt-sklearn)
* [numpic](https://github.com/numenta/nupic)
* [2012-paper-diginorm](https://github.com/dib-lab/2012-paper-diginorm)
* [A gallery of interesting IPython notebooks](https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks)
* [ipython-notebooks](https://github.com/ogrisel/notebooks)
* [data-science-ipython-notebooks](https://github.com/donnemartin/data-science-ipython-notebooks) - Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.
* [decision-weights](https://github.com/CamDavidsonPilon/decision-weights)
* [Sarah Palin LDA](https://github.com/Wavelets/sarah-palin-lda) - Topic Modelling the Sarah Palin emails.
* [Diffusion Segmentation](https://github.com/Wavelets/diffusion-segmentation) - A collection of image segmentation algorithms based on diffusion methods.
* [Scipy Tutorials](https://github.com/Wavelets/scipy-tutorials) - SciPy tutorials. This is outdated, check out scipy-lecture-notes.
* [Crab](https://github.com/marcelcaraciolo/crab) - A recommendation engine library for Python.
* [BayesPy](https://github.com/maxsklar/BayesPy) - Bayesian Inference Tools in Python.
* [scikit-learn tutorials](https://github.com/GaelVaroquaux/scikit-learn-tutorial) - Series of notebooks for learning scikit-learn.
* [sentiment-analyzer](https://github.com/madhusudancs/sentiment-analyzer) - Tweets Sentiment Analyzer
* [sentiment_classifier](https://github.com/kevincobain2000/sentiment_classifier) - Sentiment classifier using word sense disambiguation.
* [group-lasso](https://github.com/fabianp/group_lasso) - Some experiments with the coordinate descent algorithm used in the (Sparse) Group Lasso model.
* [jProcessing](https://github.com/kevincobain2000/jProcessing) - Kanji / Hiragana / Katakana to Romaji Converter. Edict Dictionary & parallel sentences Search. Sentence Similarity between two JP Sentences. Sentiment Analysis of Japanese Text. Run Cabocha(ISO--8859-1 configured) in Python.
* [mne-python-notebooks](https://github.com/mne-tools/mne-python-notebooks) - IPython notebooks for EEG/MEG data processing using mne-python.
* [Neon Course](https://github.com/NervanaSystems/neon_course) - IPython notebooks for a complete course around understanding Nervana's Neon.
* [pandas cookbook](https://github.com/jvns/pandas-cookbook) - Recipes for using Python's pandas library.
* [climin](https://github.com/BRML/climin) - Optimization library focused on machine learning, pythonic implementations of gradient descent, LBFGS, rmsprop, adadelta and others.
* [Allen Downey’s Data Science Course](https://github.com/AllenDowney/DataScience) - Code for Data Science at Olin College, Spring 2014.
* [Allen Downey’s Think Bayes Code](https://github.com/AllenDowney/ThinkBayes) - Code repository for Think Bayes.
* [Allen Downey’s Think Complexity Code](https://github.com/AllenDowney/ThinkComplexity) - Code for Allen Downey's book Think Complexity.
* [Allen Downey’s Think OS Code](https://github.com/AllenDowney/ThinkOS) - Text and supporting code for Think OS: A Brief Introduction to Operating Systems.
* [Python Programming for the Humanities](https://www.karsdorp.io/python-course/) - Course for Python programming for the Humanities, assuming no prior knowledge. Heavy focus on text processing / NLP.
* [GreatCircle](https://github.com/mwgg/GreatCircle) - Library for calculating great circle distance.
* [Optunity examples](http://optunity.readthedocs.io/en/latest/notebooks/index.html) - Examples demonstrating how to use Optunity in synergy with machine learning libraries.
* [Dive into Machine Learning  with Python Jupyter notebook and scikit-learn](https://github.com/hangtwenty/dive-into-machine-learning) - ""I learned Python by hacking first, and getting serious *later.* I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.""
* [TDB](https://github.com/ericjang/tdb) - TensorDebugger (TDB) is a visual debugger for deep learning. It features interactive, node-by-node debugging and visualization for TensorFlow.
* [Suiron](https://github.com/kendricktan/suiron/) - Machine Learning for RC Cars.
* [Introduction to machine learning with scikit-learn](https://github.com/justmarkham/scikit-learn-videos) - IPython notebooks from Data School's video tutorials on scikit-learn.
* [Practical XGBoost in Python](https://parrotprediction.teachable.com/p/practical-xgboost-in-python) - comprehensive online course about using XGBoost in Python.
* [Introduction to Machine Learning with Python](https://github.com/amueller/introduction_to_ml_with_python) - Notebooks and code for the book ""Introduction to Machine Learning with Python""
* [Pydata book](https://github.com/wesm/pydata-book) - Materials and IPython notebooks for ""Python for Data Analysis"" by Wes McKinney, published by O'Reilly Media
* [Homemade Machine Learning](https://github.com/trekhleb/homemade-machine-learning) - Python examples of popular machine learning algorithms with interactive Jupyter demos and math being explained
* [Prodmodel](https://github.com/prodmodel/prodmodel) - Build tool for data science pipelines.
* [the-elements-of-statistical-learning](https://github.com/maitbayev/the-elements-of-statistical-learning) - This repository contains Jupyter notebooks implementing the algorithms found in the book and summary of the textbook.
* [Hyperparameter-Optimization-of-Machine-Learning-Algorithms](https://github.com/LiYangHart/Hyperparameter-Optimization-of-Machine-Learning-Algorithms) - Code for hyperparameter tuning/optimization of machine learning and deep learning algorithms.
* [Heart_Disease-Prediction](https://github.com/ShivamChoudhary17/Heart_Disease) - Given clinical parameters about a patient, can we predict whether or not they have heart disease?
* [Flight Fare Prediction](https://github.com/ShivamChoudhary17/Flight_Fare_Prediction) - This basically to gauge the understanding of Machine Learning Workflow and Regression technique in specific.
* [Keras Tuner](https://github.com/keras-team/keras-tuner) - An easy-to-use, scalable hyperparameter optimization framework that solves the pain points of hyperparameter search.



<a name=""python-neural-networks""></a>
#### Neural Networks

* [nn_builder](https://github.com/p-christ/nn_builder) - nn_builder is a python package that lets you build neural networks in 1 line
* [NeuralTalk](https://github.com/karpathy/neuraltalk) - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences.
* [Neuron](https://github.com/molcik/python-neuron) - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg–Marquardt algorithm.

* [NeuralTalk](https://github.com/karpathy/neuraltalk2) - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences. **[Deprecated]**
* [Neuron](https://github.com/molcik/python-neuron) - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg–Marquardt algorithm. **[Deprecated]**
* [Data Driven Code](https://github.com/atmb4u/data-driven-code) - Very simple implementation of neural networks for dummies in python without using any libraries, with detailed comments.
* [Machine Learning, Data Science and Deep Learning with Python](https://www.manning.com/livevideo/machine-learning-data-science-and-deep-learning-with-python) - LiveVideo course that covers machine learning, Tensorflow, artificial intelligence, and neural networks.
* [TResNet: High Performance GPU-Dedicated Architecture](https://github.com/mrT23/TResNet) - TResNet models were designed and optimized to give the best speed-accuracy tradeoff out there on GPUs.
* [TResNet: Simple and powerful neural network library for python](https://github.com/zueve/neurolab) - Variety of supported types of Artificial Neural Network and learning algorithms.
* [Jina AI](https://jina.ai/) An easier way to build neural search in the cloud. Compatible with Jupyter Notebooks.
* [sequitur](https://github.com/shobrook/sequitur) PyTorch library for creating and training sequence autoencoders in just two lines of code


<a name=""python-spiking-neural-networks""></a>
#### Spiking Neural Networks

* [Rockpool](https://github.com/synsense/rockpool) - A machine learning library for spiking neural networks. Supports training with both torch and jax pipelines, and deployment to neuromorphic hardware.
* [Sinabs](https://github.com/synsense/sinabs) - A deep learning library for spiking neural networks which is based on PyTorch, focuses on fast training and supports inference on neuromorphic hardware.
* [Tonic](https://github.com/neuromorphs/tonic) - A library that makes downloading publicly available neuromorphic datasets a breeze and provides event-based data transformation/augmentation pipelines.

<a name=""python-survival-analysis""></a>
#### Python Survival Analysis
* [lifelines](https://github.com/CamDavidsonPilon/lifelines) - lifelines is a complete survival analysis library, written in pure Python
* [Scikit-Survival](https://github.com/sebp/scikit-survival) - scikit-survival is a Python module for survival analysis built on top of scikit-learn. It allows doing survival analysis while utilizing the power of scikit-learn, e.g., for pre-processing or doing cross-validation.

<a name=""python-federated-learning""></a>
#### Federated Learning
* [Flower](https://flower.dev/) - A unified approach to federated learning, analytics, and evaluation. Federate any workload, any ML framework, and any programming language.
* [PySyft](https://github.com/OpenMined/PySyft) - A Python library for secure and private Deep Learning.
* [Tensorflow-Federated](https://www.tensorflow.org/federated) A federated learning framework for machine learning and other computations on decentralized data.

<a name=""python-kaggle-competition-source-code""></a>
#### Kaggle Competition Source Code
* [open-solution-home-credit](https://github.com/neptune-ml/open-solution-home-credit) -> source code and [experiments results](https://app.neptune.ml/neptune-ml/Home-Credit-Default-Risk) for [Home Credit Default Risk](https://www.kaggle.com/c/home-credit-default-risk).
* [open-solution-googleai-object-detection](https://github.com/neptune-ml/open-solution-googleai-object-detection) -> source code and [experiments results](https://app.neptune.ml/neptune-ml/Google-AI-Object-Detection-Challenge) for [Google AI Open Images - Object Detection Track](https://www.kaggle.com/c/google-ai-open-images-object-detection-track).
* [open-solution-salt-identification](https://github.com/neptune-ml/open-solution-salt-identification) -> source code and [experiments results](https://app.neptune.ml/neptune-ml/Salt-Detection) for [TGS Salt Identification Challenge](https://www.kaggle.com/c/tgs-salt-identification-challenge).
* [open-solution-ship-detection](https://github.com/neptune-ml/open-solution-ship-detection) -> source code and [experiments results](https://app.neptune.ml/neptune-ml/Ships) for [Airbus Ship Detection Challenge](https://www.kaggle.com/c/airbus-ship-detection).
* [open-solution-data-science-bowl-2018](https://github.com/neptune-ml/open-solution-data-science-bowl-2018) -> source code and [experiments results](https://app.neptune.ml/neptune-ml/Data-Science-Bowl-2018) for [2018 Data Science Bowl](https://www.kaggle.com/c/data-science-bowl-2018).
* [open-solution-value-prediction](https://github.com/neptune-ml/open-solution-value-prediction) -> source code and [experiments results](https://app.neptune.ml/neptune-ml/Santander-Value-Prediction-Challenge) for [Santander Value Prediction Challenge](https://www.kaggle.com/c/santander-value-prediction-challenge).
* [open-solution-toxic-comments](https://github.com/neptune-ml/open-solution-toxic-comments) -> source code for [Toxic Comment Classification Challenge](https://www.kaggle.com/c/jigsaw-toxic-comment-classification-challenge).
* [wiki challenge](https://github.com/hammer/wikichallenge) - An implementation of Dell Zhang's solution to Wikipedia's Participation Challenge on Kaggle.
* [kaggle insults](https://github.com/amueller/kaggle_insults) - Kaggle Submission for ""Detecting Insults in Social Commentary"".
* [kaggle_acquire-valued-shoppers-challenge](https://github.com/MLWave/kaggle_acquire-valued-shoppers-challenge) - Code for the Kaggle acquire valued shoppers challenge.
* [kaggle-cifar](https://github.com/zygmuntz/kaggle-cifar) - Code for the CIFAR-10 competition at Kaggle, uses cuda-convnet.
* [kaggle-blackbox](https://github.com/zygmuntz/kaggle-blackbox) - Deep learning made easy.
* [kaggle-accelerometer](https://github.com/zygmuntz/kaggle-accelerometer) - Code for Accelerometer Biometric Competition at Kaggle.
* [kaggle-advertised-salaries](https://github.com/zygmuntz/kaggle-advertised-salaries) - Predicting job salaries from ads - a Kaggle competition.
* [kaggle amazon](https://github.com/zygmuntz/kaggle-amazon) - Amazon access control challenge.
* [kaggle-bestbuy_big](https://github.com/zygmuntz/kaggle-bestbuy_big) - Code for the Best Buy competition at Kaggle.
* [kaggle-bestbuy_small](https://github.com/zygmuntz/kaggle-bestbuy_small)
* [Kaggle Dogs vs. Cats](https://github.com/kastnerkyle/kaggle-dogs-vs-cats) - Code for Kaggle Dogs vs. Cats competition.
* [Kaggle Galaxy Challenge](https://github.com/benanne/kaggle-galaxies) - Winning solution for the Galaxy Challenge on Kaggle.
* [Kaggle Gender](https://github.com/zygmuntz/kaggle-gender) - A Kaggle competition: discriminate gender based on handwriting.
* [Kaggle Merck](https://github.com/zygmuntz/kaggle-merck) - Merck challenge at Kaggle.
* [Kaggle Stackoverflow](https://github.com/zygmuntz/kaggle-stackoverflow) - Predicting closed questions on Stack Overflow.
* [kaggle_acquire-valued-shoppers-challenge](https://github.com/MLWave/kaggle_acquire-valued-shoppers-challenge) - Code for the Kaggle acquire valued shoppers challenge.
* [wine-quality](https://github.com/zygmuntz/wine-quality) - Predicting wine quality.

<a name=""python-reinforcement-learning""></a>
#### Reinforcement Learning
* [DeepMind Lab](https://github.com/deepmind/lab) - DeepMind Lab is a 3D learning environment based on id Software's Quake III Arena via ioquake3 and other open source software. Its primary purpose is to act as a testbed for research in artificial intelligence, especially deep reinforcement learning.
* [Gym](https://github.com/openai/gym) - OpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms.
* [Serpent.AI](https://github.com/SerpentAI/SerpentAI) - Serpent.AI is a game agent framework that allows you to turn any video game you own into a sandbox to develop AI and machine learning experiments. For both researchers and hobbyists.
* [ViZDoom](https://github.com/mwydmuch/ViZDoom) - ViZDoom allows developing AI bots that play Doom using only the visual information (the screen buffer). It is primarily intended for research in machine visual learning, and deep reinforcement learning, in particular.
* [Roboschool](https://github.com/openai/roboschool) - Open-source software for robot simulation, integrated with OpenAI Gym.
* [Retro](https://github.com/openai/retro) - Retro Games in Gym
* [SLM Lab](https://github.com/kengz/SLM-Lab) - Modular Deep Reinforcement Learning framework in PyTorch.
* [Coach](https://github.com/NervanaSystems/coach) - Reinforcement Learning Coach by Intel® AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithms
* [garage](https://github.com/rlworkgroup/garage) - A toolkit for reproducible reinforcement learning research
* [metaworld](https://github.com/rlworkgroup/metaworld) - An open source robotics benchmark for meta- and multi-task reinforcement learning
* [acme](https://deepmind.com/research/publications/Acme) - An Open Source Distributed Framework for Reinforcement Learning that makes build and train your agents easily.
* [Spinning Up](https://spinningup.openai.com) - An educational resource designed to let anyone learn to become a skilled practitioner in deep reinforcement learning
* [Maze](https://github.com/enlite-ai/maze) - Application-oriented deep reinforcement learning framework addressing real-world decision problems.
* [RLlib](https://github.com/ray-project/ray) - RLlib is an industry level, highly scalable RL library for tf and torch, based on Ray. It's used by companies like Amazon and Microsoft to solve real-world decision making problems at scale.
* [DI-engine](https://github.com/opendilab/DI-engine) - DI-engine is a generalized Decision Intelligence engine. It supports most basic deep reinforcement learning (DRL) algorithms, such as DQN, PPO, SAC, and domain-specific algorithms like QMIX in multi-agent RL, GAIL in inverse RL, and RND in exploration problems.

<a name=""ruby""></a>
## Ruby

<a name=""ruby-natural-language-processing""></a>
#### Natural Language Processing

* [Awesome NLP with Ruby](https://github.com/arbox/nlp-with-ruby) - Curated link list for practical natural language processing in Ruby.
* [Treat](https://github.com/louismullie/treat) - Text Retrieval and Annotation Toolkit, definitely the most comprehensive toolkit I’ve encountered so far for Ruby.
* [Stemmer](https://github.com/aurelian/ruby-stemmer) - Expose libstemmer_c to Ruby. **[Deprecated]**
* [Raspell](https://sourceforge.net/projects/raspell/) - raspell is an interface binding for ruby. **[Deprecated]**
* [UEA Stemmer](https://github.com/ealdent/uea-stemmer) - Ruby port of UEALite Stemmer - a conservative stemmer for search and indexing.
* [Twitter-text-rb](https://github.com/twitter/twitter-text/tree/master/rb) - A library that does auto linking and extraction of usernames, lists and hashtags in tweets.

<a name=""ruby-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Awesome Machine Learning with Ruby](https://github.com/arbox/machine-learning-with-ruby) - Curated list of ML related resources for Ruby.
* [Ruby Machine Learning](https://github.com/tsycho/ruby-machine-learning) - Some Machine Learning algorithms, implemented in Ruby. **[Deprecated]**
* [Machine Learning Ruby](https://github.com/mizoR/machine-learning-ruby) **[Deprecated]**
* [jRuby Mahout](https://github.com/vasinov/jruby_mahout) - JRuby Mahout is a gem that unleashes the power of Apache Mahout in the world of JRuby. **[Deprecated]**
* [CardMagic-Classifier](https://github.com/cardmagic/classifier) - A general classifier module to allow Bayesian and other types of classifications.
* [rb-libsvm](https://github.com/febeling/rb-libsvm) - Ruby language bindings for LIBSVM which is a Library for Support Vector Machines.
* [Scoruby](https://github.com/asafschers/scoruby) - Creates Random Forest classifiers from PMML files.
* [rumale](https://github.com/yoshoku/rumale) - Rumale is a machine learning library in Ruby

<a name=""ruby-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [rsruby](https://github.com/alexgutteridge/rsruby) - Ruby - R bridge.
* [data-visualization-ruby](https://github.com/chrislo/data_visualisation_ruby) - Source code and supporting content for my Ruby Manor presentation on Data Visualisation with Ruby. **[Deprecated]**
* [ruby-plot](https://www.ruby-toolbox.com/projects/ruby-plot) - gnuplot wrapper for Ruby, especially for plotting ROC curves into SVG files. **[Deprecated]**
* [plot-rb](https://github.com/zuhao/plotrb) - A plotting library in Ruby built on top of Vega and D3. **[Deprecated]**
* [scruffy](https://github.com/delano/scruffy) - A beautiful graphing toolkit for Ruby.
* [SciRuby](http://sciruby.com/)
* [Glean](https://github.com/glean/glean) - A data management tool for humans. **[Deprecated]**
* [Bioruby](https://github.com/bioruby/bioruby)
* [Arel](https://github.com/nkallen/arel) **[Deprecated]**

<a name=""ruby-misc""></a>
#### Misc

* [Big Data For Chimps](https://github.com/infochimps-labs/big_data_for_chimps)
* [Listof](https://github.com/kevincobain2000/listof) - Community based data collection, packed in gem. Get list of pretty much anything (stop words, countries, non words) in txt, JSON or hash. [Demo/Search for a list](http://kevincobain2000.github.io/listof/)


<a name=""rust""></a>
## Rust

<a name=""rust-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning
* [smartcore](https://github.com/smartcorelib/smartcore) - ""The Most Advanced Machine Learning Library In Rust.""
* [linfa](https://github.com/rust-ml/linfa) - a comprehensive toolkit to build Machine Learning applications with Rust
* [deeplearn-rs](https://github.com/tedsta/deeplearn-rs) - deeplearn-rs provides simple networks that use matrix multiplication, addition, and ReLU under the MIT license.
* [rustlearn](https://github.com/maciejkula/rustlearn) - a machine learning framework featuring logistic regression, support vector machines, decision trees and random forests.
* [rusty-machine](https://github.com/AtheMathmo/rusty-machine) - a pure-rust machine learning library.
* [leaf](https://github.com/autumnai/leaf) - open source framework for machine intelligence, sharing concepts from TensorFlow and Caffe. Available under the MIT license. [**[Deprecated]**](https://medium.com/@mjhirn/tensorflow-wins-89b78b29aafb#.s0a3uy4cc)
* [RustNN](https://github.com/jackm321/RustNN) - RustNN is a feedforward neural network library. **[Deprecated]**
* [RusticSOM](https://github.com/avinashshenoy97/RusticSOM) - A Rust library for Self Organising Maps (SOM).


<a name=""r""></a>
## R

<a name=""r-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [ahaz](https://cran.r-project.org/web/packages/ahaz/index.html) - ahaz: Regularization for semiparametric additive hazards regression. **[Deprecated]**
* [arules](https://cran.r-project.org/web/packages/arules/index.html) - arules: Mining Association Rules and Frequent Itemsets
* [biglasso](https://cran.r-project.org/web/packages/biglasso/index.html) - biglasso: Extending Lasso Model Fitting to Big Data in R.
* [bmrm](https://cran.r-project.org/web/packages/bmrm/index.html) - bmrm: Bundle Methods for Regularized Risk Minimization Package.
* [Boruta](https://cran.r-project.org/web/packages/Boruta/index.html) - Boruta: A wrapper algorithm for all-relevant feature selection.
* [bst](https://cran.r-project.org/web/packages/bst/index.html) - bst: Gradient Boosting.
* [C50](https://cran.r-project.org/web/packages/C50/index.html) - C50: C5.0 Decision Trees and Rule-Based Models.
* [caret](https://topepo.github.io/caret/index.html) - Classification and Regression Training: Unified interface to ~150 ML algorithms in R.
* [caretEnsemble](https://cran.r-project.org/web/packages/caretEnsemble/index.html) - caretEnsemble: Framework for fitting multiple caret models as well as creating ensembles of such models. **[Deprecated]**
* [CatBoost](https://github.com/catboost/catboost) - General purpose gradient boosting on decision trees library with categorical features support out of the box for R.
* [Clever Algorithms For Machine Learning](https://machinelearningmastery.com/)
* [CORElearn](https://cran.r-project.org/web/packages/CORElearn/index.html) - CORElearn: Classification, regression, feature evaluation and ordinal evaluation.
-* [CoxBoost](https://cran.r-project.org/web/packages/CoxBoost/index.html) - CoxBoost: Cox models by likelihood based boosting for a single survival endpoint or competing risks **[Deprecated]**
* [Cubist](https://cran.r-project.org/web/packages/Cubist/index.html) - Cubist: Rule- and Instance-Based Regression Modelling.
* [e1071](https://cran.r-project.org/web/packages/e1071/index.html) - e1071: Misc Functions of the Department of Statistics (e1071), TU Wien
* [earth](https://cran.r-project.org/web/packages/earth/index.html) - earth: Multivariate Adaptive Regression Spline Models
* [elasticnet](https://cran.r-project.org/web/packages/elasticnet/index.html) - elasticnet: Elastic-Net for Sparse Estimation and Sparse PCA.
* [ElemStatLearn](https://cran.r-project.org/web/packages/ElemStatLearn/index.html) - ElemStatLearn: Data sets, functions and examples from the book: ""The Elements of Statistical Learning, Data Mining, Inference, and Prediction"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman Prediction"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman.
* [evtree](https://cran.r-project.org/web/packages/evtree/index.html) - evtree: Evolutionary Learning of Globally Optimal Trees.
* [forecast](https://cran.r-project.org/web/packages/forecast/index.html) - forecast: Timeseries forecasting using ARIMA, ETS, STLM, TBATS, and neural network models.
* [forecastHybrid](https://cran.r-project.org/web/packages/forecastHybrid/index.html) - forecastHybrid: Automatic ensemble and cross validation of ARIMA, ETS, STLM, TBATS, and neural network models from the ""forecast"" package.
* [fpc](https://cran.r-project.org/web/packages/fpc/index.html) - fpc: Flexible procedures for clustering.
* [frbs](https://cran.r-project.org/web/packages/frbs/index.html) - frbs: Fuzzy Rule-based Systems for Classification and Regression Tasks. **[Deprecated]**
* [GAMBoost](https://cran.r-project.org/web/packages/GAMBoost/index.html) - GAMBoost: Generalized linear and additive models by likelihood based boosting. **[Deprecated]**
* [gamboostLSS](https://cran.r-project.org/web/packages/gamboostLSS/index.html) - gamboostLSS: Boosting Methods for GAMLSS.
* [gbm](https://cran.r-project.org/web/packages/gbm/index.html) - gbm: Generalized Boosted Regression Models.
* [glmnet](https://cran.r-project.org/web/packages/glmnet/index.html) - glmnet: Lasso and elastic-net regularized generalized linear models.
* [glmpath](https://cran.r-project.org/web/packages/glmpath/index.html) - glmpath: L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model.
* [GMMBoost](https://cran.r-project.org/web/packages/GMMBoost/index.html) - GMMBoost: Likelihood-based Boosting for Generalized mixed models. **[Deprecated]**
* [grplasso](https://cran.r-project.org/web/packages/grplasso/index.html) - grplasso: Fitting user specified models with Group Lasso penalty.
* [grpreg](https://cran.r-project.org/web/packages/grpreg/index.html) - grpreg: Regularization paths for regression models with grouped covariates.
* [h2o](https://cran.r-project.org/web/packages/h2o/index.html) - A framework for fast, parallel, and distributed machine learning algorithms at scale -- Deeplearning, Random forests, GBM, KMeans, PCA, GLM.
* [hda](https://cran.r-project.org/web/packages/hda/index.html) - hda: Heteroscedastic Discriminant Analysis. **[Deprecated]**
* [Introduction to Statistical Learning](https://www-bcf.usc.edu/~gareth/ISL/)
* [ipred](https://cran.r-project.org/web/packages/ipred/index.html) - ipred: Improved Predictors.
* [kernlab](https://cran.r-project.org/web/packages/kernlab/index.html) - kernlab: Kernel-based Machine Learning Lab.
* [klaR](https://cran.r-project.org/web/packages/klaR/index.html) - klaR: Classification and visualization.
* [L0Learn](https://cran.r-project.org/web/packages/L0Learn/index.html) - L0Learn: Fast algorithms for best subset selection.
* [lars](https://cran.r-project.org/web/packages/lars/index.html) - lars: Least Angle Regression, Lasso and Forward Stagewise. **[Deprecated]**
* [lasso2](https://cran.r-project.org/web/packages/lasso2/index.html) - lasso2: L1 constrained estimation aka ‘lasso’.
* [LiblineaR](https://cran.r-project.org/web/packages/LiblineaR/index.html) - LiblineaR: Linear Predictive Models Based On The Liblinear C/C++ Library.
* [LogicReg](https://cran.r-project.org/web/packages/LogicReg/index.html) - LogicReg: Logic Regression.
* [Machine Learning For Hackers](https://github.com/johnmyleswhite/ML_for_Hackers)
* [maptree](https://cran.r-project.org/web/packages/maptree/index.html) - maptree: Mapping, pruning, and graphing tree models. **[Deprecated]**
* [mboost](https://cran.r-project.org/web/packages/mboost/index.html) - mboost: Model-Based Boosting.
* [medley](https://www.kaggle.com/general/3661) - medley: Blending regression models, using a greedy stepwise approach.
* [mlr](https://cran.r-project.org/web/packages/mlr/index.html) - mlr: Machine Learning in R.
* [ncvreg](https://cran.r-project.org/web/packages/ncvreg/index.html) - ncvreg: Regularization paths for SCAD- and MCP-penalized regression models.
* [nnet](https://cran.r-project.org/web/packages/nnet/index.html) - nnet: Feed-forward Neural Networks and Multinomial Log-Linear Models. **[Deprecated]**
* [pamr](https://cran.r-project.org/web/packages/pamr/index.html) - pamr: Pam: prediction analysis for microarrays. **[Deprecated]**
* [party](https://cran.r-project.org/web/packages/party/index.html) - party: A Laboratory for Recursive Partitioning
* [partykit](https://cran.r-project.org/web/packages/partykit/index.html) - partykit: A Toolkit for Recursive Partitioning.
* [penalized](https://cran.r-project.org/web/packages/penalized/index.html) - penalized: L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model.
* [penalizedLDA](https://cran.r-project.org/web/packages/penalizedLDA/index.html) - penalizedLDA: Penalized classification using Fisher's linear discriminant. **[Deprecated]**
* [penalizedSVM](https://cran.r-project.org/web/packages/penalizedSVM/index.html) - penalizedSVM: Feature Selection SVM using penalty functions.
* [quantregForest](https://cran.r-project.org/web/packages/quantregForest/index.html) - quantregForest: Quantile Regression Forests.
* [randomForest](https://cran.r-project.org/web/packages/randomForest/index.html) - randomForest: Breiman and Cutler's random forests for classification and regression.
* [randomForestSRC](https://cran.r-project.org/web/packages/randomForestSRC/index.html) - randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC).
* [rattle](https://cran.r-project.org/web/packages/rattle/index.html) - rattle: Graphical user interface for data mining in R.
* [rda](https://cran.r-project.org/web/packages/rda/index.html) - rda: Shrunken Centroids Regularized Discriminant Analysis.
* [rdetools](https://cran.r-project.org/web/packages/rdetools/index.html) - rdetools: Relevant Dimension Estimation (RDE) in Feature Spaces. **[Deprecated]**
* [REEMtree](https://cran.r-project.org/web/packages/REEMtree/index.html) - REEMtree: Regression Trees with Random Effects for Longitudinal (Panel) Data. **[Deprecated]**
* [relaxo](https://cran.r-project.org/web/packages/relaxo/index.html) - relaxo: Relaxed Lasso. **[Deprecated]**
* [rgenoud](https://cran.r-project.org/web/packages/rgenoud/index.html) - rgenoud: R version of GENetic Optimization Using Derivatives
* [Rmalschains](https://cran.r-project.org/web/packages/Rmalschains/index.html) - Rmalschains: Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R.
* [rminer](https://cran.r-project.org/web/packages/rminer/index.html) - rminer: Simpler use of data mining methods (e.g. NN and SVM) in classification and regression. **[Deprecated]**
* [ROCR](https://cran.r-project.org/web/packages/ROCR/index.html) - ROCR: Visualizing the performance of scoring classifiers. **[Deprecated]**
* [RoughSets](https://cran.r-project.org/web/packages/RoughSets/index.html) - RoughSets: Data Analysis Using Rough Set and Fuzzy Rough Set Theories. **[Deprecated]**
* [rpart](https://cran.r-project.org/web/packages/rpart/index.html) - rpart: Recursive Partitioning and Regression Trees.
* [RPMM](https://cran.r-project.org/web/packages/RPMM/index.html) - RPMM: Recursively Partitioned Mixture Model.
* [RSNNS](https://cran.r-project.org/web/packages/RSNNS/index.html) - RSNNS: Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS).
* [RWeka](https://cran.r-project.org/web/packages/RWeka/index.html) - RWeka: R/Weka interface.
* [RXshrink](https://cran.r-project.org/web/packages/RXshrink/index.html) - RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression.
* [sda](https://cran.r-project.org/web/packages/sda/index.html) - sda: Shrinkage Discriminant Analysis and CAT Score Variable Selection. **[Deprecated]**
* [spectralGraphTopology](https://cran.r-project.org/web/packages/spectralGraphTopology/index.html) - spectralGraphTopology: Learning Graphs from Data via Spectral Constraints.
* [SuperLearner](https://github.com/ecpolley/SuperLearner) - Multi-algorithm ensemble learning packages.
* [svmpath](https://cran.r-project.org/web/packages/svmpath/index.html) - svmpath: svmpath: the SVM Path algorithm. **[Deprecated]**
* [tgp](https://cran.r-project.org/web/packages/tgp/index.html) - tgp: Bayesian treed Gaussian process models. **[Deprecated]**
* [tree](https://cran.r-project.org/web/packages/tree/index.html) - tree: Classification and regression trees.
* [varSelRF](https://cran.r-project.org/web/packages/varSelRF/index.html) - varSelRF: Variable selection using random forests.
* [XGBoost.R](https://github.com/tqchen/xgboost/tree/master/R-package) - R binding for eXtreme Gradient Boosting (Tree) Library.
* [Optunity](https://optunity.readthedocs.io/en/latest/) - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly to R.
* [igraph](https://igraph.org/r/) - binding to igraph library - General purpose graph library.
* [MXNet](https://github.com/apache/incubator-mxnet) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.
* [TDSP-Utilities](https://github.com/Azure/Azure-TDSP-Utilities) - Two data science utilities in R from Microsoft: 1) Interactive Data Exploration, Analysis, and Reporting (IDEAR) ; 2) Automated Modelling and Reporting (AMR).

<a name=""r-data-analysis--data-visualization""></a>
#### Data Manipulation | Data Analysis | Data Visualization

* [dplyr](https://www.rdocumentation.org/packages/dplyr/versions/0.7.8) - A data manipulation package that helps to solve the most common data manipulation problems.
* [ggplot2](https://ggplot2.tidyverse.org/) - A data visualization package based on the grammar of graphics.
* [tmap](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html) for visualizing geospatial data with static maps and [leaflet](https://rstudio.github.io/leaflet/) for interactive maps
* [tm](https://www.rdocumentation.org/packages/tm/) and [quanteda](https://quanteda.io/) are the main packages for managing,  analyzing, and visualizing textual data.
* [shiny](https://shiny.rstudio.com/) is the basis for truly interactive displays and dashboards in R. However, some measure of interactivity can be achieved with [htmlwidgets](https://www.htmlwidgets.org/) bringing javascript libraries to R. These include, [plotly](https://plot.ly/r/), [dygraphs](http://rstudio.github.io/dygraphs), [highcharter](http://jkunst.com/highcharter/), and several others.

<a name=""sas""></a>
## SAS

<a name=""sas-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Visual Data Mining and Machine Learning](https://www.sas.com/en_us/software/visual-data-mining-machine-learning.html) - Interactive, automated, and programmatic modelling with the latest machine learning algorithms in and end-to-end analytics environment, from data prep to deployment. Free trial available.
* [Enterprise Miner](https://www.sas.com/en_us/software/enterprise-miner.html) - Data mining and machine learning that creates deployable models using a GUI or code.
* [Factory Miner](https://www.sas.com/en_us/software/factory-miner.html) - Automatically creates deployable machine learning models across numerous market or customer segments using a GUI.

<a name=""sas-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [SAS/STAT](https://www.sas.com/en_us/software/stat.html) - For conducting advanced statistical analysis.
* [University Edition](https://www.sas.com/en_us/software/university-edition.html) - FREE! Includes all SAS packages necessary for data analysis and visualization, and includes online SAS courses.

<a name=""sas-natural-language-processing""></a>
#### Natural Language Processing

* [Contextual Analysis](https://www.sas.com/en_us/software/contextual-analysis.html) - Add structure to unstructured text using a GUI.
* [Sentiment Analysis](https://www.sas.com/en_us/software/sentiment-analysis.html) - Extract sentiment from text using a GUI.
* [Text Miner](https://www.sas.com/en_us/software/text-miner.html) - Text mining using a GUI or code.

<a name=""sas-demos-and-scripts""></a>
#### Demos and Scripts

* [ML_Tables](https://github.com/sassoftware/enlighten-apply/tree/master/ML_tables) - Concise cheat sheets containing machine learning best practices.
* [enlighten-apply](https://github.com/sassoftware/enlighten-apply) - Example code and materials that illustrate applications of SAS machine learning techniques.
* [enlighten-integration](https://github.com/sassoftware/enlighten-integration) - Example code and materials that illustrate techniques for integrating SAS with other analytics technologies in Java, PMML, Python and R.
* [enlighten-deep](https://github.com/sassoftware/enlighten-deep) - Example code and materials that illustrate using neural networks with several hidden layers in SAS.
* [dm-flow](https://github.com/sassoftware/dm-flow) - Library of SAS Enterprise Miner process flow diagrams to help you learn by example about specific data mining topics.


<a name=""scala""></a>
## Scala

<a name=""scala-natural-language-processing""></a>
#### Natural Language Processing

* [ScalaNLP](http://www.scalanlp.org/) - ScalaNLP is a suite of machine learning and numerical computing libraries.
* [Breeze](https://github.com/scalanlp/breeze) - Breeze is a numerical processing library for Scala.
* [Chalk](https://github.com/scalanlp/chalk) - Chalk is a natural language processing library. **[Deprecated]**
* [FACTORIE](https://github.com/factorie/factorie) - FACTORIE is a toolkit for deployable probabilistic modelling, implemented as a software library in Scala. It provides its users with a succinct language for creating relational factor graphs, estimating parameters and performing inference.
* [Montague](https://github.com/Workday/upshot-montague) - Montague is a semantic parsing library for Scala with an easy-to-use DSL.
* [Spark NLP](https://github.com/JohnSnowLabs/spark-nlp) - Natural language processing library built on top of Apache Spark ML to provide simple, performant, and accurate NLP annotations for machine learning pipelines, that scale easily in a distributed environment.

<a name=""scala-data-analysis--data-visualization""></a>
#### Data Analysis / Data Visualization

* [NDScala](https://github.com/SciScala/NDScala) - N-dimensional arrays in Scala 3. Think NumPy ndarray, but with compile-time type-checking/inference over shapes, tensor/axis labels & numeric data types
* [MLlib in Apache Spark](https://spark.apache.org/docs/latest/mllib-guide.html) - Distributed machine learning library in Spark
* [Hydrosphere Mist](https://github.com/Hydrospheredata/mist) - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.
* [Scalding](https://github.com/twitter/scalding) - A Scala API for Cascading.
* [Summing Bird](https://github.com/twitter/summingbird) - Streaming MapReduce with Scalding and Storm.
* [Algebird](https://github.com/twitter/algebird) - Abstract Algebra for Scala.
* [xerial](https://github.com/xerial/xerial) - Data management utilities for Scala. **[Deprecated]**
* [PredictionIO](https://github.com/apache/predictionio) - PredictionIO, a machine learning server for software developers and data engineers.
* [BIDMat](https://github.com/BIDData/BIDMat) - CPU and GPU-accelerated matrix library intended to support large-scale exploratory data analysis.
* [Flink](https://flink.apache.org/) - Open source platform for distributed stream and batch data processing.
* [Spark Notebook](http://spark-notebook.io) - Interactive and Reactive Data Science using Scala and Spark.

<a name=""scala-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Microsoft ML for Apache Spark](https://github.com/Azure/mmlspark) -> A distributed machine learning framework Apache Spark
* [ONNX-Scala](https://github.com/EmergentOrder/onnx-scala) - An ONNX (Open Neural Network eXchange) API and backend for typeful, functional deep learning in Scala (3).
* [DeepLearning.scala](https://deeplearning.thoughtworks.school/) - Creating statically typed dynamic neural networks from object-oriented & functional programming constructs.
* [Conjecture](https://github.com/etsy/Conjecture) - Scalable Machine Learning in Scalding.
* [brushfire](https://github.com/stripe/brushfire) - Distributed decision tree ensemble learning in Scala.
* [ganitha](https://github.com/tresata/ganitha) - Scalding powered machine learning. **[Deprecated]**
* [adam](https://github.com/bigdatagenomics/adam) - A genomics processing engine and specialized file format built using Apache Avro, Apache Spark and Parquet. Apache 2 licensed.
* [bioscala](https://github.com/bioscala/bioscala) - Bioinformatics for the Scala programming language
* [BIDMach](https://github.com/BIDData/BIDMach) - CPU and GPU-accelerated Machine Learning Library.
* [Figaro](https://github.com/p2t2/figaro) - a Scala library for constructing probabilistic models.
* [H2O Sparkling Water](https://github.com/h2oai/sparkling-water) - H2O and Spark interoperability.
* [FlinkML in Apache Flink](https://ci.apache.org/projects/flink/flink-docs-master/dev/libs/ml/index.html) - Distributed machine learning library in Flink.
* [DynaML](https://github.com/transcendent-ai-labs/DynaML) - Scala Library/REPL for Machine Learning Research.
* [Saul](https://github.com/CogComp/saul) - Flexible Declarative Learning-Based Programming.
* [SwiftLearner](https://github.com/valdanylchuk/swiftlearner/) - Simply written algorithms to help study ML or write your own implementations.
* [Smile](https://haifengl.github.io/) - Statistical Machine Intelligence and Learning Engine.
* [doddle-model](https://github.com/picnicml/doddle-model) - An in-memory machine learning library built on top of Breeze. It provides immutable objects and exposes its functionality through a scikit-learn-like API.
* [TensorFlow Scala](https://github.com/eaplatanios/tensorflow_scala) -   Strongly-typed Scala API for TensorFlow.

<a name=""scheme""></a>
## Scheme

<a name=""scheme-neural-networks""></a>
#### Neural Networks

* [layer](https://github.com/cloudkj/layer) - Neural network inference from the command line, implemented in [CHICKEN Scheme](https://www.call-cc.org/).

<a name=""swift""></a>
## Swift

<a name=""swift-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning

* [Bender](https://github.com/xmartlabs/Bender) - Fast Neural Networks framework built on top of Metal. Supports TensorFlow models.
* [Swift AI](https://github.com/Swift-AI/Swift-AI) - Highly optimized artificial intelligence and machine learning library written in Swift.
* [Swift for Tensorflow](https://github.com/tensorflow/swift) - a next-generation platform for machine learning, incorporating the latest research across machine learning, compilers, differentiable programming, systems design, and beyond.
* [BrainCore](https://github.com/alejandro-isaza/BrainCore) - The iOS and OS X neural network framework.
* [swix](https://github.com/stsievert/swix) - A bare bones library that includes a general matrix language and wraps some OpenCV for iOS development. **[Deprecated]**
* [AIToolbox](https://github.com/KevinCoble/AIToolbox) - A toolbox framework of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.
* [MLKit](https://github.com/Somnibyte/MLKit) - A simple Machine Learning Framework written in Swift. Currently features Simple Linear Regression, Polynomial Regression, and Ridge Regression.
* [Swift Brain](https://github.com/vlall/Swift-Brain) - The first neural network / machine learning library written in Swift. This is a project for AI algorithms in Swift for iOS and OS X development. This project includes algorithms focused on Bayes theorem, neural networks, SVMs, Matrices, etc...
* [Perfect TensorFlow](https://github.com/PerfectlySoft/Perfect-TensorFlow) - Swift Language Bindings of TensorFlow. Using native TensorFlow models on both macOS / Linux.
* [PredictionBuilder](https://github.com/denissimon/prediction-builder-swift) - A library for machine learning that builds predictions using a linear regression.
* [Awesome CoreML](https://github.com/SwiftBrain/awesome-CoreML-models) - A curated list of pretrained CoreML models.
* [Awesome Core ML Models](https://github.com/likedan/Awesome-CoreML-Models) - A curated list of machine learning models in CoreML format.

<a name=""tensorflow""></a>
## TensorFlow

<a name=""tensorflow-general-purpose-machine-learning""></a>
#### General-Purpose Machine Learning
* [Awesome Keras](https://github.com/markusschanta/awesome-keras) - A curated list of awesome Keras projects, libraries and resources.
* [Awesome TensorFlow](https://github.com/jtoy/awesome-tensorflow) - A list of all things related to TensorFlow.
* [Golden TensorFlow](https://golden.com/wiki/TensorFlow) - A page of content on TensorFlow, including academic papers and links to related topics.

<a name=""tools""></a>
## Tools

<a name=""tools-neural-networks""></a>
#### Neural Networks
* [layer](https://github.com/cloudkj/layer) - Neural network inference from the command line

<a name=""tools-misc""></a>
#### Misc

* [Humanloop](https://humanloop.com) – Humanloop is a platform for prompt experimentation, finetuning models for better performance, cost optimization, and collecting model generated data and user feedback.
* [Qdrant](https://qdrant.tech) – Qdrant is [open source](https://github.com/qdrant/qdrant) vector similarity search engine with extended filtering support, written in Rust.
* [milvus](https://milvus.io) – Milvus is [open source](https://github.com/milvus-io/milvus) vector database for production AI, written in Go and C++, scalable and blazing fast for billions of embedding vectors.
* [Weaviate](https://www.semi.technology/developers/weaviate/current/) – Weaviate is an [open source](https://github.com/semi-technologies/weaviate) vector search engine and vector database. Weaviate uses machine learning to vectorize and store data, and to find answers to natural language queries. With Weaviate you can also bring your custom ML models to production scale.
* [txtai](https://github.com/neuml/txtai) - Build semantic search applications and workflows.
* [MLReef](https://about.mlreef.com/) - MLReef is an end-to-end development platform using the power of git to give structure and deep collaboration possibilities to the ML development process.
* [Pinecone](https://www.pinecone.io/) - Vector database for applications that require real-time, scalable vector embedding and similarity search.
* [CatalyzeX](https://chrome.google.com/webstore/detail/code-finder-for-research/aikkeehnlfpamidigaffhfmgbkdeheil) - Browser extension ([Chrome](https://chrome.google.com/webstore/detail/code-finder-for-research/aikkeehnlfpamidigaffhfmgbkdeheil) and [Firefox](https://addons.mozilla.org/en-US/firefox/addon/code-finder-catalyzex/)) that automatically finds and shows code implementations for machine learning papers anywhere: Google, Twitter, Arxiv, Scholar, etc.
* [ML Workspace](https://github.com/ml-tooling/ml-workspace) - All-in-one web-based IDE for machine learning and data science. The workspace is deployed as a docker container and is preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch) and dev tools (e.g., Jupyter, VS Code).
* [Notebooks](https://github.com/rlan/notebooks) - A starter kit for Jupyter notebooks and machine learning. Companion docker images consist of all combinations of python versions, machine learning frameworks (Keras, PyTorch and Tensorflow) and CPU/CUDA versions.
* [DVC](https://github.com/iterative/dvc) - Data Science Version Control is an open-source version control system for machine learning projects with pipelines support. It makes ML projects reproducible and shareable.
* [DVClive](https://github.com/iterative/dvclive) - Python library for experiment metrics logging into simply formatted local files.
* [VDP](https://github.com/instill-ai/vdp) - open source visual data ETL to streamline the end-to-end visual data processing pipeline: extract unstructured visual data from pre-built data sources, transform it into analysable structured insights by Vision AI models imported from various ML platforms, and load the insights into warehouses or applications.
* [Kedro](https://github.com/quantumblacklabs/kedro/) - Kedro is a data and development workflow framework that implements best practices for data pipelines with an eye towards productionizing machine learning models.
* [guild.ai](https://guild.ai/) - Tool to log, analyze, compare and ""optimize"" experiments. It's cross-platform and framework independent, and provided integrated visualizers such as tensorboard.
* [Sacred](https://github.com/IDSIA/sacred) - Python tool to help  you configure, organize, log and reproduce experiments. Like a notebook lab in the context of Chemistry/Biology. The community has built multiple add-ons leveraging the proposed standard.
* [Comet](https://www.comet.com/) -  ML platform for tracking experiments, hyper-parameters, artifacts and more. It's deeply integrated with over 15+ deep learning frameworks and orchestration tools. Users can also use the platform to monitor their models in production.
* [MLFlow](https://mlflow.org/) - platform to manage the ML lifecycle, including experimentation, reproducibility and deployment. Framework and language agnostic, take a look at all the built-in integrations.
* [Weights & Biases](https://www.wandb.com/) - Machine learning experiment tracking, dataset versioning, hyperparameter search, visualization, and collaboration
* More tools to improve the ML lifecycle: [Catalyst](https://github.com/catalyst-team/catalyst), [PachydermIO](https://www.pachyderm.io/). The following are GitHub-alike and targeting teams [Weights & Biases](https://www.wandb.com/), [Neptune.ai](https://neptune.ai/), [Comet.ml](https://www.comet.ml/), [Valohai.ai](https://valohai.com/), [DAGsHub](https://DAGsHub.com/).
* [Arize AI](https://www.arize.com) - Model validaiton and performance monitoring, drift detection, explainability, visualization across structured and unstructured data
* [MachineLearningWithTensorFlow2ed](https://www.manning.com/books/machine-learning-with-tensorflow-second-edition) - a book on general purpose machine learning techniques regression, classification, unsupervised clustering, reinforcement learning, auto encoders, convolutional neural networks, RNNs, LSTMs, using TensorFlow 1.14.1.
* [m2cgen](https://github.com/BayesWitnesses/m2cgen) - A tool that allows the conversion of ML models into native code (Java, C, Python, Go, JavaScript, Visual Basic, C#, R, PowerShell, PHP, Dart) with zero dependencies.
* [CML](https://github.com/iterative/cml) - A library for doing continuous integration with ML projects. Use GitHub Actions & GitLab CI to train and evaluate models in production like environments and automatically generate visual reports with metrics and graphs in pull/merge requests. Framework & language agnostic.
* [Pythonizr](https://pythonizr.com) - An online tool to generate boilerplate machine learning code that uses scikit-learn.
* [Flyte](https://flyte.org/) - Flyte makes it easy to create concurrent, scalable, and maintainable workflows for machine learning and data processing.
* [Chaos Genius](https://github.com/chaos-genius/chaos_genius/) - ML powered analytics engine for outlier/anomaly detection and root cause analysis.
* [MLEM](https://github.com/iterative/mlem) - Version and deploy your ML models following GitOps principles
* [DockerDL](https://github.com/matifali/dockerdl) - Ready to use deeplearning docker images.
* [Aqueduct](https://github.com/aqueducthq/aqueduct) - Aqueduct enables you to easily define, run, and manage AI & ML tasks on any cloud infrastructure.

<a name=""books""></a>
## Books

* [Distributed Machine Learning Patterns](https://github.com/terrytangyuan/distributed-ml-patterns)  - This book teaches you how to take machine learning models from your personal laptop to large distributed clusters. You’ll explore key concepts and patterns behind successful distributed machine learning systems, and learn technologies like TensorFlow, Kubernetes, Kubeflow, and Argo Workflows directly from a key maintainer and contributor, with real-world scenarios and hands-on projects.
* [Grokking Machine Learning](https://www.manning.com/books/grokking-machine-learning) - Grokking Machine Learning teaches you how to apply ML to your projects using only standard Python code and high school-level math.
* [Machine Learning Bookcamp](https://www.manning.com/books/machine-learning-bookcamp) - Learn the essentials of machine learning by completing a carefully designed set of real-world projects.
* [Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow](https://www.amazon.com/Hands-Machine-Learning-Scikit-Learn-TensorFlow/dp/1098125975) - Through a recent series of breakthroughs, deep learning has boosted the entire field of machine learning. Now, even programmers who know close to nothing about this technology can use simple, efficient tools to implement programs capable of learning from data. This bestselling book uses concrete examples, minimal theory, and production-ready Python frameworks (Scikit-Learn, Keras, and TensorFlow) to help you gain an intuitive understanding of the concepts and tools for building intelligent systems.


<a name=""credits""></a>
* [Netron](https://netron.app/) - An opensource viewer for neural network, deep learning and machine learning models
* [Teachable Machine](https://teachablemachine.withgoogle.com/) - Train Machine Learning models on the fly to recognize your own images, sounds, & poses.
* [Model Zoo](https://modelzoo.co/) - Discover open source deep learning code and pretrained models.

## Credits

* Some of the python libraries were cut-and-pasted from [vinta](https://github.com/vinta/awesome-python)
* References for Go were mostly cut-and-pasted from [gopherdata](https://github.com/gopherdata/resources/tree/master/tooling)
"
ultralytics/yolov5,Python,"<div align=""center"">
  <p>
    <a align=""center"" href=""https://ultralytics.com/yolov5"" target=""_blank"">
      <img width=""100%"" src=""https://raw.githubusercontent.com/ultralytics/assets/main/yolov5/v70/splash.png""></a>
  </p>

[English](README.md) | [简体中文](README.zh-CN.md)
<br>

<div>
    <a href=""https://github.com/ultralytics/yolov5/actions/workflows/ci-testing.yml""><img src=""https://github.com/ultralytics/yolov5/actions/workflows/ci-testing.yml/badge.svg"" alt=""YOLOv5 CI""></a>
    <a href=""https://zenodo.org/badge/latestdoi/264818686""><img src=""https://zenodo.org/badge/264818686.svg"" alt=""YOLOv5 Citation""></a>
    <a href=""https://hub.docker.com/r/ultralytics/yolov5""><img src=""https://img.shields.io/docker/pulls/ultralytics/yolov5?logo=docker"" alt=""Docker Pulls""></a>
    <br>
    <a href=""https://bit.ly/yolov5-paperspace-notebook""><img src=""https://assets.paperspace.io/img/gradient-badge.svg"" alt=""Run on Gradient""></a>
    <a href=""https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb""><img src=""https://colab.research.google.com/assets/colab-badge.svg"" alt=""Open In Colab""></a>
    <a href=""https://www.kaggle.com/ultralytics/yolov5""><img src=""https://kaggle.com/static/images/open-in-kaggle.svg"" alt=""Open In Kaggle""></a>
  </div>
  <br>

YOLOv5 🚀 is the world's most loved vision AI, representing <a href=""https://ultralytics.com"">Ultralytics</a> open-source research into future vision AI methods, incorporating lessons learned and best practices evolved over thousands of hours of research and development.

We hope that the resources here will help you get the most out of YOLOv5. Please browse the YOLOv5 <a href=""https://docs.ultralytics.com/yolov5"">Docs</a> for details, raise an issue on <a href=""https://github.com/ultralytics/yolov5/issues/new/choose"">GitHub</a> for support, and join our <a href=""https://discord.gg/n6cFeSPZdD"">Discord</a> community for questions and discussions!

To request an Enterprise License please complete the form at [Ultralytics Licensing](https://ultralytics.com/license).

<div align=""center"">
  <a href=""https://github.com/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png"" width=""2%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""2%"" alt="""" />
  <a href=""https://www.linkedin.com/company/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png"" width=""2%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""2%"" alt="""" />
  <a href=""https://twitter.com/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png"" width=""2%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""2%"" alt="""" />
  <a href=""https://youtube.com/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png"" width=""2%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""2%"" alt="""" />
  <a href=""https://www.tiktok.com/@ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png"" width=""2%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""2%"" alt="""" />
  <a href=""https://www.instagram.com/ultralytics/"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-instagram.png"" width=""2%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""2%"" alt="""" />
  <a href=""https://discord.gg/n6cFeSPZdD"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/blob/main/social/logo-social-discord.png"" width=""2%"" alt="""" /></a>
</div>

</div>
<br>

## <div align=""center"">YOLOv8 🚀 NEW</div>

We are thrilled to announce the launch of Ultralytics YOLOv8 🚀, our NEW cutting-edge, state-of-the-art (SOTA) model
released at **[https://github.com/ultralytics/ultralytics](https://github.com/ultralytics/ultralytics)**.
YOLOv8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of
object detection, image segmentation and image classification tasks.

See the [YOLOv8 Docs](https://docs.ultralytics.com) for details and get started with:

```commandline
pip install ultralytics
```

<div align=""center"">
  <a href=""https://ultralytics.com/yolov8"" target=""_blank"">
  <img width=""100%"" src=""https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/yolo-comparison-plots.png""></a>
</div>

## <div align=""center"">Documentation</div>

See the [YOLOv5 Docs](https://docs.ultralytics.com/yolov5) for full documentation on training, testing and deployment. See below for quickstart examples.

<details open>
<summary>Install</summary>

Clone repo and install [requirements.txt](https://github.com/ultralytics/yolov5/blob/master/requirements.txt) in a
[**Python>=3.7.0**](https://www.python.org/) environment, including
[**PyTorch>=1.7**](https://pytorch.org/get-started/locally/).

```bash
git clone https://github.com/ultralytics/yolov5  # clone
cd yolov5
pip install -r requirements.txt  # install
```

</details>

<details>
<summary>Inference</summary>

YOLOv5 [PyTorch Hub](https://docs.ultralytics.com/yolov5/tutorials/pytorch_hub_model_loading) inference. [Models](https://github.com/ultralytics/yolov5/tree/master/models) download automatically from the latest
YOLOv5 [release](https://github.com/ultralytics/yolov5/releases).

```python
import torch

# Model
model = torch.hub.load(""ultralytics/yolov5"", ""yolov5s"")  # or yolov5n - yolov5x6, custom

# Images
img = ""https://ultralytics.com/images/zidane.jpg""  # or file, Path, PIL, OpenCV, numpy, list

# Inference
results = model(img)

# Results
results.print()  # or .show(), .save(), .crop(), .pandas(), etc.
```

</details>

<details>
<summary>Inference with detect.py</summary>

`detect.py` runs inference on a variety of sources, downloading [models](https://github.com/ultralytics/yolov5/tree/master/models) automatically from
the latest YOLOv5 [release](https://github.com/ultralytics/yolov5/releases) and saving results to `runs/detect`.

```bash
python detect.py --weights yolov5s.pt --source 0                               # webcam
                                               img.jpg                         # image
                                               vid.mp4                         # video
                                               screen                          # screenshot
                                               path/                           # directory
                                               list.txt                        # list of images
                                               list.streams                    # list of streams
                                               'path/*.jpg'                    # glob
                                               'https://youtu.be/Zgi9g1ksQHc'  # YouTube
                                               'rtsp://example.com/media.mp4'  # RTSP, RTMP, HTTP stream
```

</details>

<details>
<summary>Training</summary>

The commands below reproduce YOLOv5 [COCO](https://github.com/ultralytics/yolov5/blob/master/data/scripts/get_coco.sh)
results. [Models](https://github.com/ultralytics/yolov5/tree/master/models)
and [datasets](https://github.com/ultralytics/yolov5/tree/master/data) download automatically from the latest
YOLOv5 [release](https://github.com/ultralytics/yolov5/releases). Training times for YOLOv5n/s/m/l/x are
1/2/4/6/8 days on a V100 GPU ([Multi-GPU](https://docs.ultralytics.com/yolov5/tutorials/multi_gpu_training) times faster). Use the
largest `--batch-size` possible, or pass `--batch-size -1` for
YOLOv5 [AutoBatch](https://github.com/ultralytics/yolov5/pull/5092). Batch sizes shown for V100-16GB.

```bash
python train.py --data coco.yaml --epochs 300 --weights '' --cfg yolov5n.yaml  --batch-size 128
                                                                 yolov5s                    64
                                                                 yolov5m                    40
                                                                 yolov5l                    24
                                                                 yolov5x                    16
```

<img width=""800"" src=""https://user-images.githubusercontent.com/26833433/90222759-949d8800-ddc1-11ea-9fa1-1c97eed2b963.png"">

</details>

<details open>
<summary>Tutorials</summary>

- [Train Custom Data](https://docs.ultralytics.com/yolov5/tutorials/train_custom_data) 🚀 RECOMMENDED
- [Tips for Best Training Results](https://docs.ultralytics.com/yolov5/tutorials/tips_for_best_training_results) ☘️
- [Multi-GPU Training](https://docs.ultralytics.com/yolov5/tutorials/multi_gpu_training)
- [PyTorch Hub](https://docs.ultralytics.com/yolov5/tutorials/pytorch_hub_model_loading) 🌟 NEW
- [TFLite, ONNX, CoreML, TensorRT Export](https://docs.ultralytics.com/yolov5/tutorials/model_export) 🚀
- [NVIDIA Jetson platform Deployment](https://docs.ultralytics.com/yolov5/tutorials/running_on_jetson_nano) 🌟 NEW
- [Test-Time Augmentation (TTA)](https://docs.ultralytics.com/yolov5/tutorials/test_time_augmentation)
- [Model Ensembling](https://docs.ultralytics.com/yolov5/tutorials/model_ensembling)
- [Model Pruning/Sparsity](https://docs.ultralytics.com/yolov5/tutorials/model_pruning_and_sparsity)
- [Hyperparameter Evolution](https://docs.ultralytics.com/yolov5/tutorials/hyperparameter_evolution)
- [Transfer Learning with Frozen Layers](https://docs.ultralytics.com/yolov5/tutorials/transfer_learning_with_frozen_layers)
- [Architecture Summary](https://docs.ultralytics.com/yolov5/tutorials/architecture_description) 🌟 NEW
- [Roboflow for Datasets, Labeling, and Active Learning](https://docs.ultralytics.com/yolov5/tutorials/roboflow_datasets_integration)
- [ClearML Logging](https://docs.ultralytics.com/yolov5/tutorials/clearml_logging_integration) 🌟 NEW
- [YOLOv5 with Neural Magic's Deepsparse](https://docs.ultralytics.com/yolov5/tutorials/neural_magic_pruning_quantization) 🌟 NEW
- [Comet Logging](https://docs.ultralytics.com/yolov5/tutorials/comet_logging_integration) 🌟 NEW

</details>

## <div align=""center"">Integrations</div>

<br>
<a align=""center"" href=""https://bit.ly/ultralytics_hub"" target=""_blank"">
<img width=""100%"" src=""https://github.com/ultralytics/assets/raw/main/im/integrations-loop.png""></a>
<br>
<br>

<div align=""center"">
  <a href=""https://roboflow.com/?ref=ultralytics"">
    <img src=""https://github.com/ultralytics/assets/raw/main/partners/logo-roboflow.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""15%"" height=""0"" alt="""" />
  <a href=""https://cutt.ly/yolov5-readme-clearml"">
    <img src=""https://github.com/ultralytics/assets/raw/main/partners/logo-clearml.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""15%"" height=""0"" alt="""" />
  <a href=""https://bit.ly/yolov5-readme-comet2"">
    <img src=""https://github.com/ultralytics/assets/raw/main/partners/logo-comet.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""15%"" height=""0"" alt="""" />
  <a href=""https://bit.ly/yolov5-neuralmagic"">
    <img src=""https://github.com/ultralytics/assets/raw/main/partners/logo-neuralmagic.png"" width=""10%"" /></a>
</div>

|                                                           Roboflow                                                           |                                                            ClearML ⭐ NEW                                                            |                                                                        Comet ⭐ NEW                                                                         |                                           Neural Magic ⭐ NEW                                           |
| :--------------------------------------------------------------------------------------------------------------------------: | :---------------------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------: |
| Label and export your custom datasets directly to YOLOv5 for training with [Roboflow](https://roboflow.com/?ref=ultralytics) | Automatically track, visualize and even remotely train YOLOv5 using [ClearML](https://cutt.ly/yolov5-readme-clearml) (open-source!) | Free forever, [Comet](https://bit.ly/yolov5-readme-comet2) lets you save YOLOv5 models, resume training, and interactively visualise and debug predictions | Run YOLOv5 inference up to 6x faster with [Neural Magic DeepSparse](https://bit.ly/yolov5-neuralmagic) |

## <div align=""center"">Ultralytics HUB</div>

Experience seamless AI with [Ultralytics HUB](https://bit.ly/ultralytics_hub) ⭐, the all-in-one solution for data visualization, YOLOv5 and YOLOv8 🚀 model training and deployment, without any coding. Transform images into actionable insights and bring your AI visions to life with ease using our cutting-edge platform and user-friendly [Ultralytics App](https://ultralytics.com/app_install). Start your journey for **Free** now!

<a align=""center"" href=""https://bit.ly/ultralytics_hub"" target=""_blank"">
<img width=""100%"" src=""https://github.com/ultralytics/assets/raw/main/im/ultralytics-hub.png""></a>

## <div align=""center"">Why YOLOv5</div>

YOLOv5 has been designed to be super easy to get started and simple to learn. We prioritize real-world results.

<p align=""left""><img width=""800"" src=""https://user-images.githubusercontent.com/26833433/155040763-93c22a27-347c-4e3c-847a-8094621d3f4e.png""></p>
<details>
  <summary>YOLOv5-P5 640 Figure</summary>

<p align=""left""><img width=""800"" src=""https://user-images.githubusercontent.com/26833433/155040757-ce0934a3-06a6-43dc-a979-2edbbd69ea0e.png""></p>
</details>
<details>
  <summary>Figure Notes</summary>

- **COCO AP val** denotes mAP@0.5:0.95 metric measured on the 5000-image [COCO val2017](http://cocodataset.org) dataset over various inference sizes from 256 to 1536.
- **GPU Speed** measures average inference time per image on [COCO val2017](http://cocodataset.org) dataset using a [AWS p3.2xlarge](https://aws.amazon.com/ec2/instance-types/p3/) V100 instance at batch-size 32.
- **EfficientDet** data from [google/automl](https://github.com/google/automl) at batch size 8.
- **Reproduce** by `python val.py --task study --data coco.yaml --iou 0.7 --weights yolov5n6.pt yolov5s6.pt yolov5m6.pt yolov5l6.pt yolov5x6.pt`

</details>

### Pretrained Checkpoints

| Model                                                                                           | size<br><sup>(pixels) | mAP<sup>val<br>50-95 | mAP<sup>val<br>50 | Speed<br><sup>CPU b1<br>(ms) | Speed<br><sup>V100 b1<br>(ms) | Speed<br><sup>V100 b32<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>@640 (B) |
| ----------------------------------------------------------------------------------------------- | --------------------- | -------------------- | ----------------- | ---------------------------- | ----------------------------- | ------------------------------ | ------------------ | ---------------------- |
| [YOLOv5n](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5n.pt)              | 640                   | 28.0                 | 45.7              | **45**                       | **6.3**                       | **0.6**                        | **1.9**            | **4.5**                |
| [YOLOv5s](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s.pt)              | 640                   | 37.4                 | 56.8              | 98                           | 6.4                           | 0.9                            | 7.2                | 16.5                   |
| [YOLOv5m](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5m.pt)              | 640                   | 45.4                 | 64.1              | 224                          | 8.2                           | 1.7                            | 21.2               | 49.0                   |
| [YOLOv5l](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5l.pt)              | 640                   | 49.0                 | 67.3              | 430                          | 10.1                          | 2.7                            | 46.5               | 109.1                  |
| [YOLOv5x](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5x.pt)              | 640                   | 50.7                 | 68.9              | 766                          | 12.1                          | 4.8                            | 86.7               | 205.7                  |
|                                                                                                 |                       |                      |                   |                              |                               |                                |                    |                        |
| [YOLOv5n6](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5n6.pt)            | 1280                  | 36.0                 | 54.4              | 153                          | 8.1                           | 2.1                            | 3.2                | 4.6                    |
| [YOLOv5s6](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s6.pt)            | 1280                  | 44.8                 | 63.7              | 385                          | 8.2                           | 3.6                            | 12.6               | 16.8                   |
| [YOLOv5m6](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5m6.pt)            | 1280                  | 51.3                 | 69.3              | 887                          | 11.1                          | 6.8                            | 35.7               | 50.0                   |
| [YOLOv5l6](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5l6.pt)            | 1280                  | 53.7                 | 71.3              | 1784                         | 15.8                          | 10.5                           | 76.8               | 111.4                  |
| [YOLOv5x6](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5x6.pt)<br>+ [TTA] | 1280<br>1536          | 55.0<br>**55.8**     | 72.7<br>**72.7**  | 3136<br>-                    | 26.2<br>-                     | 19.4<br>-                      | 140.7<br>-         | 209.8<br>-             |

<details>
  <summary>Table Notes</summary>

- All checkpoints are trained to 300 epochs with default settings. Nano and Small models use [hyp.scratch-low.yaml](https://github.com/ultralytics/yolov5/blob/master/data/hyps/hyp.scratch-low.yaml) hyps, all others use [hyp.scratch-high.yaml](https://github.com/ultralytics/yolov5/blob/master/data/hyps/hyp.scratch-high.yaml).
- **mAP<sup>val</sup>** values are for single-model single-scale on [COCO val2017](http://cocodataset.org) dataset.<br>Reproduce by `python val.py --data coco.yaml --img 640 --conf 0.001 --iou 0.65`
- **Speed** averaged over COCO val images using a [AWS p3.2xlarge](https://aws.amazon.com/ec2/instance-types/p3/) instance. NMS times (~1 ms/img) not included.<br>Reproduce by `python val.py --data coco.yaml --img 640 --task speed --batch 1`
- **TTA** [Test Time Augmentation](https://docs.ultralytics.com/yolov5/tutorials/test_time_augmentation) includes reflection and scale augmentations.<br>Reproduce by `python val.py --data coco.yaml --img 1536 --iou 0.7 --augment`

</details>

## <div align=""center"">Segmentation</div>

Our new YOLOv5 [release v7.0](https://github.com/ultralytics/yolov5/releases/v7.0) instance segmentation models are the fastest and most accurate in the world, beating all current [SOTA benchmarks](https://paperswithcode.com/sota/real-time-instance-segmentation-on-mscoco). We've made them super simple to train, validate and deploy. See full details in our [Release Notes](https://github.com/ultralytics/yolov5/releases/v7.0) and visit our [YOLOv5 Segmentation Colab Notebook](https://github.com/ultralytics/yolov5/blob/master/segment/tutorial.ipynb) for quickstart tutorials.

<details>
  <summary>Segmentation Checkpoints</summary>

<div align=""center"">
<a align=""center"" href=""https://ultralytics.com/yolov5"" target=""_blank"">
<img width=""800"" src=""https://user-images.githubusercontent.com/61612323/204180385-84f3aca9-a5e9-43d8-a617-dda7ca12e54a.png""></a>
</div>

We trained YOLOv5 segmentations models on COCO for 300 epochs at image size 640 using A100 GPUs. We exported all models to ONNX FP32 for CPU speed tests and to TensorRT FP16 for GPU speed tests. We ran all speed tests on Google [Colab Pro](https://colab.research.google.com/signup) notebooks for easy reproducibility.

| Model                                                                                      | size<br><sup>(pixels) | mAP<sup>box<br>50-95 | mAP<sup>mask<br>50-95 | Train time<br><sup>300 epochs<br>A100 (hours) | Speed<br><sup>ONNX CPU<br>(ms) | Speed<br><sup>TRT A100<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>@640 (B) |
| ------------------------------------------------------------------------------------------ | --------------------- | -------------------- | --------------------- | --------------------------------------------- | ------------------------------ | ------------------------------ | ------------------ | ---------------------- |
| [YOLOv5n-seg](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5n-seg.pt) | 640                   | 27.6                 | 23.4                  | 80:17                                         | **62.7**                       | **1.2**                        | **2.0**            | **7.1**                |
| [YOLOv5s-seg](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s-seg.pt) | 640                   | 37.6                 | 31.7                  | 88:16                                         | 173.3                          | 1.4                            | 7.6                | 26.4                   |
| [YOLOv5m-seg](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5m-seg.pt) | 640                   | 45.0                 | 37.1                  | 108:36                                        | 427.0                          | 2.2                            | 22.0               | 70.8                   |
| [YOLOv5l-seg](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5l-seg.pt) | 640                   | 49.0                 | 39.9                  | 66:43 (2x)                                    | 857.4                          | 2.9                            | 47.9               | 147.7                  |
| [YOLOv5x-seg](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5x-seg.pt) | 640                   | **50.7**             | **41.4**              | 62:56 (3x)                                    | 1579.2                         | 4.5                            | 88.8               | 265.7                  |

- All checkpoints are trained to 300 epochs with SGD optimizer with `lr0=0.01` and `weight_decay=5e-5` at image size 640 and all default settings.<br>Runs logged to https://wandb.ai/glenn-jocher/YOLOv5_v70_official
- **Accuracy** values are for single-model single-scale on COCO dataset.<br>Reproduce by `python segment/val.py --data coco.yaml --weights yolov5s-seg.pt`
- **Speed** averaged over 100 inference images using a [Colab Pro](https://colab.research.google.com/signup) A100 High-RAM instance. Values indicate inference speed only (NMS adds about 1ms per image). <br>Reproduce by `python segment/val.py --data coco.yaml --weights yolov5s-seg.pt --batch 1`
- **Export** to ONNX at FP32 and TensorRT at FP16 done with `export.py`. <br>Reproduce by `python export.py --weights yolov5s-seg.pt --include engine --device 0 --half`

</details>

<details>
  <summary>Segmentation Usage Examples &nbsp;<a href=""https://colab.research.google.com/github/ultralytics/yolov5/blob/master/segment/tutorial.ipynb""><img src=""https://colab.research.google.com/assets/colab-badge.svg"" alt=""Open In Colab""></a></summary>

### Train

YOLOv5 segmentation training supports auto-download COCO128-seg segmentation dataset with `--data coco128-seg.yaml` argument and manual download of COCO-segments dataset with `bash data/scripts/get_coco.sh --train --val --segments` and then `python train.py --data coco.yaml`.

```bash
# Single-GPU
python segment/train.py --data coco128-seg.yaml --weights yolov5s-seg.pt --img 640

# Multi-GPU DDP
python -m torch.distributed.run --nproc_per_node 4 --master_port 1 segment/train.py --data coco128-seg.yaml --weights yolov5s-seg.pt --img 640 --device 0,1,2,3
```

### Val

Validate YOLOv5s-seg mask mAP on COCO dataset:

```bash
bash data/scripts/get_coco.sh --val --segments  # download COCO val segments split (780MB, 5000 images)
python segment/val.py --weights yolov5s-seg.pt --data coco.yaml --img 640  # validate
```

### Predict

Use pretrained YOLOv5m-seg.pt to predict bus.jpg:

```bash
python segment/predict.py --weights yolov5m-seg.pt --source data/images/bus.jpg
```

```python
model = torch.hub.load(
    ""ultralytics/yolov5"", ""custom"", ""yolov5m-seg.pt""
)  # load from PyTorch Hub (WARNING: inference not yet supported)
```

| ![zidane](https://user-images.githubusercontent.com/26833433/203113421-decef4c4-183d-4a0a-a6c2-6435b33bc5d3.jpg) | ![bus](https://user-images.githubusercontent.com/26833433/203113416-11fe0025-69f7-4874-a0a6-65d0bfe2999a.jpg) |
| ---------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------- |

### Export

Export YOLOv5s-seg model to ONNX and TensorRT:

```bash
python export.py --weights yolov5s-seg.pt --include onnx engine --img 640 --device 0
```

</details>

## <div align=""center"">Classification</div>

YOLOv5 [release v6.2](https://github.com/ultralytics/yolov5/releases) brings support for classification model training, validation and deployment! See full details in our [Release Notes](https://github.com/ultralytics/yolov5/releases/v6.2) and visit our [YOLOv5 Classification Colab Notebook](https://github.com/ultralytics/yolov5/blob/master/classify/tutorial.ipynb) for quickstart tutorials.

<details>
  <summary>Classification Checkpoints</summary>

<br>

We trained YOLOv5-cls classification models on ImageNet for 90 epochs using a 4xA100 instance, and we trained ResNet and EfficientNet models alongside with the same default training settings to compare. We exported all models to ONNX FP32 for CPU speed tests and to TensorRT FP16 for GPU speed tests. We ran all speed tests on Google [Colab Pro](https://colab.research.google.com/signup) for easy reproducibility.

| Model                                                                                              | size<br><sup>(pixels) | acc<br><sup>top1 | acc<br><sup>top5 | Training<br><sup>90 epochs<br>4xA100 (hours) | Speed<br><sup>ONNX CPU<br>(ms) | Speed<br><sup>TensorRT V100<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>@224 (B) |
| -------------------------------------------------------------------------------------------------- | --------------------- | ---------------- | ---------------- | -------------------------------------------- | ------------------------------ | ----------------------------------- | ------------------ | ---------------------- |
| [YOLOv5n-cls](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5n-cls.pt)         | 224                   | 64.6             | 85.4             | 7:59                                         | **3.3**                        | **0.5**                             | **2.5**            | **0.5**                |
| [YOLOv5s-cls](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s-cls.pt)         | 224                   | 71.5             | 90.2             | 8:09                                         | 6.6                            | 0.6                                 | 5.4                | 1.4                    |
| [YOLOv5m-cls](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5m-cls.pt)         | 224                   | 75.9             | 92.9             | 10:06                                        | 15.5                           | 0.9                                 | 12.9               | 3.9                    |
| [YOLOv5l-cls](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5l-cls.pt)         | 224                   | 78.0             | 94.0             | 11:56                                        | 26.9                           | 1.4                                 | 26.5               | 8.5                    |
| [YOLOv5x-cls](https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5x-cls.pt)         | 224                   | **79.0**         | **94.4**         | 15:04                                        | 54.3                           | 1.8                                 | 48.1               | 15.9                   |
|                                                                                                    |                       |                  |                  |                                              |                                |                                     |                    |                        |
| [ResNet18](https://github.com/ultralytics/yolov5/releases/download/v7.0/resnet18.pt)               | 224                   | 70.3             | 89.5             | **6:47**                                     | 11.2                           | 0.5                                 | 11.7               | 3.7                    |
| [ResNet34](https://github.com/ultralytics/yolov5/releases/download/v7.0/resnet34.pt)               | 224                   | 73.9             | 91.8             | 8:33                                         | 20.6                           | 0.9                                 | 21.8               | 7.4                    |
| [ResNet50](https://github.com/ultralytics/yolov5/releases/download/v7.0/resnet50.pt)               | 224                   | 76.8             | 93.4             | 11:10                                        | 23.4                           | 1.0                                 | 25.6               | 8.5                    |
| [ResNet101](https://github.com/ultralytics/yolov5/releases/download/v7.0/resnet101.pt)             | 224                   | 78.5             | 94.3             | 17:10                                        | 42.1                           | 1.9                                 | 44.5               | 15.9                   |
|                                                                                                    |                       |                  |                  |                                              |                                |                                     |                    |                        |
| [EfficientNet_b0](https://github.com/ultralytics/yolov5/releases/download/v7.0/efficientnet_b0.pt) | 224                   | 75.1             | 92.4             | 13:03                                        | 12.5                           | 1.3                                 | 5.3                | 1.0                    |
| [EfficientNet_b1](https://github.com/ultralytics/yolov5/releases/download/v7.0/efficientnet_b1.pt) | 224                   | 76.4             | 93.2             | 17:04                                        | 14.9                           | 1.6                                 | 7.8                | 1.5                    |
| [EfficientNet_b2](https://github.com/ultralytics/yolov5/releases/download/v7.0/efficientnet_b2.pt) | 224                   | 76.6             | 93.4             | 17:10                                        | 15.9                           | 1.6                                 | 9.1                | 1.7                    |
| [EfficientNet_b3](https://github.com/ultralytics/yolov5/releases/download/v7.0/efficientnet_b3.pt) | 224                   | 77.7             | 94.0             | 19:19                                        | 18.9                           | 1.9                                 | 12.2               | 2.4                    |

<details>
  <summary>Table Notes (click to expand)</summary>

- All checkpoints are trained to 90 epochs with SGD optimizer with `lr0=0.001` and `weight_decay=5e-5` at image size 224 and all default settings.<br>Runs logged to https://wandb.ai/glenn-jocher/YOLOv5-Classifier-v6-2
- **Accuracy** values are for single-model single-scale on [ImageNet-1k](https://www.image-net.org/index.php) dataset.<br>Reproduce by `python classify/val.py --data ../datasets/imagenet --img 224`
- **Speed** averaged over 100 inference images using a Google [Colab Pro](https://colab.research.google.com/signup) V100 High-RAM instance.<br>Reproduce by `python classify/val.py --data ../datasets/imagenet --img 224 --batch 1`
- **Export** to ONNX at FP32 and TensorRT at FP16 done with `export.py`. <br>Reproduce by `python export.py --weights yolov5s-cls.pt --include engine onnx --imgsz 224`

</details>
</details>

<details>
  <summary>Classification Usage Examples &nbsp;<a href=""https://colab.research.google.com/github/ultralytics/yolov5/blob/master/classify/tutorial.ipynb""><img src=""https://colab.research.google.com/assets/colab-badge.svg"" alt=""Open In Colab""></a></summary>

### Train

YOLOv5 classification training supports auto-download of MNIST, Fashion-MNIST, CIFAR10, CIFAR100, Imagenette, Imagewoof, and ImageNet datasets with the `--data` argument. To start training on MNIST for example use `--data mnist`.

```bash
# Single-GPU
python classify/train.py --model yolov5s-cls.pt --data cifar100 --epochs 5 --img 224 --batch 128

# Multi-GPU DDP
python -m torch.distributed.run --nproc_per_node 4 --master_port 1 classify/train.py --model yolov5s-cls.pt --data imagenet --epochs 5 --img 224 --device 0,1,2,3
```

### Val

Validate YOLOv5m-cls accuracy on ImageNet-1k dataset:

```bash
bash data/scripts/get_imagenet.sh --val  # download ImageNet val split (6.3G, 50000 images)
python classify/val.py --weights yolov5m-cls.pt --data ../datasets/imagenet --img 224  # validate
```

### Predict

Use pretrained YOLOv5s-cls.pt to predict bus.jpg:

```bash
python classify/predict.py --weights yolov5s-cls.pt --source data/images/bus.jpg
```

```python
model = torch.hub.load(
    ""ultralytics/yolov5"", ""custom"", ""yolov5s-cls.pt""
)  # load from PyTorch Hub
```

### Export

Export a group of trained YOLOv5s-cls, ResNet and EfficientNet models to ONNX and TensorRT:

```bash
python export.py --weights yolov5s-cls.pt resnet50.pt efficientnet_b0.pt --include onnx engine --img 224
```

</details>

## <div align=""center"">Environments</div>

Get started in seconds with our verified environments. Click each icon below for details.

<div align=""center"">
  <a href=""https://bit.ly/yolov5-paperspace-notebook"">
    <img src=""https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-gradient.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""5%"" alt="""" />
  <a href=""https://colab.research.google.com/github/ultralytics/yolov5/blob/master/tutorial.ipynb"">
    <img src=""https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-colab-small.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""5%"" alt="""" />
  <a href=""https://www.kaggle.com/ultralytics/yolov5"">
    <img src=""https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-kaggle-small.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""5%"" alt="""" />
  <a href=""https://hub.docker.com/r/ultralytics/yolov5"">
    <img src=""https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-docker-small.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""5%"" alt="""" />
  <a href=""https://docs.ultralytics.com/yolov5/environments/aws_quickstart_tutorial/"">
    <img src=""https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-aws-small.png"" width=""10%"" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""5%"" alt="""" />
  <a href=""https://docs.ultralytics.com/yolov5/environments/google_cloud_quickstart_tutorial/"">
    <img src=""https://github.com/ultralytics/yolov5/releases/download/v1.0/logo-gcp-small.png"" width=""10%"" /></a>
</div>

## <div align=""center"">Contribute</div>

We love your input! We want to make contributing to YOLOv5 as easy and transparent as possible. Please see our [Contributing Guide](https://docs.ultralytics.com/help/contributing/) to get started, and fill out the [YOLOv5 Survey](https://ultralytics.com/survey?utm_source=github&utm_medium=social&utm_campaign=Survey) to send us feedback on your experiences. Thank you to all our contributors!

<!-- SVG image from https://opencollective.com/ultralytics/contributors.svg?width=990 -->

<a href=""https://github.com/ultralytics/yolov5/graphs/contributors"">
<img src=""https://github.com/ultralytics/assets/raw/main/im/image-contributors.png"" /></a>

## <div align=""center"">License</div>

YOLOv5 is available under two different licenses:

- **AGPL-3.0 License**: See [LICENSE](https://github.com/ultralytics/yolov5/blob/master/LICENSE) file for details.
- **Enterprise License**: Provides greater flexibility for commercial product development without the open-source requirements of AGPL-3.0. Typical use cases are embedding Ultralytics software and AI models in commercial products and applications. Request an Enterprise License at [Ultralytics Licensing](https://ultralytics.com/license).

## <div align=""center"">Contact</div>

For YOLOv5 bug reports and feature requests please visit [GitHub Issues](https://github.com/ultralytics/yolov5/issues), and join our [Discord](https://discord.gg/n6cFeSPZdD) community for questions and discussions!

<br>
<div align=""center"">
  <a href=""https://github.com/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png"" width=""3%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""3%"" alt="""" />
  <a href=""https://www.linkedin.com/company/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png"" width=""3%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""3%"" alt="""" />
  <a href=""https://twitter.com/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png"" width=""3%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""3%"" alt="""" />
  <a href=""https://youtube.com/ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png"" width=""3%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""3%"" alt="""" />
  <a href=""https://www.tiktok.com/@ultralytics"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png"" width=""3%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""3%"" alt="""" />
  <a href=""https://www.instagram.com/ultralytics/"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-social-instagram.png"" width=""3%"" alt="""" /></a>
  <img src=""https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png"" width=""3%"" alt="""" />
  <a href=""https://discord.gg/n6cFeSPZdD"" style=""text-decoration:none;"">
    <img src=""https://github.com/ultralytics/assets/blob/main/social/logo-social-discord.png"" width=""3%"" alt="""" /></a>
</div>

[tta]: https://docs.ultralytics.com/yolov5/tutorials/test_time_augmentation
"
Ebazhanov/linkedin-skill-assessments-quizzes,Python,"## Linkedin Skill assessments - Answers

<a id=""top-page""></a>
[![Owner](https://img.shields.io/badge/owner-ebazhanov-blue)](https://github.com/Ebazhanov)
[![Admin](https://img.shields.io/badge/admin-monkrus-red)](https://github.com/monkrus)
[![Playground](https://img.shields.io/badge/resources-playground-orange)](https://github.com/linkedin-faq)
[![Open issues](https://img.shields.io/github/issues/ebazhanov/linkedin-skill-assessments-quizzes)](https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/issues)

[![Analytics](https://img.shields.io/badge/analytics-ossinsight-red)](https://ossinsight.io/analyze/Ebazhanov/linkedin-skill-assessments-quizzes)
[![Views](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FEbazhanov%2Flinkedin-skill-assessments-quizzes&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false)](https://hits.seeyoufarm.com)
[![Telegram](https://badgen.net/badge/icon/telegram?icon=telegram&label)](https://t.me/+lCPxL7Kd7gVjMGM6)

<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->
[![All Contributors](https://img.shields.io/badge/all_contributors-1373-orange.svg?style=flat-square)](#contributors-)
<!-- ALL-CONTRIBUTORS-BADGE:END -->

> :warning:DISCLAIMER: The owners of this repository are not liable for any illegal usage of the content provided in this repository. The content is provided for informational and educational purposes only, and any actions taken by users of this repository are the responsibility of the user. By accessing this repository, you agree to hold the owners harmless from any claims, damages, or expenses arising from the use of the information provided.

#### [ [Go to see the last contributor](https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/blob/main/README.md) ]

#### PLEASE 🙏

Always add explanation (`or reference link`) to your answers.Use [online grammar checker](https://www.grammarly.com/).
That would help anyone to better learn new concepts!

#### Announcement 🎉:

1. Column `Translation` have links to quizzes in different languages Es, Fr, It, DE
2. If you want to meet each other or discuss quiz related problems or maybe ask for skills endorsement just join the `Discord` chat
3. Playground before taking quiz using:

- Web App https://linkedin-faq.github.io/md2practice/
- Web App #2 https://linkedin-faq.github.io/skill-assessments-quizzes/
- In **terminal** https://github.com/linkedin-faq/linkedin-quizzes-kodyfire

Want to contribute? Here is the source code https://github.com/linkedin-faq

## Need help?

[![Telegram](https://badgen.net/badge/icon/telegram?icon=telegram&label)](https://t.me/+lCPxL7Kd7gVjMGM6)

- [Open new issue](https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/issues/new/choose)

[![Join our Discord server!](https://invidget.switchblade.xyz/NKCyjjw3MW?theme=light)](https://discord.gg/NKCyjjw3MW)

## Open in VScode view [here](https://github1s.com/Ebazhanov/linkedin-skill-assessments-quizzes/blob/HEAD/adobe-photoshop/adobe-photoshop-quiz.md) or [there](https://github.dev/Ebazhanov/linkedin-skill-assessments-quizzes/) 🔥

### Table of Contents

| Linkedin-quiz-questions                                                                           | Passed/Failed    | Translated <br/> in ...                                                                                                                                                                                                                                                          | Questions | Answers | Your resource for answers. In case you have doubts please contact this person or add them to review your PR.                                                          |
| ------------------------------------------------------------------------------------------------- | ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| [Accounting](accounting/accounting-quiz.md)                                                       | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](accounting/accounting-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](accounting/accounting-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](accounting/accounting-quiz-fr.md)                                                       | 50        | 49      | [@tujinwei](https://github.com/tujinwei), [@mervynteo](https://github.com/mervynteo), [@johnfelipe](https://github.com/johnfelipe)                                    |
| [Adobe-Acrobat](adobe-acrobat/adobe-acrobat-quiz.md)                                              |                  | [<img src=""assets/es.svg"" width=""22"">](adobe-acrobat/adobe-acrobat-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](adobe-acrobat/adobe-acrobat-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](adobe-acrobat/adobe-acrobat-quiz-fr.md)                                     | 27        | 22      |                                                                                                                                                                       |
| [Adobe-Illustrator](adobe-illustrator/adobe-illustrator-quiz.md)                                  | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](adobe-illustrator/adobe-illustrator-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](adobe-illustrator/adobe-illustrator-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](adobe-illustrator/adobe-illustrator-quiz-fr.md)             | 76        | 74      |                                                                                                                                                                       |
| [Adobe-InDesign](adobe-in-design/adobe-in-design-quiz.md)                                         | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](adobe-in-design/adobe-in-design-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](adobe-in-design/adobe-in-design-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](adobe-in-design/adobe-in-design-quiz-fr.md)                         | 42        | 40      |                                                                                                                                                                       |
| [Adobe-Lightroom](adobe-lightroom/adobe-lightroom-quiz.md)                                        | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](adobe-lightroom/adobe-lightroom-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](adobe-lightroom/adobe-lightroom-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](adobe-lightroom/adobe-lightroom-quiz-fr.md)                         | 20        | 20      |                                                                                                                                                                       |
| [Adobe-Photoshop](adobe-photoshop/adobe-photoshop-quiz.md)                                        | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](adobe-photoshop/adobe-photoshop-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](adobe-photoshop/adobe-photoshop-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](adobe-photoshop/adobe-photoshop-quiz-fr.md)                         | 93        | 93      | [@declarck](https://github.com/declarck)                                                                                                                              |
| [Adobe Premiere Pro](adobe-premiere-pro/adobe-premiere-pro-quiz.md)                               |                  | [<img src=""assets/es.svg"" width=""22"">](adobe-premiere-pro/adobe-premiere-pro-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](adobe-premiere-pro/adobe-premiere-pro-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](adobe-premiere-pro/adobe-premiere-pro-quiz-fr.md)       | 48        | 36      |                                                                                                                                                                       |
| [Adobe XD](adobe-xd/adobe-xd-quiz.md)                                                             |                  | [<img src=""assets/es.svg"" width=""22"">](adobe-xd/adobe-xd-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](adobe-xd/adobe-xd-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](adobe-xd/adobe-xd-quiz-fr.md)                                                                   | 16        | 13      |                                                                                                                                                                       |
| [After Effects](after-effects/after-effects-quiz.md)                                              | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](after-effects/after-effects-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](after-effects/after-effects-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](after-effects/after-effects-quiz-fr.md)                                     | 24        | 13      |                                                                                                                                                                       |
| [Agile Methodologies](agile-methodologies/agile-methodologies-quiz.md)                            | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](agile-methodologies/agile-methodologies-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](agile-methodologies/agile-methodologies-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](agile-methodologies/agile-methodologies-quiz-fr.md) | 116       | 116     | [@its0x08](https://github.com/its0x08)                                                                                                                                |
| [Android](android/android-quiz.md)                                                                |                  | [<img src=""assets/es.svg"" width=""22"">](android/android-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](android/android-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](android/android-quiz-fr.md)                                                                         | 72        | 72      | [@surajsahani](https://github.com/surajsahani), [@mr-shoxruxbek](https://github.com/mr-shoxruxbek), [@ItSNeverLate](https://github.com/ItSNeverLate)                  |
| [Angular](angular/angular-quiz.md)                                                                |                  | [<img src=""assets/es.svg"" width=""22"">](angular/angular-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](angular/angular-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](angular/angular-quiz-fr.md)                                                                         | 79        | 65      | [@vanekbr](https://github.com/vanekbr), [@aamita96](https://github.com/aamita96)                                                                                      |
| [ArcGIS Products](arc-gis/arc-gis-quiz.md)                                                        |                  |                                                                                                                                                                                                                                                                                  | 5         | 5       |                                                                                                                                                                       |
| [AutoCAD](autocad/autocad-quiz.md)                                                                | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](autocad/autocad-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](autocad/autocad-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](autocad/autocad-quiz-fr.md)                                                                         | 77        | 75      | [@djayor](https://github.com/djayor)                                                                                                                                  |
| [Autodesk Fusion 360](autodesk-fusion-360/autodesk-fusion-360-quiz.md)                            | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](autodesk-fusion-360/autodesk-fusion-360-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](autodesk-fusion-360/autodesk-fusion-360-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](autodesk-fusion-360/autodesk-fusion-360-quiz-fr.md) | 37        | 25      | [@djayor](https://github.com/djayor), [@tm-sanjay](https://github.com/tm-sanjay)                                                                                      |
| [AWS](aws/aws-quiz.md)                                                                            |                  | [<img src=""assets/es.svg"" width=""22"">](aws/aws-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](aws/aws-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](aws/aws-quiz-fr.md)                                                                                                 | 99        | 99      | [@jokerkeny](https://github.com/jokerkeny), [@Amsal1](https://github.com/Amsal1)                                                                                      |
| [AWS-Lambda](aws-lambda/aws-lambda-quiz.md)                                                       | ❗needs updating | [<img src=""assets/es.svg"" width=""22"">](aws-lambda/aws-lambda-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](aws-lambda/aws-lambda-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](aws-lambda/aws-lambda-quiz-fr.md)                                                       | 51        | 49      |                                                                                                                                                                       |
| [Bash](bash/bash-quiz.md)                                                                         |                  | [<img src=""assets/es.svg"" width=""22"">](bash/bash-quiz-es.md) [<img src=""assets/it.svg"" width=""22"">](bash/bash-quiz-it.md) [<img src=""assets/fr.svg"" width=""22"">](bash/bash-quiz-fr.md)                                                                                           | 78        | 77      | [@D4RIO](https://github.com/D4RIO), [@Amsal1](https://github.com/Amsal1)                                                                                              |
| [C#](c-sharp/c-sharp-quiz.md)                                                                     |                  |                                                                                                                                                                                                                                                                                  | 61        | 61      | [@LiviuSosu](https://github.com/LiviuSosu), [@RamonMartinezNieto](https://github.com/RamonMartinezNieto), [@declarck](https://github.com/declarck)                    |
| [C++](c++/c++-quiz.md)                                                                            | ❗needs updating | [<img src=""assets/de.svg"" width=""22"">](c%2B%2B/c%2B%2Bquiz-de.md)                                                                                                                                                                                                                | 73        | 73      | [@Amsal1](https://github.com/Amsal1), [@Amsal1](https://github.com/golamrabbiazad)                                                                                    |
| [C (Programming Language)](<c-(programming-language)/c-(programming-language)-quiz.md>)           |                  |                                                                                                                                                                                                                                                                                  | 83        | 83      | [@makifay](https://github.com/makifay), [@Amsal1](https://github.com/Amsal1), [@its0x08](https://github.com/its0x08)                                                  |
| [CSS](css/css-quiz.md)                                                                            |                  |                                                                                                                                                                                                                                                                                  | 122       | 116     | [@BHARGAVPATEL1244](https://github.com/BHARGAVPATEL1244)                                                                                                              |
| [Cybersecurity](cybersecurity/cybersecurity-quiz.md)                                              | ❗needs updating |                                                                                                                                                                                                                                                                                  | 101       | 96      |                                                                                                                                                                       |
| [Django](django/django-quiz.md)                                                                   |                  |                                                                                                                                                                                                                                                                                  | 71        | 71      | [@PROCW](https://github.com/PROCW)                                                                                                                                    |
| [.NET Framework](dotnet-framework/dotnet-framework-quiz.md)                                       |                  |                                                                                                                                                                                                                                                                                  | 63        | 59      | [@declarck](https://github.com/declarck)                                                                                                                              |
| [Eclipse](eclipse/eclipse-quiz.md)                                                                | ❗needs updating |                                                                                                                                                                                                                                                                                  | 36        | 28      |                                                                                                                                                                       |
| [Front-end Development](front-end-development/front-end-development-quiz.md)                      |                  |                                                                                                                                                                                                                                                                                  | 68        | 68      | [@vanekbr](https://github.com/vanekbr), [@ShankS3](https://github.com/ShankS3), [@declarck](https://github.com/declarck)                                              |
| [Git](git/git-quiz.md)                                                                            |                  |                                                                                                                                                                                                                                                                                  | 134       | 134     | [@Emanuele-em](https://github.com/emanuele-em)                                                                                                                        |
| [Go (Programming Language)](go/go-quiz.md)                                                        |                  |                                                                                                                                                                                                                                                                                  | 40        | 40      | [@ruslanbes](https://github.com/ruslanbes), [@monkrus](https://github.com/monkrus)                                                                                    |
| [Google Ads](google-ads/google-ads-quiz.md)                                                       |                  |                                                                                                                                                                                                                                                                                  | 29        | 25      |                                                                                                                                                                       |
| [Google Analytics](google-analytics/google-analytics-quiz.md)                                     |                  |                                                                                                                                                                                                                                                                                  | 82        | 82      |                                                                                                                                                                       |
| [Google Cloud Platform (GCP)](google-cloud-platform/google-cloud-platform-quiz.md)                |                  |                                                                                                                                                                                                                                                                                  | 52        | 50      | [@antra0497](https://github.com/antra0497)                                                                                                                            |
| [Hadoop](hadoop/hadoop-quiz.md)                                                                   |                  |                                                                                                                                                                                                                                                                                  | 71        | 54      |                                                                                                                                                                       |
| [HTML](html/html-quiz.md)                                                                         |                  |                                                                                                                                                                                                                                                                                  | 129       | 128     | [@declarck](https://github.com/declarck)                                                                                                                              |
| [IT Operations](it-operations/it-operations-quiz.md)                                              |                  |                                                                                                                                                                                                                                                                                  | 54        | 54      | [@asahiocean](https://github.com/asahiocean)                                                                                                                          |
| [Java](java/java-quiz.md)                                                                         |                  |                                                                                                                                                                                                                                                                                  | 130       | 130     | [@sumanas27](https://github.com/sumanas27), [@ruslanbes](https://github.com/ruslanbes), [@PROCW](https://github.com/PROCW/)                                           |
| [Javascript](javascript/javascript-quiz.md)                                                       |                  |                                                                                                                                                                                                                                                                                  | 131       | 131     | [@taletski](https://github.com/taletski), [@PROCW](https://github.com/PROCW/), [@msteiner96](https://github.com/msteiner96), [@declarck](https://github.com/declarck) |
| [jQuery](jquery/jquery-quiz.md)                                                                   |                  |                                                                                                                                                                                                                                                                                  | 84        | 77      | [@declarck](https://github.com/declarck)                                                                                                                              |
| [JSON](json/json-quiz.md)                                                                         | ❗needs updating |                                                                                                                                                                                                                                                                                  | 87        | 86      | [@iHamzaKhanzada](https://github.com/iHamzaKhanzada)                                                                                                                  |
| [Keynote](keynote/keynote-quiz.md)                                                                |                  |                                                                                                                                                                                                                                                                                  | 14        | 0       |                                                                                                                                                                       |
| [Kotlin](kotlin/kotlin-quiz.md)                                                                   |                  |                                                                                                                                                                                                                                                                                  | 78        | 78      | [@ItSNeverLate](https://github.com/ItSNeverLate), [@Husseinhj](https://github.com/Husseinhj)                                                                          |
| [Linux](linux/linux-quiz.md)                                                                      |                  |                                                                                                                                                                                                                                                                                  | 82        | 78      | [@D4RIO](https://github.com/D4RIO), [@Amsal1](https://github.com/Amsal1)                                                                                              |
| [Logic Pro](logic-pro/logic-pro-quiz.md)                                                          |                  |                                                                                                                                                                                                                                                                                  | 82        | 78      |                                                                                                                                                                       |
| [Machine Learning](machine-learning/machine-learning-quiz.md)                                     |                  |                                                                                                                                                                                                                                                                                  | 98        | 98      | [@aaronwangj](https://github.com/aaronwangj), [@antra0497](https://github.com/antra0497)                                                                              |
| [MATLAB](matlab/matlab-quiz.md)                                                                   |                  |                                                                                                                                                                                                                                                                                  | 70        | 70      | [@tm-sanjay](https://github.com/tm-sanjay)                                                                                                                            |
| [Maven](maven/maven-quiz.md)                                                                      |                  |                                                                                                                                                                                                                                                                                  | 53        | 50      |                                                                                                                                                                       |
| [Microsoft Access](microsoft-access/microsoft-access-quiz.md)                                     |                  |                                                                                                                                                                                                                                                                                  | 30        | 28      | [@drmegalomaniac](https://github.com/drmegalomaniac)                                                                                                                  |
| [Microsoft Azure](microsoft-azure/microsoft-azure-quiz.md)                                        |                  |                                                                                                                                                                                                                                                                                  | 55        | 53      | [@tomtreffke](https://github.com/tomtreffke), [@ziasistani](https://github.com/ziasistani)                                                                            |
| [Microsoft Excel](microsoft-excel/microsoft-excel-quiz.md)                                        | ❗needs updating | [<img src=""assets/de.svg"" width=""22"">](microsoft-excel/microsoft-excel-quiz-de.md)                                                                                                                                                                                               | 109       | 107     | [@gazihasanrahman](https://github.com/gazihasanrahman)                                                                                                                |
| [Microsoft Outlook](microsoft-outlook/microsoft-outlook-quiz.md)                                  |                  |                                                                                                                                                                                                                                                                                  | 79        | 56      |                                                                                                                                                                       |
| [Microsoft Power Automate](microsoft-power-automate/microsoft-power-automate-quiz.md)             |                  |                                                                                                                                                                                                                                                                                  | 14        | 02      | [@mervynteo](https://github.com/mervynteo)                                                                                                                            |
| [Microsoft Power BI](microsoft-power-bi/microsoft-power-bi-quiz.md)                               |                  |                                                                                                                                                                                                                                                                                  | 81        | 80      | [@vittorio-giatti](https://github.com/vittorio-giatti)                                                                                                                |
| [Microsoft Power Point](microsoft-power-point/microsoft-power-point-quiz.md)                      |                  |                                                                                                                                                                                                                                                                                  | 85        | 77      | [@ckullo](https://github.com/ckullo)                                                                                                                                  |
| [Microsoft Project](microsoft-project/microsoft-project-quiz.md)                                  | ❗needs updating |                                                                                                                                                                                                                                                                                  | 44        | 43      |                                                                                                                                                                       |
| [Microsoft Word](microsoft-word/microsoft-word-quiz.md)                                           | ❗needs updating |                                                                                                                                                                                                                                                                                  | 78        | 77      |                                                                                                                                                                       |
| [MongoDB](mongodb/mongodb-quiz.md)                                                                |                  |                                                                                                                                                                                                                                                                                  | 77        | 77      |                                                                                                                                                                       |
| [MySQL](mysql/mysql-quiz.md)                                                                      |                  | [<img src=""assets/de.svg"" width=""22"">](mysql/mysql-quiz-de.md)                                                                                                                                                                                                                   | 97        | 97      | [@ruslanbes](https://github.com/ruslanbes)                                                                                                                            |
| [node.js](node.js/node.js-quiz.md)                                                                |                  |                                                                                                                                                                                                                                                                                  | 80        | 76      | [@pbachman](https://github.com/pbachman)                                                                                                                              |
| [NoSQL](nosql/nosql-quiz.md)                                                                      |                  |                                                                                                                                                                                                                                                                                  | 56        | 55      |                                                                                                                                                                       |
| [objective-c](objective-c/objective-c-quiz.md)                                                    |                  |                                                                                                                                                                                                                                                                                  | 40        | 38      |                                                                                                                                                                       |
| [OOP](object-oriented-programming/object-oriented-programming-quiz.md)                            |                  |                                                                                                                                                                                                                                                                                  | 102       | 82      | [@declarck](https://github.com/declarck), [@gaurovgiri](https://github.com/gaurovgiri)                                                                                |
| [PHP](php/php-quiz.md)                                                                            |                  |                                                                                                                                                                                                                                                                                  | 89        | 79      | [@ruslanbes](https://github.com/ruslanbes), [@msteiner96](https://github.com/msteiner96)                                                                              |
| [Pro Tools](pro-tools/pro-tools-quiz.md)                                                          |                  |                                                                                                                                                                                                                                                                                  | 2         | 2       |                                                                                                                                                                       |
| [Python](python/python-quiz.md)                                                                   |                  | [<img src=""assets/es.svg"" width=""22"">](python/python-quiz-es.md)                                                                                                                                                                                                                 | 137       | 137     | [@tik9](https://github.com/tik9), [@Amsal1](https://github.com/Amsal1), [@declarck](https://github.com/declarck), [@TSG405](https://github.com/tsg405)                |
| [QuickBooks](quickbooks/quickbooks-quiz.md)                                                       | ❗needs updating |                                                                                                                                                                                                                                                                                  | 67        | 39      |                                                                                                                                                                       |
| [R](r/r-quiz.md)                                                                                  |                  |                                                                                                                                                                                                                                                                                  | 52        | 52      | [@gregglind](https://github.com/gregglind)                                                                                                                            |
| [React.js](reactjs/reactjs-quiz.md)                                                               |                  | [<img src=""assets/es.svg"" width=""22"">](reactjs/reactjs-quiz-es.md)                                                                                                                                                                                                               | 100       | 100     | [@RobTables](https://github.com/RobTables) [@bandinopla](https://github.com/bandinopla)                                                                               |
| [REST API](rest-api/rest-api-quiz.md)                                                             |                  |                                                                                                                                                                                                                                                                                  | 65        | 65      |                                                                                                                                                                       |
| [Revit](revit/revit-quiz.md)                                                                      | ❗needs updating |                                                                                                                                                                                                                                                                                  | 14        | 0       |                                                                                                                                                                       |
| [Ruby on Rails](ruby-on-rails/ruby-on-rails-quiz.md)                                              |                  |                                                                                                                                                                                                                                                                                  | 59        | 59      | [@gudata](https://github.com/gudata)                                                                                                                                  |
| [Rust](rust/rust-quiz.md)                                                                         |                  |                                                                                                                                                                                                                                                                                  | 32        | 32      | [@BobbyByrne](https://github.com/BobbyByrne) [@Emanuele-em](https://github.com/emanuele-em)                                                                           |
| [Scala](scala/scala-quiz.md)                                                                      |                  |                                                                                                                                                                                                                                                                                  | 52        | 48      |                                                                                                                                                                       |
| [Search Engine Optimization (SEO)](search-engine-optimization/search-engine-optimization-quiz.md) |                  |                                                                                                                                                                                                                                                                                  | 81        | 81      |                                                                                                                                                                       |
| [SharePoint](sharepoint/sharepoint-quiz.md)                                                       | ❗needs updating |                                                                                                                                                                                                                                                                                  | 53        | 38      |                                                                                                                                                                       |
| [Sketchup](sketchup/sketchup-quiz.md)                                                             |                  |                                                                                                                                                                                                                                                                                  | 2         | 2       |                                                                                                                                                                       |
| [SOLIDWORKS](solidworks/solidworks-quiz.md)                                                       | ❗needs updating |                                                                                                                                                                                                                                                                                  | 57        | 57      | [@BHARGAVPATEL1244](https://github.com/BHARGAVPATEL1244)                                                                                                              |
| [Spring Framework](spring-framework/spring-framework-quiz.md)                                     |                  |                                                                                                                                                                                                                                                                                  | 67        | 67      |                                                                                                                                                                       |
| [Swift](swift/swift-quiz.md)                                                                      |                  |                                                                                                                                                                                                                                                                                  | 67        | 67      |                                                                                                                                                                       |
| [Transact-SQL (T-SQL)](t-sql/t-sql-quiz.md)                                                       |                  |                                                                                                                                                                                                                                                                                  | 45        | 42      | [@beefydog](https://github.com/beefydog), [@BenVlodgi](https://github.com/BenVlodgi)                                                                                  |
| [Unity](unity/unity-quiz.md)                                                                      | ❗needs updating |                                                                                                                                                                                                                                                                                  | 47        | 46      | [@uno-sebastian](https://github.com/uno-sebastian)                                                                                                                    |
| [Visual Basic for Applications (VBA)](vba/vba-quiz.md)                                            | ❗needs updating |                                                                                                                                                                                                                                                                                  | 36        | 34      | [@AdamKaczor6250](https://github.com/AdamKaczor6250)                                                                                                                  |
| [Visio](visio/visio-quiz.md)                                                                      |                  |                                                                                                                                                                                                                                                                                  | 35        | 35      |                                                                                                                                                                       |
| [Windows Server](windows-server/windows-server-quiz.md)                                           |                  |                                                                                                                                                                                                                                                                                  | 68        | 57      |                                                                                                                                                                       |
| [WordPress](wordpress/wordpress-quiz.md)                                                          |                  |                                                                                                                                                                                                                                                                                  | 80        | 73      | [@ruslanbes](https://github.com/ruslanbes), [@Amsal1](https://github.com/Amsal1)                                                                                      |
| [XML](xml/xml-quiz.md)                                                                            |                  |                                                                                                                                                                                                                                                                                  | 43        | 42      | [@ruslanbes](https://github.com/ruslanbes)                                                                                                                            |

## Contributors ✨

Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):

<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->
<!-- prettier-ignore-start -->
<!-- markdownlint-disable -->
<table>
  <tbody>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Ebazhanov""><img src=""https://avatars2.githubusercontent.com/u/13170022?v=4?s=100"" width=""100px;"" alt=""Evgenii""/><br /><sub><b>Evgenii</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ebazhanov"" title=""Code"">💻</a> <a href=""#content-Ebazhanov"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ethereum.stackexchange.com/users/38531/monkrus""><img src=""https://avatars3.githubusercontent.com/u/12500447?v=4?s=100"" width=""100px;"" alt=""Sergei Stadnik""/><br /><sub><b>Sergei Stadnik</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=monkrus"" title=""Code"">💻</a> <a href=""#fundingFinding-monkrus"" title=""Funding Finding"">🔍</a> <a href=""#ideas-monkrus"" title=""Ideas, Planning, & Feedback"">🤔</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=monkrus"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/santhosh-techie""><img src=""https://avatars2.githubusercontent.com/u/29485255?v=4?s=100"" width=""100px;"" alt=""Santhosh""/><br /><sub><b>Santhosh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=santhosh-techie"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/iamjake-dev""><img src=""https://avatars0.githubusercontent.com/u/65621534?v=4?s=100"" width=""100px;"" alt=""Jacob Dsa""/><br /><sub><b>Jacob Dsa</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iamjake-dev"" title=""Code"">💻</a> <a href=""#content-iamjake-dev"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://aaronmeese.com""><img src=""https://avatars0.githubusercontent.com/u/17814535?v=4?s=100"" width=""100px;"" alt=""Aaron Meese""/><br /><sub><b>Aaron Meese</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ajmeese7"" title=""Code"">💻</a> <a href=""#content-ajmeese7"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/arqarq""><img src=""https://avatars3.githubusercontent.com/u/43341071?v=4?s=100"" width=""100px;"" alt=""arqarq""/><br /><sub><b>arqarq</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arqarq"" title=""Code"">💻</a> <a href=""#content-arqarq"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/amitykaran""><img src=""https://avatars2.githubusercontent.com/u/23481557?v=4?s=100"" width=""100px;"" alt=""Amit Yadav""/><br /><sub><b>Amit Yadav</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amitykaran"" title=""Code"">💻</a> <a href=""#content-amitykaran"" title=""Content"">🖋</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://creator.geekart.club/""><img src=""https://avatars0.githubusercontent.com/u/18037133?v=4?s=100"" width=""100px;"" alt=""Javokhir Nazarov""/><br /><sub><b>Javokhir Nazarov</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nazarov7mu"" title=""Code"">💻</a> <a href=""#content-Nazarov7mu"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/saurav1423""><img src=""https://avatars1.githubusercontent.com/u/55906348?v=4?s=100"" width=""100px;"" alt=""saurav kumar""/><br /><sub><b>saurav kumar</b></sub></a><br /><a href=""#content-saurav1423"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Chetan11-dev""><img src=""https://avatars0.githubusercontent.com/u/53407137?v=4?s=100"" width=""100px;"" alt=""Chetan""/><br /><sub><b>Chetan</b></sub></a><br /><a href=""#content-Chetan11-dev"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vanenshi""><img src=""https://avatars0.githubusercontent.com/u/61600246?v=4?s=100"" width=""100px;"" alt=""Amir Hossein Shekari""/><br /><sub><b>Amir Hossein Shekari</b></sub></a><br /><a href=""#design-vanenshi"" title=""Design"">🎨</a> <a href=""#content-vanenshi"" title=""Content"">🖋</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vanenshi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SergDaut""><img src=""https://avatars3.githubusercontent.com/u/65856306?v=4?s=100"" width=""100px;"" alt=""SergDaut""/><br /><sub><b>SergDaut</b></sub></a><br /><a href=""#design-SergDaut"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/pramaniknilotpal/""><img src=""https://avatars1.githubusercontent.com/u/33095476?v=4?s=100"" width=""100px;"" alt=""Nilotpal Pramanik""/><br /><sub><b>Nilotpal Pramanik</b></sub></a><br /><a href=""#design-goodday451999"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=goodday451999"" title=""Code"">💻</a> <a href=""#content-goodday451999"" title=""Content"">🖋</a> <a href=""#business-goodday451999"" title=""Business development"">💼</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=goodday451999"" title=""Documentation"">📖</a> <a href=""#data-goodday451999"" title=""Data"">🔣</a> <a href=""#example-goodday451999"" title=""Examples"">💡</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://abhisaphire.github.io""><img src=""https://avatars3.githubusercontent.com/u/43245214?v=4?s=100"" width=""100px;"" alt=""Abhishek Kumar""/><br /><sub><b>Abhishek Kumar</b></sub></a><br /><a href=""#design-AbhiSaphire"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.facebook.com/monu.gupta.14855377""><img src=""https://avatars3.githubusercontent.com/u/42869855?v=4?s=100"" width=""100px;"" alt=""Monu Gupta""/><br /><sub><b>Monu Gupta</b></sub></a><br /><a href=""#design-gmonu"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kartikeyaGUPTA45""><img src=""https://avatars2.githubusercontent.com/u/55397207?v=4?s=100"" width=""100px;"" alt=""KARTIKEYA GUPTA""/><br /><sub><b>KARTIKEYA GUPTA</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kartikeyaGUPTA45"" title=""Code"">💻</a> <a href=""#content-kartikeyaGUPTA45"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kenkyusha""><img src=""https://avatars1.githubusercontent.com/u/22096048?v=4?s=100"" width=""100px;"" alt=""kenkyusha""/><br /><sub><b>kenkyusha</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kenkyusha"" title=""Code"">💻</a> <a href=""#content-kenkyusha"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/juandavidtowers""><img src=""https://avatars0.githubusercontent.com/u/58567225?v=4?s=100"" width=""100px;"" alt=""juandavidtowers""/><br /><sub><b>juandavidtowers</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=juandavidtowers"" title=""Code"">💻</a> <a href=""#content-juandavidtowers"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cyber-netics""><img src=""https://avatars1.githubusercontent.com/u/67401984?v=4?s=100"" width=""100px;"" alt=""cyber-netics""/><br /><sub><b>cyber-netics</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cyber-netics"" title=""Code"">💻</a> <a href=""#content-cyber-netics"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jtrisw""><img src=""https://avatars0.githubusercontent.com/u/67442001?v=4?s=100"" width=""100px;"" alt=""jtrisw""/><br /><sub><b>jtrisw</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jtrisw"" title=""Code"">💻</a> <a href=""#content-jtrisw"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/renregalado""><img src=""https://avatars3.githubusercontent.com/u/15017921?v=4?s=100"" width=""100px;"" alt=""Renato Regalado""/><br /><sub><b>Renato Regalado</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ingenium21"" title=""Code"">💻</a> <a href=""#content-ingenium21"" title=""Content"">🖋</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://elixiumnetwork.org/""><img src=""https://avatars3.githubusercontent.com/u/19564531?v=4?s=100"" width=""100px;"" alt=""Matthew""/><br /><sub><b>Matthew</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fantypants"" title=""Code"">💻</a> <a href=""#content-fantypants"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/roplayer""><img src=""https://avatars0.githubusercontent.com/u/129923?v=4?s=100"" width=""100px;"" alt=""Jan S.""/><br /><sub><b>Jan S.</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=roplayer"" title=""Code"">💻</a> <a href=""#content-roplayer"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/igielskv""><img src=""https://avatars1.githubusercontent.com/u/7470561?v=4?s=100"" width=""100px;"" alt=""Manoli""/><br /><sub><b>Manoli</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=igielskv"" title=""Code"">💻</a> <a href=""#content-igielskv"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/faraztanveer""><img src=""https://avatars0.githubusercontent.com/u/23014681?v=4?s=100"" width=""100px;"" alt=""Faraz tanveer""/><br /><sub><b>Faraz tanveer</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=faraztanveer"" title=""Code"">💻</a> <a href=""#content-faraztanveer"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mohnishkarri""><img src=""https://avatars2.githubusercontent.com/u/60459557?v=4?s=100"" width=""100px;"" alt=""mohnishkarri""/><br /><sub><b>mohnishkarri</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mohnishkarri"" title=""Code"">💻</a> <a href=""#content-mohnishkarri"" title=""Content"">🖋</a> <a href=""#design-mohnishkarri"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/andyzhu""><img src=""https://avatars3.githubusercontent.com/u/171831?v=4?s=100"" width=""100px;"" alt=""andyzhu""/><br /><sub><b>andyzhu</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=andyzhu"" title=""Code"">💻</a> <a href=""#content-andyzhu"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kushvishal""><img src=""https://avatars3.githubusercontent.com/u/67946755?v=4?s=100"" width=""100px;"" alt=""Vishal Kushwah""/><br /><sub><b>Vishal Kushwah</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kushvishal"" title=""Code"">💻</a> <a href=""#content-kushvishal"" title=""Content"">🖋</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/7fold""><img src=""https://avatars1.githubusercontent.com/u/33958646?v=4?s=100"" width=""100px;"" alt=""Yurii Yakymenko""/><br /><sub><b>Yurii Yakymenko</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=7fold"" title=""Code"">💻</a> <a href=""#content-7fold"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.thetechrix.com""><img src=""https://avatars0.githubusercontent.com/u/19845881?v=4?s=100"" width=""100px;"" alt=""Swetabh Suman""/><br /><sub><b>Swetabh Suman</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Swetabhsuman8"" title=""Code"">💻</a> <a href=""#content-Swetabhsuman8"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/theInvincible""><img src=""https://avatars2.githubusercontent.com/u/60701544?v=4?s=100"" width=""100px;"" alt=""AJAY DANDGE""/><br /><sub><b>AJAY DANDGE</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=theInvincible"" title=""Code"">💻</a> <a href=""#content-theInvincible"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mehmeteyesin""><img src=""https://avatars3.githubusercontent.com/u/5034086?v=4?s=100"" width=""100px;"" alt=""Mehmet Yesin""/><br /><sub><b>Mehmet Yesin</b></sub></a><br /><a href=""#design-mehmeteyesin"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lok0613""><img src=""https://avatars0.githubusercontent.com/u/6286158?v=4?s=100"" width=""100px;"" alt=""Lok Chun Wai""/><br /><sub><b>Lok Chun Wai</b></sub></a><br /><a href=""#design-lok0613"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/adriadejuan""><img src=""https://avatars2.githubusercontent.com/u/59417678?v=4?s=100"" width=""100px;"" alt=""Adria de Juan""/><br /><sub><b>Adria de Juan</b></sub></a><br /><a href=""#design-adriadejuan"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gl-man""><img src=""https://avatars3.githubusercontent.com/u/29589220?v=4?s=100"" width=""100px;"" alt=""GL-Man""/><br /><sub><b>GL-Man</b></sub></a><br /><a href=""#design-gl-man"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Jheel-patel""><img src=""https://avatars2.githubusercontent.com/u/50559602?v=4?s=100"" width=""100px;"" alt=""Jheel Patel""/><br /><sub><b>Jheel Patel</b></sub></a><br /><a href=""#design-Jheel-patel"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://wsameer.github.io/v1/""><img src=""https://avatars0.githubusercontent.com/u/8468992?v=4?s=100"" width=""100px;"" alt=""Sameer Waskar""/><br /><sub><b>Sameer Waskar</b></sub></a><br /><a href=""#design-wsameer"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alexander-e-andrews""><img src=""https://avatars1.githubusercontent.com/u/45926661?v=4?s=100"" width=""100px;"" alt=""Alexander Andrews""/><br /><sub><b>Alexander Andrews</b></sub></a><br /><a href=""#design-alexander-e-andrews"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linkedin.com/in/abmaxwell/""><img src=""https://avatars1.githubusercontent.com/u/25352305?v=4?s=100"" width=""100px;"" alt=""Alexander Maxwell""/><br /><sub><b>Alexander Maxwell</b></sub></a><br /><a href=""#design-abmaxwell"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SlavaSD""><img src=""https://avatars2.githubusercontent.com/u/38739299?v=4?s=100"" width=""100px;"" alt=""Slava""/><br /><sub><b>Slava</b></sub></a><br /><a href=""#design-SlavaSD"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mayurbiw""><img src=""https://avatars2.githubusercontent.com/u/20475960?v=4?s=100"" width=""100px;"" alt=""Mayur Khatri""/><br /><sub><b>Mayur Khatri</b></sub></a><br /><a href=""#design-mayurbiw"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Mascantosh""><img src=""https://avatars0.githubusercontent.com/u/38609392?v=4?s=100"" width=""100px;"" alt=""Mascantosh""/><br /><sub><b>Mascantosh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Mascantosh"" title=""Code"">💻</a> <a href=""#content-Mascantosh"" title=""Content"">🖋</a> <a href=""#talk-Mascantosh"" title=""Talks"">📢</a> <a href=""#ideas-Mascantosh"" title=""Ideas, Planning, & Feedback"">🤔</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/kivancenesbeser/""><img src=""https://avatars0.githubusercontent.com/u/16528400?v=4?s=100"" width=""100px;"" alt=""Kivanc Enes""/><br /><sub><b>Kivanc Enes</b></sub></a><br /><a href=""#design-kivancbeser"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/ritika-das-ece/""><img src=""https://avatars2.githubusercontent.com/u/61988162?v=4?s=100"" width=""100px;"" alt=""Ritika Das""/><br /><sub><b>Ritika Das</b></sub></a><br /><a href=""#design-Ritika-Das"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Zer07793""><img src=""https://avatars3.githubusercontent.com/u/68774399?v=4?s=100"" width=""100px;"" alt=""Zer07793""/><br /><sub><b>Zer07793</b></sub></a><br /><a href=""#design-Zer07793"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cheungdzinyung""><img src=""https://avatars1.githubusercontent.com/u/24264186?v=4?s=100"" width=""100px;"" alt=""Andrew Cheung""/><br /><sub><b>Andrew Cheung</b></sub></a><br /><a href=""#design-cheungdzinyung"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sadhac""><img src=""https://avatars2.githubusercontent.com/u/35103750?v=4?s=100"" width=""100px;"" alt=""Sadha""/><br /><sub><b>Sadha</b></sub></a><br /><a href=""#design-sadhac"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tainenko""><img src=""https://avatars0.githubusercontent.com/u/31752048?v=4?s=100"" width=""100px;"" alt=""tainenko""/><br /><sub><b>tainenko</b></sub></a><br /><a href=""#design-tainenko"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tainenko"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/github-star-coder""><img src=""https://avatars2.githubusercontent.com/u/68719147?v=4?s=100"" width=""100px;"" alt=""github-star-coder""/><br /><sub><b>github-star-coder</b></sub></a><br /><a href=""#design-github-star-coder"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/danilotecoliveira""><img src=""https://avatars3.githubusercontent.com/u/8810413?v=4?s=100"" width=""100px;"" alt=""Danilo Oliveira""/><br /><sub><b>Danilo Oliveira</b></sub></a><br /><a href=""#design-danilotecoliveira"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lordeko""><img src=""https://avatars3.githubusercontent.com/u/5224614?v=4?s=100"" width=""100px;"" alt=""lordeko""/><br /><sub><b>lordeko</b></sub></a><br /><a href=""#design-lordeko"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/TheShubham-K""><img src=""https://avatars0.githubusercontent.com/u/52125841?v=4?s=100"" width=""100px;"" alt=""Shubham Kumar""/><br /><sub><b>Shubham Kumar</b></sub></a><br /><a href=""#design-TheShubham-K"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TheShubham-K"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/testtree""><img src=""https://avatars2.githubusercontent.com/u/69110357?v=4?s=100"" width=""100px;"" alt=""testtree""/><br /><sub><b>testtree</b></sub></a><br /><a href=""#design-testtree"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cherylli""><img src=""https://avatars2.githubusercontent.com/u/6191116?v=4?s=100"" width=""100px;"" alt=""Cheryl Murphy""/><br /><sub><b>Cheryl Murphy</b></sub></a><br /><a href=""#design-cherylli"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cherylli"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/TechieTom""><img src=""https://avatars2.githubusercontent.com/u/342573?v=4?s=100"" width=""100px;"" alt=""Bipin Thomas""/><br /><sub><b>Bipin Thomas</b></sub></a><br /><a href=""#design-TechieTom"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aHishamm""><img src=""https://avatars1.githubusercontent.com/u/40188935?v=4?s=100"" width=""100px;"" alt=""Abdulrahman Hisham""/><br /><sub><b>Abdulrahman Hisham</b></sub></a><br /><a href=""#design-aHishamm"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/dakshitha-dissanayaka-099a09143/?originalSubdomain=lk""><img src=""https://avatars1.githubusercontent.com/u/45692186?v=4?s=100"" width=""100px;"" alt=""Dakshitha Dissanayaka""/><br /><sub><b>Dakshitha Dissanayaka</b></sub></a><br /><a href=""#design-Dakshitha96"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://badrkac.github.io""><img src=""https://avatars0.githubusercontent.com/u/31140256?v=4?s=100"" width=""100px;"" alt=""BADR KACIMI""/><br /><sub><b>BADR KACIMI</b></sub></a><br /><a href=""#design-BADRKAC"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://naivekid.me/""><img src=""https://avatars2.githubusercontent.com/u/9972355?v=4?s=100"" width=""100px;"" alt=""Alex Wang""/><br /><sub><b>Alex Wang</b></sub></a><br /><a href=""#design-DarkAlexWang"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/maximlangman""><img src=""https://avatars2.githubusercontent.com/u/69239194?v=4?s=100"" width=""100px;"" alt=""Maxim""/><br /><sub><b>Maxim</b></sub></a><br /><a href=""#design-maximlangman"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GordonGrant""><img src=""https://avatars2.githubusercontent.com/u/69278254?v=4?s=100"" width=""100px;"" alt=""GordonGrant""/><br /><sub><b>GordonGrant</b></sub></a><br /><a href=""#design-GordonGrant"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GordonGrant"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://tirufat.com""><img src=""https://avatars1.githubusercontent.com/u/38384199?v=4?s=100"" width=""100px;"" alt=""Ephrem Demelash""/><br /><sub><b>Ephrem Demelash</b></sub></a><br /><a href=""#design-ephremdeme"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JonOrcutt""><img src=""https://avatars1.githubusercontent.com/u/14285933?v=4?s=100"" width=""100px;"" alt=""JonOrcutt""/><br /><sub><b>JonOrcutt</b></sub></a><br /><a href=""#design-JonOrcutt"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/topdev10""><img src=""https://avatars0.githubusercontent.com/u/44815224?v=4?s=100"" width=""100px;"" alt=""topdev10""/><br /><sub><b>topdev10</b></sub></a><br /><a href=""#design-topdev10"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cookwellwebsite""><img src=""https://avatars0.githubusercontent.com/u/67667331?v=4?s=100"" width=""100px;"" alt=""cookwellwebsite""/><br /><sub><b>cookwellwebsite</b></sub></a><br /><a href=""#design-cookwellwebsite"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/xren935""><img src=""https://avatars2.githubusercontent.com/u/59517115?v=4?s=100"" width=""100px;"" alt=""xren935""/><br /><sub><b>xren935</b></sub></a><br /><a href=""#design-xren935"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nemo369""><img src=""https://avatars2.githubusercontent.com/u/5106483?v=4?s=100"" width=""100px;"" alt=""Nemo Frenkel""/><br /><sub><b>Nemo Frenkel</b></sub></a><br /><a href=""#design-nemo369"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.hackerrank.com/mdsaifalam96""><img src=""https://avatars1.githubusercontent.com/u/38750964?v=4?s=100"" width=""100px;"" alt=""MD SAIF ALAM""/><br /><sub><b>MD SAIF ALAM</b></sub></a><br /><a href=""#design-mdsaifalam96"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/borosilva""><img src=""https://avatars1.githubusercontent.com/u/16139435?v=4?s=100"" width=""100px;"" alt=""Boris López Araya""/><br /><sub><b>Boris López Araya</b></sub></a><br /><a href=""#design-borosilva"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/LarryChiem""><img src=""https://avatars0.githubusercontent.com/u/15273129?v=4?s=100"" width=""100px;"" alt=""Larry Chiem""/><br /><sub><b>Larry Chiem</b></sub></a><br /><a href=""#design-LarryChiem"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bilal966""><img src=""https://avatars3.githubusercontent.com/u/8384741?v=4?s=100"" width=""100px;"" alt=""Muhammad Bilal Ilyas""/><br /><sub><b>Muhammad Bilal Ilyas</b></sub></a><br /><a href=""#design-bilal966"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://alimilani.ir""><img src=""https://avatars1.githubusercontent.com/u/59066012?v=4?s=100"" width=""100px;"" alt=""AliMilani""/><br /><sub><b>AliMilani</b></sub></a><br /><a href=""#design-AliMilani"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AliMilani"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://surajsahani.github.io/""><img src=""https://avatars3.githubusercontent.com/u/22853459?v=4?s=100"" width=""100px;"" alt=""Suraj Sahani""/><br /><sub><b>Suraj Sahani</b></sub></a><br /><a href=""#design-surajsahani"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://medium.com/@flyingSquirrel""><img src=""https://avatars2.githubusercontent.com/u/43737436?v=4?s=100"" width=""100px;"" alt=""FlyingSquirrel""/><br /><sub><b>FlyingSquirrel</b></sub></a><br /><a href=""#design-flyingSquirrel-dev"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ericktijerou.com/""><img src=""https://avatars1.githubusercontent.com/u/17746153?v=4?s=100"" width=""100px;"" alt=""Erick Tijero""/><br /><sub><b>Erick Tijero</b></sub></a><br /><a href=""#design-ericktijerou"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Jaskaran121""><img src=""https://avatars1.githubusercontent.com/u/35613378?v=4?s=100"" width=""100px;"" alt=""Jaskaran Kukreja""/><br /><sub><b>Jaskaran Kukreja</b></sub></a><br /><a href=""#design-Jaskaran121"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mlito""><img src=""https://avatars3.githubusercontent.com/u/5511762?v=4?s=100"" width=""100px;"" alt=""MichaelL""/><br /><sub><b>MichaelL</b></sub></a><br /><a href=""#design-mlito"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MagicLegend""><img src=""https://avatars1.githubusercontent.com/u/3169104?v=4?s=100"" width=""100px;"" alt=""MagicLegend""/><br /><sub><b>MagicLegend</b></sub></a><br /><a href=""#design-MagicLegend"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dkbearsong""><img src=""https://avatars0.githubusercontent.com/u/58266063?v=4?s=100"" width=""100px;"" alt=""Dereck Bearsong""/><br /><sub><b>Dereck Bearsong</b></sub></a><br /><a href=""#design-dkbearsong"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/pappu-kumar-pashi-75977a172/""><img src=""https://avatars2.githubusercontent.com/u/46879554?v=4?s=100"" width=""100px;"" alt=""Pappu Kumar Pashi""/><br /><sub><b>Pappu Kumar Pashi</b></sub></a><br /><a href=""#design-PappuKP"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kishore93""><img src=""https://avatars0.githubusercontent.com/u/12965564?v=4?s=100"" width=""100px;"" alt=""Venkata Kishore Tavva""/><br /><sub><b>Venkata Kishore Tavva</b></sub></a><br /><a href=""#design-kishore93"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rafattouqir""><img src=""https://avatars2.githubusercontent.com/u/2104659?v=4?s=100"" width=""100px;"" alt=""Rafat Touqir Rafsun""/><br /><sub><b>Rafat Touqir Rafsun</b></sub></a><br /><a href=""#design-rafattouqir"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.scikn.in""><img src=""https://avatars2.githubusercontent.com/u/53991169?v=4?s=100"" width=""100px;"" alt=""Snehesh Dutta""/><br /><sub><b>Snehesh Dutta</b></sub></a><br /><a href=""#design-Sneheshdutta"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://tik9.github.io/cv""><img src=""https://avatars0.githubusercontent.com/u/3178925?v=4?s=100"" width=""100px;"" alt=""Timo Körner""/><br /><sub><b>Timo Körner</b></sub></a><br /><a href=""#design-tik9"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tik9"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alexxxan""><img src=""https://avatars3.githubusercontent.com/u/70323867?v=4?s=100"" width=""100px;"" alt=""alexxxan""/><br /><sub><b>alexxxan</b></sub></a><br /><a href=""#design-alexxxan"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GGJason""><img src=""https://avatars0.githubusercontent.com/u/8362482?v=4?s=100"" width=""100px;"" alt=""GGJason""/><br /><sub><b>GGJason</b></sub></a><br /><a href=""#design-GGJason"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lewing00""><img src=""https://avatars1.githubusercontent.com/u/46617523?v=4?s=100"" width=""100px;"" alt=""LeeAnna Ewing""/><br /><sub><b>LeeAnna Ewing</b></sub></a><br /><a href=""#design-lewing00"" title=""Design"">🎨</a> <a href=""#ideas-lewing00"" title=""Ideas, Planning, & Feedback"">🤔</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/jyotwal""><img src=""https://avatars2.githubusercontent.com/u/19168650?v=4?s=100"" width=""100px;"" alt=""kamal Jyotwal""/><br /><sub><b>kamal Jyotwal</b></sub></a><br /><a href=""#design-kamaljyotwal"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Bob-Johns""><img src=""https://avatars2.githubusercontent.com/u/71194583?v=4?s=100"" width=""100px;"" alt=""Bob-Johns""/><br /><sub><b>Bob-Johns</b></sub></a><br /><a href=""#design-Bob-Johns"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Bob-Johns"" title=""Code"">💻</a> <a href=""#content-Bob-Johns"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/yunussalmanlyit""><img src=""https://avatars0.githubusercontent.com/u/61629690?v=4?s=100"" width=""100px;"" alt=""yunussalmanlyit""/><br /><sub><b>yunussalmanlyit</b></sub></a><br /><a href=""#design-yunussalmanlyit"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yunussalmanlyit"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chilcot""><img src=""https://avatars0.githubusercontent.com/u/62221068?v=4?s=100"" width=""100px;"" alt=""chilcot""/><br /><sub><b>chilcot</b></sub></a><br /><a href=""#design-chilcot"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chilcot"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jackyli-work""><img src=""https://avatars2.githubusercontent.com/u/54344547?v=4?s=100"" width=""100px;"" alt=""Jacky Li""/><br /><sub><b>Jacky Li</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jackyli-work"" title=""Code"">💻</a> <a href=""#content-jackyli-work"" title=""Content"">🖋</a> <a href=""#design-jackyli-work"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sarthaktrivedi99""><img src=""https://avatars3.githubusercontent.com/u/4245783?v=4?s=100"" width=""100px;"" alt=""Sarthak Trivedi""/><br /><sub><b>Sarthak Trivedi</b></sub></a><br /><a href=""#design-sarthaktrivedi99"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://ayushaggarwal.com""><img src=""https://avatars3.githubusercontent.com/u/17214678?v=4?s=100"" width=""100px;"" alt=""Ayush Aggarwal""/><br /><sub><b>Ayush Aggarwal</b></sub></a><br /><a href=""#design-ayushagg31"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayushagg31"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nicballarini""><img src=""https://avatars3.githubusercontent.com/u/13786995?v=4?s=100"" width=""100px;"" alt=""Nic Ballarini""/><br /><sub><b>Nic Ballarini</b></sub></a><br /><a href=""#design-nicballarini"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://blogs.dotnethell.it/ciupaz/""><img src=""https://avatars3.githubusercontent.com/u/3354890?v=4?s=100"" width=""100px;"" alt=""Luigi Zambetti""/><br /><sub><b>Luigi Zambetti</b></sub></a><br /><a href=""#design-LuigiZambetti"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LuigiZambetti"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/govindhaswin""><img src=""https://avatars2.githubusercontent.com/u/47293468?v=4?s=100"" width=""100px;"" alt=""govindhaswin""/><br /><sub><b>govindhaswin</b></sub></a><br /><a href=""#design-govindhaswin"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/royadityak94""><img src=""https://avatars0.githubusercontent.com/u/57421832?v=4?s=100"" width=""100px;"" alt=""Addy Roy""/><br /><sub><b>Addy Roy</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=royadityak94"" title=""Code"">💻</a> <a href=""#design-royadityak94"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dev-akshat/dev-akshat""><img src=""https://avatars3.githubusercontent.com/u/43572179?v=4?s=100"" width=""100px;"" alt=""Akshat Tamrakar""/><br /><sub><b>Akshat Tamrakar</b></sub></a><br /><a href=""#design-dev-akshat"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dev-akshat"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sai-github""><img src=""https://avatars2.githubusercontent.com/u/9116255?v=4?s=100"" width=""100px;"" alt=""Sai Bhargava Ramu""/><br /><sub><b>Sai Bhargava Ramu</b></sub></a><br /><a href=""#design-sai-github"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://youtube.com/c/gurkankaraman""><img src=""https://avatars1.githubusercontent.com/u/40955470?v=4?s=100"" width=""100px;"" alt=""Gurkan""/><br /><sub><b>Gurkan</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GHasanKaraman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://spencer-hayes.me/""><img src=""https://avatars3.githubusercontent.com/u/24394743?v=4?s=100"" width=""100px;"" alt=""Spencer Hayes-Laverdiere""/><br /><sub><b>Spencer Hayes-Laverdiere</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shaye059"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://linkedin.com/in/aniketsoni/""><img src=""https://avatars1.githubusercontent.com/u/47126963?v=4?s=100"" width=""100px;"" alt=""Aniket Soni""/><br /><sub><b>Aniket Soni</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aniketsoni1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tanmay5792""><img src=""https://avatars2.githubusercontent.com/u/71548736?v=4?s=100"" width=""100px;"" alt=""tanmay5792""/><br /><sub><b>tanmay5792</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tanmay5792"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/dina-taklit/""><img src=""https://avatars3.githubusercontent.com/u/20540072?v=4?s=100"" width=""100px;"" alt=""Dina Taklit""/><br /><sub><b>Dina Taklit</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DinaTaklit"" title=""Code"">💻</a> <a href=""#design-DinaTaklit"" title=""Design"">🎨</a> <a href=""#content-DinaTaklit"" title=""Content"">🖋</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dushyantsingh-ds""><img src=""https://avatars3.githubusercontent.com/u/55306442?v=4?s=100"" width=""100px;"" alt=""Dushyant Singh""/><br /><sub><b>Dushyant Singh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Dushyantsingh-ds"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/LeoMajorR""><img src=""https://avatars2.githubusercontent.com/u/35331954?v=4?s=100"" width=""100px;"" alt=""Ravi Prakash Singh""/><br /><sub><b>Ravi Prakash Singh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LeoMajorR"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/joshinihal""><img src=""https://avatars0.githubusercontent.com/u/60462831?v=4?s=100"" width=""100px;"" alt=""Nihal Joshi""/><br /><sub><b>Nihal Joshi</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=joshinihal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/klages""><img src=""https://avatars2.githubusercontent.com/u/7157817?v=4?s=100"" width=""100px;"" alt=""Guy Klages""/><br /><sub><b>Guy Klages</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=guyklages"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ac121102""><img src=""https://avatars3.githubusercontent.com/u/66919962?v=4?s=100"" width=""100px;"" alt=""Arvind""/><br /><sub><b>Arvind</b></sub></a><br /><a href=""#design-ac121102"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ac121102"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mujeeb91""><img src=""https://avatars3.githubusercontent.com/u/4310777?v=4?s=100"" width=""100px;"" alt=""mujeeb91""/><br /><sub><b>mujeeb91</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mujeeb91"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/joserca""><img src=""https://avatars3.githubusercontent.com/u/56326917?v=4?s=100"" width=""100px;"" alt=""joserca""/><br /><sub><b>joserca</b></sub></a><br /><a href=""#design-joserca"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=joserca"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://prateekagrawaliiit.github.io/personal-website/index""><img src=""https://avatars0.githubusercontent.com/u/65390045?v=4?s=100"" width=""100px;"" alt=""Prateek Agrawal""/><br /><sub><b>Prateek Agrawal</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=prateekagrawaliiit"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SarahTeoh""><img src=""https://avatars0.githubusercontent.com/u/28722169?v=4?s=100"" width=""100px;"" alt=""Teoh Tze Chuin(サラ)""/><br /><sub><b>Teoh Tze Chuin(サラ)</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SarahTeoh"" title=""Code"">💻</a> <a href=""#design-SarahTeoh"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://xybervenom.github.io""><img src=""https://avatars2.githubusercontent.com/u/40491811?v=4?s=100"" width=""100px;"" alt=""Jayant Jain""/><br /><sub><b>Jayant Jain</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xybervenom"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ayushsahu1999""><img src=""https://avatars0.githubusercontent.com/u/46241471?v=4?s=100"" width=""100px;"" alt=""Ayush Sahu""/><br /><sub><b>Ayush Sahu</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayushsahu1999"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://greenglow123.wordpress.com/""><img src=""https://avatars1.githubusercontent.com/u/43813666?v=4?s=100"" width=""100px;"" alt=""Hridya Krishna R""/><br /><sub><b>Hridya Krishna R</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hridyakrishna"" title=""Code"">💻</a> <a href=""#design-hridyakrishna"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://rahbal.github.io""><img src=""https://avatars3.githubusercontent.com/u/5176514?v=4?s=100"" width=""100px;"" alt=""Rahul Bali""/><br /><sub><b>Rahul Bali</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rahbal"" title=""Code"">💻</a> <a href=""#design-rahbal"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DevHabit""><img src=""https://avatars0.githubusercontent.com/u/3051782?v=4?s=100"" width=""100px;"" alt=""S.ZHeng""/><br /><sub><b>S.ZHeng</b></sub></a><br /><a href=""#design-DevHabit"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DevHabit"" title=""Code"">💻</a> <a href=""#business-DevHabit"" title=""Business development"">💼</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shriyaMadan""><img src=""https://avatars1.githubusercontent.com/u/38863530?v=4?s=100"" width=""100px;"" alt=""Shriya Madan""/><br /><sub><b>Shriya Madan</b></sub></a><br /><a href=""#design-shriyaMadan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shriyaMadan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mahalrupi""><img src=""https://avatars3.githubusercontent.com/u/31862642?v=4?s=100"" width=""100px;"" alt=""mahalrupi""/><br /><sub><b>mahalrupi</b></sub></a><br /><a href=""#design-mahalrupi"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/LucasLermagne""><img src=""https://avatars1.githubusercontent.com/u/60604364?v=4?s=100"" width=""100px;"" alt=""Lucas Lermagne""/><br /><sub><b>Lucas Lermagne</b></sub></a><br /><a href=""#design-LucasLermagne"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jadeutsch""><img src=""https://avatars0.githubusercontent.com/u/24517053?v=4?s=100"" width=""100px;"" alt=""Jeff Deutsch""/><br /><sub><b>Jeff Deutsch</b></sub></a><br /><a href=""#design-jadeutsch"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jadeutsch"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Betoxx1""><img src=""https://avatars2.githubusercontent.com/u/20777308?v=4?s=100"" width=""100px;"" alt=""Betoxx1""/><br /><sub><b>Betoxx1</b></sub></a><br /><a href=""#design-Betoxx1"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Wingman4l7""><img src=""https://avatars1.githubusercontent.com/u/1383561?v=4?s=100"" width=""100px;"" alt=""Wingman4l7""/><br /><sub><b>Wingman4l7</b></sub></a><br /><a href=""#design-Wingman4l7"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MarespTech""><img src=""https://avatars1.githubusercontent.com/u/62226552?v=4?s=100"" width=""100px;"" alt=""Martin Espericueta""/><br /><sub><b>Martin Espericueta</b></sub></a><br /><a href=""#design-MarespTech"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mh-tahir.github.io""><img src=""https://avatars2.githubusercontent.com/u/58627780?v=4?s=100"" width=""100px;"" alt=""Mh-Tahir""/><br /><sub><b>Mh-Tahir</b></sub></a><br /><a href=""#design-Mh-Tahir"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ZdravekSprite""><img src=""https://avatars3.githubusercontent.com/u/52032768?v=4?s=100"" width=""100px;"" alt=""Zdravko Šplajt""/><br /><sub><b>Zdravko Šplajt</b></sub></a><br /><a href=""#design-ZdravekSprite"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ZdravekSprite"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Ms3105""><img src=""https://avatars2.githubusercontent.com/u/68704852?v=4?s=100"" width=""100px;"" alt=""Ms3105""/><br /><sub><b>Ms3105</b></sub></a><br /><a href=""#design-Ms3105"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ms3105"" title=""Code"">💻</a> <a href=""#content-Ms3105"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sidhesware3298""><img src=""https://avatars0.githubusercontent.com/u/56552115?v=4?s=100"" width=""100px;"" alt=""Ambika Sidhesware""/><br /><sub><b>Ambika Sidhesware</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sidhesware3298"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mundoguero""><img src=""https://avatars1.githubusercontent.com/u/1318156?v=4?s=100"" width=""100px;"" alt=""mundoguero""/><br /><sub><b>mundoguero</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mundoguero"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Darkus24""><img src=""https://avatars1.githubusercontent.com/u/72884834?v=4?s=100"" width=""100px;"" alt=""Darkus24""/><br /><sub><b>Darkus24</b></sub></a><br /><a href=""#content-Darkus24"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Sou-786""><img src=""https://avatars1.githubusercontent.com/u/63981549?v=4?s=100"" width=""100px;"" alt=""Sou-786""/><br /><sub><b>Sou-786</b></sub></a><br /><a href=""#content-Sou-786"" title=""Content"">🖋</a> <a href=""#design-Sou-786"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/banurekhaMohan279""><img src=""https://avatars2.githubusercontent.com/u/21097764?v=4?s=100"" width=""100px;"" alt=""Banurekha""/><br /><sub><b>Banurekha</b></sub></a><br /><a href=""#content-banurekhaMohan279"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ShiraStarL""><img src=""https://avatars1.githubusercontent.com/u/37556795?v=4?s=100"" width=""100px;"" alt=""ShiraStarL""/><br /><sub><b>ShiraStarL</b></sub></a><br /><a href=""#design-ShiraStarL"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mozgit""><img src=""https://avatars0.githubusercontent.com/u/2301052?v=4?s=100"" width=""100px;"" alt=""Ilya Komarov""/><br /><sub><b>Ilya Komarov</b></sub></a><br /><a href=""#design-mozgit"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DemigodMs""><img src=""https://avatars3.githubusercontent.com/u/72858244?v=4?s=100"" width=""100px;"" alt=""DemigodMs""/><br /><sub><b>DemigodMs</b></sub></a><br /><a href=""#content-DemigodMs"" title=""Content"">🖋</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DemigodMs"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rapunzel127""><img src=""https://avatars1.githubusercontent.com/u/44580953?v=4?s=100"" width=""100px;"" alt=""Mekha Hridya""/><br /><sub><b>Mekha Hridya</b></sub></a><br /><a href=""#design-rapunzel127"" title=""Design"">🎨</a> <a href=""#fundingFinding-rapunzel127"" title=""Funding Finding"">🔍</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.andreysafonov.com""><img src=""https://avatars2.githubusercontent.com/u/6531389?v=4?s=100"" width=""100px;"" alt=""Andrey Safonov""/><br /><sub><b>Andrey Safonov</b></sub></a><br /><a href=""#design-andreysaf"" title=""Design"">🎨</a> <a href=""#fundingFinding-andreysaf"" title=""Funding Finding"">🔍</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://tommasopifferi.com""><img src=""https://avatars3.githubusercontent.com/u/1112539?v=4?s=100"" width=""100px;"" alt=""Tommaso""/><br /><sub><b>Tommaso</b></sub></a><br /><a href=""#design-neslinesli93"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=neslinesli93"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jessicasalbert""><img src=""https://avatars0.githubusercontent.com/u/66483878?v=4?s=100"" width=""100px;"" alt=""Jessica Salbert""/><br /><sub><b>Jessica Salbert</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jessicasalbert"" title=""Code"">💻</a> <a href=""#design-jessicasalbert"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JAYISAWSM""><img src=""https://avatars0.githubusercontent.com/u/32494701?v=4?s=100"" width=""100px;"" alt=""JAYANTH DOLAI""/><br /><sub><b>JAYANTH DOLAI</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JAYISAWSM"" title=""Code"">💻</a> <a href=""#design-JAYISAWSM"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/silverstroom""><img src=""https://avatars3.githubusercontent.com/u/43572178?v=4?s=100"" width=""100px;"" alt=""silverstroom""/><br /><sub><b>silverstroom</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=silverstroom"" title=""Code"">💻</a> <a href=""#design-silverstroom"" title=""Design"">🎨</a> <a href=""#business-silverstroom"" title=""Business development"">💼</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://furkansayim.com""><img src=""https://avatars1.githubusercontent.com/u/3766764?v=4?s=100"" width=""100px;"" alt=""Furkan Sayım""/><br /><sub><b>Furkan Sayım</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xShuden"" title=""Code"">💻</a> <a href=""#design-xShuden"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.sukumarc.com""><img src=""https://avatars2.githubusercontent.com/u/9497448?v=4?s=100"" width=""100px;"" alt=""Sukumar Chandrasekaran""/><br /><sub><b>Sukumar Chandrasekaran</b></sub></a><br /><a href=""#design-sukumarc"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/98yejin""><img src=""https://avatars1.githubusercontent.com/u/30521748?v=4?s=100"" width=""100px;"" alt=""Yejin Park""/><br /><sub><b>Yejin Park</b></sub></a><br /><a href=""#design-98yejin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=98yejin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alinooshabadi""><img src=""https://avatars1.githubusercontent.com/u/646788?v=4?s=100"" width=""100px;"" alt=""Ali Nooshabadi""/><br /><sub><b>Ali Nooshabadi</b></sub></a><br /><a href=""#design-alinooshabadi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alinooshabadi"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/imitavor""><img src=""https://avatars2.githubusercontent.com/u/73336620?v=4?s=100"" width=""100px;"" alt=""imitavor""/><br /><sub><b>imitavor</b></sub></a><br /><a href=""#design-imitavor"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=imitavor"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://salihkilicli.github.io/""><img src=""https://avatars1.githubusercontent.com/u/42879163?v=4?s=100"" width=""100px;"" alt=""Salih Kilicli""/><br /><sub><b>Salih Kilicli</b></sub></a><br /><a href=""#design-salihkilicli"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=salihkilicli"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/srmeneses""><img src=""https://avatars2.githubusercontent.com/u/11792508?v=4?s=100"" width=""100px;"" alt=""Marcelo Meneses""/><br /><sub><b>Marcelo Meneses</b></sub></a><br /><a href=""#design-srmeneses"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=srmeneses"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tonchique""><img src=""https://avatars1.githubusercontent.com/u/36279559?v=4?s=100"" width=""100px;"" alt=""Anton Krekotun""/><br /><sub><b>Anton Krekotun</b></sub></a><br /><a href=""#design-tonchique"" title=""Design"">🎨</a> <a href=""#maintenance-tonchique"" title=""Maintenance"">🚧</a> <a href=""#content-tonchique"" title=""Content"">🖋</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tonchique"" title=""Code"">💻</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tonchique"" title=""Documentation"">📖</a> <a href=""#business-tonchique"" title=""Business development"">💼</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/arnavsarmagatechgrad/""><img src=""https://avatars1.githubusercontent.com/u/12614627?v=4?s=100"" width=""100px;"" alt=""Arnav Sarma""/><br /><sub><b>Arnav Sarma</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=asarma2012"" title=""Code"">💻</a> <a href=""#example-asarma2012"" title=""Examples"">💡</a> <a href=""#design-asarma2012"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/meghatiku""><img src=""https://avatars0.githubusercontent.com/u/43341228?v=4?s=100"" width=""100px;"" alt=""meghatiku""/><br /><sub><b>meghatiku</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=meghatiku"" title=""Code"">💻</a> <a href=""#design-meghatiku"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/anshu-trivedi-501a7b146/""><img src=""https://avatars1.githubusercontent.com/u/47869948?v=4?s=100"" width=""100px;"" alt=""Anshu Trivedi""/><br /><sub><b>Anshu Trivedi</b></sub></a><br /><a href=""#design-AnshuTrivedi"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://taylordorsett.com""><img src=""https://avatars3.githubusercontent.com/u/16449771?v=4?s=100"" width=""100px;"" alt=""Taylor Dorsett""/><br /><sub><b>Taylor Dorsett</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TaylorOD"" title=""Code"">💻</a> <a href=""#content-TaylorOD"" title=""Content"">🖋</a> <a href=""#design-TaylorOD"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://blog.havit.web.id/""><img src=""https://avatars3.githubusercontent.com/u/17120764?v=4?s=100"" width=""100px;"" alt=""Havit Rovik""/><br /><sub><b>Havit Rovik</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=haruelrovix"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pushpapune""><img src=""https://avatars1.githubusercontent.com/u/73734199?v=4?s=100"" width=""100px;"" alt=""pushpapune""/><br /><sub><b>pushpapune</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pushpapune"" title=""Code"">💻</a> <a href=""#design-pushpapune"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rradfar""><img src=""https://avatars3.githubusercontent.com/u/31255934?v=4?s=100"" width=""100px;"" alt=""Ramtin Radfar""/><br /><sub><b>Ramtin Radfar</b></sub></a><br /><a href=""#design-rradfar"" title=""Design"">🎨</a> <a href=""#ideas-rradfar"" title=""Ideas, Planning, & Feedback"">🤔</a> <a href=""#business-rradfar"" title=""Business development"">💼</a> <a href=""#financial-rradfar"" title=""Financial"">💵</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rradfar"" title=""Code"">💻</a> <a href=""#content-rradfar"" title=""Content"">🖋</a> <a href=""#question-rradfar"" title=""Answering Questions"">💬</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.abdulmajeedisa.com""><img src=""https://avatars0.githubusercontent.com/u/44467524?v=4?s=100"" width=""100px;"" alt=""Abdulmajeed Isa""/><br /><sub><b>Abdulmajeed Isa</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amajai"" title=""Code"">💻</a> <a href=""#design-amajai"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vikassaxena02""><img src=""https://avatars2.githubusercontent.com/u/25317029?v=4?s=100"" width=""100px;"" alt=""vikassaxena02""/><br /><sub><b>vikassaxena02</b></sub></a><br /><a href=""#design-vikassaxena02"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RobTables""><img src=""https://avatars3.githubusercontent.com/u/52382103?v=4?s=100"" width=""100px;"" alt=""RobTables""/><br /><sub><b>RobTables</b></sub></a><br /><a href=""#design-RobTables"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RobTables"" title=""Code"">💻</a> <a href=""#business-RobTables"" title=""Business development"">💼</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Daniboy370""><img src=""https://avatars0.githubusercontent.com/u/46421909?v=4?s=100"" width=""100px;"" alt=""Daniel""/><br /><sub><b>Daniel</b></sub></a><br /><a href=""#design-Daniboy370"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Daniboy370"" title=""Code"">💻</a> <a href=""#business-Daniboy370"" title=""Business development"">💼</a> <a href=""#fundingFinding-Daniboy370"" title=""Funding Finding"">🔍</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/zaahidali/""><img src=""https://avatars1.githubusercontent.com/u/37751705?v=4?s=100"" width=""100px;"" alt=""Zahid Ali""/><br /><sub><b>Zahid Ali</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=zaahidali"" title=""Code"">💻</a> <a href=""#design-zaahidali"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SuperGuy10""><img src=""https://avatars2.githubusercontent.com/u/13461705?v=4?s=100"" width=""100px;"" alt=""Chad Chai""/><br /><sub><b>Chad Chai</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SuperGuy10"" title=""Code"">💻</a> <a href=""#design-SuperGuy10"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://marcobiedermann.com""><img src=""https://avatars0.githubusercontent.com/u/5244986?v=4?s=100"" width=""100px;"" alt=""Marco Biedermann""/><br /><sub><b>Marco Biedermann</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=marcobiedermann"" title=""Code"">💻</a> <a href=""#design-marcobiedermann"" title=""Design"">🎨</a> <a href=""#business-marcobiedermann"" title=""Business development"">💼</a> <a href=""#ideas-marcobiedermann"" title=""Ideas, Planning, & Feedback"">🤔</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/srinidhimurthy""><img src=""https://avatars3.githubusercontent.com/u/10862228?v=4?s=100"" width=""100px;"" alt=""Srinidhi Murthy""/><br /><sub><b>Srinidhi Murthy</b></sub></a><br /><a href=""#design-srinidhimurthy"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Hephaest""><img src=""https://avatars2.githubusercontent.com/u/37981444?v=4?s=100"" width=""100px;"" alt=""Miao Cai""/><br /><sub><b>Miao Cai</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Hephaest"" title=""Code"">💻</a> <a href=""#design-Hephaest"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dioniciodiaz""><img src=""https://avatars3.githubusercontent.com/u/26011982?v=4?s=100"" width=""100px;"" alt=""Dionicio Diaz""/><br /><sub><b>Dionicio Diaz</b></sub></a><br /><a href=""#design-dioniciodiaz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dioniciodiaz"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mirmpro""><img src=""https://avatars0.githubusercontent.com/u/14123130?v=4?s=100"" width=""100px;"" alt=""Mir Monoarul Alam""/><br /><sub><b>Mir Monoarul Alam</b></sub></a><br /><a href=""#design-mirmpro"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.shawnohn.com""><img src=""https://avatars0.githubusercontent.com/u/16888656?v=4?s=100"" width=""100px;"" alt=""Shawn Ohn""/><br /><sub><b>Shawn Ohn</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shawnohn"" title=""Code"">💻</a> <a href=""#design-shawnohn"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://amanbolat.com/""><img src=""https://avatars3.githubusercontent.com/u/15110242?v=4?s=100"" width=""100px;"" alt=""Amanbolat Balabekov""/><br /><sub><b>Amanbolat Balabekov</b></sub></a><br /><a href=""#design-amanbolat"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amanbolat"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/black-mamba-code""><img src=""https://avatars0.githubusercontent.com/u/74553558?v=4?s=100"" width=""100px;"" alt=""black-mamba-code""/><br /><sub><b>black-mamba-code</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=black-mamba-code"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Jian-forks""><img src=""https://avatars1.githubusercontent.com/u/59821548?v=4?s=100"" width=""100px;"" alt=""Jian-forks""/><br /><sub><b>Jian-forks</b></sub></a><br /><a href=""#design-Jian-forks"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jian-forks"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://shivani30594.wixsite.com/shivani30594""><img src=""https://avatars0.githubusercontent.com/u/10483979?v=4?s=100"" width=""100px;"" alt=""shivani patel""/><br /><sub><b>shivani patel</b></sub></a><br /><a href=""#design-shivani30594"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Akash-chowrasia""><img src=""https://avatars2.githubusercontent.com/u/47868444?v=4?s=100"" width=""100px;"" alt=""Akash Chowrasia""/><br /><sub><b>Akash Chowrasia</b></sub></a><br /><a href=""#design-Akash-chowrasia"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/yairg98""><img src=""https://avatars1.githubusercontent.com/u/57117865?v=4?s=100"" width=""100px;"" alt=""yairg98""/><br /><sub><b>yairg98</b></sub></a><br /><a href=""#design-yairg98"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://jaygajjar.tk/""><img src=""https://avatars2.githubusercontent.com/u/57590688?v=4?s=100"" width=""100px;"" alt=""Jay Gajjar""/><br /><sub><b>Jay Gajjar</b></sub></a><br /><a href=""#design-j-j-gajjar"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/coolerbooler""><img src=""https://avatars1.githubusercontent.com/u/74932465?v=4?s=100"" width=""100px;"" alt=""coolerbooler""/><br /><sub><b>coolerbooler</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=coolerbooler"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://jinnatul.github.io/""><img src=""https://avatars2.githubusercontent.com/u/31995155?v=4?s=100"" width=""100px;"" alt=""Md Zinnatul Islam Morol""/><br /><sub><b>Md Zinnatul Islam Morol</b></sub></a><br /><a href=""#design-jinnatul"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shresthashok550""><img src=""https://avatars2.githubusercontent.com/u/67057717?v=4?s=100"" width=""100px;"" alt=""shresthashok550""/><br /><sub><b>shresthashok550</b></sub></a><br /><a href=""#design-shresthashok550"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shresthashok550"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://alanpallath.codes/""><img src=""https://avatars0.githubusercontent.com/u/17932700?v=4?s=100"" width=""100px;"" alt=""Alan Pallath""/><br /><sub><b>Alan Pallath</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=a1764879"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/adrianjw/""><img src=""https://avatars3.githubusercontent.com/u/55360387?v=4?s=100"" width=""100px;"" alt=""Adrian Wong""/><br /><sub><b>Adrian Wong</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adrianjw"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vsDizzy""><img src=""https://avatars1.githubusercontent.com/u/5798340?v=4?s=100"" width=""100px;"" alt=""vsDizzy""/><br /><sub><b>vsDizzy</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vsDizzy"" title=""Code"">💻</a> <a href=""#design-vsDizzy"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://facebook.com/fcuadillera""><img src=""https://avatars0.githubusercontent.com/u/17181425?v=4?s=100"" width=""100px;"" alt=""Frex Cuadillera""/><br /><sub><b>Frex Cuadillera</b></sub></a><br /><a href=""#design-frexcuadillera"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=frexcuadillera"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ashish570""><img src=""https://avatars3.githubusercontent.com/u/61080406?v=4?s=100"" width=""100px;"" alt=""ashish570""/><br /><sub><b>ashish570</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ashish570"" title=""Code"">💻</a> <a href=""#design-ashish570"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ruchpeanuts""><img src=""https://avatars0.githubusercontent.com/u/29301900?v=4?s=100"" width=""100px;"" alt=""ruchpeanuts""/><br /><sub><b>ruchpeanuts</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ruchpeanuts"" title=""Code"">💻</a> <a href=""#design-ruchpeanuts"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Artmasque""><img src=""https://avatars3.githubusercontent.com/u/23199407?v=4?s=100"" width=""100px;"" alt=""Artmasque""/><br /><sub><b>Artmasque</b></sub></a><br /><a href=""#design-Artmasque"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Artmasque"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://amaje.ir""><img src=""https://avatars0.githubusercontent.com/u/15340704?v=4?s=100"" width=""100px;"" alt=""Amirhossein Mojiri Foroushani""/><br /><sub><b>Amirhossein Mojiri Foroushani</b></sub></a><br /><a href=""#design-amirmojiry"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/for""><img src=""https://avatars1.githubusercontent.com/u/7262123?v=4?s=100"" width=""100px;"" alt=""for""/><br /><sub><b>for</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=for"" title=""Code"">💻</a> <a href=""#design-for"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lukee1234""><img src=""https://avatars2.githubusercontent.com/u/61923182?v=4?s=100"" width=""100px;"" alt=""Luke""/><br /><sub><b>Luke</b></sub></a><br /><a href=""#design-lukee1234"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lukee1234"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://sites.google.com/site/espinozahg/""><img src=""https://avatars1.githubusercontent.com/u/9592831?v=4?s=100"" width=""100px;"" alt=""Hector Espinoza""/><br /><sub><b>Hector Espinoza</b></sub></a><br /><a href=""#design-espinozahg"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/adrianbuenfil/""><img src=""https://avatars2.githubusercontent.com/u/71770394?v=4?s=100"" width=""100px;"" alt=""Adrián Buenfil""/><br /><sub><b>Adrián Buenfil</b></sub></a><br /><a href=""#design-AdrianBuenfil"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AdrianBuenfil"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://amitravikumar.github.io/""><img src=""https://avatars2.githubusercontent.com/u/43449014?v=4?s=100"" width=""100px;"" alt=""Amit Kumar""/><br /><sub><b>Amit Kumar</b></sub></a><br /><a href=""#design-amitravikumar"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://None""><img src=""https://avatars2.githubusercontent.com/u/37182137?v=4?s=100"" width=""100px;"" alt=""schoppfe""/><br /><sub><b>schoppfe</b></sub></a><br /><a href=""#design-schoppfe"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=schoppfe"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aamllc""><img src=""https://avatars1.githubusercontent.com/u/75911712?v=4?s=100"" width=""100px;"" alt=""Sofiyal C""/><br /><sub><b>Sofiyal C</b></sub></a><br /><a href=""#design-aamllc"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aamllc"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/spitlisk""><img src=""https://avatars1.githubusercontent.com/u/43657878?v=4?s=100"" width=""100px;"" alt=""spitlisk""/><br /><sub><b>spitlisk</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=spitlisk"" title=""Code"">💻</a> <a href=""#design-spitlisk"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/pravin--sharma""><img src=""https://avatars2.githubusercontent.com/u/32671972?v=4?s=100"" width=""100px;"" alt=""PRAVIN SHARMA""/><br /><sub><b>PRAVIN SHARMA</b></sub></a><br /><a href=""#design-pravin-sharma"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/NIDZAAA1""><img src=""https://avatars3.githubusercontent.com/u/58033073?v=4?s=100"" width=""100px;"" alt=""NIDZAAA1""/><br /><sub><b>NIDZAAA1</b></sub></a><br /><a href=""#design-NIDZAAA1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NIDZAAA1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JohnMai1994""><img src=""https://avatars2.githubusercontent.com/u/44597440?v=4?s=100"" width=""100px;"" alt=""John Mai""/><br /><sub><b>John Mai</b></sub></a><br /><a href=""#design-JohnMai1994"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JohnMai1994"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://soso-cod3v.tistory.com/""><img src=""https://avatars3.githubusercontent.com/u/43427380?v=4?s=100"" width=""100px;"" alt=""kimsoyeong""/><br /><sub><b>kimsoyeong</b></sub></a><br /><a href=""#design-kimsoyeong"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/donaghosh""><img src=""https://avatars2.githubusercontent.com/u/30055109?v=4?s=100"" width=""100px;"" alt=""Dona Ghosh""/><br /><sub><b>Dona Ghosh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=donaghosh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ryanhill1""><img src=""https://avatars2.githubusercontent.com/u/46977852?v=4?s=100"" width=""100px;"" alt=""Ryan Hill""/><br /><sub><b>Ryan Hill</b></sub></a><br /><a href=""#design-ryanhill1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ryanhill1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/j42z""><img src=""https://avatars2.githubusercontent.com/u/30728262?v=4?s=100"" width=""100px;"" alt=""j42z""/><br /><sub><b>j42z</b></sub></a><br /><a href=""#design-j42z"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=j42z"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ashishsangale""><img src=""https://avatars3.githubusercontent.com/u/39612240?v=4?s=100"" width=""100px;"" alt=""Ashish Sangale""/><br /><sub><b>Ashish Sangale</b></sub></a><br /><a href=""#design-ashishsangale"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ashishsangale"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://derekyang.netlify.app""><img src=""https://avatars1.githubusercontent.com/u/55335639?v=4?s=100"" width=""100px;"" alt=""Derek Yang""/><br /><sub><b>Derek Yang</b></sub></a><br /><a href=""#design-baymax88"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=baymax88"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mohsinmsm""><img src=""https://avatars2.githubusercontent.com/u/63414742?v=4?s=100"" width=""100px;"" alt=""mohsinmsm""/><br /><sub><b>mohsinmsm</b></sub></a><br /><a href=""#design-mohsinmsm"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mohsinmsm"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/gokulakrishnan-velu-43289174/""><img src=""https://avatars3.githubusercontent.com/u/65799732?v=4?s=100"" width=""100px;"" alt=""Gokulkrish2302""/><br /><sub><b>Gokulkrish2302</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gokulkrish2302"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Bhaavishek""><img src=""https://avatars0.githubusercontent.com/u/49985195?v=4?s=100"" width=""100px;"" alt=""Bhaavishek""/><br /><sub><b>Bhaavishek</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Bhaavishek"" title=""Code"">💻</a> <a href=""#design-Bhaavishek"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/a401120174""><img src=""https://avatars0.githubusercontent.com/u/39911137?v=4?s=100"" width=""100px;"" alt=""Louis Liao""/><br /><sub><b>Louis Liao</b></sub></a><br /><a href=""#design-a401120174"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sengc92""><img src=""https://avatars1.githubusercontent.com/u/63807395?v=4?s=100"" width=""100px;"" alt=""sengc92""/><br /><sub><b>sengc92</b></sub></a><br /><a href=""#design-sengc92"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sengc92"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/amarvin""><img src=""https://avatars2.githubusercontent.com/u/10762127?v=4?s=100"" width=""100px;"" alt=""Alex Marvin""/><br /><sub><b>Alex Marvin</b></sub></a><br /><a href=""#design-amarvin"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/balkrishna-bhatt-1b2830131/""><img src=""https://avatars1.githubusercontent.com/u/28816472?v=4?s=100"" width=""100px;"" alt=""Balkrishna Bhatt""/><br /><sub><b>Balkrishna Bhatt</b></sub></a><br /><a href=""#design-BalkrishnaBhatt"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BalkrishnaBhatt"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://lavrinovicius.lt""><img src=""https://avatars1.githubusercontent.com/u/24303281?v=4?s=100"" width=""100px;"" alt=""Evaldas Lavrinovičius""/><br /><sub><b>Evaldas Lavrinovičius</b></sub></a><br /><a href=""#design-xTheEc0"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xTheEc0"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.facebook.com/erchegyia""><img src=""https://avatars3.githubusercontent.com/u/17572418?v=4?s=100"" width=""100px;"" alt=""Adam Erchegyi""/><br /><sub><b>Adam Erchegyi</b></sub></a><br /><a href=""#design-erchegyia"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=erchegyia"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://trumanhung.tech""><img src=""https://avatars1.githubusercontent.com/u/7915216?v=4?s=100"" width=""100px;"" alt=""Truman Hung""/><br /><sub><b>Truman Hung</b></sub></a><br /><a href=""#design-trumanhung"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=trumanhung"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://romanzamoracarrerascv.s3-website-eu-west-1.amazonaws.com""><img src=""https://avatars0.githubusercontent.com/u/71715749?v=4?s=100"" width=""100px;"" alt=""rzamora11""/><br /><sub><b>rzamora11</b></sub></a><br /><a href=""#design-rzamora11"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gaurav0224""><img src=""https://avatars3.githubusercontent.com/u/37846341?v=4?s=100"" width=""100px;"" alt=""gaurav0224""/><br /><sub><b>gaurav0224</b></sub></a><br /><a href=""#design-gaurav0224"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cockyb""><img src=""https://avatars1.githubusercontent.com/u/56942459?v=4?s=100"" width=""100px;"" alt=""Lee GyeongJun""/><br /><sub><b>Lee GyeongJun</b></sub></a><br /><a href=""#design-cockyb"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://miroslawlis.github.io/""><img src=""https://avatars1.githubusercontent.com/u/8983142?v=4?s=100"" width=""100px;"" alt=""Mirek""/><br /><sub><b>Mirek</b></sub></a><br /><a href=""#design-miroslawlis"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=miroslawlis"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/surajm245""><img src=""https://avatars2.githubusercontent.com/u/11998757?v=4?s=100"" width=""100px;"" alt=""surajm245""/><br /><sub><b>surajm245</b></sub></a><br /><a href=""#design-surajm245"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ArisLaode""><img src=""https://avatars2.githubusercontent.com/u/21226377?v=4?s=100"" width=""100px;"" alt=""ArisLaode""/><br /><sub><b>ArisLaode</b></sub></a><br /><a href=""#design-ArisLaode"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ArisLaode"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RaviDhoriya""><img src=""https://avatars1.githubusercontent.com/u/6481302?v=4?s=100"" width=""100px;"" alt=""RaviDhoriya""/><br /><sub><b>RaviDhoriya</b></sub></a><br /><a href=""#design-RaviDhoriya"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RaviDhoriya"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sarai-84""><img src=""https://avatars2.githubusercontent.com/u/77579381?v=4?s=100"" width=""100px;"" alt=""sarai-84""/><br /><sub><b>sarai-84</b></sub></a><br /><a href=""#design-sarai-84"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sarai-84"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://vishnudamwala.netlify.com/""><img src=""https://avatars2.githubusercontent.com/u/4034728?v=4?s=100"" width=""100px;"" alt=""Vishnu""/><br /><sub><b>Vishnu</b></sub></a><br /><a href=""#design-cooldashing24"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cooldashing24"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://muhammadminhaj.github.io""><img src=""https://avatars2.githubusercontent.com/u/64159776?v=4?s=100"" width=""100px;"" alt=""Muhammad Minhaj""/><br /><sub><b>Muhammad Minhaj</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dev-mdminhaj"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://chandrikadeb7.github.io""><img src=""https://avatars2.githubusercontent.com/u/29686102?v=4?s=100"" width=""100px;"" alt=""Chandrika Deb""/><br /><sub><b>Chandrika Deb</b></sub></a><br /><a href=""#design-chandrikadeb7"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chandrikadeb7"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Gitgit101-bit""><img src=""https://avatars3.githubusercontent.com/u/52999282?v=4?s=100"" width=""100px;"" alt=""Gitgit101-bit""/><br /><sub><b>Gitgit101-bit</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Gitgit101-bit"" title=""Code"">💻</a> <a href=""#design-Gitgit101-bit"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://gamejolt.com/@hedi-sellami""><img src=""https://avatars2.githubusercontent.com/u/24782334?v=4?s=100"" width=""100px;"" alt=""Hedi Sellami""/><br /><sub><b>Hedi Sellami</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hedi-sel"" title=""Code"">💻</a> <a href=""#design-hedi-sel"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/saurabhvaish93""><img src=""https://avatars.githubusercontent.com/u/57400294?v=4?s=100"" width=""100px;"" alt=""saurabhvaish93""/><br /><sub><b>saurabhvaish93</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=saurabhvaish93"" title=""Code"">💻</a> <a href=""#design-saurabhvaish93"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.upwork.com/fl/nikolabegovic""><img src=""https://avatars.githubusercontent.com/u/34249215?v=4?s=100"" width=""100px;"" alt=""Nikola Begovic""/><br /><sub><b>Nikola Begovic</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BegovicNikola"" title=""Code"">💻</a> <a href=""#design-BegovicNikola"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nkhs""><img src=""https://avatars.githubusercontent.com/u/29690436?v=4?s=100"" width=""100px;"" alt=""Wang""/><br /><sub><b>Wang</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nkhs"" title=""Code"">💻</a> <a href=""#design-nkhs"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://medium.com/@manueldepaz""><img src=""https://avatars.githubusercontent.com/u/2047107?v=4?s=100"" width=""100px;"" alt=""Manuel Eusebio de Paz Carmona""/><br /><sub><b>Manuel Eusebio de Paz Carmona</b></sub></a><br /><a href=""#design-Pelirrojo"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Basim108""><img src=""https://avatars.githubusercontent.com/u/11601933?v=4?s=100"" width=""100px;"" alt=""Basim Al-Jawahery""/><br /><sub><b>Basim Al-Jawahery</b></sub></a><br /><a href=""#design-Basim108"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Basim108"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AhmedRaja1""><img src=""https://avatars.githubusercontent.com/u/52793181?v=4?s=100"" width=""100px;"" alt=""RAJA AHMED""/><br /><sub><b>RAJA AHMED</b></sub></a><br /><a href=""#design-AhmedRaja1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AhmedRaja1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://bloggercls8e.appspot.com/""><img src=""https://avatars.githubusercontent.com/u/8018018?v=4?s=100"" width=""100px;"" alt=""Abhik Lodh""/><br /><sub><b>Abhik Lodh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=abhiklodh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mdPial""><img src=""https://avatars.githubusercontent.com/u/43095489?v=4?s=100"" width=""100px;"" alt=""Md. Pial Ahamed""/><br /><sub><b>Md. Pial Ahamed</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mdPial"" title=""Code"">💻</a> <a href=""#design-mdPial"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://hassanshahzad.urspace.io/""><img src=""https://avatars.githubusercontent.com/u/37936447?v=4?s=100"" width=""100px;"" alt=""Hassan Shahzad""/><br /><sub><b>Hassan Shahzad</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HassanShahzad7"" title=""Code"">💻</a> <a href=""#design-HassanShahzad7"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/christiansgesp""><img src=""https://avatars.githubusercontent.com/u/43465304?v=4?s=100"" width=""100px;"" alt=""Christian Sosa Gago""/><br /><sub><b>Christian Sosa Gago</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=christiansgesp"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/HrHasnai""><img src=""https://avatars.githubusercontent.com/u/60227425?v=4?s=100"" width=""100px;"" alt=""Hasnain Rasheed""/><br /><sub><b>Hasnain Rasheed</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HrHasnai"" title=""Code"">💻</a> <a href=""#design-HrHasnai"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/T-Radford""><img src=""https://avatars.githubusercontent.com/u/46270573?v=4?s=100"" width=""100px;"" alt=""T-Radford""/><br /><sub><b>T-Radford</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=T-Radford"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dahiyashish""><img src=""https://avatars.githubusercontent.com/u/38746838?v=4?s=100"" width=""100px;"" alt=""dahiyashish""/><br /><sub><b>dahiyashish</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dahiyashish"" title=""Code"">💻</a> <a href=""#design-dahiyashish"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Rahulsharma468""><img src=""https://avatars.githubusercontent.com/u/52377774?v=4?s=100"" width=""100px;"" alt=""RahulSharma468""/><br /><sub><b>RahulSharma468</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rahulsharma468"" title=""Code"">💻</a> <a href=""#design-Rahulsharma468"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.facebook.com/Muangthai.sriracha""><img src=""https://avatars.githubusercontent.com/u/13193747?v=4?s=100"" width=""100px;"" alt=""Jumpod Plekhongthu""/><br /><sub><b>Jumpod Plekhongthu</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Pjumpod"" title=""Code"">💻</a> <a href=""#design-Pjumpod"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/thomasyoung-audet""><img src=""https://avatars.githubusercontent.com/u/8418461?v=4?s=100"" width=""100px;"" alt=""Thomas Young-Audet""/><br /><sub><b>Thomas Young-Audet</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=thomasyoung-audet"" title=""Code"">💻</a> <a href=""#design-thomasyoung-audet"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/VinayagamBabu""><img src=""https://avatars.githubusercontent.com/u/78416322?v=4?s=100"" width=""100px;"" alt=""VinayagamBabu""/><br /><sub><b>VinayagamBabu</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VinayagamBabu"" title=""Code"">💻</a> <a href=""#design-VinayagamBabu"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/deniz-ko%C3%A7-780090104/""><img src=""https://avatars.githubusercontent.com/u/74410580?v=4?s=100"" width=""100px;"" alt=""Deniz Koç""/><br /><sub><b>Deniz Koç</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kocdeniz"" title=""Code"">💻</a> <a href=""#design-kocdeniz"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.azhark.com""><img src=""https://avatars.githubusercontent.com/u/20738252?v=4?s=100"" width=""100px;"" alt=""Azhar Khan""/><br /><sub><b>Azhar Khan</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adminazhar"" title=""Code"">💻</a> <a href=""#design-adminazhar"" title=""Design"">🎨</a> <a href=""#content-adminazhar"" title=""Content"">🖋</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adminazhar"" title=""Documentation"">📖</a> <a href=""#data-adminazhar"" title=""Data"">🔣</a> <a href=""#maintenance-adminazhar"" title=""Maintenance"">🚧</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.jacobryanshort.com""><img src=""https://avatars.githubusercontent.com/u/46907893?v=4?s=100"" width=""100px;"" alt=""Jacob Short""/><br /><sub><b>Jacob Short</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jrshort89"" title=""Code"">💻</a> <a href=""#design-jrshort89"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Uchimura85""><img src=""https://avatars.githubusercontent.com/u/29099918?v=4?s=100"" width=""100px;"" alt=""Uchimura85""/><br /><sub><b>Uchimura85</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Uchimura85"" title=""Code"">💻</a> <a href=""#design-Uchimura85"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lnugraha""><img src=""https://avatars.githubusercontent.com/u/32232486?v=4?s=100"" width=""100px;"" alt=""Leo Nugraha""/><br /><sub><b>Leo Nugraha</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lnugraha"" title=""Code"">💻</a> <a href=""#design-lnugraha"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lnugraha"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/mujtabamehdi9/""><img src=""https://avatars.githubusercontent.com/u/14287838?v=4?s=100"" width=""100px;"" alt=""Mujtaba Mehdi""/><br /><sub><b>Mujtaba Mehdi</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mujjazi"" title=""Documentation"">📖</a> <a href=""#content-mujjazi"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Jim-ds""><img src=""https://avatars.githubusercontent.com/u/63148414?v=4?s=100"" width=""100px;"" alt=""Jim-ds""/><br /><sub><b>Jim-ds</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jim-ds"" title=""Code"">💻</a> <a href=""#design-Jim-ds"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://kariot.me""><img src=""https://avatars.githubusercontent.com/u/35885296?v=4?s=100"" width=""100px;"" alt=""Sreehari K""/><br /><sub><b>Sreehari K</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kariot"" title=""Code"">💻</a> <a href=""#design-kariot"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/flomz""><img src=""https://avatars.githubusercontent.com/u/24940563?v=4?s=100"" width=""100px;"" alt=""Florian Martinez""/><br /><sub><b>Florian Martinez</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=flomz"" title=""Code"">💻</a> <a href=""#design-flomz"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aaronwangj""><img src=""https://avatars.githubusercontent.com/u/56976471?v=4?s=100"" width=""100px;"" alt=""Aaron""/><br /><sub><b>Aaron</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aaronwangj"" title=""Code"">💻</a> <a href=""#design-aaronwangj"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/apoage""><img src=""https://avatars.githubusercontent.com/u/11403095?v=4?s=100"" width=""100px;"" alt=""apoage""/><br /><sub><b>apoage</b></sub></a><br /><a href=""#design-apoage"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://jasperan.life""><img src=""https://avatars.githubusercontent.com/u/20752424?v=4?s=100"" width=""100px;"" alt=""Ignacio Guillermo Martinez ""/><br /><sub><b>Ignacio Guillermo Martinez </b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jasperan"" title=""Code"">💻</a> <a href=""#design-jasperan"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AirlineDog""><img src=""https://avatars.githubusercontent.com/u/72792044?v=4?s=100"" width=""100px;"" alt=""AirlineDog""/><br /><sub><b>AirlineDog</b></sub></a><br /><a href=""#design-AirlineDog"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AirlineDog"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mekelilyasa.now.sh""><img src=""https://avatars.githubusercontent.com/u/55347344?v=4?s=100"" width=""100px;"" alt=""Mekel""/><br /><sub><b>Mekel</b></sub></a><br /><a href=""#design-retr00exe"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=retr00exe"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/hasan-mosharrof/""><img src=""https://avatars.githubusercontent.com/u/22551167?v=4?s=100"" width=""100px;"" alt=""hmosharrof""/><br /><sub><b>hmosharrof</b></sub></a><br /><a href=""#design-hmosharrof"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hmosharrof"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/behnam-emamian/""><img src=""https://avatars.githubusercontent.com/u/9818491?v=4?s=100"" width=""100px;"" alt=""Ben Emamian""/><br /><sub><b>Ben Emamian</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Behnam-Emamian"" title=""Code"">💻</a> <a href=""#design-Behnam-Emamian"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/babeshark""><img src=""https://avatars.githubusercontent.com/u/78000734?v=4?s=100"" width=""100px;"" alt=""babeshark""/><br /><sub><b>babeshark</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=babeshark"" title=""Code"">💻</a> <a href=""#design-babeshark"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/LeonardoJaques""><img src=""https://avatars.githubusercontent.com/u/28495699?v=4?s=100"" width=""100px;"" alt=""Leonardo Jaques""/><br /><sub><b>Leonardo Jaques</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LeonardoJaques"" title=""Code"">💻</a> <a href=""#design-LeonardoJaques"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://sapkarian.dev""><img src=""https://avatars.githubusercontent.com/u/51930811?v=4?s=100"" width=""100px;"" alt=""Stefanos Apkarian""/><br /><sub><b>Stefanos Apkarian</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Stefanosapk"" title=""Code"">💻</a> <a href=""#design-Stefanosapk"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/albayrakayhan""><img src=""https://avatars.githubusercontent.com/u/53487182?v=4?s=100"" width=""100px;"" alt=""Ayhan Albayrak""/><br /><sub><b>Ayhan Albayrak</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=albayrakayhan"" title=""Code"">💻</a> <a href=""#design-albayrakayhan"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/kidus-tekeste-713261a7/""><img src=""https://avatars.githubusercontent.com/u/18373774?v=4?s=100"" width=""100px;"" alt=""KidusMT""/><br /><sub><b>KidusMT</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KidusMT"" title=""Code"">💻</a> <a href=""#design-KidusMT"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hectormarroquin20""><img src=""https://avatars.githubusercontent.com/u/73187722?v=4?s=100"" width=""100px;"" alt=""hectormarroquin20""/><br /><sub><b>hectormarroquin20</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hectormarroquin20"" title=""Code"">💻</a> <a href=""#design-hectormarroquin20"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Edelweiss35""><img src=""https://avatars.githubusercontent.com/u/45229901?v=4?s=100"" width=""100px;"" alt=""Edelweiss35""/><br /><sub><b>Edelweiss35</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Edelweiss35"" title=""Code"">💻</a> <a href=""#design-Edelweiss35"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mihai-db""><img src=""https://avatars.githubusercontent.com/u/23072513?v=4?s=100"" width=""100px;"" alt=""MihaiD""/><br /><sub><b>MihaiD</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mihai-db"" title=""Code"">💻</a> <a href=""#design-mihai-db"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AnveshReddyAnnem""><img src=""https://avatars.githubusercontent.com/u/57712430?v=4?s=100"" width=""100px;"" alt=""AnveshReddyAnnem""/><br /><sub><b>AnveshReddyAnnem</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AnveshReddyAnnem"" title=""Code"">💻</a> <a href=""#design-AnveshReddyAnnem"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/devhyunjae""><img src=""https://avatars.githubusercontent.com/u/12890257?v=4?s=100"" width=""100px;"" alt=""Hyunjae Park""/><br /><sub><b>Hyunjae Park</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=devhyunjae"" title=""Code"">💻</a> <a href=""#design-devhyunjae"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rajivalbino""><img src=""https://avatars.githubusercontent.com/u/19399225?v=4?s=100"" width=""100px;"" alt=""Rajiv Albino""/><br /><sub><b>Rajiv Albino</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rajivalbino"" title=""Code"">💻</a> <a href=""#design-rajivalbino"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/atishaykhare""><img src=""https://avatars.githubusercontent.com/u/26501132?v=4?s=100"" width=""100px;"" alt=""Atishay""/><br /><sub><b>Atishay</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=atishaykhare"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/yusuf-naheem/""><img src=""https://avatars.githubusercontent.com/u/71137409?v=4?s=100"" width=""100px;"" alt=""Yusuf Naheem""/><br /><sub><b>Yusuf Naheem</b></sub></a><br /><a href=""#design-Yusuf1n"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linkedin.com/in/windusayles""><img src=""https://avatars.githubusercontent.com/u/70447880?v=4?s=100"" width=""100px;"" alt=""Windu""/><br /><sub><b>Windu</b></sub></a><br /><a href=""#design-windusayles"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=windusayles"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Superv1sor""><img src=""https://avatars.githubusercontent.com/u/71970927?v=4?s=100"" width=""100px;"" alt=""Superv1sor""/><br /><sub><b>Superv1sor</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Superv1sor"" title=""Code"">💻</a> <a href=""#design-Superv1sor"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SpaceMuffinn""><img src=""https://avatars.githubusercontent.com/u/25411672?v=4?s=100"" width=""100px;"" alt=""Karine (:""/><br /><sub><b>Karine (:</b></sub></a><br /><a href=""#design-SpaceMuffinn"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SpaceMuffinn"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://logophilia.top/""><img src=""https://avatars.githubusercontent.com/u/80007889?v=4?s=100"" width=""100px;"" alt=""Eduard Pech""/><br /><sub><b>Eduard Pech</b></sub></a><br /><a href=""#design-SimStim"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SimStim"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jjeshwani""><img src=""https://avatars.githubusercontent.com/u/53613241?v=4?s=100"" width=""100px;"" alt=""jjeshwani""/><br /><sub><b>jjeshwani</b></sub></a><br /><a href=""#design-jjeshwani"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jjeshwani"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nullfx""><img src=""https://avatars.githubusercontent.com/u/324971?v=4?s=100"" width=""100px;"" alt=""Steve""/><br /><sub><b>Steve</b></sub></a><br /><a href=""#design-nullfx"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nullfx"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aohslund""><img src=""https://avatars.githubusercontent.com/u/43076374?v=4?s=100"" width=""100px;"" alt=""Aleigh Ohslund""/><br /><sub><b>Aleigh Ohslund</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aohslund"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/sumanabhinav""><img src=""https://avatars.githubusercontent.com/u/20538074?v=4?s=100"" width=""100px;"" alt=""Abhinav Suman""/><br /><sub><b>Abhinav Suman</b></sub></a><br /><a href=""#design-sumanabhi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sumanabhi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://ehte5hamxa.web.app""><img src=""https://avatars.githubusercontent.com/u/41139956?v=4?s=100"" width=""100px;"" alt=""Hamza Ehtesham Farooq""/><br /><sub><b>Hamza Ehtesham Farooq</b></sub></a><br /><a href=""#design-EhtesHamXa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=EhtesHamXa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/IamNotPeterPan""><img src=""https://avatars.githubusercontent.com/u/80295779?v=4?s=100"" width=""100px;"" alt=""IamNotPeterPan""/><br /><sub><b>IamNotPeterPan</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=IamNotPeterPan"" title=""Code"">💻</a> <a href=""#financial-IamNotPeterPan"" title=""Financial"">💵</a> <a href=""#design-IamNotPeterPan"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Cetger""><img src=""https://avatars.githubusercontent.com/u/31896026?v=4?s=100"" width=""100px;"" alt=""Cetger""/><br /><sub><b>Cetger</b></sub></a><br /><a href=""#design-Cetger"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pkonopacki1""><img src=""https://avatars.githubusercontent.com/u/17990597?v=4?s=100"" width=""100px;"" alt=""pkonopacki""/><br /><sub><b>pkonopacki</b></sub></a><br /><a href=""#design-pkonopacki1"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jokerkeny""><img src=""https://avatars.githubusercontent.com/u/10593391?v=4?s=100"" width=""100px;"" alt=""Yang Yang""/><br /><sub><b>Yang Yang</b></sub></a><br /><a href=""#design-jokerkeny"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jokerkeny"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mshoaibsarwar""><img src=""https://avatars.githubusercontent.com/u/41059724?v=4?s=100"" width=""100px;"" alt=""Muhammad Shoaib Sarwar""/><br /><sub><b>Muhammad Shoaib Sarwar</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mshoaibsarwar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://omurilo.dev""><img src=""https://avatars.githubusercontent.com/u/1813234?v=4?s=100"" width=""100px;"" alt=""Murilo Henrique""/><br /><sub><b>Murilo Henrique</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=omurilo"" title=""Code"">💻</a> <a href=""#design-omurilo"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/emilianoalvz""><img src=""https://avatars.githubusercontent.com/u/79676937?v=4?s=100"" width=""100px;"" alt=""emilianoalvz""/><br /><sub><b>emilianoalvz</b></sub></a><br /><a href=""#design-emilianoalvz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=emilianoalvz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.ratepay.com""><img src=""https://avatars.githubusercontent.com/u/34478920?v=4?s=100"" width=""100px;"" alt=""Sumana Saha""/><br /><sub><b>Sumana Saha</b></sub></a><br /><a href=""#design-sumanas27"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sumanas27"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Yurii17K""><img src=""https://avatars.githubusercontent.com/u/56108535?v=4?s=100"" width=""100px;"" alt=""Yurii17K""/><br /><sub><b>Yurii17K</b></sub></a><br /><a href=""#design-Yurii17K"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Yurii17K"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rpshbhandari""><img src=""https://avatars.githubusercontent.com/u/67644582?v=4?s=100"" width=""100px;"" alt=""Rupesh Bhandari""/><br /><sub><b>Rupesh Bhandari</b></sub></a><br /><a href=""#design-rpshbhandari"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rpshbhandari"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/salmos3718""><img src=""https://avatars.githubusercontent.com/u/80355019?v=4?s=100"" width=""100px;"" alt=""salmos3718""/><br /><sub><b>salmos3718</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=salmos3718"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/baker-jr-john/""><img src=""https://avatars.githubusercontent.com/u/71906203?v=4?s=100"" width=""100px;"" alt=""John Baker""/><br /><sub><b>John Baker</b></sub></a><br /><a href=""#design-baker-jr-john"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=baker-jr-john"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SanjaySathiraju""><img src=""https://avatars.githubusercontent.com/u/80937013?v=4?s=100"" width=""100px;"" alt=""SanjaySathiraju""/><br /><sub><b>SanjaySathiraju</b></sub></a><br /><a href=""#design-SanjaySathiraju"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SanjaySathiraju"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DKabashi""><img src=""https://avatars.githubusercontent.com/u/48384060?v=4?s=100"" width=""100px;"" alt=""Donat Kabashi""/><br /><sub><b>Donat Kabashi</b></sub></a><br /><a href=""#design-DKabashi"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://arulprasadj.com/""><img src=""https://avatars.githubusercontent.com/u/11359760?v=4?s=100"" width=""100px;"" alt=""Arul Prasad J""/><br /><sub><b>Arul Prasad J</b></sub></a><br /><a href=""#design-arulprasadj"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arulprasadj"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://chenpost.com""><img src=""https://avatars.githubusercontent.com/u/8637045?v=4?s=100"" width=""100px;"" alt=""Qi Chen""/><br /><sub><b>Qi Chen</b></sub></a><br /><a href=""#design-swordwielder"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=swordwielder"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/maksym-dmyterko-00598816a/""><img src=""https://avatars.githubusercontent.com/u/53152792?v=4?s=100"" width=""100px;"" alt=""Maksym Dmyterko""/><br /><sub><b>Maksym Dmyterko</b></sub></a><br /><a href=""#design-tehcGuy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tehcGuy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ilovepullrequests""><img src=""https://avatars.githubusercontent.com/u/79510995?v=4?s=100"" width=""100px;"" alt=""ilovepullrequests""/><br /><sub><b>ilovepullrequests</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ilovepullrequests"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/samira-maleki/""><img src=""https://avatars.githubusercontent.com/u/76865385?v=4?s=100"" width=""100px;"" alt=""Samira Maleki""/><br /><sub><b>Samira Maleki</b></sub></a><br /><a href=""#design-samiramaleki"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=samiramaleki"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nikitamahoviya""><img src=""https://avatars.githubusercontent.com/u/43717626?v=4?s=100"" width=""100px;"" alt=""NIKITA MAHOVIYA""/><br /><sub><b>NIKITA MAHOVIYA</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nikitamahoviya"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.myappmemo.online""><img src=""https://avatars.githubusercontent.com/u/8102337?v=4?s=100"" width=""100px;"" alt=""jesuisdev.Net""/><br /><sub><b>jesuisdev.Net</b></sub></a><br /><a href=""#design-wth-mvp-s"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wth-mvp-s"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AshNaz87""><img src=""https://avatars.githubusercontent.com/u/20570746?v=4?s=100"" width=""100px;"" alt=""Ashraf Nazar""/><br /><sub><b>Ashraf Nazar</b></sub></a><br /><a href=""#design-AshNaz87"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://pk.linkedin.com/in/naveed99""><img src=""https://avatars.githubusercontent.com/u/5438968?v=4?s=100"" width=""100px;"" alt=""Naveed Ahmad""/><br /><sub><b>Naveed Ahmad</b></sub></a><br /><a href=""#design-naveedahmad99"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Nakzz""><img src=""https://avatars.githubusercontent.com/u/9344972?v=4?s=100"" width=""100px;"" alt=""Ajmain Naqib""/><br /><sub><b>Ajmain Naqib</b></sub></a><br /><a href=""#design-Nakzz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nakzz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://tingreavinash.github.io""><img src=""https://avatars.githubusercontent.com/u/39552348?v=4?s=100"" width=""100px;"" alt=""Avinash Tingre""/><br /><sub><b>Avinash Tingre</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tingreavinash"" title=""Code"">💻</a> <a href=""#design-tingreavinash"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nicktids""><img src=""https://avatars.githubusercontent.com/u/26164799?v=4?s=100"" width=""100px;"" alt=""nicktids""/><br /><sub><b>nicktids</b></sub></a><br /><a href=""#design-nicktids"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.kietdinh.com/""><img src=""https://avatars.githubusercontent.com/u/52475783?v=4?s=100"" width=""100px;"" alt=""Keith Dinh""/><br /><sub><b>Keith Dinh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KeithDinh"" title=""Code"">💻</a> <a href=""#design-KeithDinh"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/andreeferreira""><img src=""https://avatars.githubusercontent.com/u/49101040?v=4?s=100"" width=""100px;"" alt=""André Ferreira""/><br /><sub><b>André Ferreira</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=andreeferreira"" title=""Code"">💻</a> <a href=""#design-andreeferreira"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/eliottkespi""><img src=""https://avatars.githubusercontent.com/u/38857833?v=4?s=100"" width=""100px;"" alt=""eliottkespi""/><br /><sub><b>eliottkespi</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=eliottkespi"" title=""Code"">💻</a> <a href=""#design-eliottkespi"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/praveenpno""><img src=""https://avatars.githubusercontent.com/u/11199918?v=4?s=100"" width=""100px;"" alt=""praveenpno""/><br /><sub><b>praveenpno</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=praveenpno"" title=""Code"">💻</a> <a href=""#design-praveenpno"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vitowidigdo""><img src=""https://avatars.githubusercontent.com/u/35423212?v=4?s=100"" width=""100px;"" alt=""vitowidigdo""/><br /><sub><b>vitowidigdo</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vitowidigdo"" title=""Code"">💻</a> <a href=""#design-vitowidigdo"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://idevesh.in""><img src=""https://avatars.githubusercontent.com/u/63795693?v=4?s=100"" width=""100px;"" alt=""Devesh Pratap Singh""/><br /><sub><b>Devesh Pratap Singh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=idevesh"" title=""Code"">💻</a> <a href=""#design-idevesh"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/D4RIO""><img src=""https://avatars.githubusercontent.com/u/14243?v=4?s=100"" width=""100px;"" alt=""Dario Rodriguez""/><br /><sub><b>Dario Rodriguez</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=D4RIO"" title=""Code"">💻</a> <a href=""#design-D4RIO"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ShidiDaisy""><img src=""https://avatars.githubusercontent.com/u/13568966?v=4?s=100"" width=""100px;"" alt=""charmander_didi""/><br /><sub><b>charmander_didi</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ShidiDaisy"" title=""Code"">💻</a> <a href=""#design-ShidiDaisy"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/PHBasin""><img src=""https://avatars.githubusercontent.com/u/60905941?v=4?s=100"" width=""100px;"" alt=""PHBasin""/><br /><sub><b>PHBasin</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PHBasin"" title=""Code"">💻</a> <a href=""#design-PHBasin"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://in.linkedin.com/in/ritvik92""><img src=""https://avatars.githubusercontent.com/u/9117019?v=4?s=100"" width=""100px;"" alt=""Ritvik Singh Chauhan""/><br /><sub><b>Ritvik Singh Chauhan</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=s3c-d43m0n"" title=""Code"">💻</a> <a href=""#design-s3c-d43m0n"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://riyamathew-11.github.io/riyapmathew2000/""><img src=""https://avatars.githubusercontent.com/u/60656677?v=4?s=100"" width=""100px;"" alt=""Riya P Mathew""/><br /><sub><b>Riya P Mathew</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RiyaMathew-11"" title=""Code"">💻</a> <a href=""#design-RiyaMathew-11"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linkedin.com/in/stephanie-cherubin""><img src=""https://avatars.githubusercontent.com/u/26418542?v=4?s=100"" width=""100px;"" alt=""Stephanie Cherubin""/><br /><sub><b>Stephanie Cherubin</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=StephanieCherubin"" title=""Code"">💻</a> <a href=""#design-StephanieCherubin"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BenitesGui""><img src=""https://avatars.githubusercontent.com/u/12888298?v=4?s=100"" width=""100px;"" alt=""BenitesGui""/><br /><sub><b>BenitesGui</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BenitesGui"" title=""Code"">💻</a> <a href=""#design-BenitesGui"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/FarikBear""><img src=""https://avatars.githubusercontent.com/u/35699679?v=4?s=100"" width=""100px;"" alt=""FarikBear""/><br /><sub><b>FarikBear</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=FarikBear"" title=""Code"">💻</a> <a href=""#design-FarikBear"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/dmytrohavrilov/""><img src=""https://avatars.githubusercontent.com/u/25771771?v=4?s=100"" width=""100px;"" alt=""Dmytro Havrilov""/><br /><sub><b>Dmytro Havrilov</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gavrilow"" title=""Code"">💻</a> <a href=""#design-gavrilow"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://youtube.com/right2trick""><img src=""https://avatars.githubusercontent.com/u/17097240?v=4?s=100"" width=""100px;"" alt=""Parvesh Monu""/><br /><sub><b>Parvesh Monu</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Parveshdhull"" title=""Code"">💻</a> <a href=""#design-Parveshdhull"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://stackoverflow.com/users/990070/dipen-panchasara""><img src=""https://avatars.githubusercontent.com/u/1386724?v=4?s=100"" width=""100px;"" alt=""Dipen Panchasara""/><br /><sub><b>Dipen Panchasara</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DipenPanchasara"" title=""Code"">💻</a> <a href=""#design-DipenPanchasara"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.gudasoft.com""><img src=""https://avatars.githubusercontent.com/u/25951?v=4?s=100"" width=""100px;"" alt=""gudata""/><br /><sub><b>gudata</b></sub></a><br /><a href=""#design-gudata"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gudata"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gawadeditor""><img src=""https://avatars.githubusercontent.com/u/11796330?v=4?s=100"" width=""100px;"" alt=""gawadeditor""/><br /><sub><b>gawadeditor</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gawadeditor"" title=""Code"">💻</a> <a href=""#design-gawadeditor"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/taletski""><img src=""https://avatars.githubusercontent.com/u/25644093?v=4?s=100"" width=""100px;"" alt=""Kirill Taletski""/><br /><sub><b>Kirill Taletski</b></sub></a><br /><a href=""#design-taletski"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=taletski"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://saajan.work""><img src=""https://avatars.githubusercontent.com/u/2259377?v=4?s=100"" width=""100px;"" alt=""Saajan""/><br /><sub><b>Saajan</b></sub></a><br /><a href=""#design-Saajan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Saajan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.silicons.studio""><img src=""https://avatars.githubusercontent.com/u/66439372?v=4?s=100"" width=""100px;"" alt=""Kushagra S""/><br /><sub><b>Kushagra S</b></sub></a><br /><a href=""#design-skushagra"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=skushagra"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/oanhgle""><img src=""https://avatars.githubusercontent.com/u/62354718?v=4?s=100"" width=""100px;"" alt=""Oanh Le""/><br /><sub><b>Oanh Le</b></sub></a><br /><a href=""#design-oanhgle"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=oanhgle"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/fmedv""><img src=""https://avatars.githubusercontent.com/u/28409749?v=4?s=100"" width=""100px;"" alt=""Frane Medvidović""/><br /><sub><b>Frane Medvidović</b></sub></a><br /><a href=""#design-fmedv"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fmedv"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://cixtor.com""><img src=""https://avatars.githubusercontent.com/u/1933999?v=4?s=100"" width=""100px;"" alt=""Yorman""/><br /><sub><b>Yorman</b></sub></a><br /><a href=""#design-cixtor"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cixtor"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.billpwchan.com""><img src=""https://avatars.githubusercontent.com/u/25129943?v=4?s=100"" width=""100px;"" alt=""Bill Chan""/><br /><sub><b>Bill Chan</b></sub></a><br /><a href=""#design-billpwchan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=billpwchan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://pratiklomte1412.pythonanywhere.com/""><img src=""https://avatars.githubusercontent.com/u/66465662?v=4?s=100"" width=""100px;"" alt=""Pratik Lomte""/><br /><sub><b>Pratik Lomte</b></sub></a><br /><a href=""#design-PratikLomte"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PratikLomte"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shenlong2010""><img src=""https://avatars.githubusercontent.com/u/57968871?v=4?s=100"" width=""100px;"" alt=""LOC LAM""/><br /><sub><b>LOC LAM</b></sub></a><br /><a href=""#design-shenlong2010"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shenlong2010"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Tusar6701""><img src=""https://avatars.githubusercontent.com/u/64353205?v=4?s=100"" width=""100px;"" alt=""TUSAR RANJAN MAHAPATRA""/><br /><sub><b>TUSAR RANJAN MAHAPATRA</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Tusar6701"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BhargavKanjarla""><img src=""https://avatars.githubusercontent.com/u/58546127?v=4?s=100"" width=""100px;"" alt=""BhargavKanjarla""/><br /><sub><b>BhargavKanjarla</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BhargavKanjarla"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://karel.be""><img src=""https://avatars.githubusercontent.com/u/10829524?v=4?s=100"" width=""100px;"" alt=""Karel De Smet""/><br /><sub><b>Karel De Smet</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=snakehead007"" title=""Code"">💻</a> <a href=""#design-snakehead007"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sidisan""><img src=""https://avatars.githubusercontent.com/u/83332740?v=4?s=100"" width=""100px;"" alt=""sidisan""/><br /><sub><b>sidisan</b></sub></a><br /><a href=""#design-sidisan"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ygnzayarphyo""><img src=""https://avatars.githubusercontent.com/u/32730630?v=4?s=100"" width=""100px;"" alt=""ygnzayarphyo""/><br /><sub><b>ygnzayarphyo</b></sub></a><br /><a href=""#design-ygnzayarphyo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ygnzayarphyo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/svansteelandt""><img src=""https://avatars.githubusercontent.com/u/34523482?v=4?s=100"" width=""100px;"" alt=""svansteelandt""/><br /><sub><b>svansteelandt</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=svansteelandt"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Kebechet""><img src=""https://avatars.githubusercontent.com/u/37485681?v=4?s=100"" width=""100px;"" alt=""Kebechet""/><br /><sub><b>Kebechet</b></sub></a><br /><a href=""#design-Kebechet"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/danie007""><img src=""https://avatars.githubusercontent.com/u/50566479?v=4?s=100"" width=""100px;"" alt=""Daniel Selvan D""/><br /><sub><b>Daniel Selvan D</b></sub></a><br /><a href=""#design-danie007"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=danie007"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.MahdiRazavi.net""><img src=""https://avatars.githubusercontent.com/u/6397404?v=4?s=100"" width=""100px;"" alt=""Mahdi Razavi""/><br /><sub><b>Mahdi Razavi</b></sub></a><br /><a href=""#design-M-Razavi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=M-Razavi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://the-coding-lab.com""><img src=""https://avatars.githubusercontent.com/u/56223902?v=4?s=100"" width=""100px;"" alt=""Niklas Tiede""/><br /><sub><b>Niklas Tiede</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NiklasTiede"" title=""Code"">💻</a> <a href=""#design-NiklasTiede"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/narutubaderddin""><img src=""https://avatars.githubusercontent.com/u/43589046?v=4?s=100"" width=""100px;"" alt=""narutubaderddin""/><br /><sub><b>narutubaderddin</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=narutubaderddin"" title=""Code"">💻</a> <a href=""#design-narutubaderddin"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://dylanhoodportfoliowebsite.web.app/""><img src=""https://avatars.githubusercontent.com/u/66035537?v=4?s=100"" width=""100px;"" alt=""dylandhood""/><br /><sub><b>dylandhood</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dylanhood"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nero002""><img src=""https://avatars.githubusercontent.com/u/38027375?v=4?s=100"" width=""100px;"" alt=""Dheeraj Gupta""/><br /><sub><b>Dheeraj Gupta</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nero002"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.yellowduck.be""><img src=""https://avatars.githubusercontent.com/u/74731?v=4?s=100"" width=""100px;"" alt=""Pieter Claerhout""/><br /><sub><b>Pieter Claerhout</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pieterclaerhout"" title=""Code"">💻</a> <a href=""#design-pieterclaerhout"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://shivam48972.github.io/portfolio/""><img src=""https://avatars.githubusercontent.com/u/53830298?v=4?s=100"" width=""100px;"" alt=""Shivam Agnihotri""/><br /><sub><b>Shivam Agnihotri</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shivam48972"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RanjithReddy-Narra""><img src=""https://avatars.githubusercontent.com/u/76155807?v=4?s=100"" width=""100px;"" alt=""RanjithReddy-Narra""/><br /><sub><b>RanjithReddy-Narra</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RanjithReddy-Narra"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/NikkiW96""><img src=""https://avatars.githubusercontent.com/u/43293583?v=4?s=100"" width=""100px;"" alt=""Nikita Wadhwani""/><br /><sub><b>Nikita Wadhwani</b></sub></a><br /><a href=""#design-NikkiW96"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NikkiW96"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rsholokh""><img src=""https://avatars.githubusercontent.com/u/67190621?v=4?s=100"" width=""100px;"" alt=""rsholokh""/><br /><sub><b>rsholokh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rsholokh"" title=""Code"">💻</a> <a href=""#design-rsholokh"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://salislab.net""><img src=""https://avatars.githubusercontent.com/u/26147572?v=4?s=100"" width=""100px;"" alt=""Ayaan Hossain""/><br /><sub><b>Ayaan Hossain</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayaanhossain"" title=""Code"">💻</a> <a href=""#design-ayaanhossain"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rajeshswarna123""><img src=""https://avatars.githubusercontent.com/u/25494087?v=4?s=100"" width=""100px;"" alt=""Rajesh Swarna""/><br /><sub><b>Rajesh Swarna</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rajeshswarna123"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/denizetkar""><img src=""https://avatars.githubusercontent.com/u/25102252?v=4?s=100"" width=""100px;"" alt=""Deniz Etkar""/><br /><sub><b>Deniz Etkar</b></sub></a><br /><a href=""#design-denizetkar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=denizetkar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pro335""><img src=""https://avatars.githubusercontent.com/u/78080037?v=4?s=100"" width=""100px;"" alt=""pro335""/><br /><sub><b>pro335</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pro335"" title=""Code"">💻</a> <a href=""#design-pro335"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://jakub-radzik.ovh""><img src=""https://avatars.githubusercontent.com/u/42437524?v=4?s=100"" width=""100px;"" alt=""Jakub Radzik""/><br /><sub><b>Jakub Radzik</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=radzikoska123"" title=""Code"">💻</a> <a href=""#design-radzikoska123"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/iHamzaKhanzada""><img src=""https://avatars.githubusercontent.com/u/34980386?v=4?s=100"" width=""100px;"" alt=""Hamza Khanzada""/><br /><sub><b>Hamza Khanzada</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iHamzaKhanzada"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/arnonrdp""><img src=""https://avatars.githubusercontent.com/u/26576201?v=4?s=100"" width=""100px;"" alt=""ARNON""/><br /><sub><b>ARNON</b></sub></a><br /><a href=""#design-arnonrdp"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/viksin19""><img src=""https://avatars.githubusercontent.com/u/52523831?v=4?s=100"" width=""100px;"" alt=""Vikram Singh""/><br /><sub><b>Vikram Singh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=viksin19"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://shohruh.maxmudov@mail.ru""><img src=""https://avatars.githubusercontent.com/u/41718373?v=4?s=100"" width=""100px;"" alt=""Shoxruxbek""/><br /><sub><b>Shoxruxbek</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mr-shoxruxbek"" title=""Code"">💻</a> <a href=""#design-mr-shoxruxbek"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aamita96""><img src=""https://avatars.githubusercontent.com/u/31533685?v=4?s=100"" width=""100px;"" alt=""Amit Khatri""/><br /><sub><b>Amit Khatri</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aamita96"" title=""Code"">💻</a> <a href=""#design-aamita96"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/sardarwaliullah/""><img src=""https://avatars.githubusercontent.com/u/62393901?v=4?s=100"" width=""100px;"" alt=""Wali Ullah""/><br /><sub><b>Wali Ullah</b></sub></a><br /><a href=""#design-SABERGLOW"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SABERGLOW"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/amit11794""><img src=""https://avatars.githubusercontent.com/u/63143298?v=4?s=100"" width=""100px;"" alt=""Amit11794""/><br /><sub><b>Amit11794</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amit11794"" title=""Code"">💻</a> <a href=""#design-amit11794"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/metis-macys-66898""><img src=""https://avatars.githubusercontent.com/u/30054892?v=4?s=100"" width=""100px;"" alt=""metis-macys-66898""/><br /><sub><b>metis-macys-66898</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=metis-macys-66898"" title=""Code"">💻</a> <a href=""#design-metis-macys-66898"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/faisalmaqbool94""><img src=""https://avatars.githubusercontent.com/u/32066661?v=4?s=100"" width=""100px;"" alt=""Faisal Maqbool""/><br /><sub><b>Faisal Maqbool</b></sub></a><br /><a href=""#design-faisalmaqbool94"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=faisalmaqbool94"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://kneeraj.netlify.app""><img src=""https://avatars.githubusercontent.com/u/33743260?v=4?s=100"" width=""100px;"" alt=""Kumar Neeraj""/><br /><sub><b>Kumar Neeraj</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KNeeraj038"" title=""Code"">💻</a> <a href=""#design-KNeeraj038"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mauriziomarini""><img src=""https://avatars.githubusercontent.com/u/16784058?v=4?s=100"" width=""100px;"" alt=""Maurizio Marini""/><br /><sub><b>Maurizio Marini</b></sub></a><br /><a href=""#design-mauriziomarini"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mauriziomarini"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SaketKothari""><img src=""https://avatars.githubusercontent.com/u/81709725?v=4?s=100"" width=""100px;"" alt=""Saket Kothari""/><br /><sub><b>Saket Kothari</b></sub></a><br /><a href=""#design-SaketKothari"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SaketKothari"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linkedin.com/in/szymon-zborowski""><img src=""https://avatars.githubusercontent.com/u/22434824?v=4?s=100"" width=""100px;"" alt=""Szymon Zborowski""/><br /><sub><b>Szymon Zborowski</b></sub></a><br /><a href=""#design-ZoltePudeleczko"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ZoltePudeleczko"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/iks3000""><img src=""https://avatars.githubusercontent.com/u/5254318?v=4?s=100"" width=""100px;"" alt=""iks3000""/><br /><sub><b>iks3000</b></sub></a><br /><a href=""#design-iks3000"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iks3000"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ehcan.ir""><img src=""https://avatars.githubusercontent.com/u/17311943?v=4?s=100"" width=""100px;"" alt=""Ehsan Seyedi""/><br /><sub><b>Ehsan Seyedi</b></sub></a><br /><a href=""#design-Ehcaning"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ehcaning"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vanekbr""><img src=""https://avatars.githubusercontent.com/u/9375213?v=4?s=100"" width=""100px;"" alt=""vanekbr""/><br /><sub><b>vanekbr</b></sub></a><br /><a href=""#design-vanekbr"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vanekbr"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Princy04""><img src=""https://avatars.githubusercontent.com/u/47716901?v=4?s=100"" width=""100px;"" alt=""Princy_M""/><br /><sub><b>Princy_M</b></sub></a><br /><a href=""#design-Princy04"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Princy04"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.shijiezhou.com""><img src=""https://avatars.githubusercontent.com/u/28111591?v=4?s=100"" width=""100px;"" alt=""Shijie Zhou""/><br /><sub><b>Shijie Zhou</b></sub></a><br /><a href=""#design-shijiezhou1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shijiezhou1"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lakshyamcs16""><img src=""https://avatars.githubusercontent.com/u/32986427?v=4?s=100"" width=""100px;"" alt=""lakshyamcs16""/><br /><sub><b>lakshyamcs16</b></sub></a><br /><a href=""#design-lakshyamcs16"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lakshyamcs16"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://facco.tk""><img src=""https://avatars.githubusercontent.com/u/54476134?v=4?s=100"" width=""100px;"" alt=""Filippo Facco""/><br /><sub><b>Filippo Facco</b></sub></a><br /><a href=""#design-facco1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=facco1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mendel5""><img src=""https://avatars.githubusercontent.com/u/60322520?v=4?s=100"" width=""100px;"" alt=""mendel5""/><br /><sub><b>mendel5</b></sub></a><br /><a href=""#design-mendel5"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mendel5"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dandrok""><img src=""https://avatars.githubusercontent.com/u/46764643?v=4?s=100"" width=""100px;"" alt=""Patryk""/><br /><sub><b>Patryk</b></sub></a><br /><a href=""#design-dandrok"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dandrok"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/VishwaSangani""><img src=""https://avatars.githubusercontent.com/u/46647788?v=4?s=100"" width=""100px;"" alt=""VishwaSangani""/><br /><sub><b>VishwaSangani</b></sub></a><br /><a href=""#design-VishwaSangani"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VishwaSangani"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://yzAlvin.github.io""><img src=""https://avatars.githubusercontent.com/u/14051545?v=4?s=100"" width=""100px;"" alt=""Alvin Zhao""/><br /><sub><b>Alvin Zhao</b></sub></a><br /><a href=""#design-yzAlvin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yzAlvin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://lazargugleta.github.io""><img src=""https://avatars.githubusercontent.com/u/37106022?v=4?s=100"" width=""100px;"" alt=""Lazar Gugleta""/><br /><sub><b>Lazar Gugleta</b></sub></a><br /><a href=""#design-lazargugleta"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lazargugleta"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vmicho""><img src=""https://avatars.githubusercontent.com/u/66125746?v=4?s=100"" width=""100px;"" alt=""vmicho""/><br /><sub><b>vmicho</b></sub></a><br /><a href=""#design-vmicho"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vmicho"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/theExicuter""><img src=""https://avatars.githubusercontent.com/u/45738492?v=4?s=100"" width=""100px;"" alt=""Sikandar Ali""/><br /><sub><b>Sikandar Ali</b></sub></a><br /><a href=""#design-theExicuter"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=theExicuter"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://therajababu.com""><img src=""https://avatars.githubusercontent.com/u/18283763?v=4?s=100"" width=""100px;"" alt=""Raja Babu""/><br /><sub><b>Raja Babu</b></sub></a><br /><a href=""#design-therajababu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=therajababu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/faizajahanzeb""><img src=""https://avatars.githubusercontent.com/u/47185146?v=4?s=100"" width=""100px;"" alt=""faizajahanzeb""/><br /><sub><b>faizajahanzeb</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=faizajahanzeb"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Guil-AiT""><img src=""https://avatars.githubusercontent.com/u/68529315?v=4?s=100"" width=""100px;"" alt=""Guil_AiT""/><br /><sub><b>Guil_AiT</b></sub></a><br /><a href=""#design-Guil-AiT"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Guil-AiT"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/kushal-das-7337421a9/""><img src=""https://avatars.githubusercontent.com/u/61356005?v=4?s=100"" width=""100px;"" alt=""Kushal Das""/><br /><sub><b>Kushal Das</b></sub></a><br /><a href=""#design-Kushal997-das"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Kushal997-das"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Luismi74""><img src=""https://avatars.githubusercontent.com/u/15695141?v=4?s=100"" width=""100px;"" alt=""Luis Bonilla""/><br /><sub><b>Luis Bonilla</b></sub></a><br /><a href=""#design-Luismi74"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Luismi74"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jovan1013""><img src=""https://avatars.githubusercontent.com/u/71839993?v=4?s=100"" width=""100px;"" alt=""jovan1013""/><br /><sub><b>jovan1013</b></sub></a><br /><a href=""#design-jovan1013"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jovan1013"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.suesslabs.com""><img src=""https://avatars.githubusercontent.com/u/1216684?v=4?s=100"" width=""100px;"" alt=""Damian""/><br /><sub><b>Damian</b></sub></a><br /><a href=""#design-DamianSuess"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DamianSuess"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gyash21""><img src=""https://avatars.githubusercontent.com/u/64211142?v=4?s=100"" width=""100px;"" alt=""Yash Gupta""/><br /><sub><b>Yash Gupta</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gyash21"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lolcatnip""><img src=""https://avatars.githubusercontent.com/u/25205029?v=4?s=100"" width=""100px;"" alt=""lolcatnip""/><br /><sub><b>lolcatnip</b></sub></a><br /><a href=""#design-lolcatnip"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lolcatnip"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://bandism.net/""><img src=""https://avatars.githubusercontent.com/u/22633385?v=4?s=100"" width=""100px;"" alt=""Ikko Ashimine""/><br /><sub><b>Ikko Ashimine</b></sub></a><br /><a href=""#design-eltociear"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=eltociear"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://farukh.me""><img src=""https://avatars.githubusercontent.com/u/42496291?v=4?s=100"" width=""100px;"" alt=""Farukh""/><br /><sub><b>Farukh</b></sub></a><br /><a href=""#design-Farukh1x95"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Farukh1x95"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Moksedul""><img src=""https://avatars.githubusercontent.com/u/37239739?v=4?s=100"" width=""100px;"" alt=""Moksedul""/><br /><sub><b>Moksedul</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Moksedul"" title=""Code"">💻</a> <a href=""#design-Moksedul"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nvntkmr81""><img src=""https://avatars.githubusercontent.com/u/26296352?v=4?s=100"" width=""100px;"" alt=""Navneet Kumar""/><br /><sub><b>Navneet Kumar</b></sub></a><br /><a href=""#design-nvntkmr81"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nvntkmr81"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://SaqibAlMalik.Github.io""><img src=""https://avatars.githubusercontent.com/u/23048174?v=4?s=100"" width=""100px;"" alt=""Saqib AlMalik""/><br /><sub><b>Saqib AlMalik</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SaqibAlMalik"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/fahimrahman""><img src=""https://avatars.githubusercontent.com/u/11030238?v=4?s=100"" width=""100px;"" alt=""fahimrahman""/><br /><sub><b>fahimrahman</b></sub></a><br /><a href=""#design-fahimrahman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fahimrahman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/patilvaibhav12""><img src=""https://avatars.githubusercontent.com/u/58618808?v=4?s=100"" width=""100px;"" alt=""vaibhav patil""/><br /><sub><b>vaibhav patil</b></sub></a><br /><a href=""#design-patilvaibhav12"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=patilvaibhav12"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rahul-madaan""><img src=""https://avatars.githubusercontent.com/u/34760210?v=4?s=100"" width=""100px;"" alt=""Rahul Madan""/><br /><sub><b>Rahul Madan</b></sub></a><br /><a href=""#design-rahul-madaan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rahul-madaan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/KartikKaklotar""><img src=""https://avatars.githubusercontent.com/u/40653319?v=4?s=100"" width=""100px;"" alt=""kartik Kaklotar""/><br /><sub><b>kartik Kaklotar</b></sub></a><br /><a href=""#design-KartikKaklotar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KartikKaklotar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://asahiocean.com""><img src=""https://avatars.githubusercontent.com/u/61920574?v=4?s=100"" width=""100px;"" alt=""ASAHI OCEAN""/><br /><sub><b>ASAHI OCEAN</b></sub></a><br /><a href=""#design-asahiocean"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=asahiocean"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/djungbluth""><img src=""https://avatars.githubusercontent.com/u/651505?v=4?s=100"" width=""100px;"" alt=""Daniel Jungbluth""/><br /><sub><b>Daniel Jungbluth</b></sub></a><br /><a href=""#design-djungbluth"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=djungbluth"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Rajdeep-Borana""><img src=""https://avatars.githubusercontent.com/u/84788418?v=4?s=100"" width=""100px;"" alt=""Rajdeep Singh Borana""/><br /><sub><b>Rajdeep Singh Borana</b></sub></a><br /><a href=""#design-Rajdeep-Borana"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rajdeep-Borana"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/moonface19""><img src=""https://avatars.githubusercontent.com/u/31180335?v=4?s=100"" width=""100px;"" alt=""ankitha19""/><br /><sub><b>ankitha19</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=moonface19"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/linh-tran-16b4b11ab/""><img src=""https://avatars.githubusercontent.com/u/73977514?v=4?s=100"" width=""100px;"" alt=""Linh Tran""/><br /><sub><b>Linh Tran</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=linhtran2407"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/islamarr""><img src=""https://avatars.githubusercontent.com/u/38818550?v=4?s=100"" width=""100px;"" alt=""islamarr""/><br /><sub><b>islamarr</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=islamarr"" title=""Code"">💻</a> <a href=""#design-islamarr"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sabith-nadakkavil""><img src=""https://avatars.githubusercontent.com/u/47350620?v=4?s=100"" width=""100px;"" alt=""Mohamed Sabith""/><br /><sub><b>Mohamed Sabith</b></sub></a><br /><a href=""#design-sabith-nadakkavil"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sabith-nadakkavil"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/miguelangelcruzA""><img src=""https://avatars.githubusercontent.com/u/21376895?v=4?s=100"" width=""100px;"" alt=""Miguel Angel Cruz Acosta""/><br /><sub><b>Miguel Angel Cruz Acosta</b></sub></a><br /><a href=""#design-miguelangelcruzA"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=miguelangelcruzA"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://adebayo.dev""><img src=""https://avatars.githubusercontent.com/u/46798106?v=4?s=100"" width=""100px;"" alt=""Adebayo Ilerioluwa ""/><br /><sub><b>Adebayo Ilerioluwa </b></sub></a><br /><a href=""#design-adebayoileri"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/wodyy666""><img src=""https://avatars.githubusercontent.com/u/33988354?v=4?s=100"" width=""100px;"" alt=""Markus""/><br /><sub><b>Markus</b></sub></a><br /><a href=""#design-wodyy666"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wodyy666"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dkonyayev""><img src=""https://avatars.githubusercontent.com/u/15344498?v=4?s=100"" width=""100px;"" alt=""dkonyayev""/><br /><sub><b>dkonyayev</b></sub></a><br /><a href=""#design-dkonyayev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dkonyayev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/kevin-a-mathew/""><img src=""https://avatars.githubusercontent.com/u/30661278?v=4?s=100"" width=""100px;"" alt=""Kevin A Mathew""/><br /><sub><b>Kevin A Mathew</b></sub></a><br /><a href=""#design-kevinam99"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kevinam99"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/davidqmelo/""><img src=""https://avatars.githubusercontent.com/u/1130405?v=4?s=100"" width=""100px;"" alt=""David Melo""/><br /><sub><b>David Melo</b></sub></a><br /><a href=""#design-djayor"" title=""Design"">🎨</a> <a href=""#data-djayor"" title=""Data"">🔣</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/sacha-roussakis-notter-b6903095/""><img src=""https://avatars.githubusercontent.com/u/45083490?v=4?s=100"" width=""100px;"" alt=""DFW1N""/><br /><sub><b>DFW1N</b></sub></a><br /><a href=""#design-DFW1N"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DFW1N"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sohaibayub""><img src=""https://avatars.githubusercontent.com/u/3404286?v=4?s=100"" width=""100px;"" alt=""Sohaib Ayub""/><br /><sub><b>Sohaib Ayub</b></sub></a><br /><a href=""#design-sohaibayub"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sohaibayub"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/naveen2593kumar""><img src=""https://avatars.githubusercontent.com/u/25560921?v=4?s=100"" width=""100px;"" alt=""Navvy""/><br /><sub><b>Navvy</b></sub></a><br /><a href=""#design-naveen2593kumar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=naveen2593kumar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bloodiator2""><img src=""https://avatars.githubusercontent.com/u/86468614?v=4?s=100"" width=""100px;"" alt=""bloodiator2""/><br /><sub><b>bloodiator2</b></sub></a><br /><a href=""#design-bloodiator2"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bloodiator2"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hans-min""><img src=""https://avatars.githubusercontent.com/u/47271600?v=4?s=100"" width=""100px;"" alt=""Hanji""/><br /><sub><b>Hanji</b></sub></a><br /><a href=""#design-hans-min"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hans-min"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/arthur74""><img src=""https://avatars.githubusercontent.com/u/7101278?v=4?s=100"" width=""100px;"" alt=""arthur74""/><br /><sub><b>arthur74</b></sub></a><br /><a href=""#design-arthur74"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arthur74"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/sri-subathra-devi-b-50735280/""><img src=""https://avatars.githubusercontent.com/u/55084520?v=4?s=100"" width=""100px;"" alt=""Sri Subathra Devi B""/><br /><sub><b>Sri Subathra Devi B</b></sub></a><br /><a href=""#design-Subathra19"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Subathra19"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/makifay""><img src=""https://avatars.githubusercontent.com/u/6209605?v=4?s=100"" width=""100px;"" alt=""Akif Aydogmus""/><br /><sub><b>Akif Aydogmus</b></sub></a><br /><a href=""#design-makifay"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=makifay"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Umer-Javaid""><img src=""https://avatars.githubusercontent.com/u/5458744?v=4?s=100"" width=""100px;"" alt=""Umer Javaid""/><br /><sub><b>Umer Javaid</b></sub></a><br /><a href=""#design-Umer-Javaid"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Umer-Javaid"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/norioumata""><img src=""https://avatars.githubusercontent.com/u/49550016?v=4?s=100"" width=""100px;"" alt=""Norio Umata""/><br /><sub><b>Norio Umata</b></sub></a><br /><a href=""#design-norioumata"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=norioumata"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gazihasanrahman""><img src=""https://avatars.githubusercontent.com/u/32906826?v=4?s=100"" width=""100px;"" alt=""Gazi Hasan Rahman""/><br /><sub><b>Gazi Hasan Rahman</b></sub></a><br /><a href=""#design-gazihasanrahman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gazihasanrahman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/ktn0047/""><img src=""https://avatars.githubusercontent.com/u/5679700?v=4?s=100"" width=""100px;"" alt=""Keith Nguyen""/><br /><sub><b>Keith Nguyen</b></sub></a><br /><a href=""#design-ecigar13"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ecigar13"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://megalomaniacslair.co.uk""><img src=""https://avatars.githubusercontent.com/u/4312997?v=4?s=100"" width=""100px;"" alt=""Megalomaniac""/><br /><sub><b>Megalomaniac</b></sub></a><br /><a href=""#design-drmegalomaniac"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=drmegalomaniac"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ShankS3""><img src=""https://avatars.githubusercontent.com/u/19852114?v=4?s=100"" width=""100px;"" alt=""ShankS3""/><br /><sub><b>ShankS3</b></sub></a><br /><a href=""#design-ShankS3"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ShankS3"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/FarhadAlishov""><img src=""https://avatars.githubusercontent.com/u/60629807?v=4?s=100"" width=""100px;"" alt=""Farhad Alishov""/><br /><sub><b>Farhad Alishov</b></sub></a><br /><a href=""#design-FarhadAlishov"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=FarhadAlishov"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://vanpariyar.in""><img src=""https://avatars.githubusercontent.com/u/26689210?v=4?s=100"" width=""100px;"" alt=""Ronak J Vanpariya""/><br /><sub><b>Ronak J Vanpariya</b></sub></a><br /><a href=""#design-vanpariyar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vanpariyar"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/azrael0learza""><img src=""https://avatars.githubusercontent.com/u/65418079?v=4?s=100"" width=""100px;"" alt=""azrael0learza""/><br /><sub><b>azrael0learza</b></sub></a><br /><a href=""#design-azrael0learza"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=azrael0learza"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pavstar619""><img src=""https://avatars.githubusercontent.com/u/52383535?v=4?s=100"" width=""100px;"" alt=""Pavel Rahman""/><br /><sub><b>Pavel Rahman</b></sub></a><br /><a href=""#design-pavstar619"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pavstar619"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chuabern""><img src=""https://avatars.githubusercontent.com/u/34312496?v=4?s=100"" width=""100px;"" alt=""chuabern""/><br /><sub><b>chuabern</b></sub></a><br /><a href=""#design-chuabern"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chuabern"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RahulTirkey1""><img src=""https://avatars.githubusercontent.com/u/52082555?v=4?s=100"" width=""100px;"" alt=""Rahul Tirkey""/><br /><sub><b>Rahul Tirkey</b></sub></a><br /><a href=""#design-RahulTirkey1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RahulTirkey1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://ruslanbes.com""><img src=""https://avatars.githubusercontent.com/u/4248022?v=4?s=100"" width=""100px;"" alt=""Ruslan Bes""/><br /><sub><b>Ruslan Bes</b></sub></a><br /><a href=""#design-ruslanbes"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ruslanbes"" title=""Code"">💻</a> <a href=""#example-ruslanbes"" title=""Examples"">💡</a> <a href=""#maintenance-ruslanbes"" title=""Maintenance"">🚧</a> <a href=""#content-ruslanbes"" title=""Content"">🖋</a> <a href=""#data-ruslanbes"" title=""Data"">🔣</a> <a href=""#infra-ruslanbes"" title=""Infrastructure (Hosting, Build-Tools, etc)"">🚇</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BohdansWorkshop""><img src=""https://avatars.githubusercontent.com/u/26243346?v=4?s=100"" width=""100px;"" alt=""Bohdan""/><br /><sub><b>Bohdan</b></sub></a><br /><a href=""#design-BohdansWorkshop"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BohdansWorkshop"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Juzdzewski""><img src=""https://avatars.githubusercontent.com/u/34581620?v=4?s=100"" width=""100px;"" alt=""Juzdzewski""/><br /><sub><b>Juzdzewski</b></sub></a><br /><a href=""#design-Juzdzewski"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Juzdzewski"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/grigor-minasyan/""><img src=""https://avatars.githubusercontent.com/u/4447177?v=4?s=100"" width=""100px;"" alt=""Grigor Minasyan""/><br /><sub><b>Grigor Minasyan</b></sub></a><br /><a href=""#design-grigor-minasyan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=grigor-minasyan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alvintwc""><img src=""https://avatars.githubusercontent.com/u/55237079?v=4?s=100"" width=""100px;"" alt=""alvintwc""/><br /><sub><b>alvintwc</b></sub></a><br /><a href=""#design-alvintwc"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alvintwc"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/anandnat""><img src=""https://avatars.githubusercontent.com/u/6303094?v=4?s=100"" width=""100px;"" alt=""Anand Natarajan""/><br /><sub><b>Anand Natarajan</b></sub></a><br /><a href=""#design-anandnat"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=anandnat"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/esyekas""><img src=""https://avatars.githubusercontent.com/u/12535720?v=4?s=100"" width=""100px;"" alt=""Kashan Ali""/><br /><sub><b>Kashan Ali</b></sub></a><br /><a href=""#design-esyekas"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=esyekas"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/2Math0""><img src=""https://avatars.githubusercontent.com/u/50797015?v=4?s=100"" width=""100px;"" alt=""Thomas Meshail""/><br /><sub><b>Thomas Meshail</b></sub></a><br /><a href=""#design-2Math0"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=2Math0"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://lamegaton.github.io/""><img src=""https://avatars.githubusercontent.com/u/5988492?v=4?s=100"" width=""100px;"" alt=""Son Pham""/><br /><sub><b>Son Pham</b></sub></a><br /><a href=""#design-lamegaton"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/frenchytheasian""><img src=""https://avatars.githubusercontent.com/u/53289952?v=4?s=100"" width=""100px;"" alt=""Michael French""/><br /><sub><b>Michael French</b></sub></a><br /><a href=""#example-frenchytheasian"" title=""Examples"">💡</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/yashmishra12/""><img src=""https://avatars.githubusercontent.com/u/32962569?v=4?s=100"" width=""100px;"" alt=""Yash Mishra""/><br /><sub><b>Yash Mishra</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yashmishra12"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/marod1971""><img src=""https://avatars.githubusercontent.com/u/37345146?v=4?s=100"" width=""100px;"" alt=""Miguel Rodriguez""/><br /><sub><b>Miguel Rodriguez</b></sub></a><br /><a href=""#design-marod1971"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=marod1971"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pbachman""><img src=""https://avatars.githubusercontent.com/u/393635?v=4?s=100"" width=""100px;"" alt=""Philipp Bachmann""/><br /><sub><b>Philipp Bachmann</b></sub></a><br /><a href=""#design-pbachman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pbachman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sunny7899""><img src=""https://avatars.githubusercontent.com/u/15168009?v=4?s=100"" width=""100px;"" alt=""sunny""/><br /><sub><b>sunny</b></sub></a><br /><a href=""#design-sunny7899"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sunny7899"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/siddharth9chatterjee/""><img src=""https://avatars.githubusercontent.com/u/59141222?v=4?s=100"" width=""100px;"" alt=""Siddharth Chatterjee""/><br /><sub><b>Siddharth Chatterjee</b></sub></a><br /><a href=""#design-siddharthchatterjee9"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=siddharthchatterjee9"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://naghavipour.ir/""><img src=""https://avatars.githubusercontent.com/u/39297270?v=4?s=100"" width=""100px;"" alt=""Michael Naghavipour""/><br /><sub><b>Michael Naghavipour</b></sub></a><br /><a href=""#design-MichaelNaghavipour"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MichaelNaghavipour"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://sahilgarg90.github.io""><img src=""https://avatars.githubusercontent.com/u/8426016?v=4?s=100"" width=""100px;"" alt=""Sahil Garg""/><br /><sub><b>Sahil Garg</b></sub></a><br /><a href=""#design-sahilgarg90"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sahilgarg90"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/react-ghost""><img src=""https://avatars.githubusercontent.com/u/53898208?v=4?s=100"" width=""100px;"" alt=""MicroLion""/><br /><sub><b>MicroLion</b></sub></a><br /><a href=""#design-react-ghost"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=react-ghost"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/wctwc""><img src=""https://avatars.githubusercontent.com/u/55237079?v=4?s=100"" width=""100px;"" alt=""wctwc""/><br /><sub><b>wctwc</b></sub></a><br /><a href=""#design-wctwc"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wctwc"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RhnSharma""><img src=""https://avatars.githubusercontent.com/u/22129063?v=4?s=100"" width=""100px;"" alt=""Rohan Sharma""/><br /><sub><b>Rohan Sharma</b></sub></a><br /><a href=""#data-RhnSharma"" title=""Data"">🔣</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Ashishbodla""><img src=""https://avatars.githubusercontent.com/u/30318783?v=4?s=100"" width=""100px;"" alt=""AshishBodla""/><br /><sub><b>AshishBodla</b></sub></a><br /><a href=""#design-Ashishbodla"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ashishbodla"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/garkuwa""><img src=""https://avatars.githubusercontent.com/u/27901660?v=4?s=100"" width=""100px;"" alt=""Taras Pysarskyi""/><br /><sub><b>Taras Pysarskyi</b></sub></a><br /><a href=""#design-garkuwa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=garkuwa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.luqmanbello.com""><img src=""https://avatars.githubusercontent.com/u/22626993?v=4?s=100"" width=""100px;"" alt=""Luqman Bello O.""/><br /><sub><b>Luqman Bello O.</b></sub></a><br /><a href=""#design-Lukazcreations"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Lukazcreations"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DyingDown""><img src=""https://avatars.githubusercontent.com/u/41174243?v=4?s=100"" width=""100px;"" alt=""DyingDown""/><br /><sub><b>DyingDown</b></sub></a><br /><a href=""#design-DyingDown"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DyingDown"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/diegochappedelaine/""><img src=""https://avatars.githubusercontent.com/u/25375651?v=4?s=100"" width=""100px;"" alt=""Diego Chapedelaine""/><br /><sub><b>Diego Chapedelaine</b></sub></a><br /><a href=""#design-diegochappedelaine"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=diegochappedelaine"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RichleeMagno""><img src=""https://avatars.githubusercontent.com/u/85104181?v=4?s=100"" width=""100px;"" alt=""Richlee""/><br /><sub><b>Richlee</b></sub></a><br /><a href=""#design-RichleeMagno"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RichleeMagno"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/asifhabib""><img src=""https://avatars.githubusercontent.com/u/3713433?v=4?s=100"" width=""100px;"" alt=""Asif Habib""/><br /><sub><b>Asif Habib</b></sub></a><br /><a href=""#design-asifhabib"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=asifhabib"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.hmazharul.com/""><img src=""https://avatars.githubusercontent.com/u/2561458?v=4?s=100"" width=""100px;"" alt=""Mazharul Hossain""/><br /><sub><b>Mazharul Hossain</b></sub></a><br /><a href=""#design-Mazharul-Hossain"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Mazharul-Hossain"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tonikolaba""><img src=""https://avatars.githubusercontent.com/u/24297746?v=4?s=100"" width=""100px;"" alt=""toni""/><br /><sub><b>toni</b></sub></a><br /><a href=""#design-tonikolaba"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tonikolaba"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Pragyanshu-rai""><img src=""https://avatars.githubusercontent.com/u/52020738?v=4?s=100"" width=""100px;"" alt=""Pragyanshu Rai""/><br /><sub><b>Pragyanshu Rai</b></sub></a><br /><a href=""#design-Pragyanshu-rai"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Pragyanshu-rai"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mattheweller""><img src=""https://avatars.githubusercontent.com/u/8635070?v=4?s=100"" width=""100px;"" alt=""Matthew Eller""/><br /><sub><b>Matthew Eller</b></sub></a><br /><a href=""#design-mattheweller"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mattheweller"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AbhiBiju""><img src=""https://avatars.githubusercontent.com/u/83188832?v=4?s=100"" width=""100px;"" alt=""AbhiBiju""/><br /><sub><b>AbhiBiju</b></sub></a><br /><a href=""#design-AbhiBiju"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AbhiBiju"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Romazho""><img src=""https://avatars.githubusercontent.com/u/45086380?v=4?s=100"" width=""100px;"" alt=""Roman Zhornytskiy""/><br /><sub><b>Roman Zhornytskiy</b></sub></a><br /><a href=""#design-Romazho"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Romazho"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/lucascamino/""><img src=""https://avatars.githubusercontent.com/u/31540151?v=4?s=100"" width=""100px;"" alt=""Lucas Camino""/><br /><sub><b>Lucas Camino</b></sub></a><br /><a href=""#design-lucasca95"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lucasca95"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://joaocasarin.github.io""><img src=""https://avatars.githubusercontent.com/u/48847394?v=4?s=100"" width=""100px;"" alt=""João Vitor Casarin""/><br /><sub><b>João Vitor Casarin</b></sub></a><br /><a href=""#design-joaocasarin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=joaocasarin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/evgeniyshay""><img src=""https://avatars.githubusercontent.com/u/4928747?v=4?s=100"" width=""100px;"" alt=""Evgeniy Shay""/><br /><sub><b>Evgeniy Shay</b></sub></a><br /><a href=""#design-evgeniyshay"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=evgeniyshay"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ehsanbarkhordar.github.io""><img src=""https://avatars.githubusercontent.com/u/22658149?v=4?s=100"" width=""100px;"" alt=""Ehsan Barkhordar""/><br /><sub><b>Ehsan Barkhordar</b></sub></a><br /><a href=""#design-ehsanbarkhordar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ehsanbarkhordar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://gab618.github.io/curriculo-html/frontend.html""><img src=""https://avatars.githubusercontent.com/u/24815192?v=4?s=100"" width=""100px;"" alt=""Gabriel""/><br /><sub><b>Gabriel</b></sub></a><br /><a href=""#design-gab618"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gab618"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.instagram.com/7shibu.ninja/""><img src=""https://avatars.githubusercontent.com/u/44550746?v=4?s=100"" width=""100px;"" alt=""Shibu Mohapatra""/><br /><sub><b>Shibu Mohapatra</b></sub></a><br /><a href=""#design-MohapatraShibu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MohapatraShibu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.kirkovsky.com""><img src=""https://avatars.githubusercontent.com/u/8731045?v=4?s=100"" width=""100px;"" alt=""Pavel Kirkovsky""/><br /><sub><b>Pavel Kirkovsky</b></sub></a><br /><a href=""#design-pkirkovsky"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pkirkovsky"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rajageepk""><img src=""https://avatars.githubusercontent.com/u/85139088?v=4?s=100"" width=""100px;"" alt=""Tahir Gul""/><br /><sub><b>Tahir Gul</b></sub></a><br /><a href=""#design-rajageepk"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rajageepk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/imDevSalman""><img src=""https://avatars.githubusercontent.com/u/76111741?v=4?s=100"" width=""100px;"" alt=""imDevSalman""/><br /><sub><b>imDevSalman</b></sub></a><br /><a href=""#design-imDevSalman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=imDevSalman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.jordohio.net""><img src=""https://avatars.githubusercontent.com/u/2506839?v=4?s=100"" width=""100px;"" alt=""Jordan Donaldson""/><br /><sub><b>Jordan Donaldson</b></sub></a><br /><a href=""#design-Jordohio"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jordohio"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/js-venus""><img src=""https://avatars.githubusercontent.com/u/62536093?v=4?s=100"" width=""100px;"" alt=""js-venus""/><br /><sub><b>js-venus</b></sub></a><br /><a href=""#design-js-venus"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=js-venus"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/s-faisal""><img src=""https://avatars.githubusercontent.com/u/81669909?v=4?s=100"" width=""100px;"" alt=""Faisal Shaikh""/><br /><sub><b>Faisal Shaikh</b></sub></a><br /><a href=""#design-s-faisal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=s-faisal"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ashishbpatil""><img src=""https://avatars.githubusercontent.com/u/26487615?v=4?s=100"" width=""100px;"" alt=""ashishbpatil""/><br /><sub><b>ashishbpatil</b></sub></a><br /><a href=""#design-ashishbpatil"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ashishbpatil"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/trile127""><img src=""https://avatars.githubusercontent.com/u/5490896?v=4?s=100"" width=""100px;"" alt=""Tri Le""/><br /><sub><b>Tri Le</b></sub></a><br /><a href=""#design-trile127"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=trile127"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tomtreffke""><img src=""https://avatars.githubusercontent.com/u/37486390?v=4?s=100"" width=""100px;"" alt=""tomtreffke""/><br /><sub><b>tomtreffke</b></sub></a><br /><a href=""#design-tomtreffke"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tomtreffke"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://dev.to/lalami""><img src=""https://avatars.githubusercontent.com/u/50052356?v=4?s=100"" width=""100px;"" alt=""Salah Eddine Lalami""/><br /><sub><b>Salah Eddine Lalami</b></sub></a><br /><a href=""#design-idurar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=idurar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MattiasXu""><img src=""https://avatars.githubusercontent.com/u/28701274?v=4?s=100"" width=""100px;"" alt=""Mattias Xu""/><br /><sub><b>Mattias Xu</b></sub></a><br /><a href=""#design-MattiasXu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MattiasXu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://manasgupta1820@gmail.com""><img src=""https://avatars.githubusercontent.com/u/53006261?v=4?s=100"" width=""100px;"" alt=""Manas Gupta""/><br /><sub><b>Manas Gupta</b></sub></a><br /><a href=""#design-Manas1820"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Manas1820"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/wolfsong62""><img src=""https://avatars.githubusercontent.com/u/88990732?v=4?s=100"" width=""100px;"" alt=""wolfsong62""/><br /><sub><b>wolfsong62</b></sub></a><br /><a href=""#design-wolfsong62"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wolfsong62"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mehmir""><img src=""https://avatars.githubusercontent.com/u/11830037?v=4?s=100"" width=""100px;"" alt=""Mehdi Mirzaei""/><br /><sub><b>Mehdi Mirzaei</b></sub></a><br /><a href=""#design-mehmir"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mehmir"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/vanbakhanh/""><img src=""https://avatars.githubusercontent.com/u/26846455?v=4?s=100"" width=""100px;"" alt=""Van Ba Khanh""/><br /><sub><b>Van Ba Khanh</b></sub></a><br /><a href=""#design-vanbakhanh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vanbakhanh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.thehelpfulhacker.com/""><img src=""https://avatars.githubusercontent.com/u/64166375?v=4?s=100"" width=""100px;"" alt=""Sel Embee""/><br /><sub><b>Sel Embee</b></sub></a><br /><a href=""#design-Selanda"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Selanda"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Suvradippaul""><img src=""https://avatars.githubusercontent.com/u/68487263?v=4?s=100"" width=""100px;"" alt=""Suvradip Paul""/><br /><sub><b>Suvradip Paul</b></sub></a><br /><a href=""#design-Suvradippaul"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Suvradippaul"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sharique5""><img src=""https://avatars.githubusercontent.com/u/56303273?v=4?s=100"" width=""100px;"" alt=""Sharique""/><br /><sub><b>Sharique</b></sub></a><br /><a href=""#design-sharique5"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/unosebastian/""><img src=""https://avatars.githubusercontent.com/u/15133386?v=4?s=100"" width=""100px;"" alt=""Seabass""/><br /><sub><b>Seabass</b></sub></a><br /><a href=""#design-uno-sebastian"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=uno-sebastian"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.behance.net/ytliusvn""><img src=""https://avatars.githubusercontent.com/u/13102859?v=4?s=100"" width=""100px;"" alt=""Penny Liu""/><br /><sub><b>Penny Liu</b></sub></a><br /><a href=""#design-ytliuSVN"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ytliuSVN"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.jatinderbhola.com""><img src=""https://avatars.githubusercontent.com/u/12767363?v=4?s=100"" width=""100px;"" alt=""jatinder bhola""/><br /><sub><b>jatinder bhola</b></sub></a><br /><a href=""#design-jatinderbhola"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jatinderbhola"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/misterqbit""><img src=""https://avatars.githubusercontent.com/u/53399858?v=4?s=100"" width=""100px;"" alt=""misterqbit""/><br /><sub><b>misterqbit</b></sub></a><br /><a href=""#design-misterqbit"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=misterqbit"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Daniel-VS9""><img src=""https://avatars.githubusercontent.com/u/87687898?v=4?s=100"" width=""100px;"" alt=""Daniel-VS9""/><br /><sub><b>Daniel-VS9</b></sub></a><br /><a href=""#design-Daniel-VS9"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Daniel-VS9"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ShruthiPMurthy""><img src=""https://avatars.githubusercontent.com/u/62170967?v=4?s=100"" width=""100px;"" alt=""Shruthi""/><br /><sub><b>Shruthi</b></sub></a><br /><a href=""#design-ShruthiPMurthy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ShruthiPMurthy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/beefydog""><img src=""https://avatars.githubusercontent.com/u/8891516?v=4?s=100"" width=""100px;"" alt=""beefydog""/><br /><sub><b>beefydog</b></sub></a><br /><a href=""#design-beefydog"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=beefydog"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://surajkumar07.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/74069155?v=4?s=100"" width=""100px;"" alt=""Suraj Kumar""/><br /><sub><b>Suraj Kumar</b></sub></a><br /><a href=""#design-surajkumar016"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=surajkumar016"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hrishikeshps""><img src=""https://avatars.githubusercontent.com/u/13060987?v=4?s=100"" width=""100px;"" alt=""hrishikeshps""/><br /><sub><b>hrishikeshps</b></sub></a><br /><a href=""#design-hrishikeshps"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hrishikeshps"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sudface""><img src=""https://avatars.githubusercontent.com/u/31204774?v=4?s=100"" width=""100px;"" alt=""Sudarshan""/><br /><sub><b>Sudarshan</b></sub></a><br /><a href=""#design-sudface"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sudface"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/idivyanshbansal/""><img src=""https://avatars.githubusercontent.com/u/86911142?v=4?s=100"" width=""100px;"" alt=""Divyansh""/><br /><sub><b>Divyansh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=idivyanshbansal"" title=""Code"">💻</a> <a href=""#design-idivyanshbansal"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://linktr.ee/zyairelai""><img src=""https://avatars.githubusercontent.com/u/49854907?v=4?s=100"" width=""100px;"" alt=""Zyaire""/><br /><sub><b>Zyaire</b></sub></a><br /><a href=""#design-zyairelai"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=zyairelai"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/omarbelkady""><img src=""https://avatars.githubusercontent.com/u/31806568?v=4?s=100"" width=""100px;"" alt=""Omar Belkady""/><br /><sub><b>Omar Belkady</b></sub></a><br /><a href=""#design-omarbelkady"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=omarbelkady"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alexiismua""><img src=""https://avatars.githubusercontent.com/u/89637502?v=4?s=100"" width=""100px;"" alt=""alexiismua""/><br /><sub><b>alexiismua</b></sub></a><br /><a href=""#design-alexiismua"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alexiismua"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://eduardaalvess.github.io/portfolio/""><img src=""https://avatars.githubusercontent.com/u/46230668?v=4?s=100"" width=""100px;"" alt=""Eduarda Alves""/><br /><sub><b>Eduarda Alves</b></sub></a><br /><a href=""#design-eduardaalvess"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pycoach""><img src=""https://avatars.githubusercontent.com/u/62456278?v=4?s=100"" width=""100px;"" alt=""pycoach""/><br /><sub><b>pycoach</b></sub></a><br /><a href=""#design-pycoach"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pycoach"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ruhul0.github.io/""><img src=""https://avatars.githubusercontent.com/u/18599612?v=4?s=100"" width=""100px;"" alt=""Ruhul""/><br /><sub><b>Ruhul</b></sub></a><br /><a href=""#design-ruhul0"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ruhul0"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pmoustopoulos""><img src=""https://avatars.githubusercontent.com/u/37026320?v=4?s=100"" width=""100px;"" alt=""pmoustopoulos""/><br /><sub><b>pmoustopoulos</b></sub></a><br /><a href=""#design-pmoustopoulos"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pmoustopoulos"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tingalinga""><img src=""https://avatars.githubusercontent.com/u/47927589?v=4?s=100"" width=""100px;"" alt=""Lee Hui Ting""/><br /><sub><b>Lee Hui Ting</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tingalinga"" title=""Code"">💻</a> <a href=""#design-tingalinga"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bodi1981""><img src=""https://avatars.githubusercontent.com/u/85903180?v=4?s=100"" width=""100px;"" alt=""bodi1981""/><br /><sub><b>bodi1981</b></sub></a><br /><a href=""#design-bodi1981"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bodi1981"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DevaraatJoshi23""><img src=""https://avatars.githubusercontent.com/u/52374505?v=4?s=100"" width=""100px;"" alt=""Devaraat Joshi""/><br /><sub><b>Devaraat Joshi</b></sub></a><br /><a href=""#design-DevaraatJoshi23"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DevaraatJoshi23"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/johnnychang25678""><img src=""https://avatars.githubusercontent.com/u/69426153?v=4?s=100"" width=""100px;"" alt=""Johnny""/><br /><sub><b>Johnny</b></sub></a><br /><a href=""#design-johnnychang25678"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=johnnychang25678"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rogue-coder""><img src=""https://avatars.githubusercontent.com/u/5590629?v=4?s=100"" width=""100px;"" alt=""rogue-coder""/><br /><sub><b>rogue-coder</b></sub></a><br /><a href=""#design-rogue-coder"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rogue-coder"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/viiktr""><img src=""https://avatars.githubusercontent.com/u/85831468?v=4?s=100"" width=""100px;"" alt=""viiktr""/><br /><sub><b>viiktr</b></sub></a><br /><a href=""#design-viiktr"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/thelalitmohan""><img src=""https://avatars.githubusercontent.com/u/18218957?v=4?s=100"" width=""100px;"" alt=""Lalit Mohan""/><br /><sub><b>Lalit Mohan</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=thelalitmohan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JoaoSousa00""><img src=""https://avatars.githubusercontent.com/u/49438269?v=4?s=100"" width=""100px;"" alt=""João Sousa""/><br /><sub><b>João Sousa</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JoaoSousa00"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tujinwei""><img src=""https://avatars.githubusercontent.com/u/84245009?v=4?s=100"" width=""100px;"" alt=""言葉之靈""/><br /><sub><b>言葉之靈</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tujinwei"" title=""Code"">💻</a> <a href=""#design-tujinwei"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RJLABS""><img src=""https://avatars.githubusercontent.com/u/42428311?v=4?s=100"" width=""100px;"" alt=""RJLABS""/><br /><sub><b>RJLABS</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RJLABS"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/brittney0522""><img src=""https://avatars.githubusercontent.com/u/85816771?v=4?s=100"" width=""100px;"" alt=""brittney0522""/><br /><sub><b>brittney0522</b></sub></a><br /><a href=""#design-brittney0522"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=brittney0522"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shamera82""><img src=""https://avatars.githubusercontent.com/u/20187209?v=4?s=100"" width=""100px;"" alt=""sham""/><br /><sub><b>sham</b></sub></a><br /><a href=""#design-shamera82"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shamera82"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/glgoose""><img src=""https://avatars.githubusercontent.com/u/48956933?v=4?s=100"" width=""100px;"" alt=""Glenn Goossens""/><br /><sub><b>Glenn Goossens</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=glgoose"" title=""Code"">💻</a> <a href=""#design-glgoose"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/CS4Usama""><img src=""https://avatars.githubusercontent.com/u/76664626?v=4?s=100"" width=""100px;"" alt=""Cyber Hawk""/><br /><sub><b>Cyber Hawk</b></sub></a><br /><a href=""#design-CS4Usama"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=CS4Usama"" title=""Code"">💻</a> <a href=""#content-CS4Usama"" title=""Content"">🖋</a> <a href=""#business-CS4Usama"" title=""Business development"">💼</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ankiii07""><img src=""https://avatars.githubusercontent.com/u/66520710?v=4?s=100"" width=""100px;"" alt=""Ankit Yadav""/><br /><sub><b>Ankit Yadav</b></sub></a><br /><a href=""#design-ankiii07"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ankiii07"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/verbality""><img src=""https://avatars.githubusercontent.com/u/20299932?v=4?s=100"" width=""100px;"" alt=""verbality""/><br /><sub><b>verbality</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=verbality"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/defaltadmin""><img src=""https://avatars.githubusercontent.com/u/46088950?v=4?s=100"" width=""100px;"" alt=""Mohammed Siddiqui""/><br /><sub><b>Mohammed Siddiqui</b></sub></a><br /><a href=""#design-defaltadmin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=defaltadmin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AdamKaczor6250""><img src=""https://avatars.githubusercontent.com/u/86492896?v=4?s=100"" width=""100px;"" alt=""AdamKaczor6250""/><br /><sub><b>AdamKaczor6250</b></sub></a><br /><a href=""#design-AdamKaczor6250"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AdamKaczor6250"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.ramonmartineznieto.com/""><img src=""https://avatars.githubusercontent.com/u/53094553?v=4?s=100"" width=""100px;"" alt=""Ramón Martinez Nieto""/><br /><sub><b>Ramón Martinez Nieto</b></sub></a><br /><a href=""#design-RamonMartinezNieto"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RamonMartinezNieto"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Beziu""><img src=""https://avatars.githubusercontent.com/u/19675094?v=4?s=100"" width=""100px;"" alt=""Grzegorz Dziubak""/><br /><sub><b>Grzegorz Dziubak</b></sub></a><br /><a href=""#design-Beziu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Beziu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.ayoubberdeddouch.com""><img src=""https://avatars.githubusercontent.com/u/24941662?v=4?s=100"" width=""100px;"" alt=""Ayoub BERDEDDOUCH""/><br /><sub><b>Ayoub BERDEDDOUCH</b></sub></a><br /><a href=""#design-ayoub-berdeddouch"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayoub-berdeddouch"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nikola-fadv""><img src=""https://avatars.githubusercontent.com/u/87002342?v=4?s=100"" width=""100px;"" alt=""nikola-fadv""/><br /><sub><b>nikola-fadv</b></sub></a><br /><a href=""#design-nikola-fadv"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nikola-fadv"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.akarshagrawal.com""><img src=""https://avatars.githubusercontent.com/u/23052143?v=4?s=100"" width=""100px;"" alt=""Akarsh Agrawal""/><br /><sub><b>Akarsh Agrawal</b></sub></a><br /><a href=""#design-akarshagrawal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=akarshagrawal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mitramirshafiee.ir/""><img src=""https://avatars.githubusercontent.com/u/53291220?v=4?s=100"" width=""100px;"" alt=""Mitra Mirshafiee""/><br /><sub><b>Mitra Mirshafiee</b></sub></a><br /><a href=""#design-mitramir55"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mitramir55"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://links.parkercs.tech""><img src=""https://avatars.githubusercontent.com/u/12587967?v=4?s=100"" width=""100px;"" alt=""Parker Stephens""/><br /><sub><b>Parker Stephens</b></sub></a><br /><a href=""#design-parker-stephens"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=parker-stephens"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alrenee99""><img src=""https://avatars.githubusercontent.com/u/90872255?v=4?s=100"" width=""100px;"" alt=""alrenee99""/><br /><sub><b>alrenee99</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alrenee99"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/karuissobusy""><img src=""https://avatars.githubusercontent.com/u/8011686?v=4?s=100"" width=""100px;"" alt=""Karthick Vankayala""/><br /><sub><b>Karthick Vankayala</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=karuissobusy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/IrynaTsymbaliuk""><img src=""https://avatars.githubusercontent.com/u/42023359?v=4?s=100"" width=""100px;"" alt=""Iryna ""/><br /><sub><b>Iryna </b></sub></a><br /><a href=""#design-IrynaTsymbaliuk"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=IrynaTsymbaliuk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/palanugrah""><img src=""https://avatars.githubusercontent.com/u/39839393?v=4?s=100"" width=""100px;"" alt=""palanugrah""/><br /><sub><b>palanugrah</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=palanugrah"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Gwinbleind""><img src=""https://avatars.githubusercontent.com/u/52351166?v=4?s=100"" width=""100px;"" alt=""Gwinbleind""/><br /><sub><b>Gwinbleind</b></sub></a><br /><a href=""#design-Gwinbleind"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Gwinbleind"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Sevitte""><img src=""https://avatars.githubusercontent.com/u/25014302?v=4?s=100"" width=""100px;"" alt=""Randy Bobandy""/><br /><sub><b>Randy Bobandy</b></sub></a><br /><a href=""#design-Sevitte"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Sevitte"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.bekroz.com""><img src=""https://avatars.githubusercontent.com/u/77227784?v=4?s=100"" width=""100px;"" alt=""Bek Rozikoff""/><br /><sub><b>Bek Rozikoff</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bekrozikoff"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/david-nguyen-2790aa140/""><img src=""https://avatars.githubusercontent.com/u/54002653?v=4?s=100"" width=""100px;"" alt=""davnguye""/><br /><sub><b>davnguye</b></sub></a><br /><a href=""#design-davnguye"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=davnguye"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Neel301""><img src=""https://avatars.githubusercontent.com/u/57136375?v=4?s=100"" width=""100px;"" alt=""Neel Patel""/><br /><sub><b>Neel Patel</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Neel301"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ehudbehar""><img src=""https://avatars.githubusercontent.com/u/25829515?v=4?s=100"" width=""100px;"" alt=""ehudbehar""/><br /><sub><b>ehudbehar</b></sub></a><br /><a href=""#design-ehudbehar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ehudbehar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nicholas-cod3r""><img src=""https://avatars.githubusercontent.com/u/90457217?v=4?s=100"" width=""100px;"" alt=""nicholas-cod3r""/><br /><sub><b>nicholas-cod3r</b></sub></a><br /><a href=""#design-nicholas-cod3r"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nicholas-cod3r"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/michaelfranki""><img src=""https://avatars.githubusercontent.com/u/90117951?v=4?s=100"" width=""100px;"" alt=""michaelfranki""/><br /><sub><b>michaelfranki</b></sub></a><br /><a href=""#design-michaelfranki"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://esteewhite.com""><img src=""https://avatars.githubusercontent.com/u/64324417?v=4?s=100"" width=""100px;"" alt=""Esther White""/><br /><sub><b>Esther White</b></sub></a><br /><a href=""#design-esteecodes"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=esteecodes"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/prathmeshpb""><img src=""https://avatars.githubusercontent.com/u/67878397?v=4?s=100"" width=""100px;"" alt=""prathmeshpb""/><br /><sub><b>prathmeshpb</b></sub></a><br /><a href=""#design-prathmeshpb"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=prathmeshpb"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/victorwlin""><img src=""https://avatars.githubusercontent.com/u/57220247?v=4?s=100"" width=""100px;"" alt=""Victor Lin""/><br /><sub><b>Victor Lin</b></sub></a><br /><a href=""#design-victorwlin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=victorwlin"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ChristineCYin""><img src=""https://avatars.githubusercontent.com/u/28497315?v=4?s=100"" width=""100px;"" alt=""Christine C. Yin""/><br /><sub><b>Christine C. Yin</b></sub></a><br /><a href=""#design-ChristineCYin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ChristineCYin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GitLearner-begin""><img src=""https://avatars.githubusercontent.com/u/80672067?v=4?s=100"" width=""100px;"" alt=""GitLearner-begin""/><br /><sub><b>GitLearner-begin</b></sub></a><br /><a href=""#design-GitLearner-begin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GitLearner-begin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/karapnaran""><img src=""https://avatars.githubusercontent.com/u/36893642?v=4?s=100"" width=""100px;"" alt=""Mesrop Andreasyan""/><br /><sub><b>Mesrop Andreasyan</b></sub></a><br /><a href=""#design-karapnaran"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=karapnaran"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ngarcia610""><img src=""https://avatars.githubusercontent.com/u/20814563?v=4?s=100"" width=""100px;"" alt=""Nathan Garcia""/><br /><sub><b>Nathan Garcia</b></sub></a><br /><a href=""#design-ngarcia610"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/commonsw04""><img src=""https://avatars.githubusercontent.com/u/91599584?v=4?s=100"" width=""100px;"" alt=""commonsw04""/><br /><sub><b>commonsw04</b></sub></a><br /><a href=""#design-commonsw04"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=commonsw04"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://rashadtanjim.info""><img src=""https://avatars.githubusercontent.com/u/47326039?v=4?s=100"" width=""100px;"" alt=""Md. Rashad Tanjim""/><br /><sub><b>Md. Rashad Tanjim</b></sub></a><br /><a href=""#design-RashadTanjim"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RashadTanjim"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alimalek71""><img src=""https://avatars.githubusercontent.com/u/15885307?v=4?s=100"" width=""100px;"" alt=""Ali Malek""/><br /><sub><b>Ali Malek</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alimalek71"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/PAODLT""><img src=""https://avatars.githubusercontent.com/u/78404951?v=4?s=100"" width=""100px;"" alt=""PAODLT""/><br /><sub><b>PAODLT</b></sub></a><br /><a href=""#design-PAODLT"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PAODLT"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.nikhil27.com""><img src=""https://avatars.githubusercontent.com/u/45140298?v=4?s=100"" width=""100px;"" alt=""Nikhil Bobade""/><br /><sub><b>Nikhil Bobade</b></sub></a><br /><a href=""#design-Nikhil27b"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nikhil27b"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hyuckjin21""><img src=""https://avatars.githubusercontent.com/u/831810?v=4?s=100"" width=""100px;"" alt=""hyuckjin21""/><br /><sub><b>hyuckjin21</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hyuckjin21"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Itashamodi""><img src=""https://avatars.githubusercontent.com/u/58629614?v=4?s=100"" width=""100px;"" alt=""Itasha Modi""/><br /><sub><b>Itasha Modi</b></sub></a><br /><a href=""#design-Itashamodi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Itashamodi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://nikitha2309.github.io/Portfolio/""><img src=""https://avatars.githubusercontent.com/u/66035321?v=4?s=100"" width=""100px;"" alt=""Nikitha Reddy""/><br /><sub><b>Nikitha Reddy</b></sub></a><br /><a href=""#design-Nikitha2309"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nikitha2309"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mq-xz.github.io/""><img src=""https://avatars.githubusercontent.com/u/51271771?v=4?s=100"" width=""100px;"" alt=""Mahshooq Zubair""/><br /><sub><b>Mahshooq Zubair</b></sub></a><br /><a href=""#design-MQ-xz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MQ-xz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/subham-das-profile/""><img src=""https://avatars.githubusercontent.com/u/60067940?v=4?s=100"" width=""100px;"" alt=""Subham Das""/><br /><sub><b>Subham Das</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=das-jishu"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/onkar-birajdar-7a84591b1/""><img src=""https://avatars.githubusercontent.com/u/67547781?v=4?s=100"" width=""100px;"" alt=""Onkar Birajdar""/><br /><sub><b>Onkar Birajdar</b></sub></a><br /><a href=""#design-Onkar-Birajdar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Onkar-Birajdar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Nikostito""><img src=""https://avatars.githubusercontent.com/u/25390905?v=4?s=100"" width=""100px;"" alt=""Nick Titomichelakis""/><br /><sub><b>Nick Titomichelakis</b></sub></a><br /><a href=""#design-Nikostito"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nikostito"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mazedlx.net""><img src=""https://avatars.githubusercontent.com/u/9453522?v=4?s=100"" width=""100px;"" alt=""Christian Leo-Pernold""/><br /><sub><b>Christian Leo-Pernold</b></sub></a><br /><a href=""#design-mazedlx"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://matthewmarquise.com""><img src=""https://avatars.githubusercontent.com/u/59939260?v=4?s=100"" width=""100px;"" alt=""Matthew Marquise""/><br /><sub><b>Matthew Marquise</b></sub></a><br /><a href=""#design-MattMarquise"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MattMarquise"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/baronfac""><img src=""https://avatars.githubusercontent.com/u/73475336?v=4?s=100"" width=""100px;"" alt=""baronfac""/><br /><sub><b>baronfac</b></sub></a><br /><a href=""#design-baronfac"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=baronfac"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://linktr.ee/abhishektilwar""><img src=""https://avatars.githubusercontent.com/u/63442418?v=4?s=100"" width=""100px;"" alt=""Abhishek Tilwar""/><br /><sub><b>Abhishek Tilwar</b></sub></a><br /><a href=""#design-AbhishekTilwar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AbhishekTilwar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://davidsdvm.com""><img src=""https://avatars.githubusercontent.com/u/33884578?v=4?s=100"" width=""100px;"" alt=""DavidsDvm""/><br /><sub><b>DavidsDvm</b></sub></a><br /><a href=""#design-DavidsDvm"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DavidsDvm"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/parth-parikh-01098949""><img src=""https://avatars.githubusercontent.com/u/10181201?v=4?s=100"" width=""100px;"" alt=""Parth Parikh""/><br /><sub><b>Parth Parikh</b></sub></a><br /><a href=""#design-parikhparth23"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=parikhparth23"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://hector.dev""><img src=""https://avatars.githubusercontent.com/u/43639?v=4?s=100"" width=""100px;"" alt=""Hector Castro""/><br /><sub><b>Hector Castro</b></sub></a><br /><a href=""#design-hectcastro"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hectcastro"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rikkyarisendi""><img src=""https://avatars.githubusercontent.com/u/76026854?v=4?s=100"" width=""100px;"" alt=""Rikky Arisendi""/><br /><sub><b>Rikky Arisendi</b></sub></a><br /><a href=""#design-rikkyarisendi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rikkyarisendi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://tirmazi2.github.io""><img src=""https://avatars.githubusercontent.com/u/41047197?v=4?s=100"" width=""100px;"" alt=""Ali HamXa""/><br /><sub><b>Ali HamXa</b></sub></a><br /><a href=""#design-tirmazi2"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tirmazi2"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://blog.wuzhiping.top""><img src=""https://avatars.githubusercontent.com/u/24557280?v=4?s=100"" width=""100px;"" alt=""Frank.wu""/><br /><sub><b>Frank.wu</b></sub></a><br /><a href=""#design-frankwuzp"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=frankwuzp"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jatinkumar027""><img src=""https://avatars.githubusercontent.com/u/68382319?v=4?s=100"" width=""100px;"" alt=""Jatin Kumar""/><br /><sub><b>Jatin Kumar</b></sub></a><br /><a href=""#design-jatinkumar027"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jatinkumar027"" title=""Code"">💻</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jatinkumar027"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/masterHAWK99""><img src=""https://avatars.githubusercontent.com/u/60447475?v=4?s=100"" width=""100px;"" alt=""masterHAWK99""/><br /><sub><b>masterHAWK99</b></sub></a><br /><a href=""#design-masterHAWK99"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=masterHAWK99"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pushpjain3""><img src=""https://avatars.githubusercontent.com/u/77234511?v=4?s=100"" width=""100px;"" alt=""Pushp Jain""/><br /><sub><b>Pushp Jain</b></sub></a><br /><a href=""#design-pushpjain3"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pushpjain3"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/a-rout""><img src=""https://avatars.githubusercontent.com/u/33890848?v=4?s=100"" width=""100px;"" alt=""Ashutosh Rout""/><br /><sub><b>Ashutosh Rout</b></sub></a><br /><a href=""#design-a-rout"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=a-rout"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/atharva01903""><img src=""https://avatars.githubusercontent.com/u/56593433?v=4?s=100"" width=""100px;"" alt=""Atharva Deshpande""/><br /><sub><b>Atharva Deshpande</b></sub></a><br /><a href=""#design-atharva01903"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=atharva01903"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/teodorciripescu""><img src=""https://avatars.githubusercontent.com/u/13398878?v=4?s=100"" width=""100px;"" alt=""Teodor Ciripescu""/><br /><sub><b>Teodor Ciripescu</b></sub></a><br /><a href=""#design-teodorciripescu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=teodorciripescu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/anmolbansal7""><img src=""https://avatars.githubusercontent.com/u/60514776?v=4?s=100"" width=""100px;"" alt=""Anmol Bansal""/><br /><sub><b>Anmol Bansal</b></sub></a><br /><a href=""#design-anmolbansal7"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=anmolbansal7"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mdnk889""><img src=""https://avatars.githubusercontent.com/u/22156445?v=4?s=100"" width=""100px;"" alt=""Nikhil Kumar Macharla""/><br /><sub><b>Nikhil Kumar Macharla</b></sub></a><br /><a href=""#design-mdnk889"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mdnk889"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://dexter-chang.medium.com""><img src=""https://avatars.githubusercontent.com/u/29012607?v=4?s=100"" width=""100px;"" alt=""Dexter""/><br /><sub><b>Dexter</b></sub></a><br /><a href=""#design-dextermallo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dextermallo"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://aaronos0.github.io/about/""><img src=""https://avatars.githubusercontent.com/u/57332988?v=4?s=100"" width=""100px;"" alt=""Aaron""/><br /><sub><b>Aaron</b></sub></a><br /><a href=""#design-AaronOS0"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AaronOS0"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jaswaniyogita""><img src=""https://avatars.githubusercontent.com/u/69522588?v=4?s=100"" width=""100px;"" alt=""Yogita Jaswani""/><br /><sub><b>Yogita Jaswani</b></sub></a><br /><a href=""#design-jaswaniyogita"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jaswaniyogita"" title=""Code"">💻</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jaswaniyogita"" title=""Documentation"">📖</a> <a href=""#content-jaswaniyogita"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/StoryDevOffical""><img src=""https://avatars.githubusercontent.com/u/73202397?v=4?s=100"" width=""100px;"" alt=""StoryDev""/><br /><sub><b>StoryDev</b></sub></a><br /><a href=""#design-StoryDevOffical"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=StoryDevOffical"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mesut146""><img src=""https://avatars.githubusercontent.com/u/12736668?v=4?s=100"" width=""100px;"" alt=""Mesut Doğansoy""/><br /><sub><b>Mesut Doğansoy</b></sub></a><br /><a href=""#design-mesut146"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mesut146"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/parasdhawan17""><img src=""https://avatars.githubusercontent.com/u/24811710?v=4?s=100"" width=""100px;"" alt=""Paras Dhawan""/><br /><sub><b>Paras Dhawan</b></sub></a><br /><a href=""#design-parasdhawan17"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=parasdhawan17"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://emanuelzhupa.netlify.app""><img src=""https://avatars.githubusercontent.com/u/34006441?v=4?s=100"" width=""100px;"" alt=""Emanuel Zhupa""/><br /><sub><b>Emanuel Zhupa</b></sub></a><br /><a href=""#design-ezhupa99"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ezhupa99"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Aaradhyaa717""><img src=""https://avatars.githubusercontent.com/u/59740059?v=4?s=100"" width=""100px;"" alt=""Aaradhyaa717""/><br /><sub><b>Aaradhyaa717</b></sub></a><br /><a href=""#design-Aaradhyaa717"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Aaradhyaa717"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jaacko-torus""><img src=""https://avatars.githubusercontent.com/u/28635807?v=4?s=100"" width=""100px;"" alt=""jaacko-torus""/><br /><sub><b>jaacko-torus</b></sub></a><br /><a href=""#design-jaacko-torus"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jaacko-torus"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mepirate""><img src=""https://avatars.githubusercontent.com/u/35680699?v=4?s=100"" width=""100px;"" alt=""mBlack""/><br /><sub><b>mBlack</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mepirate"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kalrayashwin""><img src=""https://avatars.githubusercontent.com/u/78636768?v=4?s=100"" width=""100px;"" alt=""kalrayashwin""/><br /><sub><b>kalrayashwin</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kalrayashwin"" title=""Documentation"">📖</a> <a href=""#content-kalrayashwin"" title=""Content"">🖋</a> <a href=""#design-kalrayashwin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kalrayashwin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/seraph776""><img src=""https://avatars.githubusercontent.com/u/72005563?v=4?s=100"" width=""100px;"" alt=""Seraph""/><br /><sub><b>Seraph</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=seraph776"" title=""Code"">💻</a> <a href=""#design-seraph776"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/c6z3h""><img src=""https://avatars.githubusercontent.com/u/29767694?v=4?s=100"" width=""100px;"" alt=""ZhiHong Chua""/><br /><sub><b>ZhiHong Chua</b></sub></a><br /><a href=""#design-c6z3h"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=c6z3h"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Amsal1""><img src=""https://avatars.githubusercontent.com/u/45508550?v=4?s=100"" width=""100px;"" alt=""Amsal Khan""/><br /><sub><b>Amsal Khan</b></sub></a><br /><a href=""#design-Amsal1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Amsal1"" title=""Code"">💻</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Amsal1"" title=""Documentation"">📖</a> <a href=""#content-Amsal1"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/raghav2404""><img src=""https://avatars.githubusercontent.com/u/51928619?v=4?s=100"" width=""100px;"" alt=""Raghav Rastogi""/><br /><sub><b>Raghav Rastogi</b></sub></a><br /><a href=""#design-raghav2404"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=raghav2404"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Tzila""><img src=""https://avatars.githubusercontent.com/u/14856070?v=4?s=100"" width=""100px;"" alt=""Tzila""/><br /><sub><b>Tzila</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Tzila"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://app.snnafi.com""><img src=""https://avatars.githubusercontent.com/u/22527366?v=4?s=100"" width=""100px;"" alt=""Shahriar Nasim Nafi""/><br /><sub><b>Shahriar Nasim Nafi</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SNNafi"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gorshco""><img src=""https://avatars.githubusercontent.com/u/35520491?v=4?s=100"" width=""100px;"" alt=""AG""/><br /><sub><b>AG</b></sub></a><br /><a href=""#design-gorshco"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gorshco"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://stackoverflow.com/users/1033510/mojtaba-kamyabi""><img src=""https://avatars.githubusercontent.com/u/3706505?v=4?s=100"" width=""100px;"" alt=""Mojtaba Kamyabi""/><br /><sub><b>Mojtaba Kamyabi</b></sub></a><br /><a href=""#design-shotgunner"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shotgunner"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/ahmad-abdulrahmaan/""><img src=""https://avatars.githubusercontent.com/u/52632898?v=4?s=100"" width=""100px;"" alt=""Ahmad Abdulrahman""/><br /><sub><b>Ahmad Abdulrahman</b></sub></a><br /><a href=""#design-ahr9n"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ahr9n"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mitre.org""><img src=""https://avatars.githubusercontent.com/u/14303543?v=4?s=100"" width=""100px;"" alt=""Eclipse""/><br /><sub><b>Eclipse</b></sub></a><br /><a href=""#design-0-Eclipse-0"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=0-Eclipse-0"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://techitutorials.com/""><img src=""https://avatars.githubusercontent.com/u/64951054?v=4?s=100"" width=""100px;"" alt=""Anshu Pal""/><br /><sub><b>Anshu Pal</b></sub></a><br /><a href=""#design-anshuUnity"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=anshuUnity"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/denisqaa""><img src=""https://avatars.githubusercontent.com/u/83408074?v=4?s=100"" width=""100px;"" alt=""Denis""/><br /><sub><b>Denis</b></sub></a><br /><a href=""#design-denisqaa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=denisqaa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sayinmehmet47""><img src=""https://avatars.githubusercontent.com/u/75525090?v=4?s=100"" width=""100px;"" alt=""mehmet sayin""/><br /><sub><b>mehmet sayin</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sayinmehmet47"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/WebExp0528""><img src=""https://avatars.githubusercontent.com/u/46267354?v=4?s=100"" width=""100px;"" alt=""WebDEV""/><br /><sub><b>WebDEV</b></sub></a><br /><a href=""#design-WebExp0528"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=WebExp0528"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SamKomesarook""><img src=""https://avatars.githubusercontent.com/u/47465976?v=4?s=100"" width=""100px;"" alt=""Sam Komesarook""/><br /><sub><b>Sam Komesarook</b></sub></a><br /><a href=""#design-SamKomesarook"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SamKomesarook"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Cimihan123""><img src=""https://avatars.githubusercontent.com/u/47425314?v=4?s=100"" width=""100px;"" alt=""Kiran Ghimire""/><br /><sub><b>Kiran Ghimire</b></sub></a><br /><a href=""#design-Cimihan123"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Cimihan123"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/poker-kid-100717""><img src=""https://avatars.githubusercontent.com/u/53221972?v=4?s=100"" width=""100px;"" alt=""Joshua Davis""/><br /><sub><b>Joshua Davis</b></sub></a><br /><a href=""#design-poker-kid-100717"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=poker-kid-100717"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Muhammad-Huzaifa-Siddiqui""><img src=""https://avatars.githubusercontent.com/u/40765078?v=4?s=100"" width=""100px;"" alt=""Muhammad-Huzaifa-Siddiqui""/><br /><sub><b>Muhammad-Huzaifa-Siddiqui</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Muhammad-Huzaifa-Siddiqui"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tobeornottobeadev""><img src=""https://avatars.githubusercontent.com/u/56236324?v=4?s=100"" width=""100px;"" alt=""tobeornottobeadev""/><br /><sub><b>tobeornottobeadev</b></sub></a><br /><a href=""#design-tobeornottobeadev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tobeornottobeadev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mycode-hub""><img src=""https://avatars.githubusercontent.com/u/60936012?v=4?s=100"" width=""100px;"" alt=""VAIBHAV SINGHAL""/><br /><sub><b>VAIBHAV SINGHAL</b></sub></a><br /><a href=""#design-mycode-hub"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mycode-hub"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.keiranpillman.com""><img src=""https://avatars.githubusercontent.com/u/82618599?v=4?s=100"" width=""100px;"" alt=""Keiran Pillman""/><br /><sub><b>Keiran Pillman</b></sub></a><br /><a href=""#design-keircatenation"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=keircatenation"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/goodwin64""><img src=""https://avatars.githubusercontent.com/u/10671879?v=4?s=100"" width=""100px;"" alt=""Max Donchenko""/><br /><sub><b>Max Donchenko</b></sub></a><br /><a href=""#design-goodwin64"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=goodwin64"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sgonsal""><img src=""https://avatars.githubusercontent.com/u/35831496?v=4?s=100"" width=""100px;"" alt=""sgonsal""/><br /><sub><b>sgonsal</b></sub></a><br /><a href=""#design-sgonsal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sgonsal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/diksha137""><img src=""https://avatars.githubusercontent.com/u/68290471?v=4?s=100"" width=""100px;"" alt=""diksha137""/><br /><sub><b>diksha137</b></sub></a><br /><a href=""#design-diksha137"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=diksha137"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://vigneshck-online.codes/""><img src=""https://avatars.githubusercontent.com/u/61013244?v=4?s=100"" width=""100px;"" alt=""Vignesh""/><br /><sub><b>Vignesh</b></sub></a><br /><a href=""#design-ckvignesh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ckvignesh"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/staiton""><img src=""https://avatars.githubusercontent.com/u/55883166?v=4?s=100"" width=""100px;"" alt=""Gabriel França""/><br /><sub><b>Gabriel França</b></sub></a><br /><a href=""#design-staiton"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=staiton"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/killerfrost22""><img src=""https://avatars.githubusercontent.com/u/36581618?v=4?s=100"" width=""100px;"" alt=""Joseph""/><br /><sub><b>Joseph</b></sub></a><br /><a href=""#design-killerfrost22"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=killerfrost22"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/brufael""><img src=""https://avatars.githubusercontent.com/u/87513661?v=4?s=100"" width=""100px;"" alt=""Bruno Rafael""/><br /><sub><b>Bruno Rafael</b></sub></a><br /><a href=""#design-brufael"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=brufael"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vcamarre""><img src=""https://avatars.githubusercontent.com/u/36992742?v=4?s=100"" width=""100px;"" alt=""vcamarre""/><br /><sub><b>vcamarre</b></sub></a><br /><a href=""#design-vcamarre"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vcamarre"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/thibault-ketterer""><img src=""https://avatars.githubusercontent.com/u/4283686?v=4?s=100"" width=""100px;"" alt=""thibault ketterer""/><br /><sub><b>thibault ketterer</b></sub></a><br /><a href=""#design-thibault-ketterer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=thibault-ketterer"" title=""Code"">💻</a> <a href=""#maintenance-thibault-ketterer"" title=""Maintenance"">🚧</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/victorgonzaleztoledo/""><img src=""https://avatars.githubusercontent.com/u/67625867?v=4?s=100"" width=""100px;"" alt=""VictorGonzalezToledo""/><br /><sub><b>VictorGonzalezToledo</b></sub></a><br /><a href=""#design-belce1982"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=belce1982"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/1911510996""><img src=""https://avatars.githubusercontent.com/u/85829631?v=4?s=100"" width=""100px;"" alt=""1911510996""/><br /><sub><b>1911510996</b></sub></a><br /><a href=""#design-1911510996"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=1911510996"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/invidu""><img src=""https://avatars.githubusercontent.com/u/92372186?v=4?s=100"" width=""100px;"" alt=""invidu""/><br /><sub><b>invidu</b></sub></a><br /><a href=""#design-invidu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=invidu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/blackmoonfank""><img src=""https://avatars.githubusercontent.com/u/14941607?v=4?s=100"" width=""100px;"" alt=""Nurul Furqon""/><br /><sub><b>Nurul Furqon</b></sub></a><br /><a href=""#design-blackmoonfank"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=blackmoonfank"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/asbillt""><img src=""https://avatars.githubusercontent.com/u/84046762?v=4?s=100"" width=""100px;"" alt=""David Asbill""/><br /><sub><b>David Asbill</b></sub></a><br /><a href=""#design-asbillt"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=asbillt"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/harmolipi""><img src=""https://avatars.githubusercontent.com/u/32342002?v=4?s=100"" width=""100px;"" alt=""Niko Birbilis""/><br /><sub><b>Niko Birbilis</b></sub></a><br /><a href=""#design-harmolipi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=harmolipi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Reshyurem""><img src=""https://avatars.githubusercontent.com/u/69089089?v=4?s=100"" width=""100px;"" alt=""Mugundan Kottursuresh""/><br /><sub><b>Mugundan Kottursuresh</b></sub></a><br /><a href=""#design-Reshyurem"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/agrsachin81""><img src=""https://avatars.githubusercontent.com/u/18899557?v=4?s=100"" width=""100px;"" alt=""agrsachin81""/><br /><sub><b>agrsachin81</b></sub></a><br /><a href=""#design-agrsachin81"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=agrsachin81"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.facebook.com/Dark.Yox""><img src=""https://avatars.githubusercontent.com/u/45209462?v=4?s=100"" width=""100px;"" alt=""Othmane El Alami""/><br /><sub><b>Othmane El Alami</b></sub></a><br /><a href=""#design-Dark-Yox"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Dark-Yox"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SyedAtifAli""><img src=""https://avatars.githubusercontent.com/u/71817086?v=4?s=100"" width=""100px;"" alt=""Syed Atif Ali""/><br /><sub><b>Syed Atif Ali</b></sub></a><br /><a href=""#design-SyedAtifAli"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SyedAtifAli"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lakhanjindam""><img src=""https://avatars.githubusercontent.com/u/48401688?v=4?s=100"" width=""100px;"" alt=""lakhanjindam""/><br /><sub><b>lakhanjindam</b></sub></a><br /><a href=""#design-lakhanjindam"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lakhanjindam"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/youssefhamdane""><img src=""https://avatars.githubusercontent.com/u/13048852?v=4?s=100"" width=""100px;"" alt=""youssef hamdane""/><br /><sub><b>youssef hamdane</b></sub></a><br /><a href=""#design-youssefhamdane"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=youssefhamdane"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/starfaerie""><img src=""https://avatars.githubusercontent.com/u/54830622?v=4?s=100"" width=""100px;"" alt=""starfaerie""/><br /><sub><b>starfaerie</b></sub></a><br /><a href=""#design-starfaerie"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=starfaerie"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rodrigo0107""><img src=""https://avatars.githubusercontent.com/u/35114415?v=4?s=100"" width=""100px;"" alt=""rodrigo0107""/><br /><sub><b>rodrigo0107</b></sub></a><br /><a href=""#design-rodrigo0107"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rodrigo0107"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gralakmichal""><img src=""https://avatars.githubusercontent.com/u/15049939?v=4?s=100"" width=""100px;"" alt=""Michał Gralak""/><br /><sub><b>Michał Gralak</b></sub></a><br /><a href=""#design-gralakmichal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gralakmichal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mahmudjewel.herokuapp.com/""><img src=""https://avatars.githubusercontent.com/u/35461355?v=4?s=100"" width=""100px;"" alt=""Jewel Mahmud""/><br /><sub><b>Jewel Mahmud</b></sub></a><br /><a href=""#design-MahmudJewel"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MahmudJewel"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cwilson830""><img src=""https://avatars.githubusercontent.com/u/79897927?v=4?s=100"" width=""100px;"" alt=""cwilson830""/><br /><sub><b>cwilson830</b></sub></a><br /><a href=""#design-cwilson830"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cwilson830"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/buun1030""><img src=""https://avatars.githubusercontent.com/u/81471278?v=4?s=100"" width=""100px;"" alt=""buun1030""/><br /><sub><b>buun1030</b></sub></a><br /><a href=""#design-buun1030"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=buun1030"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://bit.ly/3bgbWZY""><img src=""https://avatars.githubusercontent.com/u/59047199?v=4?s=100"" width=""100px;"" alt=""Reda-ELOUAHABI""/><br /><sub><b>Reda-ELOUAHABI</b></sub></a><br /><a href=""#design-Reda-ELOUAHABI"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Reda-ELOUAHABI"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/saad-aksa""><img src=""https://avatars.githubusercontent.com/u/89763208?v=4?s=100"" width=""100px;"" alt=""saad-aksa""/><br /><sub><b>saad-aksa</b></sub></a><br /><a href=""#design-saad-aksa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=saad-aksa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://rafat97.github.io/""><img src=""https://avatars.githubusercontent.com/u/21246862?v=4?s=100"" width=""100px;"" alt=""Emdadul Haque""/><br /><sub><b>Emdadul Haque</b></sub></a><br /><a href=""#design-Rafat97"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rafat97"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/PROCW""><img src=""https://avatars.githubusercontent.com/u/57867146?v=4?s=100"" width=""100px;"" alt=""PROCW""/><br /><sub><b>PROCW</b></sub></a><br /><a href=""#design-PROCW"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PROCW"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cccppp1""><img src=""https://avatars.githubusercontent.com/u/94967540?v=4?s=100"" width=""100px;"" alt=""cccppp1""/><br /><sub><b>cccppp1</b></sub></a><br /><a href=""#design-cccppp1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cccppp1"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jobaile""><img src=""https://avatars.githubusercontent.com/u/39835911?v=4?s=100"" width=""100px;"" alt=""Joanna Baile""/><br /><sub><b>Joanna Baile</b></sub></a><br /><a href=""#design-jobaile"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jobaile"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ahmed0saber.github.io/portfolio/portfolio""><img src=""https://avatars.githubusercontent.com/u/64714761?v=4?s=100"" width=""100px;"" alt=""Ahmed Saber""/><br /><sub><b>Ahmed Saber</b></sub></a><br /><a href=""#design-ahmed0saber"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ahmed0saber"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/masoudk1990""><img src=""https://avatars.githubusercontent.com/u/33999631?v=4?s=100"" width=""100px;"" alt=""Masoud Keshavarz""/><br /><sub><b>Masoud Keshavarz</b></sub></a><br /><a href=""#design-masoudk1990"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=masoudk1990"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mortazavian""><img src=""https://avatars.githubusercontent.com/u/84852938?v=4?s=100"" width=""100px;"" alt=""mortazavian""/><br /><sub><b>mortazavian</b></sub></a><br /><a href=""#design-mortazavian"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mortazavian"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aniket414""><img src=""https://avatars.githubusercontent.com/u/38187222?v=4?s=100"" width=""100px;"" alt=""Aniket Pandey""/><br /><sub><b>Aniket Pandey</b></sub></a><br /><a href=""#design-aniket414"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aniket414"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/vijay-nirmal""><img src=""https://avatars.githubusercontent.com/u/24755596?v=4?s=100"" width=""100px;"" alt=""Vijay Nirmal""/><br /><sub><b>Vijay Nirmal</b></sub></a><br /><a href=""#design-Vijay-Nirmal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Vijay-Nirmal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://gist.github.com/elulcao""><img src=""https://avatars.githubusercontent.com/u/6373960?v=4?s=100"" width=""100px;"" alt=""Daniel Carvallo""/><br /><sub><b>Daniel Carvallo</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=elulcao"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/menaechmi""><img src=""https://avatars.githubusercontent.com/u/18483935?v=4?s=100"" width=""100px;"" alt=""menaechmi""/><br /><sub><b>menaechmi</b></sub></a><br /><a href=""#design-menaechmi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=menaechmi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/azenyx""><img src=""https://avatars.githubusercontent.com/u/53049056?v=4?s=100"" width=""100px;"" alt=""azenyx""/><br /><sub><b>azenyx</b></sub></a><br /><a href=""#design-azenyx"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=azenyx"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://focusders.com""><img src=""https://avatars.githubusercontent.com/u/12434217?v=4?s=100"" width=""100px;"" alt=""Ahmet Özrahat""/><br /><sub><b>Ahmet Özrahat</b></sub></a><br /><a href=""#design-ahmetozrahat"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ahmetozrahat"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AAbozaid96""><img src=""https://avatars.githubusercontent.com/u/27355312?v=4?s=100"" width=""100px;"" alt=""Abdulrahman Abouzaid""/><br /><sub><b>Abdulrahman Abouzaid</b></sub></a><br /><a href=""#design-AAbozaid96"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AAbozaid96"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jmgnorbec""><img src=""https://avatars.githubusercontent.com/u/59351647?v=4?s=100"" width=""100px;"" alt=""jmgnorbec""/><br /><sub><b>jmgnorbec</b></sub></a><br /><a href=""#design-jmgnorbec"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jmgnorbec"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/palinko91""><img src=""https://avatars.githubusercontent.com/u/5522266?v=4?s=100"" width=""100px;"" alt=""palinko91""/><br /><sub><b>palinko91</b></sub></a><br /><a href=""#design-palinko91"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=palinko91"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://laissonsilveira.github.io/""><img src=""https://avatars.githubusercontent.com/u/4655445?v=4?s=100"" width=""100px;"" alt=""Laisson R. Silveira""/><br /><sub><b>Laisson R. Silveira</b></sub></a><br /><a href=""#design-laissonsilveira"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=laissonsilveira"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BHARGAVPATEL1244""><img src=""https://avatars.githubusercontent.com/u/68535876?v=4?s=100"" width=""100px;"" alt=""BHARGAVPATEL1244""/><br /><sub><b>BHARGAVPATEL1244</b></sub></a><br /><a href=""#design-BHARGAVPATEL1244"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BHARGAVPATEL1244"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/candideu""><img src=""https://avatars.githubusercontent.com/u/55474996?v=4?s=100"" width=""100px;"" alt=""Candide U""/><br /><sub><b>Candide U</b></sub></a><br /><a href=""#design-candideu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=candideu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lostpolaris""><img src=""https://avatars.githubusercontent.com/u/6691735?v=4?s=100"" width=""100px;"" alt=""Sitansh Rajput""/><br /><sub><b>Sitansh Rajput</b></sub></a><br /><a href=""#design-lostpolaris"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lostpolaris"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/houdam""><img src=""https://avatars.githubusercontent.com/u/26853888?v=4?s=100"" width=""100px;"" alt=""Houda Mouttalib""/><br /><sub><b>Houda Mouttalib</b></sub></a><br /><a href=""#design-hm43"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hm43"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MumuTW""><img src=""https://avatars.githubusercontent.com/u/42820974?v=4?s=100"" width=""100px;"" alt=""MumuTW""/><br /><sub><b>MumuTW</b></sub></a><br /><a href=""#design-MumuTW"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MumuTW"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/suavebajaj""><img src=""https://avatars.githubusercontent.com/u/22911801?v=4?s=100"" width=""100px;"" alt=""Suave Bajaj""/><br /><sub><b>Suave Bajaj</b></sub></a><br /><a href=""#design-suavebajaj"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=suavebajaj"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ItSNeverLate""><img src=""https://avatars.githubusercontent.com/u/50651962?v=4?s=100"" width=""100px;"" alt=""Mehdi Parsaei""/><br /><sub><b>Mehdi Parsaei</b></sub></a><br /><a href=""#design-ItSNeverLate"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ItSNeverLate"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/edosrecki""><img src=""https://avatars.githubusercontent.com/u/26404168?v=4?s=100"" width=""100px;"" alt=""Dinko Osrecki""/><br /><sub><b>Dinko Osrecki</b></sub></a><br /><a href=""#design-edosrecki"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=edosrecki"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DhiaDjobbi""><img src=""https://avatars.githubusercontent.com/u/40583006?v=4?s=100"" width=""100px;"" alt=""Dhia Djobbi""/><br /><sub><b>Dhia Djobbi</b></sub></a><br /><a href=""#design-DhiaDjobbi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DhiaDjobbi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/krokeen""><img src=""https://avatars.githubusercontent.com/u/42272376?v=4?s=100"" width=""100px;"" alt=""Mahmoud Galal""/><br /><sub><b>Mahmoud Galal</b></sub></a><br /><a href=""#design-Mahmoudgalalz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Mahmoudgalalz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/minhla""><img src=""https://avatars.githubusercontent.com/u/23179654?v=4?s=100"" width=""100px;"" alt=""Anh Minh""/><br /><sub><b>Anh Minh</b></sub></a><br /><a href=""#design-minhla"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=minhla"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/imsuvesh/""><img src=""https://avatars.githubusercontent.com/u/14920241?v=4?s=100"" width=""100px;"" alt=""Suvesh K""/><br /><sub><b>Suvesh K</b></sub></a><br /><a href=""#design-imsuvesh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=imsuvesh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/petar-todorov-ph-d-13326949/""><img src=""https://avatars.githubusercontent.com/u/6433067?v=4?s=100"" width=""100px;"" alt=""Petar Todorov""/><br /><sub><b>Petar Todorov</b></sub></a><br /><a href=""#design-petartodorov"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=petartodorov"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GalexyN""><img src=""https://avatars.githubusercontent.com/u/66571090?v=4?s=100"" width=""100px;"" alt=""Alexander Nguyen""/><br /><sub><b>Alexander Nguyen</b></sub></a><br /><a href=""#design-GalexyN"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GalexyN"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DiscreteLogarithm""><img src=""https://avatars.githubusercontent.com/u/1571075?v=4?s=100"" width=""100px;"" alt=""Morteza Jalalvand""/><br /><sub><b>Morteza Jalalvand</b></sub></a><br /><a href=""#design-DiscreteLogarithm"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DiscreteLogarithm"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://claudsonmartins.com""><img src=""https://avatars.githubusercontent.com/u/4139808?v=4?s=100"" width=""100px;"" alt=""Claudson Martins""/><br /><sub><b>Claudson Martins</b></sub></a><br /><a href=""#design-claudsonm"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=claudsonm"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mjcbsn22""><img src=""https://avatars.githubusercontent.com/u/5042070?v=4?s=100"" width=""100px;"" alt=""Matt Jacobson""/><br /><sub><b>Matt Jacobson</b></sub></a><br /><a href=""#design-mjcbsn22"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mjcbsn22"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rafabelokurows""><img src=""https://avatars.githubusercontent.com/u/55976107?v=4?s=100"" width=""100px;"" alt=""Rafael Belokurows""/><br /><sub><b>Rafael Belokurows</b></sub></a><br /><a href=""#design-rafabelokurows"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rafabelokurows"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tgamauf""><img src=""https://avatars.githubusercontent.com/u/4630030?v=4?s=100"" width=""100px;"" alt="" Thomas Gamauf""/><br /><sub><b> Thomas Gamauf</b></sub></a><br /><a href=""#design-tgamauf"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tgamauf"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/imsherlock01""><img src=""https://avatars.githubusercontent.com/u/92217418?v=4?s=100"" width=""100px;"" alt=""Rishabh Mahajan""/><br /><sub><b>Rishabh Mahajan</b></sub></a><br /><a href=""#design-imsherlock01"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=imsherlock01"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rakeshpdgupta23""><img src=""https://avatars.githubusercontent.com/u/55807421?v=4?s=100"" width=""100px;"" alt=""rakeshpdgupta23""/><br /><sub><b>rakeshpdgupta23</b></sub></a><br /><a href=""#design-rakeshpdgupta23"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rakeshpdgupta23"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Shashidharknaik""><img src=""https://avatars.githubusercontent.com/u/95580036?v=4?s=100"" width=""100px;"" alt=""Shashidharknaik""/><br /><sub><b>Shashidharknaik</b></sub></a><br /><a href=""#design-Shashidharknaik"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Shashidharknaik"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/taleleuma""><img src=""https://avatars.githubusercontent.com/u/16799155?v=4?s=100"" width=""100px;"" alt=""taleleuma""/><br /><sub><b>taleleuma</b></sub></a><br /><a href=""#design-taleleuma"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=taleleuma"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/florianbuehler""><img src=""https://avatars.githubusercontent.com/u/77963076?v=4?s=100"" width=""100px;"" alt=""Florian Bühler""/><br /><sub><b>Florian Bühler</b></sub></a><br /><a href=""#design-florianbuehler"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=florianbuehler"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linkedin.com/in/rb-wahid""><img src=""https://avatars.githubusercontent.com/u/41251289?v=4?s=100"" width=""100px;"" alt=""Raihan Bin Wahid""/><br /><sub><b>Raihan Bin Wahid</b></sub></a><br /><a href=""#design-Rb-wahid"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rb-wahid"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/mohammed-nasser-913023204/""><img src=""https://avatars.githubusercontent.com/u/53376993?v=4?s=100"" width=""100px;"" alt=""MOHAMMED NASSER""/><br /><sub><b>MOHAMMED NASSER</b></sub></a><br /><a href=""#design-MOHAMMED-NASSER22"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MOHAMMED-NASSER22"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/fcagnola""><img src=""https://avatars.githubusercontent.com/u/56833063?v=4?s=100"" width=""100px;"" alt=""federico""/><br /><sub><b>federico</b></sub></a><br /><a href=""#design-fcagnola"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fcagnola"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aviolante""><img src=""https://avatars.githubusercontent.com/u/13370368?v=4?s=100"" width=""100px;"" alt=""Andre Violante""/><br /><sub><b>Andre Violante</b></sub></a><br /><a href=""#design-aviolante"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aviolante"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tcunningham98""><img src=""https://avatars.githubusercontent.com/u/71617851?v=4?s=100"" width=""100px;"" alt=""tcunningham98""/><br /><sub><b>tcunningham98</b></sub></a><br /><a href=""#design-tcunningham98"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tcunningham98"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.imtek.uni-freiburg.de/professuren/simulation/simulation""><img src=""https://avatars.githubusercontent.com/u/29068686?v=4?s=100"" width=""100px;"" alt=""Jan Grießer""/><br /><sub><b>Jan Grießer</b></sub></a><br /><a href=""#design-griessej"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=griessej"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/serkanalc/""><img src=""https://avatars.githubusercontent.com/u/70329389?v=4?s=100"" width=""100px;"" alt=""Serkan Alc""/><br /><sub><b>Serkan Alc</b></sub></a><br /><a href=""#design-serkanalc"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=serkanalc"" title=""Code"">💻</a> <a href=""#content-serkanalc"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://jezmck.com""><img src=""https://avatars.githubusercontent.com/u/89996?v=4?s=100"" width=""100px;"" alt=""Jez McKean""/><br /><sub><b>Jez McKean</b></sub></a><br /><a href=""#design-jezmck"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jezmck"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/araxis""><img src=""https://avatars.githubusercontent.com/u/1418779?v=4?s=100"" width=""100px;"" alt=""meisam alifallahi""/><br /><sub><b>meisam alifallahi</b></sub></a><br /><a href=""#design-araxis"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=araxis"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mehulcse.com""><img src=""https://avatars.githubusercontent.com/u/7822793?v=4?s=100"" width=""100px;"" alt=""Mehul Thakkar""/><br /><sub><b>Mehul Thakkar</b></sub></a><br /><a href=""#design-mehulcse"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mehulcse"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/king7saksham""><img src=""https://avatars.githubusercontent.com/u/57166834?v=4?s=100"" width=""100px;"" alt=""Saksham Soni""/><br /><sub><b>Saksham Soni</b></sub></a><br /><a href=""#design-king7saksham"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=king7saksham"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linkedin.com/in/pedroperegrinaa""><img src=""https://avatars.githubusercontent.com/u/57403682?v=4?s=100"" width=""100px;"" alt=""Pedro Peregrina""/><br /><sub><b>Pedro Peregrina</b></sub></a><br /><a href=""#design-pedroperegrinaa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pedroperegrinaa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/mintuchoudhary/""><img src=""https://avatars.githubusercontent.com/u/24916801?v=4?s=100"" width=""100px;"" alt=""Mintu Choudhary""/><br /><sub><b>Mintu Choudhary</b></sub></a><br /><a href=""#design-mintuchoudhary"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mintuchoudhary"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lucianmoldovanu""><img src=""https://avatars.githubusercontent.com/u/7854275?v=4?s=100"" width=""100px;"" alt=""lucianmoldovanu""/><br /><sub><b>lucianmoldovanu</b></sub></a><br /><a href=""#design-lucianmoldovanu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lucianmoldovanu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jcscott2015""><img src=""https://avatars.githubusercontent.com/u/14879921?v=4?s=100"" width=""100px;"" alt=""John C. Scott""/><br /><sub><b>John C. Scott</b></sub></a><br /><a href=""#design-jcscott2015"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jcscott2015"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mia-7-7""><img src=""https://avatars.githubusercontent.com/u/81501711?v=4?s=100"" width=""100px;"" alt=""Mia D.""/><br /><sub><b>Mia D.</b></sub></a><br /><a href=""#design-mia-7-7"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mia-7-7"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/EwenBernard""><img src=""https://avatars.githubusercontent.com/u/73660111?v=4?s=100"" width=""100px;"" alt=""EwenBernard""/><br /><sub><b>EwenBernard</b></sub></a><br /><a href=""#design-EwenBernard"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=EwenBernard"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://stackoverflow.com/users/2970351/m-reza-nasirloo?tab=profile""><img src=""https://avatars.githubusercontent.com/u/7994739?v=4?s=100"" width=""100px;"" alt=""M. Reza Nasirloo""/><br /><sub><b>M. Reza Nasirloo</b></sub></a><br /><a href=""#design-MRezaNasirloo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MRezaNasirloo"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/jayagrawallink""><img src=""https://avatars.githubusercontent.com/u/53251498?v=4?s=100"" width=""100px;"" alt=""Jay Agrawal""/><br /><sub><b>Jay Agrawal</b></sub></a><br /><a href=""#design-JayAgrawalgit"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JayAgrawalgit"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://medium.com/@deshayk""><img src=""https://avatars.githubusercontent.com/u/70130858?v=4?s=100"" width=""100px;"" alt=""DeShay""/><br /><sub><b>DeShay</b></sub></a><br /><a href=""#design-deshayk"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=deshayk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Jay206-Programmer""><img src=""https://avatars.githubusercontent.com/u/62549240?v=4?s=100"" width=""100px;"" alt=""Jay206-Programmer""/><br /><sub><b>Jay206-Programmer</b></sub></a><br /><a href=""#design-Jay206-Programmer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jay206-Programmer"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://fb.com/elenderg""><img src=""https://avatars.githubusercontent.com/u/1089556?v=4?s=100"" width=""100px;"" alt=""Elender""/><br /><sub><b>Elender</b></sub></a><br /><a href=""#design-elenderg"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=elenderg"" title=""Code"">💻</a> <a href=""#content-elenderg"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BobbyByrne""><img src=""https://avatars.githubusercontent.com/u/7388850?v=4?s=100"" width=""100px;"" alt=""Bobby Byrne""/><br /><sub><b>Bobby Byrne</b></sub></a><br /><a href=""#design-BobbyByrne"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BobbyByrne"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://emre-pirci.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/43238947?v=4?s=100"" width=""100px;"" alt=""Pirci""/><br /><sub><b>Pirci</b></sub></a><br /><a href=""#design-Pirci"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Pirci"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/engr-hasanuzzaman""><img src=""https://avatars.githubusercontent.com/u/6083519?v=4?s=100"" width=""100px;"" alt=""Hasanuzzaman""/><br /><sub><b>Hasanuzzaman</b></sub></a><br /><a href=""#design-engr-hasanuzzaman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=engr-hasanuzzaman"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.joshkautz.com/""><img src=""https://avatars.githubusercontent.com/u/17554471?v=4?s=100"" width=""100px;"" alt=""Josh Kautz""/><br /><sub><b>Josh Kautz</b></sub></a><br /><a href=""#design-joshykautz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=joshykautz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://otafest.com""><img src=""https://avatars.githubusercontent.com/u/5051187?v=4?s=100"" width=""100px;"" alt=""Brofar""/><br /><sub><b>Brofar</b></sub></a><br /><a href=""#design-brofar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=brofar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.facebook.com/minakaram.me/""><img src=""https://avatars.githubusercontent.com/u/38835380?v=4?s=100"" width=""100px;"" alt=""Mina Karam""/><br /><sub><b>Mina Karam</b></sub></a><br /><a href=""#design-Mina-Karam"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Mina-Karam"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dosindi""><img src=""https://avatars.githubusercontent.com/u/1564400?v=4?s=100"" width=""100px;"" alt=""Duncan O N""/><br /><sub><b>Duncan O N</b></sub></a><br /><a href=""#design-dosindi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dosindi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SeanTumulakNguyen""><img src=""https://avatars.githubusercontent.com/u/40397599?v=4?s=100"" width=""100px;"" alt=""Sean Tumulak-Nguyen""/><br /><sub><b>Sean Tumulak-Nguyen</b></sub></a><br /><a href=""#design-SeanTumulakNguyen"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SeanTumulakNguyen"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Artniewski""><img src=""https://avatars.githubusercontent.com/u/78161989?v=4?s=100"" width=""100px;"" alt=""Artur Trześniewski""/><br /><sub><b>Artur Trześniewski</b></sub></a><br /><a href=""#design-Artniewski"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Artniewski"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JJaammeessM""><img src=""https://avatars.githubusercontent.com/u/98678571?v=4?s=100"" width=""100px;"" alt=""JJaammeessM""/><br /><sub><b>JJaammeessM</b></sub></a><br /><a href=""#design-JJaammeessM"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JJaammeessM"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gladrun""><img src=""https://avatars.githubusercontent.com/u/11464381?v=4?s=100"" width=""100px;"" alt=""shubham agarwal""/><br /><sub><b>shubham agarwal</b></sub></a><br /><a href=""#design-gladrun"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gladrun"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/michele-righi/""><img src=""https://avatars.githubusercontent.com/u/56556806?v=4?s=100"" width=""100px;"" alt=""Michele Righi""/><br /><sub><b>Michele Righi</b></sub></a><br /><a href=""#design-mikyll"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mikyll"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://panagiotiskontos.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/65974766?v=4?s=100"" width=""100px;"" alt=""Panagiotis Kontos""/><br /><sub><b>Panagiotis Kontos</b></sub></a><br /><a href=""#design-Panoskontos"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Panoskontos"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sumitbathla""><img src=""https://avatars.githubusercontent.com/u/87201197?v=4?s=100"" width=""100px;"" alt=""sumitbathla""/><br /><sub><b>sumitbathla</b></sub></a><br /><a href=""#design-sumitbathla"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sumitbathla"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.vistaran.tech""><img src=""https://avatars.githubusercontent.com/u/4208597?v=4?s=100"" width=""100px;"" alt=""Deepak Mathur""/><br /><sub><b>Deepak Mathur</b></sub></a><br /><a href=""#design-ideepakmathur"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ideepakmathur"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/juho-nykanen-cs/""><img src=""https://avatars.githubusercontent.com/u/71010049?v=4?s=100"" width=""100px;"" alt=""Juho Nykänen""/><br /><sub><b>Juho Nykänen</b></sub></a><br /><a href=""#design-nyksy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nyksy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://santiagosiordia.github.io/SantiagoSiordia/""><img src=""https://avatars.githubusercontent.com/u/56652644?v=4?s=100"" width=""100px;"" alt=""Santiago González Siordia""/><br /><sub><b>Santiago González Siordia</b></sub></a><br /><a href=""#design-SantiagoSiordia"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SantiagoSiordia"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/msrijita18""><img src=""https://avatars.githubusercontent.com/u/66257156?v=4?s=100"" width=""100px;"" alt=""SRIJITA MALLICK""/><br /><sub><b>SRIJITA MALLICK</b></sub></a><br /><a href=""#design-msrijita18"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=msrijita18"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://samr1ddh1.github.io""><img src=""https://avatars.githubusercontent.com/u/52720626?v=4?s=100"" width=""100px;"" alt=""Samriddhi B""/><br /><sub><b>Samriddhi B</b></sub></a><br /><a href=""#design-samr1ddh1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=samr1ddh1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nitzanpap""><img src=""https://avatars.githubusercontent.com/u/87342833?v=4?s=100"" width=""100px;"" alt=""Nitzan Papini""/><br /><sub><b>Nitzan Papini</b></sub></a><br /><a href=""#design-nitzanpap"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nitzanpap"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mario-sanz.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/72298127?v=4?s=100"" width=""100px;"" alt=""Mario Sanz""/><br /><sub><b>Mario Sanz</b></sub></a><br /><a href=""#design-mario-sanz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mario-sanz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/CrabCrabCrabCrab""><img src=""https://avatars.githubusercontent.com/u/98830497?v=4?s=100"" width=""100px;"" alt=""Crab^4""/><br /><sub><b>Crab^4</b></sub></a><br /><a href=""#design-CrabCrabCrabCrab"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=CrabCrabCrabCrab"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/pablocuestamorer/""><img src=""https://avatars.githubusercontent.com/u/43066595?v=4?s=100"" width=""100px;"" alt=""Pablo""/><br /><sub><b>Pablo</b></sub></a><br /><a href=""#design-PabloCuestaMorer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PabloCuestaMorer"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://gordon-pn.com""><img src=""https://avatars.githubusercontent.com/u/4203037?v=4?s=100"" width=""100px;"" alt=""Gordon Pham-Nguyen""/><br /><sub><b>Gordon Pham-Nguyen</b></sub></a><br /><a href=""#design-gordonpn"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gordonpn"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/KristofferK""><img src=""https://avatars.githubusercontent.com/u/18262259?v=4?s=100"" width=""100px;"" alt=""Kristoffer""/><br /><sub><b>Kristoffer</b></sub></a><br /><a href=""#design-KristofferK"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KristofferK"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chrisblach""><img src=""https://avatars.githubusercontent.com/u/9647303?v=4?s=100"" width=""100px;"" alt=""chrisblach""/><br /><sub><b>chrisblach</b></sub></a><br /><a href=""#design-chrisblach"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chrisblach"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Imolai""><img src=""https://avatars.githubusercontent.com/u/38439709?v=4?s=100"" width=""100px;"" alt=""Gábor""/><br /><sub><b>Gábor</b></sub></a><br /><a href=""#design-Imolai"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Imolai"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/karolinabodis""><img src=""https://avatars.githubusercontent.com/u/78912800?v=4?s=100"" width=""100px;"" alt=""Lina""/><br /><sub><b>Lina</b></sub></a><br /><a href=""#design-karolinabodis"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=karolinabodis"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hrwatts""><img src=""https://avatars.githubusercontent.com/u/34659182?v=4?s=100"" width=""100px;"" alt=""Harrison Watts""/><br /><sub><b>Harrison Watts</b></sub></a><br /><a href=""#design-hrwatts"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hrwatts"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.petricko.dev""><img src=""https://avatars.githubusercontent.com/u/56165587?v=4?s=100"" width=""100px;"" alt=""Mario Petričko""/><br /><sub><b>Mario Petričko</b></sub></a><br /><a href=""#design-Maracko"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Maracko"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Ben8120""><img src=""https://avatars.githubusercontent.com/u/81163948?v=4?s=100"" width=""100px;"" alt=""Ben8120""/><br /><sub><b>Ben8120</b></sub></a><br /><a href=""#design-Ben8120"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ben8120"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Giovannapls""><img src=""https://avatars.githubusercontent.com/u/37786977?v=4?s=100"" width=""100px;"" alt=""Giovanna""/><br /><sub><b>Giovanna</b></sub></a><br /><a href=""#design-Giovannapls"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Giovannapls"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/imminal35""><img src=""https://avatars.githubusercontent.com/u/75490210?v=4?s=100"" width=""100px;"" alt=""Minal Ahuja""/><br /><sub><b>Minal Ahuja</b></sub></a><br /><a href=""#design-imminal35"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=imminal35"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mossfarmer""><img src=""https://avatars.githubusercontent.com/u/38235854?v=4?s=100"" width=""100px;"" alt=""mossfarmer""/><br /><sub><b>mossfarmer</b></sub></a><br /><a href=""#design-mossfarmer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mossfarmer"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ThaC0derDre""><img src=""https://avatars.githubusercontent.com/u/94762769?v=4?s=100"" width=""100px;"" alt=""ThaC0derDre""/><br /><sub><b>ThaC0derDre</b></sub></a><br /><a href=""#design-ThaC0derDre"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ThaC0derDre"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/itware""><img src=""https://avatars.githubusercontent.com/u/11639683?v=4?s=100"" width=""100px;"" alt=""itware""/><br /><sub><b>itware</b></sub></a><br /><a href=""#design-itware"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=itware"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://michaelwalker-git.github.io/""><img src=""https://avatars.githubusercontent.com/u/11032490?v=4?s=100"" width=""100px;"" alt=""Michael Walker""/><br /><sub><b>Michael Walker</b></sub></a><br /><a href=""#design-MichaelWalker-git"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MichaelWalker-git"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tomjacobchirayil""><img src=""https://avatars.githubusercontent.com/u/49261263?v=4?s=100"" width=""100px;"" alt=""Tom Jacob Chirayil""/><br /><sub><b>Tom Jacob Chirayil</b></sub></a><br /><a href=""#design-tomjacobchirayil"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tomjacobchirayil"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/ikrsachin""><img src=""https://avatars.githubusercontent.com/u/81405044?v=4?s=100"" width=""100px;"" alt=""Sachin Kumar""/><br /><sub><b>Sachin Kumar</b></sub></a><br /><a href=""#design-i-sachinkumar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=i-sachinkumar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/adi-ray""><img src=""https://avatars.githubusercontent.com/u/96347576?v=4?s=100"" width=""100px;"" alt=""adi-ray""/><br /><sub><b>adi-ray</b></sub></a><br /><a href=""#design-adi-ray"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adi-ray"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Dr-Blank-alt""><img src=""https://avatars.githubusercontent.com/u/75072114?v=4?s=100"" width=""100px;"" alt=""Dr-Blank-alt""/><br /><sub><b>Dr-Blank-alt</b></sub></a><br /><a href=""#design-Dr-Blank-alt"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Dr-Blank-alt"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://cazacubogdan.com""><img src=""https://avatars.githubusercontent.com/u/3471768?v=4?s=100"" width=""100px;"" alt=""Bogdan Cazacu""/><br /><sub><b>Bogdan Cazacu</b></sub></a><br /><a href=""#design-cazacubogdan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cazacubogdan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://gilsonurbano.com/""><img src=""https://avatars.githubusercontent.com/u/16805527?v=4?s=100"" width=""100px;"" alt=""Gilson Urbano""/><br /><sub><b>Gilson Urbano</b></sub></a><br /><a href=""#design-urbanogilson"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=urbanogilson"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://oseeva.com""><img src=""https://avatars.githubusercontent.com/u/57769132?v=4?s=100"" width=""100px;"" alt=""Nina""/><br /><sub><b>Nina</b></sub></a><br /><a href=""#design-ninsova"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ninsova"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/anthony-piersanti-46b0853a/""><img src=""https://avatars.githubusercontent.com/u/3359366?v=4?s=100"" width=""100px;"" alt=""Anthony""/><br /><sub><b>Anthony</b></sub></a><br /><a href=""#design-AnthonyPiersanti"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AnthonyPiersanti"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/manushimjani""><img src=""https://avatars.githubusercontent.com/u/36154411?v=4?s=100"" width=""100px;"" alt=""manushimjani""/><br /><sub><b>manushimjani</b></sub></a><br /><a href=""#design-manushimjani"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=manushimjani"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Cyphersphinx""><img src=""https://avatars.githubusercontent.com/u/33814760?v=4?s=100"" width=""100px;"" alt=""Michael Reyes""/><br /><sub><b>Michael Reyes</b></sub></a><br /><a href=""#design-Cyphersphinx"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Cyphersphinx"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://urinternetfriends.com/""><img src=""https://avatars.githubusercontent.com/u/16883323?v=4?s=100"" width=""100px;"" alt=""Rachel Kennelly""/><br /><sub><b>Rachel Kennelly</b></sub></a><br /><a href=""#design-rekennelly"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rekennelly"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://blogsforeveryone.medium.com/""><img src=""https://avatars.githubusercontent.com/u/99870824?v=4?s=100"" width=""100px;"" alt=""Aakash Garg""/><br /><sub><b>Aakash Garg</b></sub></a><br /><a href=""#design-AakashGarg136"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AakashGarg136"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Daniel-Livingston""><img src=""https://avatars.githubusercontent.com/u/77318409?v=4?s=100"" width=""100px;"" alt=""Daniel Livingston""/><br /><sub><b>Daniel Livingston</b></sub></a><br /><a href=""#design-Daniel-Livingston"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Daniel-Livingston"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alexrojco""><img src=""https://avatars.githubusercontent.com/u/20784378?v=4?s=100"" width=""100px;"" alt=""alexrojco""/><br /><sub><b>alexrojco</b></sub></a><br /><a href=""#design-alexrojco"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alexrojco"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ngynminh""><img src=""https://avatars.githubusercontent.com/u/24553690?v=4?s=100"" width=""100px;"" alt=""Minh Nguyen""/><br /><sub><b>Minh Nguyen</b></sub></a><br /><a href=""#design-ngynminh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ngynminh"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mahesh9340.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/53929423?v=4?s=100"" width=""100px;"" alt=""Mahesh Dattatraya Babar""/><br /><sub><b>Mahesh Dattatraya Babar</b></sub></a><br /><a href=""#design-maheshdbabar9340"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=maheshdbabar9340"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/zihang-jin-a38b6417b/""><img src=""https://avatars.githubusercontent.com/u/47680904?v=4?s=100"" width=""100px;"" alt=""Jin Zihang""/><br /><sub><b>Jin Zihang</b></sub></a><br /><a href=""#design-JinZihang"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JinZihang"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://developer.aylanetworks.com/""><img src=""https://avatars.githubusercontent.com/u/627740?v=4?s=100"" width=""100px;"" alt=""Bikramjit Ganguly""/><br /><sub><b>Bikramjit Ganguly</b></sub></a><br /><a href=""#design-bganguly"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bganguly"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/QuestionableGuise""><img src=""https://avatars.githubusercontent.com/u/97465731?v=4?s=100"" width=""100px;"" alt=""QuestionableGuise""/><br /><sub><b>QuestionableGuise</b></sub></a><br /><a href=""#design-QuestionableGuise"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=QuestionableGuise"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/liq19ch""><img src=""https://avatars.githubusercontent.com/u/62189992?v=4?s=100"" width=""100px;"" alt=""liq19ch""/><br /><sub><b>liq19ch</b></sub></a><br /><a href=""#design-liq19ch"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=liq19ch"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://rochadev.tk""><img src=""https://avatars.githubusercontent.com/u/30984260?v=4?s=100"" width=""100px;"" alt=""Bruno Rocha""/><br /><sub><b>Bruno Rocha</b></sub></a><br /><a href=""#design-rochadev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rochadev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/adyavanapalli""><img src=""https://avatars.githubusercontent.com/u/8067797?v=4?s=100"" width=""100px;"" alt=""Anand Dyavanapalli""/><br /><sub><b>Anand Dyavanapalli</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adyavanapalli"" title=""Code"">💻</a> <a href=""#content-adyavanapalli"" title=""Content"">🖋</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/crucian-afk""><img src=""https://avatars.githubusercontent.com/u/80586085?v=4?s=100"" width=""100px;"" alt=""crucian-afk""/><br /><sub><b>crucian-afk</b></sub></a><br /><a href=""#design-crucian-afk"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=crucian-afk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://gainzstation.one/""><img src=""https://avatars.githubusercontent.com/u/85804886?v=4?s=100"" width=""100px;"" alt=""0xgainz""/><br /><sub><b>0xgainz</b></sub></a><br /><a href=""#design-0xgainz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=0xgainz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/weirdfsh""><img src=""https://avatars.githubusercontent.com/u/100484340?v=4?s=100"" width=""100px;"" alt=""weirdfsh""/><br /><sub><b>weirdfsh</b></sub></a><br /><a href=""#design-weirdfsh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=weirdfsh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/valanm22""><img src=""https://avatars.githubusercontent.com/u/84893551?v=4?s=100"" width=""100px;"" alt=""Valan Baptist Mathuranayagam""/><br /><sub><b>Valan Baptist Mathuranayagam</b></sub></a><br /><a href=""#design-valanm22"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=valanm22"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://paulkaefer.com""><img src=""https://avatars.githubusercontent.com/u/2408155?v=4?s=100"" width=""100px;"" alt=""Paul Kaefer""/><br /><sub><b>Paul Kaefer</b></sub></a><br /><a href=""#design-paulkaefer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=paulkaefer"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GarlicWang""><img src=""https://avatars.githubusercontent.com/u/59409501?v=4?s=100"" width=""100px;"" alt=""Yu-Hsiang Wang""/><br /><sub><b>Yu-Hsiang Wang</b></sub></a><br /><a href=""#design-GarlicWang"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GarlicWang"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://MrAdib.com""><img src=""https://avatars.githubusercontent.com/u/8861284?v=4?s=100"" width=""100px;"" alt=""Javad Adib""/><br /><sub><b>Javad Adib</b></sub></a><br /><a href=""#design-MrJavadAdib"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MrJavadAdib"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/davidliu0930""><img src=""https://avatars.githubusercontent.com/u/58803314?v=4?s=100"" width=""100px;"" alt=""davidliu0930""/><br /><sub><b>davidliu0930</b></sub></a><br /><a href=""#design-davidliu0930"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=davidliu0930"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://achilleasein.com""><img src=""https://avatars.githubusercontent.com/u/6341668?v=4?s=100"" width=""100px;"" alt=""Achilleas John Yfantis""/><br /><sub><b>Achilleas John Yfantis</b></sub></a><br /><a href=""#design-Achilleasein"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Achilleasein"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/OmkarShivadekar""><img src=""https://avatars.githubusercontent.com/u/30948641?v=4?s=100"" width=""100px;"" alt=""Omkar Shivadekar""/><br /><sub><b>Omkar Shivadekar</b></sub></a><br /><a href=""#design-OmkarShivadekar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=OmkarShivadekar"" title=""Code"">💻</a> <a href=""#content-OmkarShivadekar"" title=""Content"">🖋</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/issues?q=author%3AOmkarShivadekar"" title=""Bug reports"">🐛</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/toantd90""><img src=""https://avatars.githubusercontent.com/u/4978810?v=4?s=100"" width=""100px;"" alt=""ToanTran""/><br /><sub><b>ToanTran</b></sub></a><br /><a href=""#design-toantd90"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=toantd90"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.gautamnaik.com/""><img src=""https://avatars.githubusercontent.com/u/2787787?v=4?s=100"" width=""100px;"" alt=""Gautam Naik""/><br /><sub><b>Gautam Naik</b></sub></a><br /><a href=""#design-gautamnaik1994"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gautamnaik1994"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://marcondercin.github.io""><img src=""https://avatars.githubusercontent.com/u/23724126?v=4?s=100"" width=""100px;"" alt=""Marc""/><br /><sub><b>Marc</b></sub></a><br /><a href=""#design-marcondercin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=marcondercin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/twix20""><img src=""https://avatars.githubusercontent.com/u/9865224?v=4?s=100"" width=""100px;"" alt=""twix20""/><br /><sub><b>twix20</b></sub></a><br /><a href=""#design-twix20"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=twix20"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Knightwalker""><img src=""https://avatars.githubusercontent.com/u/37214263?v=4?s=100"" width=""100px;"" alt=""Kristian S.""/><br /><sub><b>Kristian S.</b></sub></a><br /><a href=""#design-Knightwalker"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Knightwalker"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.xyz-media.com/avocado""><img src=""https://avatars.githubusercontent.com/u/56565199?v=4?s=100"" width=""100px;"" alt=""Aleksey Khoroshilov""/><br /><sub><b>Aleksey Khoroshilov</b></sub></a><br /><a href=""#design-aleksey00"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aleksey00"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/arjunsrsr""><img src=""https://avatars.githubusercontent.com/u/100687528?v=4?s=100"" width=""100px;"" alt=""arjunsrsr""/><br /><sub><b>arjunsrsr</b></sub></a><br /><a href=""#design-arjunsrsr"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arjunsrsr"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://haydher.com/""><img src=""https://avatars.githubusercontent.com/u/70679209?v=4?s=100"" width=""100px;"" alt=""Ali Haider""/><br /><sub><b>Ali Haider</b></sub></a><br /><a href=""#design-haydher"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=haydher"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://tdring.com""><img src=""https://avatars.githubusercontent.com/u/7061293?v=4?s=100"" width=""100px;"" alt=""Trisha Dring""/><br /><sub><b>Trisha Dring</b></sub></a><br /><a href=""#design-Trishadring"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Trishadring"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/marzulo""><img src=""https://avatars.githubusercontent.com/u/37627420?v=4?s=100"" width=""100px;"" alt=""Andre Marzulo""/><br /><sub><b>Andre Marzulo</b></sub></a><br /><a href=""#design-marzulo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=marzulo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://krish512.com""><img src=""https://avatars.githubusercontent.com/u/6457418?v=4?s=100"" width=""100px;"" alt=""Krishna Modi""/><br /><sub><b>Krishna Modi</b></sub></a><br /><a href=""#design-krish512"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=krish512"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/yli110-stat697""><img src=""https://avatars.githubusercontent.com/u/42564519?v=4?s=100"" width=""100px;"" alt=""Rosemary Li""/><br /><sub><b>Rosemary Li</b></sub></a><br /><a href=""#design-yli110-stat697"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yli110-stat697"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Aweller95""><img src=""https://avatars.githubusercontent.com/u/46358583?v=4?s=100"" width=""100px;"" alt=""Alex Weller""/><br /><sub><b>Alex Weller</b></sub></a><br /><a href=""#design-Aweller95"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Aweller95"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/tam-pmnguyen/""><img src=""https://avatars.githubusercontent.com/u/69443738?v=4?s=100"" width=""100px;"" alt=""Tam Nguyen""/><br /><sub><b>Tam Nguyen</b></sub></a><br /><a href=""#design-alissanguyen"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alissanguyen"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aquintelaoliveira""><img src=""https://avatars.githubusercontent.com/u/47882277?v=4?s=100"" width=""100px;"" alt=""aquintelaoliveira""/><br /><sub><b>aquintelaoliveira</b></sub></a><br /><a href=""#design-aquintelaoliveira"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aquintelaoliveira"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://norbert-brett.netlify.app""><img src=""https://avatars.githubusercontent.com/u/60483492?v=4?s=100"" width=""100px;"" alt=""Norbert Brett""/><br /><sub><b>Norbert Brett</b></sub></a><br /><a href=""#design-NobertBrett"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NobertBrett"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rocsogd""><img src=""https://avatars.githubusercontent.com/u/101685468?v=4?s=100"" width=""100px;"" alt=""rocsogd""/><br /><sub><b>rocsogd</b></sub></a><br /><a href=""#design-rocsogd"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rocsogd"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://onyr.net""><img src=""https://avatars.githubusercontent.com/u/47721040?v=4?s=100"" width=""100px;"" alt=""0nyr""/><br /><sub><b>0nyr</b></sub></a><br /><a href=""#design-0nyr"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=0nyr"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rkevx21""><img src=""https://avatars.githubusercontent.com/u/7960937?v=4?s=100"" width=""100px;"" alt=""rethkevin""/><br /><sub><b>rethkevin</b></sub></a><br /><a href=""#design-rkevx21"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rkevx21"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://-""><img src=""https://avatars.githubusercontent.com/u/48429967?v=4?s=100"" width=""100px;"" alt=""RickHeadle""/><br /><sub><b>RickHeadle</b></sub></a><br /><a href=""#design-RickHeadle"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RickHeadle"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://linkedin.com/in/leandre-nsengumuremyi""><img src=""https://avatars.githubusercontent.com/u/35899771?v=4?s=100"" width=""100px;"" alt=""Leandre""/><br /><sub><b>Leandre</b></sub></a><br /><a href=""#design-dreking"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dreking"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/NatnaelSisay""><img src=""https://avatars.githubusercontent.com/u/24861495?v=4?s=100"" width=""100px;"" alt=""Natnael Sisay""/><br /><sub><b>Natnael Sisay</b></sub></a><br /><a href=""#design-NatnaelSisay"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NatnaelSisay"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sbbu""><img src=""https://avatars.githubusercontent.com/u/38852176?v=4?s=100"" width=""100px;"" alt=""sbbu""/><br /><sub><b>sbbu</b></sub></a><br /><a href=""#design-sbbu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sbbu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/wael-fadlallah""><img src=""https://avatars.githubusercontent.com/u/19624163?v=4?s=100"" width=""100px;"" alt=""wael""/><br /><sub><b>wael</b></sub></a><br /><a href=""#design-wael-fadlallah"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wael-fadlallah"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://fabriciopirini.netlify.com""><img src=""https://avatars.githubusercontent.com/u/20199659?v=4?s=100"" width=""100px;"" alt=""Fabricio Tramontano Pirini""/><br /><sub><b>Fabricio Tramontano Pirini</b></sub></a><br /><a href=""#design-fabriciopirini"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fabriciopirini"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alexbr00ken""><img src=""https://avatars.githubusercontent.com/u/56917843?v=4?s=100"" width=""100px;"" alt=""Alexander Stoyanov""/><br /><sub><b>Alexander Stoyanov</b></sub></a><br /><a href=""#design-alexbr00ken"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alexbr00ken"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Dezx20""><img src=""https://avatars.githubusercontent.com/u/40682998?v=4?s=100"" width=""100px;"" alt=""Dezx20""/><br /><sub><b>Dezx20</b></sub></a><br /><a href=""#design-Dezx20"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Dezx20"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/southparkkids""><img src=""https://avatars.githubusercontent.com/u/1056999?v=4?s=100"" width=""100px;"" alt=""southparkkids""/><br /><sub><b>southparkkids</b></sub></a><br /><a href=""#design-southparkkids"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=southparkkids"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bmstar2012""><img src=""https://avatars.githubusercontent.com/u/93668288?v=4?s=100"" width=""100px;"" alt=""bmstar""/><br /><sub><b>bmstar</b></sub></a><br /><a href=""#design-bmstar2012"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bmstar2012"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kiagam""><img src=""https://avatars.githubusercontent.com/u/43825898?v=4?s=100"" width=""100px;"" alt=""kiagam""/><br /><sub><b>kiagam</b></sub></a><br /><a href=""#design-kiagam"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kiagam"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cfuendesign""><img src=""https://avatars.githubusercontent.com/u/65634520?v=4?s=100"" width=""100px;"" alt=""Juan Castillo""/><br /><sub><b>Juan Castillo</b></sub></a><br /><a href=""#design-cfuendesign"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cfuendesign"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/FFenne""><img src=""https://avatars.githubusercontent.com/u/77193732?v=4?s=100"" width=""100px;"" alt=""FFenne""/><br /><sub><b>FFenne</b></sub></a><br /><a href=""#design-FFenne"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=FFenne"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jtoledo3970""><img src=""https://avatars.githubusercontent.com/u/11856952?v=4?s=100"" width=""100px;"" alt=""Jose Toledo""/><br /><sub><b>Jose Toledo</b></sub></a><br /><a href=""#design-jtoledo3970"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jtoledo3970"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mcghen.com""><img src=""https://avatars.githubusercontent.com/u/5630588?v=4?s=100"" width=""100px;"" alt=""Pat McGhen""/><br /><sub><b>Pat McGhen</b></sub></a><br /><a href=""#design-pmcghen"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pmcghen"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://eiko-wagenknecht.de""><img src=""https://avatars.githubusercontent.com/u/1475672?v=4?s=100"" width=""100px;"" alt=""Eiko Wagenknecht""/><br /><sub><b>Eiko Wagenknecht</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=eikowagenknecht"" title=""Code"">💻</a> <a href=""#content-eikowagenknecht"" title=""Content"">🖋</a> <a href=""#data-eikowagenknecht"" title=""Data"">🔣</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BigAl""><img src=""https://avatars.githubusercontent.com/u/5790906?v=4?s=100"" width=""100px;"" alt=""Alan Chalmers""/><br /><sub><b>Alan Chalmers</b></sub></a><br /><a href=""#design-BigAl"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BigAl"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mjwebservices.com""><img src=""https://avatars.githubusercontent.com/u/32228204?v=4?s=100"" width=""100px;"" alt=""Jean Didier""/><br /><sub><b>Jean Didier</b></sub></a><br /><a href=""#design-tarpagad"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tarpagad"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://Mixcart.ru""><img src=""https://avatars.githubusercontent.com/u/87854797?v=4?s=100"" width=""100px;"" alt=""Andy""/><br /><sub><b>Andy</b></sub></a><br /><a href=""#design-SobolAndy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SobolAndy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pestadieu""><img src=""https://avatars.githubusercontent.com/u/23661819?v=4?s=100"" width=""100px;"" alt=""pestadieu""/><br /><sub><b>pestadieu</b></sub></a><br /><a href=""#design-pestadieu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pestadieu"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://kanishka-developer.ml/""><img src=""https://avatars.githubusercontent.com/u/32675352?v=4?s=100"" width=""100px;"" alt=""Kanishka Chakraborty""/><br /><sub><b>Kanishka Chakraborty</b></sub></a><br /><a href=""#design-Kanishka-Developer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Kanishka-Developer"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.aloneonthebeach.ga/""><img src=""https://avatars.githubusercontent.com/u/48977375?v=4?s=100"" width=""100px;"" alt=""Nandha""/><br /><sub><b>Nandha</b></sub></a><br /><a href=""#design-nandha46"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nandha46"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://referal.ir/vahid.mafi""><img src=""https://avatars.githubusercontent.com/u/70995302?v=4?s=100"" width=""100px;"" alt=""Vahid Mafi""/><br /><sub><b>Vahid Mafi</b></sub></a><br /><a href=""#design-vahidmafi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vahidmafi"" title=""Code"">💻</a> <a href=""#data-vahidmafi"" title=""Data"">🔣</a> <a href=""#content-vahidmafi"" title=""Content"">🖋</a> <a href=""#business-vahidmafi"" title=""Business development"">💼</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AkshayAshokCode""><img src=""https://avatars.githubusercontent.com/u/63944420?v=4?s=100"" width=""100px;"" alt=""Akshay Ashok""/><br /><sub><b>Akshay Ashok</b></sub></a><br /><a href=""#design-AkshayAshokCode"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AkshayAshokCode"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ironwort.me/""><img src=""https://avatars.githubusercontent.com/u/15280042?v=4?s=100"" width=""100px;"" alt=""0x08""/><br /><sub><b>0x08</b></sub></a><br /><a href=""#design-its0x08"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=its0x08"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sandeepmishratech""><img src=""https://avatars.githubusercontent.com/u/87706790?v=4?s=100"" width=""100px;"" alt=""Sandeep Mishra""/><br /><sub><b>Sandeep Mishra</b></sub></a><br /><a href=""#design-sandeepmishratech"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sandeepmishratech"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://regnaultevann.xyz""><img src=""https://avatars.githubusercontent.com/u/20794848?v=4?s=100"" width=""100px;"" alt=""Evann Regnault""/><br /><sub><b>Evann Regnault</b></sub></a><br /><a href=""#design-Estyms"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Estyms"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://zeitouncorporate.com""><img src=""https://avatars.githubusercontent.com/u/30462059?v=4?s=100"" width=""100px;"" alt=""Lenny Zeitoun""/><br /><sub><b>Lenny Zeitoun</b></sub></a><br /><a href=""#design-ZeitounCorp"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ZeitounCorp"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/edenb-dev""><img src=""https://avatars.githubusercontent.com/u/70844165?v=4?s=100"" width=""100px;"" alt=""Eden Boaron""/><br /><sub><b>Eden Boaron</b></sub></a><br /><a href=""#design-edenb-dev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=edenb-dev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/TroyBTC""><img src=""https://avatars.githubusercontent.com/u/78566687?v=4?s=100"" width=""100px;"" alt=""TroyBTC""/><br /><sub><b>TroyBTC</b></sub></a><br /><a href=""#design-TroyBTC"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TroyBTC"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Aby-Sebastian""><img src=""https://avatars.githubusercontent.com/u/56107740?v=4?s=100"" width=""100px;"" alt=""Aby Sebastian""/><br /><sub><b>Aby Sebastian</b></sub></a><br /><a href=""#design-Aby-Sebastian"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Aby-Sebastian"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/matthewdunngeon""><img src=""https://avatars.githubusercontent.com/u/60297738?v=4?s=100"" width=""100px;"" alt=""Matthew Dunn""/><br /><sub><b>Matthew Dunn</b></sub></a><br /><a href=""#design-matthewdunngeon"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=matthewdunngeon"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ckullo""><img src=""https://avatars.githubusercontent.com/u/35125965?v=4?s=100"" width=""100px;"" alt=""ckullo""/><br /><sub><b>ckullo</b></sub></a><br /><a href=""#design-ckullo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ckullo"" title=""Code"">💻</a> <a href=""#content-ckullo"" title=""Content"">🖋</a> <a href=""#data-ckullo"" title=""Data"">🔣</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MohamedMamdouh18""><img src=""https://avatars.githubusercontent.com/u/63814228?v=4?s=100"" width=""100px;"" alt=""Mohamed Mamdouh""/><br /><sub><b>Mohamed Mamdouh</b></sub></a><br /><a href=""#design-MohamedMamdouh18"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MohamedMamdouh18"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Bazina""><img src=""https://avatars.githubusercontent.com/u/60438793?v=4?s=100"" width=""100px;"" alt=""Youssef Bazina""/><br /><sub><b>Youssef Bazina</b></sub></a><br /><a href=""#design-Bazina"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Bazina"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Fredposk""><img src=""https://avatars.githubusercontent.com/u/72066322?v=4?s=100"" width=""100px;"" alt=""Frederico Kückelhaus""/><br /><sub><b>Frederico Kückelhaus</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Fredposk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.nushankodikara.com/""><img src=""https://avatars.githubusercontent.com/u/54279786?v=4?s=100"" width=""100px;"" alt=""Nushan Kodikara""/><br /><sub><b>Nushan Kodikara</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nushankodikara"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/CooperZA""><img src=""https://avatars.githubusercontent.com/u/52263430?v=4?s=100"" width=""100px;"" alt=""Zach Cooper""/><br /><sub><b>Zach Cooper</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=CooperZA"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/1997roylee""><img src=""https://avatars.githubusercontent.com/u/53046899?v=4?s=100"" width=""100px;"" alt=""Roy""/><br /><sub><b>Roy</b></sub></a><br /><a href=""#design-1997roylee"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=1997roylee"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://linktr.ee/sauravpanchal""><img src=""https://avatars.githubusercontent.com/u/61927693?v=4?s=100"" width=""100px;"" alt=""Saurav Panchal""/><br /><sub><b>Saurav Panchal</b></sub></a><br /><a href=""#design-sauravpanchal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sauravpanchal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://twitter.com/totallynotdavid""><img src=""https://avatars.githubusercontent.com/u/20960328?v=4?s=100"" width=""100px;"" alt=""totallynotdavid""/><br /><sub><b>totallynotdavid</b></sub></a><br /><a href=""#design-totallynotdavid"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=totallynotdavid"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/goosepirate""><img src=""https://avatars.githubusercontent.com/u/71612256?v=4?s=100"" width=""100px;"" alt=""goosepirate""/><br /><sub><b>goosepirate</b></sub></a><br /><a href=""#design-goosepirate"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=goosepirate"" title=""Code"">💻</a> <a href=""#example-goosepirate"" title=""Examples"">💡</a> <a href=""#business-goosepirate"" title=""Business development"">💼</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/KAUTH""><img src=""https://avatars.githubusercontent.com/u/15343142?v=4?s=100"" width=""100px;"" alt=""KAUTH""/><br /><sub><b>KAUTH</b></sub></a><br /><a href=""#design-KAUTH"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KAUTH"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/hari-kiran-vusirikala/""><img src=""https://avatars.githubusercontent.com/u/25457325?v=4?s=100"" width=""100px;"" alt=""Hari Kiran Vusirikala""/><br /><sub><b>Hari Kiran Vusirikala</b></sub></a><br /><a href=""#design-harikiranvusirikala"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=harikiranvusirikala"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://rickdevelops.github.io/personal/""><img src=""https://avatars.githubusercontent.com/u/31971312?v=4?s=100"" width=""100px;"" alt=""Sounak Dey""/><br /><sub><b>Sounak Dey</b></sub></a><br /><a href=""#design-rickdevelops"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rickdevelops"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ziasistani""><img src=""https://avatars.githubusercontent.com/u/4399507?v=4?s=100"" width=""100px;"" alt=""zia""/><br /><sub><b>zia</b></sub></a><br /><a href=""#business-ziasistani"" title=""Business development"">💼</a> <a href=""#design-ziasistani"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ziasistani"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://davari.io/""><img src=""https://avatars.githubusercontent.com/u/29124068?v=4?s=100"" width=""100px;"" alt=""Reza Davari""/><br /><sub><b>Reza Davari</b></sub></a><br /><a href=""#design-rezazzr"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rezazzr"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AkshayAjaykumar""><img src=""https://avatars.githubusercontent.com/u/103431695?v=4?s=100"" width=""100px;"" alt=""AkshayAjaykumar""/><br /><sub><b>AkshayAjaykumar</b></sub></a><br /><a href=""#design-AkshayAjaykumar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AkshayAjaykumar"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.pyknote.xyz/""><img src=""https://avatars.githubusercontent.com/u/8668432?v=4?s=100"" width=""100px;"" alt=""x24870""/><br /><sub><b>x24870</b></sub></a><br /><a href=""#design-x24870"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=x24870"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/phonethantzaw""><img src=""https://avatars.githubusercontent.com/u/11054762?v=4?s=100"" width=""100px;"" alt=""Ko Phone""/><br /><sub><b>Ko Phone</b></sub></a><br /><a href=""#design-phonethantzaw"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=phonethantzaw"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Nabstar3""><img src=""https://avatars.githubusercontent.com/u/47038774?v=4?s=100"" width=""100px;"" alt=""Nabstar3""/><br /><sub><b>Nabstar3</b></sub></a><br /><a href=""#design-Nabstar3"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nabstar3"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MateuszGolda""><img src=""https://avatars.githubusercontent.com/u/58918524?v=4?s=100"" width=""100px;"" alt=""Mateusz""/><br /><sub><b>Mateusz</b></sub></a><br /><a href=""#design-MateuszGolda"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MateuszGolda"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://yunus_emre3497[at]hotmail.com""><img src=""https://avatars.githubusercontent.com/u/34275999?v=4?s=100"" width=""100px;"" alt=""Yunus Emre Emik""/><br /><sub><b>Yunus Emre Emik</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yunusemreemik"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sinhadotabhinav""><img src=""https://avatars.githubusercontent.com/u/10262343?v=4?s=100"" width=""100px;"" alt=""Abhinav Sinha""/><br /><sub><b>Abhinav Sinha</b></sub></a><br /><a href=""#design-sinhadotabhinav"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sinhadotabhinav"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://leetcode.com/hungqn04/""><img src=""https://avatars.githubusercontent.com/u/97866339?v=4?s=100"" width=""100px;"" alt=""Hung Nguyen""/><br /><sub><b>Hung Nguyen</b></sub></a><br /><a href=""#design-hungqng"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hungqng"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Maselino""><img src=""https://avatars.githubusercontent.com/u/16258349?v=4?s=100"" width=""100px;"" alt=""Maselino""/><br /><sub><b>Maselino</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Maselino"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Shuktika15""><img src=""https://avatars.githubusercontent.com/u/53374048?v=4?s=100"" width=""100px;"" alt=""Shuktika Mahanty""/><br /><sub><b>Shuktika Mahanty</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Shuktika15"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mikolajgawronski""><img src=""https://avatars.githubusercontent.com/u/54740661?v=4?s=100"" width=""100px;"" alt=""Mikołaj Gawroński""/><br /><sub><b>Mikołaj Gawroński</b></sub></a><br /><a href=""#design-mikolajgawronski"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mikolajgawronski"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Husseinhj""><img src=""https://avatars.githubusercontent.com/u/27139702?v=4?s=100"" width=""100px;"" alt=""Hussein Habibi Juybari""/><br /><sub><b>Hussein Habibi Juybari</b></sub></a><br /><a href=""#design-Husseinhj"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Husseinhj"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Sean-McArthur""><img src=""https://avatars.githubusercontent.com/u/103604658?v=4?s=100"" width=""100px;"" alt=""Sean-McArthur""/><br /><sub><b>Sean-McArthur</b></sub></a><br /><a href=""#design-Sean-McArthur"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Sean-McArthur"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://osbm.github.io""><img src=""https://avatars.githubusercontent.com/u/74963545?v=4?s=100"" width=""100px;"" alt=""Osman F Bayram""/><br /><sub><b>Osman F Bayram</b></sub></a><br /><a href=""#design-osbm"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=osbm"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://benvlodgi.github.io/""><img src=""https://avatars.githubusercontent.com/u/1462374?v=4?s=100"" width=""100px;"" alt=""Benjamin Thomas Blodgett""/><br /><sub><b>Benjamin Thomas Blodgett</b></sub></a><br /><a href=""#design-BenVlodgi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BenVlodgi"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://zang.chuanlong@outlook.com""><img src=""https://avatars.githubusercontent.com/u/75363411?v=4?s=100"" width=""100px;"" alt=""Chuanlong-Zang""/><br /><sub><b>Chuanlong-Zang</b></sub></a><br /><a href=""#design-Chuanlong-Zang"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Chuanlong-Zang"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://about.me/wolfkin""><img src=""https://avatars.githubusercontent.com/u/6678474?v=4?s=100"" width=""100px;"" alt=""julian""/><br /><sub><b>julian</b></sub></a><br /><a href=""#design-wolfkin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wolfkin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/franisrael""><img src=""https://avatars.githubusercontent.com/u/12844601?v=4?s=100"" width=""100px;"" alt=""francisco""/><br /><sub><b>francisco</b></sub></a><br /><a href=""#design-franisrael"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=franisrael"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aalihhiader9211""><img src=""https://avatars.githubusercontent.com/u/50293007?v=4?s=100"" width=""100px;"" alt=""aalihhiader9211""/><br /><sub><b>aalihhiader9211</b></sub></a><br /><a href=""#design-aalihhiader9211"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aalihhiader9211"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/muhammadzunair/""><img src=""https://avatars.githubusercontent.com/u/18049087?v=4?s=100"" width=""100px;"" alt=""Muhammad Zunair""/><br /><sub><b>Muhammad Zunair</b></sub></a><br /><a href=""#design-mzunair"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mzunair"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Asure89""><img src=""https://avatars.githubusercontent.com/u/20336951?v=4?s=100"" width=""100px;"" alt=""Liya""/><br /><sub><b>Liya</b></sub></a><br /><a href=""#design-Asure89"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Asure89"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BegadTarek""><img src=""https://avatars.githubusercontent.com/u/26423964?v=4?s=100"" width=""100px;"" alt=""BegadTarek""/><br /><sub><b>BegadTarek</b></sub></a><br /><a href=""#design-BegadTarek"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BegadTarek"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/etorobot""><img src=""https://avatars.githubusercontent.com/u/43525385?v=4?s=100"" width=""100px;"" alt=""etorobot""/><br /><sub><b>etorobot</b></sub></a><br /><a href=""#design-etorobot"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=etorobot"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hussamk98""><img src=""https://avatars.githubusercontent.com/u/34946171?v=4?s=100"" width=""100px;"" alt=""Hussam Khan""/><br /><sub><b>Hussam Khan</b></sub></a><br /><a href=""#design-hussamk98"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hussamk98"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/saikat-chakraborty-68037a233""><img src=""https://avatars.githubusercontent.com/u/84668005?v=4?s=100"" width=""100px;"" alt=""Saikat Chakraborty""/><br /><sub><b>Saikat Chakraborty</b></sub></a><br /><a href=""#design-Saikat299792458"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Saikat299792458"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nicholasquisler""><img src=""https://avatars.githubusercontent.com/u/99000057?v=4?s=100"" width=""100px;"" alt=""Nicholas Quisler""/><br /><sub><b>Nicholas Quisler</b></sub></a><br /><a href=""#design-nicholasquisler"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nicholasquisler"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Poulios""><img src=""https://avatars.githubusercontent.com/u/46890409?v=4?s=100"" width=""100px;"" alt=""Evang Poul""/><br /><sub><b>Evang Poul</b></sub></a><br /><a href=""#design-Poulios"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Poulios"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://writeonly.wordpress.com""><img src=""https://avatars.githubusercontent.com/u/163983?v=4?s=100"" width=""100px;"" alt=""Gregg Lind""/><br /><sub><b>Gregg Lind</b></sub></a><br /><a href=""#design-gregglind"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gregglind"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sudocipher""><img src=""https://avatars.githubusercontent.com/u/32899560?v=4?s=100"" width=""100px;"" alt=""Deepak Kumar""/><br /><sub><b>Deepak Kumar</b></sub></a><br /><a href=""#design-sudocipher"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sudocipher"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/CallumIO""><img src=""https://avatars.githubusercontent.com/u/16057677?v=4?s=100"" width=""100px;"" alt=""Callum Leslie""/><br /><sub><b>Callum Leslie</b></sub></a><br /><a href=""#design-CallumIO"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=CallumIO"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.curtisbarnard.com""><img src=""https://avatars.githubusercontent.com/u/100104319?v=4?s=100"" width=""100px;"" alt=""Curtis Barnard Jr.""/><br /><sub><b>Curtis Barnard Jr.</b></sub></a><br /><a href=""#design-curtisbarnard"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=curtisbarnard"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Deepanshukaim""><img src=""https://avatars.githubusercontent.com/u/100293309?v=4?s=100"" width=""100px;"" alt=""Deepanshukaim""/><br /><sub><b>Deepanshukaim</b></sub></a><br /><a href=""#design-Deepanshukaim"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Deepanshukaim"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://manthanank.xyz/""><img src=""https://avatars.githubusercontent.com/u/50883320?v=4?s=100"" width=""100px;"" alt=""Manthan Ank""/><br /><sub><b>Manthan Ank</b></sub></a><br /><a href=""#design-manthanank"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=manthanank"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/h-varmazyar""><img src=""https://avatars.githubusercontent.com/u/56110766?v=4?s=100"" width=""100px;"" alt=""hossein varmazyar""/><br /><sub><b>hossein varmazyar</b></sub></a><br /><a href=""#design-h-varmazyar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=h-varmazyar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/BrayanMnz""><img src=""https://avatars.githubusercontent.com/u/61812255?v=4?s=100"" width=""100px;"" alt=""Brayan Muñoz V.""/><br /><sub><b>Brayan Muñoz V.</b></sub></a><br /><a href=""#design-BrayanMnz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BrayanMnz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/scyp101""><img src=""https://avatars.githubusercontent.com/u/42637586?v=4?s=100"" width=""100px;"" alt=""Kamil Rasheed Siddiqui""/><br /><sub><b>Kamil Rasheed Siddiqui</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=scyp101"" title=""Code"">💻</a> <a href=""#design-scyp101"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mutt0-ds""><img src=""https://avatars.githubusercontent.com/u/70467783?v=4?s=100"" width=""100px;"" alt=""mutt0-ds""/><br /><sub><b>mutt0-ds</b></sub></a><br /><a href=""#design-mutt0-ds"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mutt0-ds"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/egbertjk""><img src=""https://avatars.githubusercontent.com/u/98855468?v=4?s=100"" width=""100px;"" alt=""egbertjk""/><br /><sub><b>egbertjk</b></sub></a><br /><a href=""#design-egbertjk"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=egbertjk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Majid-Z""><img src=""https://avatars.githubusercontent.com/u/8374542?v=4?s=100"" width=""100px;"" alt=""Majid Zojaji""/><br /><sub><b>Majid Zojaji</b></sub></a><br /><a href=""#design-Majid-Z"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Majid-Z"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tix123""><img src=""https://avatars.githubusercontent.com/u/52285592?v=4?s=100"" width=""100px;"" alt=""Sean Chen""/><br /><sub><b>Sean Chen</b></sub></a><br /><a href=""#design-tix123"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tix123"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.herbertmilhomme.com""><img src=""https://avatars.githubusercontent.com/u/15901670?v=4?s=100"" width=""100px;"" alt=""Herbert Milhomme""/><br /><sub><b>Herbert Milhomme</b></sub></a><br /><a href=""#design-herbertmilhomme"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=herbertmilhomme"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/101br03k""><img src=""https://avatars.githubusercontent.com/u/59868436?v=4?s=100"" width=""100px;"" alt=""A3""/><br /><sub><b>A3</b></sub></a><br /><a href=""#design-101br03k"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=101br03k"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/LazyKeru""><img src=""https://avatars.githubusercontent.com/u/26745413?v=4?s=100"" width=""100px;"" alt=""Killian""/><br /><sub><b>Killian</b></sub></a><br /><a href=""#design-LazyKeru"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LazyKeru"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Coakeow""><img src=""https://avatars.githubusercontent.com/u/105360570?v=4?s=100"" width=""100px;"" alt=""Coakeow""/><br /><sub><b>Coakeow</b></sub></a><br /><a href=""#design-Coakeow"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Coakeow"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://ozh.org/""><img src=""https://avatars.githubusercontent.com/u/223647?v=4?s=100"" width=""100px;"" alt=""྅༻ Ǭɀħ ༄༆ཉ""/><br /><sub><b>྅༻ Ǭɀħ ༄༆ཉ</b></sub></a><br /><a href=""#design-ozh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ozh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://pratik088.github.io/me""><img src=""https://avatars.githubusercontent.com/u/24887870?v=4?s=100"" width=""100px;"" alt=""Pratik Solanki""/><br /><sub><b>Pratik Solanki</b></sub></a><br /><a href=""#design-pratik088"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pratik088"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MrSunny-M""><img src=""https://avatars.githubusercontent.com/u/20139599?v=4?s=100"" width=""100px;"" alt=""Sunny""/><br /><sub><b>Sunny</b></sub></a><br /><a href=""#design-MrSunny-M"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MrSunny-M"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ssge""><img src=""https://avatars.githubusercontent.com/u/1730332?v=4?s=100"" width=""100px;"" alt=""ssge""/><br /><sub><b>ssge</b></sub></a><br /><a href=""#design-ssge"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ssge"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linkedin.com/in/bernat-frangi-767748225""><img src=""https://avatars.githubusercontent.com/u/82199014?v=4?s=100"" width=""100px;"" alt=""Bernat Frangi""/><br /><sub><b>Bernat Frangi</b></sub></a><br /><a href=""#design-bfrangi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bfrangi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JeevanRupacha""><img src=""https://avatars.githubusercontent.com/u/54855142?v=4?s=100"" width=""100px;"" alt=""Jeevan Rupacha""/><br /><sub><b>Jeevan Rupacha</b></sub></a><br /><a href=""#design-JeevanRupacha"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JeevanRupacha"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/amirandap""><img src=""https://avatars.githubusercontent.com/u/29356808?v=4?s=100"" width=""100px;"" alt=""amirandap""/><br /><sub><b>amirandap</b></sub></a><br /><a href=""#design-amirandap"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amirandap"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/deepakshi-mittal""><img src=""https://avatars.githubusercontent.com/u/78574784?v=4?s=100"" width=""100px;"" alt=""Deepakshi Mittal""/><br /><sub><b>Deepakshi Mittal</b></sub></a><br /><a href=""#design-deepakshi-mittal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=deepakshi-mittal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.abhijeetparida.ml""><img src=""https://avatars.githubusercontent.com/u/23334003?v=4?s=100"" width=""100px;"" alt=""Abhijeet Parida""/><br /><sub><b>Abhijeet Parida</b></sub></a><br /><a href=""#design-a-parida12"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=a-parida12"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/KhaledR57""><img src=""https://avatars.githubusercontent.com/u/58042646?v=4?s=100"" width=""100px;"" alt=""Khaled Riyad""/><br /><sub><b>Khaled Riyad</b></sub></a><br /><a href=""#design-KhaledR57"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KhaledR57"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://unique134.blogspot.com/""><img src=""https://avatars.githubusercontent.com/u/52885495?v=4?s=100"" width=""100px;"" alt=""Pratap parui""/><br /><sub><b>Pratap parui</b></sub></a><br /><a href=""#design-pratap360"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pratap360"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Prz8""><img src=""https://avatars.githubusercontent.com/u/105464788?v=4?s=100"" width=""100px;"" alt=""Prajit Panday""/><br /><sub><b>Prajit Panday</b></sub></a><br /><a href=""#design-Prz8"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Prz8"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/PipeSierra""><img src=""https://avatars.githubusercontent.com/u/29931193?v=4?s=100"" width=""100px;"" alt=""PipeSierra""/><br /><sub><b>PipeSierra</b></sub></a><br /><a href=""#design-PipeSierra"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PipeSierra"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Collinsoden22""><img src=""https://avatars.githubusercontent.com/u/103268967?v=4?s=100"" width=""100px;"" alt=""Collins Oden""/><br /><sub><b>Collins Oden</b></sub></a><br /><a href=""#design-Collinsoden22"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Collinsoden22"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kshitijdwivedi28""><img src=""https://avatars.githubusercontent.com/u/59132346?v=4?s=100"" width=""100px;"" alt=""Kshitij Dwivedi""/><br /><sub><b>Kshitij Dwivedi</b></sub></a><br /><a href=""#design-kshitijdwivedi28"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kshitijdwivedi28"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://sites.google.com/mail.ugm.ac.id/bernardia""><img src=""https://avatars.githubusercontent.com/u/44311743?v=4?s=100"" width=""100px;"" alt=""Bernardia Vitri Arumsari""/><br /><sub><b>Bernardia Vitri Arumsari</b></sub></a><br /><a href=""#design-bernardiava"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bernardiava"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://omerfruk3547@gmail.com""><img src=""https://avatars.githubusercontent.com/u/58033045?v=4?s=100"" width=""100px;"" alt=""Ömer Faruk Taşdemir""/><br /><sub><b>Ömer Faruk Taşdemir</b></sub></a><br /><a href=""#design-omerfruk"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=omerfruk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/spencerstith""><img src=""https://avatars.githubusercontent.com/u/42558850?v=4?s=100"" width=""100px;"" alt=""Spencer Stith""/><br /><sub><b>Spencer Stith</b></sub></a><br /><a href=""#design-spencerstith"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=spencerstith"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rodjanasak""><img src=""https://avatars.githubusercontent.com/u/45418798?v=4?s=100"" width=""100px;"" alt=""Porsche Rodjanasak""/><br /><sub><b>Porsche Rodjanasak</b></sub></a><br /><a href=""#design-rodjanasak"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rodjanasak"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shakeel47""><img src=""https://avatars.githubusercontent.com/u/63401869?v=4?s=100"" width=""100px;"" alt=""Shakeel Sharif""/><br /><sub><b>Shakeel Sharif</b></sub></a><br /><a href=""#design-shakeel47"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shakeel47"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/victoriacheng15""><img src=""https://avatars.githubusercontent.com/u/35031228?v=4?s=100"" width=""100px;"" alt=""Victoria Cheng""/><br /><sub><b>Victoria Cheng</b></sub></a><br /><a href=""#design-victoriacheng15"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=victoriacheng15"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://C9H13NO3#6734 on Discord""><img src=""https://avatars.githubusercontent.com/u/91314301?v=4?s=100"" width=""100px;"" alt=""Denis""/><br /><sub><b>Denis</b></sub></a><br /><a href=""#design-maaaaaars"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=maaaaaars"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aptiwari11""><img src=""https://avatars.githubusercontent.com/u/16354981?v=4?s=100"" width=""100px;"" alt=""Anand Prakash Tiwari""/><br /><sub><b>Anand Prakash Tiwari</b></sub></a><br /><a href=""#design-aptiwari11"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aptiwari11"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/danijeljw-RPC""><img src=""https://avatars.githubusercontent.com/u/69200012?v=4?s=100"" width=""100px;"" alt=""danijeljw-rpc""/><br /><sub><b>danijeljw-rpc</b></sub></a><br /><a href=""#design-danijeljw-RPC"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=danijeljw-RPC"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ahmed.hk""><img src=""https://avatars.githubusercontent.com/u/6904678?v=4?s=100"" width=""100px;"" alt=""Ahmed H Ebrahim""/><br /><sub><b>Ahmed H Ebrahim</b></sub></a><br /><a href=""#design-ahmedskaya"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ahmedskaya"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Virginia-Gardner""><img src=""https://avatars.githubusercontent.com/u/64395870?v=4?s=100"" width=""100px;"" alt=""Virginia Gardner""/><br /><sub><b>Virginia Gardner</b></sub></a><br /><a href=""#design-Virginia-Gardner"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Virginia-Gardner"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Jhironsel""><img src=""https://avatars.githubusercontent.com/u/28508219?v=4?s=100"" width=""100px;"" alt=""Jhironsel Diaz A.""/><br /><sub><b>Jhironsel Diaz A.</b></sub></a><br /><a href=""#design-Jhironsel"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jhironsel"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Yunus-kidem""><img src=""https://avatars.githubusercontent.com/u/74186011?v=4?s=100"" width=""100px;"" alt=""Yunus Kidem""/><br /><sub><b>Yunus Kidem</b></sub></a><br /><a href=""#design-Yunus-kidem"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Yunus-kidem"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mervynteo""><img src=""https://avatars.githubusercontent.com/u/5101947?v=4?s=100"" width=""100px;"" alt=""MT""/><br /><sub><b>MT</b></sub></a><br /><a href=""#design-mervynteo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mervynteo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dexter-dz""><img src=""https://avatars.githubusercontent.com/u/17889782?v=4?s=100"" width=""100px;"" alt=""Dinesh Zaldekar""/><br /><sub><b>Dinesh Zaldekar</b></sub></a><br /><a href=""#design-dexter-dz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dexter-dz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://il.linkedin.com/in/adibnaya""><img src=""https://avatars.githubusercontent.com/u/18742832?v=4?s=100"" width=""100px;"" alt=""adi""/><br /><sub><b>adi</b></sub></a><br /><a href=""#design-adibnaya"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adibnaya"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/farhan-shaikh-raw""><img src=""https://avatars.githubusercontent.com/u/92306667?v=4?s=100"" width=""100px;"" alt=""Farhan Shaikh""/><br /><sub><b>Farhan Shaikh</b></sub></a><br /><a href=""#design-farhan-shaikh-raw"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=farhan-shaikh-raw"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ismaelviss""><img src=""https://avatars.githubusercontent.com/u/32187832?v=4?s=100"" width=""100px;"" alt=""Elvis Salvatierra""/><br /><sub><b>Elvis Salvatierra</b></sub></a><br /><a href=""#design-ismaelviss"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ismaelviss"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Kaushik-Iyer""><img src=""https://avatars.githubusercontent.com/u/84177184?v=4?s=100"" width=""100px;"" alt=""Kaushik-Iyer""/><br /><sub><b>Kaushik-Iyer</b></sub></a><br /><a href=""#design-Kaushik-Iyer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Kaushik-Iyer"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hocandres""><img src=""https://avatars.githubusercontent.com/u/6194814?v=4?s=100"" width=""100px;"" alt=""HocAndres""/><br /><sub><b>HocAndres</b></sub></a><br /><a href=""#design-hocandres"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hocandres"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/VHAA1718""><img src=""https://avatars.githubusercontent.com/u/37845751?v=4?s=100"" width=""100px;"" alt=""VictorHugoAguilarAguilar""/><br /><sub><b>VictorHugoAguilarAguilar</b></sub></a><br /><a href=""#design-VHAA1718"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VHAA1718"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://muratcanabay.github.io/""><img src=""https://avatars.githubusercontent.com/u/23099059?v=4?s=100"" width=""100px;"" alt=""Murat Can Abay""/><br /><sub><b>Murat Can Abay</b></sub></a><br /><a href=""#design-muratcanabay"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=muratcanabay"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chdlsp""><img src=""https://avatars.githubusercontent.com/u/44944612?v=4?s=100"" width=""100px;"" alt=""Chris""/><br /><sub><b>Chris</b></sub></a><br /><a href=""#design-chdlsp"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chdlsp"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Shivam7-1""><img src=""https://avatars.githubusercontent.com/u/55046031?v=4?s=100"" width=""100px;"" alt=""Shivam7-1""/><br /><sub><b>Shivam7-1</b></sub></a><br /><a href=""#design-Shivam7-1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Shivam7-1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Paipai13""><img src=""https://avatars.githubusercontent.com/u/43116855?v=4?s=100"" width=""100px;"" alt=""Paipai13""/><br /><sub><b>Paipai13</b></sub></a><br /><a href=""#design-Paipai13"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Paipai13"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Shambles-io""><img src=""https://avatars.githubusercontent.com/u/92652583?v=4?s=100"" width=""100px;"" alt=""Shambles-io""/><br /><sub><b>Shambles-io</b></sub></a><br /><a href=""#design-Shambles-io"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Shambles-io"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Sync271""><img src=""https://avatars.githubusercontent.com/u/67158080?v=4?s=100"" width=""100px;"" alt=""Abhishek K M""/><br /><sub><b>Abhishek K M</b></sub></a><br /><a href=""#design-Sync271"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Sync271"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://zeke-porfolio-tawny.vercel.app/""><img src=""https://avatars.githubusercontent.com/u/82134360?v=4?s=100"" width=""100px;"" alt=""Ezequiel Cuevas""/><br /><sub><b>Ezequiel Cuevas</b></sub></a><br /><a href=""#design-ZEKe125"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ZEKe125"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/plamen-ivanov-33a851226/""><img src=""https://avatars.githubusercontent.com/u/65338982?v=4?s=100"" width=""100px;"" alt=""Plamen Ivanov""/><br /><sub><b>Plamen Ivanov</b></sub></a><br /><a href=""#design-k1lgor"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=k1lgor"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.instagram.com/devyuji/""><img src=""https://avatars.githubusercontent.com/u/36996970?v=4?s=100"" width=""100px;"" alt=""Yuji""/><br /><sub><b>Yuji</b></sub></a><br /><a href=""#design-devyuji"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=devyuji"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://jean-philippe.leboeuf.name""><img src=""https://avatars.githubusercontent.com/u/6379573?v=4?s=100"" width=""100px;"" alt=""Jean-Philippe Lebœuf""/><br /><sub><b>Jean-Philippe Lebœuf</b></sub></a><br /><a href=""#design-jpleboeuf"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jpleboeuf"" title=""Code"">💻</a> <a href=""#data-jpleboeuf"" title=""Data"">🔣</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/uxdiin""><img src=""https://avatars.githubusercontent.com/u/47312551?v=4?s=100"" width=""100px;"" alt=""Naufan""/><br /><sub><b>Naufan</b></sub></a><br /><a href=""#design-uxdiin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=uxdiin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jadnov""><img src=""https://avatars.githubusercontent.com/u/6341028?v=4?s=100"" width=""100px;"" alt=""jadnov""/><br /><sub><b>jadnov</b></sub></a><br /><a href=""#design-jadnov"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jadnov"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vaxtangens""><img src=""https://avatars.githubusercontent.com/u/37375576?v=4?s=100"" width=""100px;"" alt=""vaxtangens""/><br /><sub><b>vaxtangens</b></sub></a><br /><a href=""#design-vaxtangens"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vaxtangens"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/subashkonar13""><img src=""https://avatars.githubusercontent.com/u/18638211?v=4?s=100"" width=""100px;"" alt=""subashkonar13""/><br /><sub><b>subashkonar13</b></sub></a><br /><a href=""#design-subashkonar13"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=subashkonar13"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://rushijaviya.me/""><img src=""https://avatars.githubusercontent.com/u/59735978?v=4?s=100"" width=""100px;"" alt=""Rushi Javiya""/><br /><sub><b>Rushi Javiya</b></sub></a><br /><a href=""#design-Rushijaviya"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rushijaviya"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/gulmert89/""><img src=""https://avatars.githubusercontent.com/u/60785603?v=4?s=100"" width=""100px;"" alt=""Mert Gül""/><br /><sub><b>Mert Gül</b></sub></a><br /><a href=""#design-gulmert89"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gulmert89"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://lilyb.netlify.app""><img src=""https://avatars.githubusercontent.com/u/61839831?v=4?s=100"" width=""100px;"" alt=""Lily""/><br /><sub><b>Lily</b></sub></a><br /><a href=""#design-Nahay"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nahay"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://blog.kalinoff.com""><img src=""https://avatars.githubusercontent.com/u/18365725?v=4?s=100"" width=""100px;"" alt=""Kalinoff""/><br /><sub><b>Kalinoff</b></sub></a><br /><a href=""#design-kalinof"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kalinof"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jay-tau""><img src=""https://avatars.githubusercontent.com/u/95355656?v=4?s=100"" width=""100px;"" alt=""Joel Tony""/><br /><sub><b>Joel Tony</b></sub></a><br /><a href=""#design-jay-tau"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jay-tau"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://pw.is""><img src=""https://avatars.githubusercontent.com/u/1020226?v=4?s=100"" width=""100px;"" alt=""Peter""/><br /><sub><b>Peter</b></sub></a><br /><a href=""#design-p-w"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=p-w"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/roozbehzarei""><img src=""https://avatars.githubusercontent.com/u/55883200?v=4?s=100"" width=""100px;"" alt=""Roozbeh Zarei""/><br /><sub><b>Roozbeh Zarei</b></sub></a><br /><a href=""#design-roozbehzarei"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=roozbehzarei"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://shushengacademy.com/""><img src=""https://avatars.githubusercontent.com/u/21266146?v=4?s=100"" width=""100px;"" alt=""Shen""/><br /><sub><b>Shen</b></sub></a><br /><a href=""#design-ShenShu2016"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ShenShu2016"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/joonsoo2""><img src=""https://avatars.githubusercontent.com/u/17442963?v=4?s=100"" width=""100px;"" alt=""Joonsoo.LEE""/><br /><sub><b>Joonsoo.LEE</b></sub></a><br /><a href=""#design-joonsoo2"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=joonsoo2"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Thepowa753""><img src=""https://avatars.githubusercontent.com/u/44495483?v=4?s=100"" width=""100px;"" alt=""Fede.Breg""/><br /><sub><b>Fede.Breg</b></sub></a><br /><a href=""#design-Thepowa753"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Thepowa753"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rui-costa""><img src=""https://avatars.githubusercontent.com/u/44004884?v=4?s=100"" width=""100px;"" alt=""Rui Costa""/><br /><sub><b>Rui Costa</b></sub></a><br /><a href=""#design-rui-costa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rui-costa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://jgbispo.vercel.app/""><img src=""https://avatars.githubusercontent.com/u/83095574?v=4?s=100"" width=""100px;"" alt=""João Gustavo Bispo""/><br /><sub><b>João Gustavo Bispo</b></sub></a><br /><a href=""#design-jgbispo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jgbispo"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Sami-I""><img src=""https://avatars.githubusercontent.com/u/48256625?v=4?s=100"" width=""100px;"" alt=""Sami-I""/><br /><sub><b>Sami-I</b></sub></a><br /><a href=""#design-Sami-I"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Sami-I"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Tsvetoslav88""><img src=""https://avatars.githubusercontent.com/u/8929789?v=4?s=100"" width=""100px;"" alt=""Tsvetoslav Tsvetkov""/><br /><sub><b>Tsvetoslav Tsvetkov</b></sub></a><br /><a href=""#design-Tsvetoslav88"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Tsvetoslav88"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://niero-dev.netlify.app""><img src=""https://avatars.githubusercontent.com/u/32960398?v=4?s=100"" width=""100px;"" alt=""Olabode Olaniyi David""/><br /><sub><b>Olabode Olaniyi David</b></sub></a><br /><a href=""#design-Nierowheezy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Nierowheezy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://theruslan.ru""><img src=""https://avatars.githubusercontent.com/u/141221?v=4?s=100"" width=""100px;"" alt=""theRuslan""/><br /><sub><b>theRuslan</b></sub></a><br /><a href=""#design-theRuslan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=theRuslan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/leighboz""><img src=""https://avatars.githubusercontent.com/u/23637282?v=4?s=100"" width=""100px;"" alt=""leighboz""/><br /><sub><b>leighboz</b></sub></a><br /><a href=""#design-leighboz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=leighboz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/F-Sossi""><img src=""https://avatars.githubusercontent.com/u/67558112?v=4?s=100"" width=""100px;"" alt=""Frank Sossi""/><br /><sub><b>Frank Sossi</b></sub></a><br /><a href=""#design-F-Sossi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=F-Sossi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.djtms.pl""><img src=""https://avatars.githubusercontent.com/u/114456?v=4?s=100"" width=""100px;"" alt=""Tomasz Adamski""/><br /><sub><b>Tomasz Adamski</b></sub></a><br /><a href=""#design-djtms"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=djtms"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sathir""><img src=""https://avatars.githubusercontent.com/u/49432180?v=4?s=100"" width=""100px;"" alt=""Mansoor M. Sathir""/><br /><sub><b>Mansoor M. Sathir</b></sub></a><br /><a href=""#design-sathir"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sathir"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://golamrabbiazad.vercel.app""><img src=""https://avatars.githubusercontent.com/u/35021384?v=4?s=100"" width=""100px;"" alt=""Golamrabbi Azad""/><br /><sub><b>Golamrabbi Azad</b></sub></a><br /><a href=""#design-golamrabbiazad"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=golamrabbiazad"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/NahianAhmed""><img src=""https://avatars.githubusercontent.com/u/23056674?v=4?s=100"" width=""100px;"" alt=""Nahian Ahmed""/><br /><sub><b>Nahian Ahmed</b></sub></a><br /><a href=""#design-NahianAhmed"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NahianAhmed"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/engrmonteiro/""><img src=""https://avatars.githubusercontent.com/u/62445262?v=4?s=100"" width=""100px;"" alt=""Rafael de Jesus Silva Monteiro""/><br /><sub><b>Rafael de Jesus Silva Monteiro</b></sub></a><br /><a href=""#design-rafaeldjsm"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rafaeldjsm"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jayjaychukwu""><img src=""https://avatars.githubusercontent.com/u/82416328?v=4?s=100"" width=""100px;"" alt=""Odionyebuchukwu Jude""/><br /><sub><b>Odionyebuchukwu Jude</b></sub></a><br /><a href=""#design-jayjaychukwu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jayjaychukwu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/thenithinbalaji/""><img src=""https://avatars.githubusercontent.com/u/73932121?v=4?s=100"" width=""100px;"" alt=""The Nithin Balaji""/><br /><sub><b>The Nithin Balaji</b></sub></a><br /><a href=""#design-thenithinbalaji"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=thenithinbalaji"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://linktr.ee/Knackii""><img src=""https://avatars.githubusercontent.com/u/34623058?v=4?s=100"" width=""100px;"" alt=""Knackii""/><br /><sub><b>Knackii</b></sub></a><br /><a href=""#design-Knackii"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Knackii"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/giattiv""><img src=""https://avatars.githubusercontent.com/u/55487760?v=4?s=100"" width=""100px;"" alt=""vittorio-giatti""/><br /><sub><b>vittorio-giatti</b></sub></a><br /><a href=""#design-vittorio-giatti"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vittorio-giatti"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GuiReboucas""><img src=""https://avatars.githubusercontent.com/u/64700267?v=4?s=100"" width=""100px;"" alt=""Guilherme de Carvalho Lima Rebouças""/><br /><sub><b>Guilherme de Carvalho Lima Rebouças</b></sub></a><br /><a href=""#design-GuiReboucas"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GuiReboucas"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://Muhammad-bio-game.netlify.app""><img src=""https://avatars.githubusercontent.com/u/40777651?v=4?s=100"" width=""100px;"" alt=""aaref shami""/><br /><sub><b>aaref shami</b></sub></a><br /><a href=""#design-aaref-sh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aaref-sh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://vk.com/forem""><img src=""https://avatars.githubusercontent.com/u/15253861?v=4?s=100"" width=""100px;"" alt=""Andrey Dryupin""/><br /><sub><b>Andrey Dryupin</b></sub></a><br /><a href=""#design-forem1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=forem1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MuhannedNoman""><img src=""https://avatars.githubusercontent.com/u/40465727?v=4?s=100"" width=""100px;"" alt=""Muhanned Noman""/><br /><sub><b>Muhanned Noman</b></sub></a><br /><a href=""#design-MuhannedNoman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MuhannedNoman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/janjitsu""><img src=""https://avatars.githubusercontent.com/u/1727447?v=4?s=100"" width=""100px;"" alt=""Jan Silva""/><br /><sub><b>Jan Silva</b></sub></a><br /><a href=""#design-janjitsu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=janjitsu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/emanuele-em""><img src=""https://avatars.githubusercontent.com/u/100081325?v=4?s=100"" width=""100px;"" alt=""emanuele-em""/><br /><sub><b>emanuele-em</b></sub></a><br /><a href=""#design-emanuele-em"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=emanuele-em"" title=""Code"">💻</a> <a href=""#content-emanuele-em"" title=""Content"">🖋</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://gitgyan.com""><img src=""https://avatars.githubusercontent.com/u/77503269?v=4?s=100"" width=""100px;"" alt=""Sanjay TM""/><br /><sub><b>Sanjay TM</b></sub></a><br /><a href=""#design-tm-sanjay"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tm-sanjay"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://onelinerhub.com""><img src=""https://avatars.githubusercontent.com/u/82409010?v=4?s=100"" width=""100px;"" alt=""Joe Markberg / code editor""/><br /><sub><b>Joe Markberg / code editor</b></sub></a><br /><a href=""#design-nonunicorn"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nonunicorn"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jquiaios""><img src=""https://avatars.githubusercontent.com/u/16556006?v=4?s=100"" width=""100px;"" alt=""Julien Quiaios""/><br /><sub><b>Julien Quiaios</b></sub></a><br /><a href=""#design-jquiaios"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jquiaios"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/EricRamirezS""><img src=""https://avatars.githubusercontent.com/u/19417880?v=4?s=100"" width=""100px;"" alt=""Eric Ramirez Santis""/><br /><sub><b>Eric Ramirez Santis</b></sub></a><br /><a href=""#design-EricRamirezS"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=EricRamirezS"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mabiola.net""><img src=""https://avatars.githubusercontent.com/u/88386924?v=4?s=100"" width=""100px;"" alt=""M""/><br /><sub><b>M</b></sub></a><br /><a href=""#design-mabioIa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mabioIa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/malcata""><img src=""https://avatars.githubusercontent.com/u/2817001?v=4?s=100"" width=""100px;"" alt=""Malcata""/><br /><sub><b>Malcata</b></sub></a><br /><a href=""#design-malcata"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=malcata"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://athulmurali.weebly.com/""><img src=""https://avatars.githubusercontent.com/u/20325788?v=4?s=100"" width=""100px;"" alt=""Athul Muralidharan""/><br /><sub><b>Athul Muralidharan</b></sub></a><br /><a href=""#design-athulmurali"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=athulmurali"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/OchotaDariusz""><img src=""https://avatars.githubusercontent.com/u/98316845?v=4?s=100"" width=""100px;"" alt=""Dariusz Ochota""/><br /><sub><b>Dariusz Ochota</b></sub></a><br /><a href=""#design-OchotaDariusz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=OchotaDariusz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://chandanchoudhury.in/""><img src=""https://avatars.githubusercontent.com/u/62041378?v=4?s=100"" width=""100px;"" alt=""CHANDAN CHOUDHURY""/><br /><sub><b>CHANDAN CHOUDHURY</b></sub></a><br /><a href=""#design-Chandan-Choudhury"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Chandan-Choudhury"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Just2Deep""><img src=""https://avatars.githubusercontent.com/u/48485675?v=4?s=100"" width=""100px;"" alt=""Deep""/><br /><sub><b>Deep</b></sub></a><br /><a href=""#design-Just2Deep"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Just2Deep"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/declarck""><img src=""https://avatars.githubusercontent.com/u/10002419?v=4?s=100"" width=""100px;"" alt=""Ahmet İstemihan ÖZTÜRK""/><br /><sub><b>Ahmet İstemihan ÖZTÜRK</b></sub></a><br /><a href=""#design-declarck"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=declarck"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/timlmit""><img src=""https://avatars.githubusercontent.com/u/23659530?v=4?s=100"" width=""100px;"" alt=""TIM""/><br /><sub><b>TIM</b></sub></a><br /><a href=""#design-timlmit"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=timlmit"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jakeg814""><img src=""https://avatars.githubusercontent.com/u/82659246?v=4?s=100"" width=""100px;"" alt=""jakeg814""/><br /><sub><b>jakeg814</b></sub></a><br /><a href=""#design-jakeg814"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jakeg814"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Leonidos""><img src=""https://avatars.githubusercontent.com/u/378462?v=4?s=100"" width=""100px;"" alt=""Leonidos""/><br /><sub><b>Leonidos</b></sub></a><br /><a href=""#design-Leonidos"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Leonidos"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://abhndv.github.io/""><img src=""https://avatars.githubusercontent.com/u/29916968?v=4?s=100"" width=""100px;"" alt=""Abhinandu V Nair""/><br /><sub><b>Abhinandu V Nair</b></sub></a><br /><a href=""#design-abhndv"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=abhndv"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/charafeddine01""><img src=""https://avatars.githubusercontent.com/u/68375509?v=4?s=100"" width=""100px;"" alt=""charafeddine01""/><br /><sub><b>charafeddine01</b></sub></a><br /><a href=""#design-charafeddine01"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=charafeddine01"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Piratepie""><img src=""https://avatars.githubusercontent.com/u/27888345?v=4?s=100"" width=""100px;"" alt=""Jasper""/><br /><sub><b>Jasper</b></sub></a><br /><a href=""#design-Piratepie"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Piratepie"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/manisgoyal""><img src=""https://avatars.githubusercontent.com/u/62842010?v=4?s=100"" width=""100px;"" alt=""Manish Goyal""/><br /><sub><b>Manish Goyal</b></sub></a><br /><a href=""#design-manisgoyal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=manisgoyal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/satyam-singh25/""><img src=""https://avatars.githubusercontent.com/u/59700550?v=4?s=100"" width=""100px;"" alt=""SATYAM_SINGH""/><br /><sub><b>SATYAM_SINGH</b></sub></a><br /><a href=""#design-SatyamSingh25"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SatyamSingh25"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/OnlyF0uR""><img src=""https://avatars.githubusercontent.com/u/29165327?v=4?s=100"" width=""100px;"" alt=""Four""/><br /><sub><b>Four</b></sub></a><br /><a href=""#design-OnlyF0uR"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=OnlyF0uR"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Vaishnaviamirayada""><img src=""https://avatars.githubusercontent.com/u/108050528?v=4?s=100"" width=""100px;"" alt=""Vaishnavi Amira Yada""/><br /><sub><b>Vaishnavi Amira Yada</b></sub></a><br /><a href=""#design-Vaishnaviamirayada"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Vaishnaviamirayada"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/krishna-nit/""><img src=""https://avatars.githubusercontent.com/u/73196470?v=4?s=100"" width=""100px;"" alt=""ShriKrushna Bhagwat""/><br /><sub><b>ShriKrushna Bhagwat</b></sub></a><br /><a href=""#design-krishna-NIT"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=krishna-NIT"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://extecy.in""><img src=""https://avatars.githubusercontent.com/u/85486891?v=4?s=100"" width=""100px;"" alt=""Rohit Nandagawali""/><br /><sub><b>Rohit Nandagawali</b></sub></a><br /><a href=""#design-Rohit-Nandagawali"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rohit-Nandagawali"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/johnfelipe""><img src=""https://avatars.githubusercontent.com/u/428820?v=4?s=100"" width=""100px;"" alt=""felipe""/><br /><sub><b>felipe</b></sub></a><br /><a href=""#design-johnfelipe"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=johnfelipe"" title=""Code"">💻</a> <a href=""#maintenance-johnfelipe"" title=""Maintenance"">🚧</a> <a href=""#content-johnfelipe"" title=""Content"">🖋</a> <a href=""#tutorial-johnfelipe"" title=""Tutorials"">✅</a> <a href=""#mentoring-johnfelipe"" title=""Mentoring"">🧑‍🏫</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/mechanical-engineer-saurabh""><img src=""https://avatars.githubusercontent.com/u/35081754?v=4?s=100"" width=""100px;"" alt=""Saurabh Mudgal""/><br /><sub><b>Saurabh Mudgal</b></sub></a><br /><a href=""#design-Saurabh-Mudgal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Saurabh-Mudgal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/szenadam""><img src=""https://avatars.githubusercontent.com/u/42336465?v=4?s=100"" width=""100px;"" alt=""szenadam""/><br /><sub><b>szenadam</b></sub></a><br /><a href=""#design-szenadam"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=szenadam"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shubhendras11""><img src=""https://avatars.githubusercontent.com/u/110219750?v=4?s=100"" width=""100px;"" alt=""Shubhendra Singh""/><br /><sub><b>Shubhendra Singh</b></sub></a><br /><a href=""#design-shubhendras11"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shubhendras11"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://yoosuf-sayyid.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/76224462?v=4?s=100"" width=""100px;"" alt=""Yoosuf Sayyid""/><br /><sub><b>Yoosuf Sayyid</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dunkerbunker"" title=""Code"">💻</a> <a href=""#design-dunkerbunker"" title=""Design"">🎨</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/getinerler""><img src=""https://avatars.githubusercontent.com/u/86264137?v=4?s=100"" width=""100px;"" alt=""Güven Çetinerler""/><br /><sub><b>Güven Çetinerler</b></sub></a><br /><a href=""#design-getinerler"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=getinerler"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jefferies917""><img src=""https://avatars.githubusercontent.com/u/52199503?v=4?s=100"" width=""100px;"" alt=""Luke Jefferies""/><br /><sub><b>Luke Jefferies</b></sub></a><br /><a href=""#design-jefferies917"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jefferies917"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://chrisgkalfas.com""><img src=""https://avatars.githubusercontent.com/u/8108153?v=4?s=100"" width=""100px;"" alt=""Chris""/><br /><sub><b>Chris</b></sub></a><br /><a href=""#design-ChrisGk89"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ChrisGk89"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://lucioaguiar.com""><img src=""https://avatars.githubusercontent.com/u/70476123?v=4?s=100"" width=""100px;"" alt=""Lúcio Aguiar""/><br /><sub><b>Lúcio Aguiar</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lucioaguiar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Enuma029""><img src=""https://avatars.githubusercontent.com/u/107807284?v=4?s=100"" width=""100px;"" alt=""Enuma029""/><br /><sub><b>Enuma029</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Enuma029"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/yktsang01""><img src=""https://avatars.githubusercontent.com/u/68239425?v=4?s=100"" width=""100px;"" alt=""yktsang01""/><br /><sub><b>yktsang01</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yktsang01"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/maximumn3rd""><img src=""https://avatars.githubusercontent.com/u/838417?v=4?s=100"" width=""100px;"" alt=""maximumn3rd""/><br /><sub><b>maximumn3rd</b></sub></a><br /><a href=""#design-maximumn3rd"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=maximumn3rd"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gallettube""><img src=""https://avatars.githubusercontent.com/u/12675779?v=4?s=100"" width=""100px;"" alt=""Jon Galletero""/><br /><sub><b>Jon Galletero</b></sub></a><br /><a href=""#design-gallettube"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gallettube"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://trailblazer.me/id/thaddeusthomas""><img src=""https://avatars.githubusercontent.com/u/92204097?v=4?s=100"" width=""100px;"" alt=""Thaddeus  Thomas""/><br /><sub><b>Thaddeus  Thomas</b></sub></a><br /><a href=""#design-thomasthaddeus"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=thomasthaddeus"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://aakash-portfolio-umber.vercel.app/""><img src=""https://avatars.githubusercontent.com/u/95979529?v=4?s=100"" width=""100px;"" alt=""Aakash Kumar""/><br /><sub><b>Aakash Kumar</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Aakashvani"" title=""Code"">💻</a> <a href=""#design-Aakashvani"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AliM-01""><img src=""https://avatars.githubusercontent.com/u/76903214?v=4?s=100"" width=""100px;"" alt=""Ali M""/><br /><sub><b>Ali M</b></sub></a><br /><a href=""#design-AliM-01"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AliM-01"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/OskyEdz""><img src=""https://avatars.githubusercontent.com/u/3143322?v=4?s=100"" width=""100px;"" alt=""OskyEdz""/><br /><sub><b>OskyEdz</b></sub></a><br /><a href=""#design-OskyEdz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=OskyEdz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/raavigupta""><img src=""https://avatars.githubusercontent.com/u/12634108?v=4?s=100"" width=""100px;"" alt=""Ravi Gupta""/><br /><sub><b>Ravi Gupta</b></sub></a><br /><a href=""#design-raavigupta"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=raavigupta"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/rafael-raizer/""><img src=""https://avatars.githubusercontent.com/u/87991807?v=4?s=100"" width=""100px;"" alt=""Rafa Raizer""/><br /><sub><b>Rafa Raizer</b></sub></a><br /><a href=""#design-RAFARZ76"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RAFARZ76"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/aamuzakii""><img src=""https://avatars.githubusercontent.com/u/69757282?v=4?s=100"" width=""100px;"" alt=""Abdullah Al Muzaki""/><br /><sub><b>Abdullah Al Muzaki</b></sub></a><br /><a href=""#design-aamuzakii"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=aamuzakii"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rahulfaujdar""><img src=""https://avatars.githubusercontent.com/u/83919231?v=4?s=100"" width=""100px;"" alt=""Rahul Faujdar""/><br /><sub><b>Rahul Faujdar</b></sub></a><br /><a href=""#design-rahulfaujdar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rahulfaujdar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Akv2021""><img src=""https://avatars.githubusercontent.com/u/20198980?v=4?s=100"" width=""100px;"" alt=""Abhishek Verma""/><br /><sub><b>Abhishek Verma</b></sub></a><br /><a href=""#design-Akv2021"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Akv2021"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/CelestialLemon""><img src=""https://avatars.githubusercontent.com/u/63461785?v=4?s=100"" width=""100px;"" alt=""Ashutosh Shinde""/><br /><sub><b>Ashutosh Shinde</b></sub></a><br /><a href=""#design-CelestialLemon"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=CelestialLemon"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gaxrai""><img src=""https://avatars.githubusercontent.com/u/72004365?v=4?s=100"" width=""100px;"" alt=""Ganesh Rai""/><br /><sub><b>Ganesh Rai</b></sub></a><br /><a href=""#design-gaxrai"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gaxrai"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/StefanTrpkovic""><img src=""https://avatars.githubusercontent.com/u/22581088?v=4?s=100"" width=""100px;"" alt=""StefanTrpkovic""/><br /><sub><b>StefanTrpkovic</b></sub></a><br /><a href=""#design-StefanTrpkovic"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=StefanTrpkovic"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/erikbg7""><img src=""https://avatars.githubusercontent.com/u/37018474?v=4?s=100"" width=""100px;"" alt=""Erik Blanca""/><br /><sub><b>Erik Blanca</b></sub></a><br /><a href=""#design-erikbg7"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=erikbg7"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://vedantmadane.github.io""><img src=""https://avatars.githubusercontent.com/u/6527493?v=4?s=100"" width=""100px;"" alt=""Vedant Madane""/><br /><sub><b>Vedant Madane</b></sub></a><br /><a href=""#design-VedantMadane"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VedantMadane"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://antra0497.github.io/""><img src=""https://avatars.githubusercontent.com/u/25953832?v=4?s=100"" width=""100px;"" alt=""Antra Tripathi""/><br /><sub><b>Antra Tripathi</b></sub></a><br /><a href=""#design-antra0497"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=antra0497"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ethanknights""><img src=""https://avatars.githubusercontent.com/u/34215814?v=4?s=100"" width=""100px;"" alt=""Ethan Knights""/><br /><sub><b>Ethan Knights</b></sub></a><br /><a href=""#design-ethanknights"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ethanknights"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://alexboncut.medium.com""><img src=""https://avatars.githubusercontent.com/u/60633447?v=4?s=100"" width=""100px;"" alt=""Alexandru Boncut""/><br /><sub><b>Alexandru Boncut</b></sub></a><br /><a href=""#design-Alex3921"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Alex3921"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://weightxreps.net/""><img src=""https://avatars.githubusercontent.com/u/71508858?v=4?s=100"" width=""100px;"" alt=""Pablo Bandinopla""/><br /><sub><b>Pablo Bandinopla</b></sub></a><br /><a href=""#design-bandinopla"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bandinopla"" title=""Code"">💻</a> <a href=""#maintenance-bandinopla"" title=""Maintenance"">🚧</a> <a href=""#content-bandinopla"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Robz-99""><img src=""https://avatars.githubusercontent.com/u/80069786?v=4?s=100"" width=""100px;"" alt=""Robz-99""/><br /><sub><b>Robz-99</b></sub></a><br /><a href=""#design-Robz-99"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Robz-99"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://iwebcoders.com""><img src=""https://avatars.githubusercontent.com/u/16591475?v=4?s=100"" width=""100px;"" alt=""Harpal Singh""/><br /><sub><b>Harpal Singh</b></sub></a><br /><a href=""#design-hp-techbucket"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hp-techbucket"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/paulboundy99""><img src=""https://avatars.githubusercontent.com/u/97002965?v=4?s=100"" width=""100px;"" alt=""paulboundy99""/><br /><sub><b>paulboundy99</b></sub></a><br /><a href=""#design-paulboundy99"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=paulboundy99"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MubashirMalik""><img src=""https://avatars.githubusercontent.com/u/50724133?v=4?s=100"" width=""100px;"" alt=""Mubashir Ahmed""/><br /><sub><b>Mubashir Ahmed</b></sub></a><br /><a href=""#design-MubashirMalik"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MubashirMalik"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rohan-hari""><img src=""https://avatars.githubusercontent.com/u/74403439?v=4?s=100"" width=""100px;"" alt=""Rohan Hari""/><br /><sub><b>Rohan Hari</b></sub></a><br /><a href=""#design-rohan-hari"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rohan-hari"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.notalhub.com""><img src=""https://avatars.githubusercontent.com/u/15911873?v=4?s=100"" width=""100px;"" alt=""Erik Henrique ""/><br /><sub><b>Erik Henrique </b></sub></a><br /><a href=""#design-ErikHPO"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ErikHPO"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Leohige""><img src=""https://avatars.githubusercontent.com/u/7697524?v=4?s=100"" width=""100px;"" alt=""Leandro Matheus""/><br /><sub><b>Leandro Matheus</b></sub></a><br /><a href=""#design-Leohige"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Leohige"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://gitsdeepak.github.io""><img src=""https://avatars.githubusercontent.com/u/55078370?v=4?s=100"" width=""100px;"" alt=""Deepak""/><br /><sub><b>Deepak</b></sub></a><br /><a href=""#design-gitsdeepak"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gitsdeepak"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AlishaSingh16""><img src=""https://avatars.githubusercontent.com/u/111339102?v=4?s=100"" width=""100px;"" alt=""AlishaSingh""/><br /><sub><b>AlishaSingh</b></sub></a><br /><a href=""#design-AlishaSingh16"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AlishaSingh16"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/LynnLattYati""><img src=""https://avatars.githubusercontent.com/u/108814689?v=4?s=100"" width=""100px;"" alt=""Lynn Latt Yati""/><br /><sub><b>Lynn Latt Yati</b></sub></a><br /><a href=""#design-LynnLattYati"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LynnLattYati"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.myitshwewah.com/""><img src=""https://avatars.githubusercontent.com/u/65032357?v=4?s=100"" width=""100px;"" alt=""San Shwe""/><br /><sub><b>San Shwe</b></sub></a><br /><a href=""#design-San-Shwe"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=San-Shwe"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ErShakirAnsari""><img src=""https://avatars.githubusercontent.com/u/7697097?v=4?s=100"" width=""100px;"" alt=""SKR""/><br /><sub><b>SKR</b></sub></a><br /><a href=""#design-ErShakirAnsari"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ErShakirAnsari"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/msbunnyjaguar""><img src=""https://avatars.githubusercontent.com/u/111710133?v=4?s=100"" width=""100px;"" alt=""msbunnyjaguar""/><br /><sub><b>msbunnyjaguar</b></sub></a><br /><a href=""#design-msbunnyjaguar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=msbunnyjaguar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/zabiullak""><img src=""https://avatars.githubusercontent.com/u/62701473?v=4?s=100"" width=""100px;"" alt=""Mohamad Zabiulla""/><br /><sub><b>Mohamad Zabiulla</b></sub></a><br /><a href=""#design-zabiullak"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=zabiullak"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://HatimZahid""><img src=""https://avatars.githubusercontent.com/u/63000127?v=4?s=100"" width=""100px;"" alt=""Hatim Zahid""/><br /><sub><b>Hatim Zahid</b></sub></a><br /><a href=""#design-HatimZ"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HatimZ"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://rauzansumara.github.io/""><img src=""https://avatars.githubusercontent.com/u/38342494?v=4?s=100"" width=""100px;"" alt=""Rauzan Sumara""/><br /><sub><b>Rauzan Sumara</b></sub></a><br /><a href=""#design-rauzansumara"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rauzansumara"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Hosein1358""><img src=""https://avatars.githubusercontent.com/u/106476372?v=4?s=100"" width=""100px;"" alt=""Hosein1358""/><br /><sub><b>Hosein1358</b></sub></a><br /><a href=""#design-Hosein1358"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Hosein1358"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://mohit-portifolio.netlify.app""><img src=""https://avatars.githubusercontent.com/u/95187592?v=4?s=100"" width=""100px;"" alt=""Mohit""/><br /><sub><b>Mohit</b></sub></a><br /><a href=""#design-goswamimohit"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=goswamimohit"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/spaleet""><img src=""https://avatars.githubusercontent.com/u/76903214?v=4?s=100"" width=""100px;"" alt=""Ali""/><br /><sub><b>Ali</b></sub></a><br /><a href=""#design-spaleet"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=spaleet"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Avinash1765""><img src=""https://avatars.githubusercontent.com/u/33092303?v=4?s=100"" width=""100px;"" alt=""Avinash1765""/><br /><sub><b>Avinash1765</b></sub></a><br /><a href=""#design-Avinash1765"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Avinash1765"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/saiteja-madha""><img src=""https://avatars.githubusercontent.com/u/42540377?v=4?s=100"" width=""100px;"" alt=""Sai Teja Madha""/><br /><sub><b>Sai Teja Madha</b></sub></a><br /><a href=""#design-saiteja-madha"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=saiteja-madha"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://monsur22.github.io""><img src=""https://avatars.githubusercontent.com/u/27688730?v=4?s=100"" width=""100px;"" alt=""Monsur Ahmed Shafiq""/><br /><sub><b>Monsur Ahmed Shafiq</b></sub></a><br /><a href=""#design-monsur22"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=monsur22"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/xuxianjin-dev""><img src=""https://avatars.githubusercontent.com/u/109820230?v=4?s=100"" width=""100px;"" alt=""xuxianjin-dev""/><br /><sub><b>xuxianjin-dev</b></sub></a><br /><a href=""#design-xuxianjin-dev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xuxianjin-dev"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chetnashah""><img src=""https://avatars.githubusercontent.com/u/22337772?v=4?s=100"" width=""100px;"" alt=""chetna""/><br /><sub><b>chetna</b></sub></a><br /><a href=""#design-chetnashah"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chetnashah"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/imgul""><img src=""https://avatars.githubusercontent.com/u/92777653?v=4?s=100"" width=""100px;"" alt=""Gul Zaib""/><br /><sub><b>Gul Zaib</b></sub></a><br /><a href=""#design-imgul"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=imgul"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nat-k-dev""><img src=""https://avatars.githubusercontent.com/u/8708553?v=4?s=100"" width=""100px;"" alt=""Natalia""/><br /><sub><b>Natalia</b></sub></a><br /><a href=""#design-nat-k-dev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nat-k-dev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://johnbraga45.github.io/its_me/""><img src=""https://avatars.githubusercontent.com/u/70374414?v=4?s=100"" width=""100px;"" alt=""Dionísio Braga""/><br /><sub><b>Dionísio Braga</b></sub></a><br /><a href=""#design-JohnBraga45"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JohnBraga45"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/crashcoder/""><img src=""https://avatars.githubusercontent.com/u/91045061?v=4?s=100"" width=""100px;"" alt=""Pritish Rajpurohit""/><br /><sub><b>Pritish Rajpurohit</b></sub></a><br /><a href=""#design-smashcoder"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=smashcoder"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/incanlove""><img src=""https://avatars.githubusercontent.com/u/64623766?v=4?s=100"" width=""100px;"" alt=""incanlove""/><br /><sub><b>incanlove</b></sub></a><br /><a href=""#design-incanlove"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=incanlove"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/InnocentAnyaele""><img src=""https://avatars.githubusercontent.com/u/55434969?v=4?s=100"" width=""100px;"" alt=""Innocent""/><br /><sub><b>Innocent</b></sub></a><br /><a href=""#design-InnocentAnyaele"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=InnocentAnyaele"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/DevKWA""><img src=""https://avatars.githubusercontent.com/u/74159713?v=4?s=100"" width=""100px;"" alt=""Devin Almonor""/><br /><sub><b>Devin Almonor</b></sub></a><br /><a href=""#design-DevKWA"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DevKWA"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/antonyveyre""><img src=""https://avatars.githubusercontent.com/u/15210581?v=4?s=100"" width=""100px;"" alt=""antonyveyre""/><br /><sub><b>antonyveyre</b></sub></a><br /><a href=""#design-antonyveyre"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=antonyveyre"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/beltz18""><img src=""https://avatars.githubusercontent.com/u/65316821?v=4?s=100"" width=""100px;"" alt=""Beltz Anhxton""/><br /><sub><b>Beltz Anhxton</b></sub></a><br /><a href=""#design-beltz18"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=beltz18"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mEhDiIsMaIl""><img src=""https://avatars.githubusercontent.com/u/1983061?v=4?s=100"" width=""100px;"" alt=""Mehdi""/><br /><sub><b>Mehdi</b></sub></a><br /><a href=""#design-mEhDiIsMaIl"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mEhDiIsMaIl"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/muhammad-usman-a14882bb/""><img src=""https://avatars.githubusercontent.com/u/34769369?v=4?s=100"" width=""100px;"" alt=""Muhammad Usman""/><br /><sub><b>Muhammad Usman</b></sub></a><br /><a href=""#design-muhammad-usman-108"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=muhammad-usman-108"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/patrick-dantas/""><img src=""https://avatars.githubusercontent.com/u/12243536?v=4?s=100"" width=""100px;"" alt=""Patrick Dantas""/><br /><sub><b>Patrick Dantas</b></sub></a><br /><a href=""#design-pa-tiq"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pa-tiq"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vannakne""><img src=""https://avatars.githubusercontent.com/u/59875610?v=4?s=100"" width=""100px;"" alt=""Tak Vannak""/><br /><sub><b>Tak Vannak</b></sub></a><br /><a href=""#design-vannakne"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vannakne"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rram12""><img src=""https://avatars.githubusercontent.com/u/49193983?v=4?s=100"" width=""100px;"" alt=""Ramzi RADDAOUI""/><br /><sub><b>Ramzi RADDAOUI</b></sub></a><br /><a href=""#design-rram12"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rram12"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Konstantin-Glukhov""><img src=""https://avatars.githubusercontent.com/u/24302271?v=4?s=100"" width=""100px;"" alt=""Konstantin-Glukhov""/><br /><sub><b>Konstantin-Glukhov</b></sub></a><br /><a href=""#design-Konstantin-Glukhov"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Konstantin-Glukhov"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/uguroban""><img src=""https://avatars.githubusercontent.com/u/36131157?v=4?s=100"" width=""100px;"" alt=""uguroban""/><br /><sub><b>uguroban</b></sub></a><br /><a href=""#design-uguroban"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=uguroban"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/HumbertoDiego""><img src=""https://avatars.githubusercontent.com/u/26072136?v=4?s=100"" width=""100px;"" alt=""Humberto Alves""/><br /><sub><b>Humberto Alves</b></sub></a><br /><a href=""#design-HumbertoDiego"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HumbertoDiego"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JuangZendrato""><img src=""https://avatars.githubusercontent.com/u/111667462?v=4?s=100"" width=""100px;"" alt=""JuangZendrato""/><br /><sub><b>JuangZendrato</b></sub></a><br /><a href=""#design-JuangZendrato"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JuangZendrato"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""Jamicreation.netlify.app""><img src=""https://avatars.githubusercontent.com/u/100203073?v=4?s=100"" width=""100px;"" alt=""James Oluwaleye""/><br /><sub><b>James Oluwaleye</b></sub></a><br /><a href=""#design-Ja10th"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ja10th"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/guitorioadar""><img src=""https://avatars.githubusercontent.com/u/13439371?v=4?s=100"" width=""100px;"" alt=""Wasi Sadman""/><br /><sub><b>Wasi Sadman</b></sub></a><br /><a href=""#design-guitorioadar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=guitorioadar"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pavlem""><img src=""https://avatars.githubusercontent.com/u/14887690?v=4?s=100"" width=""100px;"" alt=""Pavle Mijatovic""/><br /><sub><b>Pavle Mijatovic</b></sub></a><br /><a href=""#design-pavlem"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pavlem"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://br.linkedin.com/in/luizhdsbispo""><img src=""https://avatars.githubusercontent.com/u/16889412?v=4?s=100"" width=""100px;"" alt=""Luiz H. S. Bispo""/><br /><sub><b>Luiz H. S. Bispo</b></sub></a><br /><a href=""#design-LuizHB"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=LuizHB"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://gteksd.wixsite.com/noob""><img src=""https://avatars.githubusercontent.com/u/55411358?v=4?s=100"" width=""100px;"" alt=""Сухас Дхолз""/><br /><sub><b>Сухас Дхолз</b></sub></a><br /><a href=""#design-GTekSD"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GTekSD"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""atrujillo.dev""><img src=""https://avatars.githubusercontent.com/u/103326869?v=4?s=100"" width=""100px;"" alt=""Alvaro Trujillo""/><br /><sub><b>Alvaro Trujillo</b></sub></a><br /><a href=""#design-alvarotrujillo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alvarotrujillo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ever-ton""><img src=""https://avatars.githubusercontent.com/u/19916017?v=4?s=100"" width=""100px;"" alt=""Everton ""/><br /><sub><b>Everton </b></sub></a><br /><a href=""#design-ever-ton"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ever-ton"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jfrozas""><img src=""https://avatars.githubusercontent.com/u/91458621?v=4?s=100"" width=""100px;"" alt=""jfrozas""/><br /><sub><b>jfrozas</b></sub></a><br /><a href=""#design-jfrozas"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jfrozas"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shuaaibbadran""><img src=""https://avatars.githubusercontent.com/u/22274689?v=4?s=100"" width=""100px;"" alt=""Shuaaib Badran""/><br /><sub><b>Shuaaib Badran</b></sub></a><br /><a href=""#design-shuaaibbadran"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shuaaibbadran"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://shivam-2712.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/71783722?v=4?s=100"" width=""100px;"" alt=""Shivam Jha""/><br /><sub><b>Shivam Jha</b></sub></a><br /><a href=""#design-shivam-jha2712"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shivam-jha2712"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mohamed-tayeh""><img src=""https://avatars.githubusercontent.com/u/35163331?v=4?s=100"" width=""100px;"" alt=""Mohamed Tayeh""/><br /><sub><b>Mohamed Tayeh</b></sub></a><br /><a href=""#design-mohamed-tayeh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mohamed-tayeh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://bio.link/makendran""><img src=""https://avatars.githubusercontent.com/u/74320000?v=4?s=100"" width=""100px;"" alt=""Makendran G""/><br /><sub><b>Makendran G</b></sub></a><br /><a href=""#design-MakendranG"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MakendranG"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mstomar.me""><img src=""https://avatars.githubusercontent.com/u/89572392?v=4?s=100"" width=""100px;"" alt=""mayank singh tomar""/><br /><sub><b>mayank singh tomar</b></sub></a><br /><a href=""#design-201B153"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=201B153"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hossamsadany""><img src=""https://avatars.githubusercontent.com/u/97473553?v=4?s=100"" width=""100px;"" alt=""hossam sadany""/><br /><sub><b>hossam sadany</b></sub></a><br /><a href=""#design-hossamsadany"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hossamsadany"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://bio.link/harsh1x4""><img src=""https://avatars.githubusercontent.com/u/93096721?v=4?s=100"" width=""100px;"" alt=""Harshbardhan Singh""/><br /><sub><b>Harshbardhan Singh</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=harsh1x4"" title=""Code"">💻</a> <a href=""#design-harsh1x4"" title=""Design"">🎨</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/fawad-jawaid-malik-04b59895""><img src=""https://avatars.githubusercontent.com/u/9715067?v=4?s=100"" width=""100px;"" alt=""Fawad Jawaid Malik""/><br /><sub><b>Fawad Jawaid Malik</b></sub></a><br /><a href=""#design-FawadJawaid"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=FawadJawaid"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/TinaLacatis""><img src=""https://avatars.githubusercontent.com/u/54575096?v=4?s=100"" width=""100px;"" alt=""Tina Lacatis""/><br /><sub><b>Tina Lacatis</b></sub></a><br /><a href=""#design-TinaLacatis"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TinaLacatis"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/TeddyCuoreDolce""><img src=""https://avatars.githubusercontent.com/u/838417?v=4?s=100"" width=""100px;"" alt=""TeddyCuoreDolce""/><br /><sub><b>TeddyCuoreDolce</b></sub></a><br /><a href=""#design-TeddyCuoreDolce"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TeddyCuoreDolce"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://bryan-choo.com""><img src=""https://avatars.githubusercontent.com/u/56596358?v=4?s=100"" width=""100px;"" alt=""bchooxg""/><br /><sub><b>bchooxg</b></sub></a><br /><a href=""#design-bchooxg"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bchooxg"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alisha-takkar""><img src=""https://avatars.githubusercontent.com/u/109353085?v=4?s=100"" width=""100px;"" alt=""Alisha Takkar""/><br /><sub><b>Alisha Takkar</b></sub></a><br /><a href=""#design-alisha-takkar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alisha-takkar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://capozzoli.me""><img src=""https://avatars.githubusercontent.com/u/50233545?v=4?s=100"" width=""100px;"" alt=""Gianluigi""/><br /><sub><b>Gianluigi</b></sub></a><br /><a href=""#design-RallyTuning"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RallyTuning"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mehhran""><img src=""https://avatars.githubusercontent.com/u/9961577?v=4?s=100"" width=""100px;"" alt=""Mehran Javaherian""/><br /><sub><b>Mehran Javaherian</b></sub></a><br /><a href=""#design-mehhran"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mehhran"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chemben17""><img src=""https://avatars.githubusercontent.com/u/105835536?v=4?s=100"" width=""100px;"" alt=""Benjamin Ololade Adedokun""/><br /><sub><b>Benjamin Ololade Adedokun</b></sub></a><br /><a href=""#design-chemben17"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chemben17"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mamutalib.github.io""><img src=""https://avatars.githubusercontent.com/u/61675569?v=4?s=100"" width=""100px;"" alt=""Md. Abdul Mutalib""/><br /><sub><b>Md. Abdul Mutalib</b></sub></a><br /><a href=""#design-mamutalib"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mamutalib"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AADILcrackstheweb""><img src=""https://avatars.githubusercontent.com/u/96214556?v=4?s=100"" width=""100px;"" alt=""Aadil Arsh.S.R""/><br /><sub><b>Aadil Arsh.S.R</b></sub></a><br /><a href=""#design-AADILcrackstheweb"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AADILcrackstheweb"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://nateonmission.github.io""><img src=""https://avatars.githubusercontent.com/u/37854313?v=4?s=100"" width=""100px;"" alt=""J. Nathan Allen""/><br /><sub><b>J. Nathan Allen</b></sub></a><br /><a href=""#design-nateonmission"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nateonmission"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lost-in-cyberspace""><img src=""https://avatars.githubusercontent.com/u/32429264?v=4?s=100"" width=""100px;"" alt=""Kieran Krug""/><br /><sub><b>Kieran Krug</b></sub></a><br /><a href=""#design-lost-in-cyberspace"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lost-in-cyberspace"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://seths10.github.io/main-portfolio/""><img src=""https://avatars.githubusercontent.com/u/59029978?v=4?s=100"" width=""100px;"" alt=""Seth Addo""/><br /><sub><b>Seth Addo</b></sub></a><br /><a href=""#design-seths10"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=seths10"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Satviik""><img src=""https://avatars.githubusercontent.com/u/80253346?v=4?s=100"" width=""100px;"" alt=""Satvik Singh Rathore""/><br /><sub><b>Satvik Singh Rathore</b></sub></a><br /><a href=""#design-Satviik"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Satviik"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dangoth""><img src=""https://avatars.githubusercontent.com/u/38084164?v=4?s=100"" width=""100px;"" alt=""dangoth""/><br /><sub><b>dangoth</b></sub></a><br /><a href=""#design-dangoth"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dangoth"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/maximmd""><img src=""https://avatars.githubusercontent.com/u/27330256?v=4?s=100"" width=""100px;"" alt=""Maxim""/><br /><sub><b>Maxim</b></sub></a><br /><a href=""#design-maximmd"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=maximmd"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/catn/""><img src=""https://avatars.githubusercontent.com/u/44314126?v=4?s=100"" width=""100px;"" alt=""Phuong-Cat Ngo""/><br /><sub><b>Phuong-Cat Ngo</b></sub></a><br /><a href=""#design-catcecilia"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=catcecilia"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Frenchtoast0""><img src=""https://avatars.githubusercontent.com/u/38544250?v=4?s=100"" width=""100px;"" alt=""Frenchtoast0""/><br /><sub><b>Frenchtoast0</b></sub></a><br /><a href=""#design-Frenchtoast0"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Frenchtoast0"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rakshith6404""><img src=""https://avatars.githubusercontent.com/u/92712034?v=4?s=100"" width=""100px;"" alt=""Rakshith""/><br /><sub><b>Rakshith</b></sub></a><br /><a href=""#design-rakshith6404"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rakshith6404"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://vaibhavcodes.me""><img src=""https://avatars.githubusercontent.com/u/82141868?v=4?s=100"" width=""100px;"" alt=""Vaibhav Arora""/><br /><sub><b>Vaibhav Arora</b></sub></a><br /><a href=""#design-VaibhavArora19"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VaibhavArora19"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/zghp""><img src=""https://avatars.githubusercontent.com/u/33546213?v=4?s=100"" width=""100px;"" alt=""zghp""/><br /><sub><b>zghp</b></sub></a><br /><a href=""#design-zghp"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=zghp"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Bedovan""><img src=""https://avatars.githubusercontent.com/u/60407088?v=4?s=100"" width=""100px;"" alt=""Bedovan""/><br /><sub><b>Bedovan</b></sub></a><br /><a href=""#design-Bedovan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Bedovan"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chiaramistro""><img src=""https://avatars.githubusercontent.com/u/41189322?v=4?s=100"" width=""100px;"" alt=""chiaramistro""/><br /><sub><b>chiaramistro</b></sub></a><br /><a href=""#design-chiaramistro"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chiaramistro"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/him2016""><img src=""https://avatars.githubusercontent.com/u/39089904?v=4?s=100"" width=""100px;"" alt=""him2016""/><br /><sub><b>him2016</b></sub></a><br /><a href=""#design-him2016"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=him2016"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/HarshitSachdeva""><img src=""https://avatars.githubusercontent.com/u/30202783?v=4?s=100"" width=""100px;"" alt=""HarshitSachdeva""/><br /><sub><b>HarshitSachdeva</b></sub></a><br /><a href=""#design-HarshitSachdeva"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HarshitSachdeva"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://sadafsaleem.mystrikingly.com/""><img src=""https://avatars.githubusercontent.com/u/61821924?v=4?s=100"" width=""100px;"" alt=""Sadaf Saleem""/><br /><sub><b>Sadaf Saleem</b></sub></a><br /><a href=""#design-sadafsaleem123"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sadafsaleem123"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Aaroh1""><img src=""https://avatars.githubusercontent.com/u/96298187?v=4?s=100"" width=""100px;"" alt=""Aaroh Srivastava""/><br /><sub><b>Aaroh Srivastava</b></sub></a><br /><a href=""#design-Aaroh1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Aaroh1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://eloygplaza.github.io/""><img src=""https://avatars.githubusercontent.com/u/10582213?v=4?s=100"" width=""100px;"" alt=""eloygplaza""/><br /><sub><b>eloygplaza</b></sub></a><br /><a href=""#design-eloygplaza"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=eloygplaza"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vgauravkumar""><img src=""https://avatars.githubusercontent.com/u/63816299?v=4?s=100"" width=""100px;"" alt=""Gaurav Kumar Verma""/><br /><sub><b>Gaurav Kumar Verma</b></sub></a><br /><a href=""#design-vgauravkumar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vgauravkumar"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AndreaCUS""><img src=""https://avatars.githubusercontent.com/u/44421522?v=4?s=100"" width=""100px;"" alt=""AndreaCUS""/><br /><sub><b>AndreaCUS</b></sub></a><br /><a href=""#design-AndreaCUS"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AndreaCUS"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/simran-chaurasia-003""><img src=""https://avatars.githubusercontent.com/u/88017902?v=4?s=100"" width=""100px;"" alt=""Simran""/><br /><sub><b>Simran</b></sub></a><br /><a href=""#design-simransia"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=simransia"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/prashant-bhapkar-064a78145/""><img src=""https://avatars.githubusercontent.com/u/60314439?v=4?s=100"" width=""100px;"" alt=""Prashant Bhapkar""/><br /><sub><b>Prashant Bhapkar</b></sub></a><br /><a href=""#design-Prashant-Bhapkar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Prashant-Bhapkar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mhaendler.me""><img src=""https://avatars.githubusercontent.com/u/8059717?v=4?s=100"" width=""100px;"" alt=""mhaendler""/><br /><sub><b>mhaendler</b></sub></a><br /><a href=""#design-mhaendler"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mhaendler"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gauriimaheshwarii""><img src=""https://avatars.githubusercontent.com/u/100439627?v=4?s=100"" width=""100px;"" alt=""Gauri Maheshwari""/><br /><sub><b>Gauri Maheshwari</b></sub></a><br /><a href=""#design-gauriimaheshwarii"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gauriimaheshwarii"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://4lajf.com""><img src=""https://avatars.githubusercontent.com/u/42503855?v=4?s=100"" width=""100px;"" alt=""4Lajf""/><br /><sub><b>4Lajf</b></sub></a><br /><a href=""#design-4Lajf"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=4Lajf"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://tanmoy-sengupta.ueniweb.com/""><img src=""https://avatars.githubusercontent.com/u/65300045?v=4?s=100"" width=""100px;"" alt=""Tanmoy Sengupta""/><br /><sub><b>Tanmoy Sengupta</b></sub></a><br /><a href=""#design-TSG405"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TSG405"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tripathisharad""><img src=""https://avatars.githubusercontent.com/u/72781325?v=4?s=100"" width=""100px;"" alt=""Sharad Tripathi""/><br /><sub><b>Sharad Tripathi</b></sub></a><br /><a href=""#design-tripathisharad"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tripathisharad"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/NemoNiraj""><img src=""https://avatars.githubusercontent.com/u/88889386?v=4?s=100"" width=""100px;"" alt=""Niraj Chavan""/><br /><sub><b>Niraj Chavan</b></sub></a><br /><a href=""#design-NemoNiraj"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NemoNiraj"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/luisagualda""><img src=""https://avatars.githubusercontent.com/u/35310567?v=4?s=100"" width=""100px;"" alt=""Luisa Gualda""/><br /><sub><b>Luisa Gualda</b></sub></a><br /><a href=""#design-luisagualda"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=luisagualda"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Monika-Sivakumar-3""><img src=""https://avatars.githubusercontent.com/u/111675738?v=4?s=100"" width=""100px;"" alt=""Monika-Sivakumar-3""/><br /><sub><b>Monika-Sivakumar-3</b></sub></a><br /><a href=""#design-Monika-Sivakumar-3"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Monika-Sivakumar-3"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/harryfensome""><img src=""https://avatars.githubusercontent.com/u/47598993?v=4?s=100"" width=""100px;"" alt=""harryfensome""/><br /><sub><b>harryfensome</b></sub></a><br /><a href=""#design-harryfensome"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=harryfensome"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://ishubham010.github.io""><img src=""https://avatars.githubusercontent.com/u/71643172?v=4?s=100"" width=""100px;"" alt=""Shubham Choubey""/><br /><sub><b>Shubham Choubey</b></sub></a><br /><a href=""#design-ishubham010"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ishubham010"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Ashwinip343""><img src=""https://avatars.githubusercontent.com/u/91271985?v=4?s=100"" width=""100px;"" alt=""Ashwini Patil""/><br /><sub><b>Ashwini Patil</b></sub></a><br /><a href=""#design-Ashwinip343"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Ashwinip343"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://cleversonlira.github.io/personal-page/""><img src=""https://avatars.githubusercontent.com/u/19823964?v=4?s=100"" width=""100px;"" alt=""cleversonlira""/><br /><sub><b>cleversonlira</b></sub></a><br /><a href=""#design-cleversonlira"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cleversonlira"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nuromirzak""><img src=""https://avatars.githubusercontent.com/u/76807326?v=4?s=100"" width=""100px;"" alt=""Nurmukhammed""/><br /><sub><b>Nurmukhammed</b></sub></a><br /><a href=""#design-nuromirzak"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nuromirzak"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/workspace-utkarsh""><img src=""https://avatars.githubusercontent.com/u/115065256?v=4?s=100"" width=""100px;"" alt=""workspace-utkarsh""/><br /><sub><b>workspace-utkarsh</b></sub></a><br /><a href=""#design-workspace-utkarsh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=workspace-utkarsh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://santosh-phadtare.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/99491679?v=4?s=100"" width=""100px;"" alt=""Santosh Phadtare""/><br /><sub><b>Santosh Phadtare</b></sub></a><br /><a href=""#design-psantosh16"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=psantosh16"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/PrashantKvian""><img src=""https://avatars.githubusercontent.com/u/115395187?v=4?s=100"" width=""100px;"" alt=""Prashant Warghude""/><br /><sub><b>Prashant Warghude</b></sub></a><br /><a href=""#design-PrashantKvian"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PrashantKvian"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Denny-UD""><img src=""https://avatars.githubusercontent.com/u/77261658?v=4?s=100"" width=""100px;"" alt=""Umang Dakh""/><br /><sub><b>Umang Dakh</b></sub></a><br /><a href=""#design-Denny-UD"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Denny-UD"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ShaliniChavan""><img src=""https://avatars.githubusercontent.com/u/15189398?v=4?s=100"" width=""100px;"" alt=""Shalini Chavan""/><br /><sub><b>Shalini Chavan</b></sub></a><br /><a href=""#design-ShaliniChavan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ShaliniChavan"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/adhiramaa""><img src=""https://avatars.githubusercontent.com/u/97173586?v=4?s=100"" width=""100px;"" alt=""vinit gurjar""/><br /><sub><b>vinit gurjar</b></sub></a><br /><a href=""#design-adhiramaa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adhiramaa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Vish1161""><img src=""https://avatars.githubusercontent.com/u/112061222?v=4?s=100"" width=""100px;"" alt=""Vishal Kumar""/><br /><sub><b>Vishal Kumar</b></sub></a><br /><a href=""#design-Vish1161"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Vish1161"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/wonhyeongseo""><img src=""https://avatars.githubusercontent.com/u/29195190?v=4?s=100"" width=""100px;"" alt=""Wonhyeong Seo""/><br /><sub><b>Wonhyeong Seo</b></sub></a><br /><a href=""#design-wonhyeongseo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wonhyeongseo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/prajwalprogrammer""><img src=""https://avatars.githubusercontent.com/u/63206330?v=4?s=100"" width=""100px;"" alt=""Achwale Prajwal Namdevrao""/><br /><sub><b>Achwale Prajwal Namdevrao</b></sub></a><br /><a href=""#design-prajwalprogrammer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=prajwalprogrammer"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ankan792""><img src=""https://avatars.githubusercontent.com/u/34034274?v=4?s=100"" width=""100px;"" alt=""Ankan Banerjee""/><br /><sub><b>Ankan Banerjee</b></sub></a><br /><a href=""#design-ankan792"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ankan792"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bhaumikankan""><img src=""https://avatars.githubusercontent.com/u/70452964?v=4?s=100"" width=""100px;"" alt=""bhaumikankan""/><br /><sub><b>bhaumikankan</b></sub></a><br /><a href=""#design-bhaumikankan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bhaumikankan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://4f84b2.xyz/about""><img src=""https://avatars.githubusercontent.com/u/33259827?v=4?s=100"" width=""100px;"" alt=""JamesMacroZhang""/><br /><sub><b>JamesMacroZhang</b></sub></a><br /><a href=""#design-macrozhang"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=macrozhang"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pedrolopes101""><img src=""https://avatars.githubusercontent.com/u/45852886?v=4?s=100"" width=""100px;"" alt=""Pedro Lopes""/><br /><sub><b>Pedro Lopes</b></sub></a><br /><a href=""#design-pedrolopes101"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pedrolopes101"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dianosaur12""><img src=""https://avatars.githubusercontent.com/u/54020066?v=4?s=100"" width=""100px;"" alt=""dia""/><br /><sub><b>dia</b></sub></a><br /><a href=""#design-dianosaur12"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dianosaur12"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.facebook.com/profile.php?id=100041711958208""><img src=""https://avatars.githubusercontent.com/u/50795716?v=4?s=100"" width=""100px;"" alt=""tayyabhussain2910""/><br /><sub><b>tayyabhussain2910</b></sub></a><br /><a href=""#design-TayyabHussain03"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TayyabHussain03"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rajdeepsri""><img src=""https://avatars.githubusercontent.com/u/67205583?v=4?s=100"" width=""100px;"" alt=""Rajdeep Shrivastava ""/><br /><sub><b>Rajdeep Shrivastava </b></sub></a><br /><a href=""#design-rajdeepsri"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rajdeepsri"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mukul-kr""><img src=""https://avatars.githubusercontent.com/u/74813712?v=4?s=100"" width=""100px;"" alt=""Mukul Kumar""/><br /><sub><b>Mukul Kumar</b></sub></a><br /><a href=""#design-mukul-kr"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mukul-kr"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/m-a-y-a-n-k""><img src=""https://avatars.githubusercontent.com/u/10991741?v=4?s=100"" width=""100px;"" alt=""Mayank N""/><br /><sub><b>Mayank N</b></sub></a><br /><a href=""#design-m-a-y-a-n-k"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=m-a-y-a-n-k"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jdelucca""><img src=""https://avatars.githubusercontent.com/u/76178990?v=4?s=100"" width=""100px;"" alt=""jdelucca""/><br /><sub><b>jdelucca</b></sub></a><br /><a href=""#design-jdelucca"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jdelucca"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/sneha-mittal-334a6b223/""><img src=""https://avatars.githubusercontent.com/u/96607269?v=4?s=100"" width=""100px;"" alt=""Sneha Mittal""/><br /><sub><b>Sneha Mittal</b></sub></a><br /><a href=""#design-Sneha-Mittal88293"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Sneha-Mittal88293"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/humsarika""><img src=""https://avatars.githubusercontent.com/u/75199589?v=4?s=100"" width=""100px;"" alt=""Sarika Kushwaha""/><br /><sub><b>Sarika Kushwaha</b></sub></a><br /><a href=""#design-humsarika"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=humsarika"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/farzad-khb""><img src=""https://avatars.githubusercontent.com/u/68053779?v=4?s=100"" width=""100px;"" alt=""farzad-khb""/><br /><sub><b>farzad-khb</b></sub></a><br /><a href=""#design-farzad-khb"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=farzad-khb"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://eshack94.com""><img src=""https://avatars.githubusercontent.com/u/33649649?v=4?s=100"" width=""100px;"" alt=""Elijah Shackelford""/><br /><sub><b>Elijah Shackelford</b></sub></a><br /><a href=""#design-eshack94"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=eshack94"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/The-Only-Raminator""><img src=""https://avatars.githubusercontent.com/u/115736227?v=4?s=100"" width=""100px;"" alt=""The-Only-Raminator""/><br /><sub><b>The-Only-Raminator</b></sub></a><br /><a href=""#design-The-Only-Raminator"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=The-Only-Raminator"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/keerthanak-tw""><img src=""https://avatars.githubusercontent.com/u/76804118?v=4?s=100"" width=""100px;"" alt=""Keerthana Kasthuril""/><br /><sub><b>Keerthana Kasthuril</b></sub></a><br /><a href=""#design-keerthanak-tw"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=keerthanak-tw"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/auchynnikau""><img src=""https://avatars.githubusercontent.com/u/33329898?v=4?s=100"" width=""100px;"" alt=""Viachaslau Auchynnikau""/><br /><sub><b>Viachaslau Auchynnikau</b></sub></a><br /><a href=""#design-auchynnikau"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=auchynnikau"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://osman-rasooli.github.io/new_portfolio/""><img src=""https://avatars.githubusercontent.com/u/109551544?v=4?s=100"" width=""100px;"" alt=""Mohammad Osman Rasooli""/><br /><sub><b>Mohammad Osman Rasooli</b></sub></a><br /><a href=""#design-Osman-Rasooli"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Osman-Rasooli"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mvedovato""><img src=""https://avatars.githubusercontent.com/u/31349919?v=4?s=100"" width=""100px;"" alt=""mvedovato""/><br /><sub><b>mvedovato</b></sub></a><br /><a href=""#design-mvedovato"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mvedovato"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://sonalirajput.hashnode.dev/""><img src=""https://avatars.githubusercontent.com/u/71600666?v=4?s=100"" width=""100px;"" alt=""Sonali Rajput""/><br /><sub><b>Sonali Rajput</b></sub></a><br /><a href=""#design-sonali-rajput"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sonali-rajput"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/isha-dhek""><img src=""https://avatars.githubusercontent.com/u/97114683?v=4?s=100"" width=""100px;"" alt=""Isha Dhek""/><br /><sub><b>Isha Dhek</b></sub></a><br /><a href=""#design-isha-dhek"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=isha-dhek"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/cpramshad""><img src=""https://avatars.githubusercontent.com/u/36877435?v=4?s=100"" width=""100px;"" alt=""Ramshad Cheriyeri Peediyakkal""/><br /><sub><b>Ramshad Cheriyeri Peediyakkal</b></sub></a><br /><a href=""#design-cpramshad"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=cpramshad"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mphzz""><img src=""https://avatars.githubusercontent.com/u/109570379?v=4?s=100"" width=""100px;"" alt=""Micah""/><br /><sub><b>Micah</b></sub></a><br /><a href=""#design-mphzz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mphzz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gauravshukla2203""><img src=""https://avatars.githubusercontent.com/u/76643106?v=4?s=100"" width=""100px;"" alt=""gauravshukla2203""/><br /><sub><b>gauravshukla2203</b></sub></a><br /><a href=""#design-gauravshukla2203"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gauravshukla2203"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sndmurthy""><img src=""https://avatars.githubusercontent.com/u/2811193?v=4?s=100"" width=""100px;"" alt=""sndmurthy""/><br /><sub><b>sndmurthy</b></sub></a><br /><a href=""#design-sndmurthy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sndmurthy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.instagram.com/sd_shiivam""><img src=""https://avatars.githubusercontent.com/u/75006771?v=4?s=100"" width=""100px;"" alt=""Shivam-Singh""/><br /><sub><b>Shivam-Singh</b></sub></a><br /><a href=""#design-Sd-Shiivam"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Sd-Shiivam"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MAmmarKhan""><img src=""https://avatars.githubusercontent.com/u/73057016?v=4?s=100"" width=""100px;"" alt=""M. Ammar Khan""/><br /><sub><b>M. Ammar Khan</b></sub></a><br /><a href=""#design-MAmmarKhan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MAmmarKhan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/chandolakul""><img src=""https://avatars.githubusercontent.com/u/70189957?v=4?s=100"" width=""100px;"" alt=""chandolakul""/><br /><sub><b>chandolakul</b></sub></a><br /><a href=""#design-chandolakul"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chandolakul"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bhatnagar221""><img src=""https://avatars.githubusercontent.com/u/112082712?v=4?s=100"" width=""100px;"" alt=""bhatnagar221""/><br /><sub><b>bhatnagar221</b></sub></a><br /><a href=""#design-bhatnagar221"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bhatnagar221"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://adrianfactuall.com/""><img src=""https://avatars.githubusercontent.com/u/63786641?v=4?s=100"" width=""100px;"" alt=""Adrian Nieściur""/><br /><sub><b>Adrian Nieściur</b></sub></a><br /><a href=""#design-factuall"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=factuall"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nezi311""><img src=""https://avatars.githubusercontent.com/u/22798378?v=4?s=100"" width=""100px;"" alt=""nezi311""/><br /><sub><b>nezi311</b></sub></a><br /><a href=""#design-nezi311"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nezi311"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/scottajevans""><img src=""https://avatars.githubusercontent.com/u/39980206?v=4?s=100"" width=""100px;"" alt=""scottajevans""/><br /><sub><b>scottajevans</b></sub></a><br /><a href=""#design-scottajevans"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=scottajevans"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MarkFantini""><img src=""https://avatars.githubusercontent.com/u/88554151?v=4?s=100"" width=""100px;"" alt=""Marcelo Antunes Soares Fantini""/><br /><sub><b>Marcelo Antunes Soares Fantini</b></sub></a><br /><a href=""#design-MarkFantini"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MarkFantini"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://deacetis.cz""><img src=""https://avatars.githubusercontent.com/u/20586054?v=4?s=100"" width=""100px;"" alt=""Axel De Acetis""/><br /><sub><b>Axel De Acetis</b></sub></a><br /><a href=""#design-adeacetis"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=adeacetis"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dazzle-sah""><img src=""https://avatars.githubusercontent.com/u/112880786?v=4?s=100"" width=""100px;"" alt=""Drishti Sah""/><br /><sub><b>Drishti Sah</b></sub></a><br /><a href=""#design-dazzle-sah"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dazzle-sah"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/VipulDhillon""><img src=""https://avatars.githubusercontent.com/u/91725643?v=4?s=100"" width=""100px;"" alt=""VipulDhillon""/><br /><sub><b>VipulDhillon</b></sub></a><br /><a href=""#design-VipulDhillon"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=VipulDhillon"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/urmi-jana-16b44b21b/""><img src=""https://avatars.githubusercontent.com/u/75936174?v=4?s=100"" width=""100px;"" alt=""Urmi Jana""/><br /><sub><b>Urmi Jana</b></sub></a><br /><a href=""#design-Urmi-Jana"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Urmi-Jana"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ayushmokal""><img src=""https://avatars.githubusercontent.com/u/95966154?v=4?s=100"" width=""100px;"" alt=""Ayush Mokal""/><br /><sub><b>Ayush Mokal</b></sub></a><br /><a href=""#design-ayushmokal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ayushmokal"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Damola18""><img src=""https://avatars.githubusercontent.com/u/50779080?v=4?s=100"" width=""100px;"" alt=""Damola Olutoke""/><br /><sub><b>Damola Olutoke</b></sub></a><br /><a href=""#design-Damola18"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Damola18"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nightshadetvn""><img src=""https://avatars.githubusercontent.com/u/46790388?v=4?s=100"" width=""100px;"" alt=""Max""/><br /><sub><b>Max</b></sub></a><br /><a href=""#design-nightshadetvn"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nightshadetvn"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lakshmi930""><img src=""https://avatars.githubusercontent.com/u/79132440?v=4?s=100"" width=""100px;"" alt=""Lakshmi N""/><br /><sub><b>Lakshmi N</b></sub></a><br /><a href=""#design-lakshmi930"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lakshmi930"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/artemu78""><img src=""https://avatars.githubusercontent.com/u/4625608?v=4?s=100"" width=""100px;"" alt=""ArtemReva""/><br /><sub><b>ArtemReva</b></sub></a><br /><a href=""#design-artemu78"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=artemu78"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/UjjwalAggarwal-1""><img src=""https://avatars.githubusercontent.com/u/96613056?v=4?s=100"" width=""100px;"" alt=""Ujjwal Aggarwal""/><br /><sub><b>Ujjwal Aggarwal</b></sub></a><br /><a href=""#design-UjjwalAggarwal-1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=UjjwalAggarwal-1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://gglink.uk""><img src=""https://avatars.githubusercontent.com/u/55099505?v=4?s=100"" width=""100px;"" alt=""Mo""/><br /><sub><b>Mo</b></sub></a><br /><a href=""#design-moktermd08"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=moktermd08"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://briangor.github.io""><img src=""https://avatars.githubusercontent.com/u/27485722?v=4?s=100"" width=""100px;"" alt=""Brian""/><br /><sub><b>Brian</b></sub></a><br /><a href=""#design-briangor"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=briangor"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://chamley.dev""><img src=""https://avatars.githubusercontent.com/u/10702270?v=4?s=100"" width=""100px;"" alt=""chamley""/><br /><sub><b>chamley</b></sub></a><br /><a href=""#design-chamley"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chamley"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Silimim""><img src=""https://avatars.githubusercontent.com/u/47183870?v=4?s=100"" width=""100px;"" alt=""Simone Baptiste""/><br /><sub><b>Simone Baptiste</b></sub></a><br /><a href=""#design-Silimim"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Silimim"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/NaNshekhar04""><img src=""https://avatars.githubusercontent.com/u/110991877?v=4?s=100"" width=""100px;"" alt=""Shekhar Thakur""/><br /><sub><b>Shekhar Thakur</b></sub></a><br /><a href=""#design-NaNshekhar04"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=NaNshekhar04"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Smith1161""><img src=""https://avatars.githubusercontent.com/u/116065791?v=4?s=100"" width=""100px;"" alt=""Smith""/><br /><sub><b>Smith</b></sub></a><br /><a href=""#design-Smith1161"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Smith1161"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/codernoob1""><img src=""https://avatars.githubusercontent.com/u/79470721?v=4?s=100"" width=""100px;"" alt=""codernoob1""/><br /><sub><b>codernoob1</b></sub></a><br /><a href=""#design-codernoob1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=codernoob1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/lok84""><img src=""https://avatars.githubusercontent.com/u/74888033?v=4?s=100"" width=""100px;"" alt=""lok84""/><br /><sub><b>lok84</b></sub></a><br /><a href=""#design-lok84"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=lok84"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.virtual-coffee-chat.com/""><img src=""https://avatars.githubusercontent.com/u/66555313?v=4?s=100"" width=""100px;"" alt=""Tobias Riemenschneider""/><br /><sub><b>Tobias Riemenschneider</b></sub></a><br /><a href=""#design-riemto"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=riemto"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Tharsanan1""><img src=""https://avatars.githubusercontent.com/u/25491225?v=4?s=100"" width=""100px;"" alt=""Tharsanan1""/><br /><sub><b>Tharsanan1</b></sub></a><br /><a href=""#design-Tharsanan1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Tharsanan1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/anurag-singh-b0120516a""><img src=""https://avatars.githubusercontent.com/u/54910091?v=4?s=100"" width=""100px;"" alt=""ANURAG SINGH""/><br /><sub><b>ANURAG SINGH</b></sub></a><br /><a href=""#design-anurags10"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=anurags10"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://kryptonguy.me""><img src=""https://avatars.githubusercontent.com/u/79744248?v=4?s=100"" width=""100px;"" alt=""Yash Sant""/><br /><sub><b>Yash Sant</b></sub></a><br /><a href=""#design-KryptonGuy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KryptonGuy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/krishiv-patel""><img src=""https://avatars.githubusercontent.com/u/64356068?v=4?s=100"" width=""100px;"" alt=""Krishiv Patel""/><br /><sub><b>Krishiv Patel</b></sub></a><br /><a href=""#design-krishiv-patel"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=krishiv-patel"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://wwshuang.github.io/""><img src=""https://avatars.githubusercontent.com/u/33902518?v=4?s=100"" width=""100px;"" alt=""GGGalaxy""/><br /><sub><b>GGGalaxy</b></sub></a><br /><a href=""#design-wwShuang"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=wwShuang"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pardeepdhillon661""><img src=""https://avatars.githubusercontent.com/u/92221868?v=4?s=100"" width=""100px;"" alt=""pardeepdhillon661""/><br /><sub><b>pardeepdhillon661</b></sub></a><br /><a href=""#design-pardeepdhillon661"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pardeepdhillon661"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/anujd64""><img src=""https://avatars.githubusercontent.com/u/89857126?v=4?s=100"" width=""100px;"" alt=""anujd64""/><br /><sub><b>anujd64</b></sub></a><br /><a href=""#design-anujd64"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=anujd64"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Komodoro""><img src=""https://avatars.githubusercontent.com/u/5166385?v=4?s=100"" width=""100px;"" alt=""Pedro Pereira""/><br /><sub><b>Pedro Pereira</b></sub></a><br /><a href=""#design-Komodoro"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Komodoro"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MasterSaptak009""><img src=""https://avatars.githubusercontent.com/u/102503419?v=4?s=100"" width=""100px;"" alt=""Master_Saptak""/><br /><sub><b>Master_Saptak</b></sub></a><br /><a href=""#design-MasterSaptak009"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MasterSaptak009"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/developerSuranjan""><img src=""https://avatars.githubusercontent.com/u/91688087?v=4?s=100"" width=""100px;"" alt=""SURANJAN DAS""/><br /><sub><b>SURANJAN DAS</b></sub></a><br /><a href=""#design-developerSuranjan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=developerSuranjan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tripura-kant""><img src=""https://avatars.githubusercontent.com/u/40862497?v=4?s=100"" width=""100px;"" alt=""Tripura kant""/><br /><sub><b>Tripura kant</b></sub></a><br /><a href=""#design-tripura-kant"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tripura-kant"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shabzkhan""><img src=""https://avatars.githubusercontent.com/u/23547024?v=4?s=100"" width=""100px;"" alt=""shabzkhan""/><br /><sub><b>shabzkhan</b></sub></a><br /><a href=""#design-shabzkhan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shabzkhan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://golbarg.net""><img src=""https://avatars.githubusercontent.com/u/14885009?v=4?s=100"" width=""100px;"" alt=""Mustafa Poya""/><br /><sub><b>Mustafa Poya</b></sub></a><br /><a href=""#design-mustafapoya"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mustafapoya"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/iam-roshanj""><img src=""https://avatars.githubusercontent.com/u/84196979?v=4?s=100"" width=""100px;"" alt=""Roshan Jha""/><br /><sub><b>Roshan Jha</b></sub></a><br /><a href=""#design-iam-roshanj"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iam-roshanj"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GuillaumeLarue""><img src=""https://avatars.githubusercontent.com/u/43040692?v=4?s=100"" width=""100px;"" alt=""GuillaumeLarue""/><br /><sub><b>GuillaumeLarue</b></sub></a><br /><a href=""#design-GuillaumeLarue"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GuillaumeLarue"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://imul.math.uni.lodz.pl/~rodakt""><img src=""https://avatars.githubusercontent.com/u/33201785?v=4?s=100"" width=""100px;"" alt=""Tomasz Rodak""/><br /><sub><b>Tomasz Rodak</b></sub></a><br /><a href=""#design-chamerion"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=chamerion"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/sparkleholic""><img src=""https://avatars.githubusercontent.com/u/2949977?v=4?s=100"" width=""100px;"" alt=""Junil Kim""/><br /><sub><b>Junil Kim</b></sub></a><br /><a href=""#design-sparkleholic"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sparkleholic"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://surbhi2408.github.io/""><img src=""https://avatars.githubusercontent.com/u/58289829?v=4?s=100"" width=""100px;"" alt=""Surbhi Mayank""/><br /><sub><b>Surbhi Mayank</b></sub></a><br /><a href=""#design-surbhi2408"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=surbhi2408"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/WizardLemon""><img src=""https://avatars.githubusercontent.com/u/34193350?v=4?s=100"" width=""100px;"" alt=""Nemanja Lekic""/><br /><sub><b>Nemanja Lekic</b></sub></a><br /><a href=""#design-WizardLemon"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=WizardLemon"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/HemantMalokar""><img src=""https://avatars.githubusercontent.com/u/75850339?v=4?s=100"" width=""100px;"" alt=""HemantMalokar""/><br /><sub><b>HemantMalokar</b></sub></a><br /><a href=""#design-HemantMalokar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HemantMalokar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.ac.uma.es/~asenjo/research/""><img src=""https://avatars.githubusercontent.com/u/12429461?v=4?s=100"" width=""100px;"" alt=""Felipe M. López""/><br /><sub><b>Felipe M. López</b></sub></a><br /><a href=""#design-FelipeMLopez"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=FelipeMLopez"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bibliofilo""><img src=""https://avatars.githubusercontent.com/u/42589480?v=4?s=100"" width=""100px;"" alt=""bibliofilo""/><br /><sub><b>bibliofilo</b></sub></a><br /><a href=""#design-bibliofilo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bibliofilo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GauthamG2""><img src=""https://avatars.githubusercontent.com/u/36467370?v=4?s=100"" width=""100px;"" alt=""GauthamG2""/><br /><sub><b>GauthamG2</b></sub></a><br /><a href=""#design-GauthamG2"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GauthamG2"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/02-t""><img src=""https://avatars.githubusercontent.com/u/93790398?v=4?s=100"" width=""100px;"" alt=""02_t""/><br /><sub><b>02_t</b></sub></a><br /><a href=""#design-02-t"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=02-t"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/yussah/""><img src=""https://avatars.githubusercontent.com/u/61895971?v=4?s=100"" width=""100px;"" alt=""Yusuf Abdul-razaq""/><br /><sub><b>Yusuf Abdul-razaq</b></sub></a><br /><a href=""#design-yabdulra"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yabdulra"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Folld""><img src=""https://avatars.githubusercontent.com/u/73252859?v=4?s=100"" width=""100px;"" alt=""Vladimir""/><br /><sub><b>Vladimir</b></sub></a><br /><a href=""#design-Folld"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Folld"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/singletick""><img src=""https://avatars.githubusercontent.com/u/43012033?v=4?s=100"" width=""100px;"" alt=""Sai Chandra K""/><br /><sub><b>Sai Chandra K</b></sub></a><br /><a href=""#design-singletick"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=singletick"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://soroush.am""><img src=""https://avatars.githubusercontent.com/u/5072187?v=4?s=100"" width=""100px;"" alt=""Soroush Bonab""/><br /><sub><b>Soroush Bonab</b></sub></a><br /><a href=""#design-soroushamdg"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=soroushamdg"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Giide0n""><img src=""https://avatars.githubusercontent.com/u/39622960?v=4?s=100"" width=""100px;"" alt=""Giide0n""/><br /><sub><b>Giide0n</b></sub></a><br /><a href=""#design-Giide0n"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Giide0n"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Kreutz56""><img src=""https://avatars.githubusercontent.com/u/63000176?v=4?s=100"" width=""100px;"" alt=""GG""/><br /><sub><b>GG</b></sub></a><br /><a href=""#design-Kreutz56"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Kreutz56"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dagerzuga""><img src=""https://avatars.githubusercontent.com/u/19642693?v=4?s=100"" width=""100px;"" alt=""Dáger Zúñiga""/><br /><sub><b>Dáger Zúñiga</b></sub></a><br /><a href=""#design-dagerzuga"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dagerzuga"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/rsk2""><img src=""https://avatars.githubusercontent.com/u/45331524?v=4?s=100"" width=""100px;"" alt=""rsk2""/><br /><sub><b>rsk2</b></sub></a><br /><a href=""#design-rsk2"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=rsk2"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://hosting-easy.ru""><img src=""https://avatars.githubusercontent.com/u/48508182?v=4?s=100"" width=""100px;"" alt=""Storozhev DJ""/><br /><sub><b>Storozhev DJ</b></sub></a><br /><a href=""#design-StorozhevDJ"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=StorozhevDJ"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/jivan84""><img src=""https://avatars.githubusercontent.com/u/118162251?v=4?s=100"" width=""100px;"" alt=""Jeevan""/><br /><sub><b>Jeevan</b></sub></a><br /><a href=""#design-jivan84"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=jivan84"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://andyjohnson.netlify.app/""><img src=""https://avatars.githubusercontent.com/u/103585624?v=4?s=100"" width=""100px;"" alt=""Andy Johnson""/><br /><sub><b>Andy Johnson</b></sub></a><br /><a href=""#design-multi-vit"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=multi-vit"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/apozo-copyright""><img src=""https://avatars.githubusercontent.com/u/57532569?v=4?s=100"" width=""100px;"" alt=""Aníbal Pozo""/><br /><sub><b>Aníbal Pozo</b></sub></a><br /><a href=""#design-apozo-copyright"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=apozo-copyright"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/jovanecastro/""><img src=""https://avatars.githubusercontent.com/u/60260322?v=4?s=100"" width=""100px;"" alt=""Jovane de Castro""/><br /><sub><b>Jovane de Castro</b></sub></a><br /><a href=""#design-Cadavanaugh"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Cadavanaugh"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://pk.linkedin.com/in/muhammad-hamza-amir-412b4b183""><img src=""https://avatars.githubusercontent.com/u/43249821?v=4?s=100"" width=""100px;"" alt=""Muhammad Hamza Amir""/><br /><sub><b>Muhammad Hamza Amir</b></sub></a><br /><a href=""#design-MuhammadHamzaAmir"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MuhammadHamzaAmir"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tharaka-mts""><img src=""https://avatars.githubusercontent.com/u/84124871?v=4?s=100"" width=""100px;"" alt=""tharaka-mts""/><br /><sub><b>tharaka-mts</b></sub></a><br /><a href=""#design-tharaka-mts"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tharaka-mts"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ali-khyar.com""><img src=""https://avatars.githubusercontent.com/u/44535965?v=4?s=100"" width=""100px;"" alt=""Ali KHYAR""/><br /><sub><b>Ali KHYAR</b></sub></a><br /><a href=""#design-AliKhyar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AliKhyar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ojuaracaio""><img src=""https://avatars.githubusercontent.com/u/89320217?v=4?s=100"" width=""100px;"" alt=""Caio Araujo""/><br /><sub><b>Caio Araujo</b></sub></a><br /><a href=""#design-ojuaracaio"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ojuaracaio"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://oscardyremyhr.me""><img src=""https://avatars.githubusercontent.com/u/12874252?v=4?s=100"" width=""100px;"" alt=""Oscar Dyremyhr""/><br /><sub><b>Oscar Dyremyhr</b></sub></a><br /><a href=""#design-ossinova"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ossinova"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://arteality.pl/""><img src=""https://avatars.githubusercontent.com/u/37437781?v=4?s=100"" width=""100px;"" alt=""arteality""/><br /><sub><b>arteality</b></sub></a><br /><a href=""#design-arteality"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arteality"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.se-medien.de/""><img src=""https://avatars.githubusercontent.com/u/7121202?v=4?s=100"" width=""100px;"" alt=""Daniel Drexlmaier""/><br /><sub><b>Daniel Drexlmaier</b></sub></a><br /><a href=""#design-drexlma"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=drexlma"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/marco-monti-1a7293138/""><img src=""https://avatars.githubusercontent.com/u/34945781?v=4?s=100"" width=""100px;"" alt=""Marco Monti""/><br /><sub><b>Marco Monti</b></sub></a><br /><a href=""#design-Mmark94"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Mmark94"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mikeycrystal""><img src=""https://avatars.githubusercontent.com/u/108841529?v=4?s=100"" width=""100px;"" alt=""mikeycrystal""/><br /><sub><b>mikeycrystal</b></sub></a><br /><a href=""#design-mikeycrystal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mikeycrystal"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Veljanovskii""><img src=""https://avatars.githubusercontent.com/u/67647377?v=4?s=100"" width=""100px;"" alt=""Veljanovskii""/><br /><sub><b>Veljanovskii</b></sub></a><br /><a href=""#design-Veljanovskii"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Veljanovskii"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/minigo""><img src=""https://avatars.githubusercontent.com/u/7579415?v=4?s=100"" width=""100px;"" alt=""Ivan Gorbachev""/><br /><sub><b>Ivan Gorbachev</b></sub></a><br /><a href=""#design-minigo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=minigo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.instagram.com/sahilrawat_001""><img src=""https://avatars.githubusercontent.com/u/66208562?v=4?s=100"" width=""100px;"" alt=""Sahil Rawat""/><br /><sub><b>Sahil Rawat</b></sub></a><br /><a href=""#design-sahilrawat001"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sahilrawat001"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://hasithasuneth.github.io/portfolio/""><img src=""https://avatars.githubusercontent.com/u/87106402?v=4?s=100"" width=""100px;"" alt=""Hasitha Suneth""/><br /><sub><b>Hasitha Suneth</b></sub></a><br /><a href=""#design-HasithaSuneth"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=HasithaSuneth"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/yerko-vera-lezama-9b3193110/""><img src=""https://avatars.githubusercontent.com/u/16638068?v=4?s=100"" width=""100px;"" alt=""Yerko Vera Lezama""/><br /><sub><b>Yerko Vera Lezama</b></sub></a><br /><a href=""#design-YerkoVL"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=YerkoVL"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ivan-penchev""><img src=""https://avatars.githubusercontent.com/u/30929349?v=4?s=100"" width=""100px;"" alt=""Ivan Penchev""/><br /><sub><b>Ivan Penchev</b></sub></a><br /><a href=""#design-ivan-penchev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ivan-penchev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/tonmoycoder""><img src=""https://avatars.githubusercontent.com/u/78300713?v=4?s=100"" width=""100px;"" alt=""Tanver Islam Tonmoy""/><br /><sub><b>Tanver Islam Tonmoy</b></sub></a><br /><a href=""#design-tonmoycoder"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=tonmoycoder"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/xcao65""><img src=""https://avatars.githubusercontent.com/u/26684441?v=4?s=100"" width=""100px;"" alt=""Xun Cao""/><br /><sub><b>Xun Cao</b></sub></a><br /><a href=""#design-xcao65"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=xcao65"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/nayanbabariya95""><img src=""https://avatars.githubusercontent.com/u/63590009?v=4?s=100"" width=""100px;"" alt=""Nayan Babariya""/><br /><sub><b>Nayan Babariya</b></sub></a><br /><a href=""#design-nayanbabariya95"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nayanbabariya95"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://itspriyanshu.vercel.app""><img src=""https://avatars.githubusercontent.com/u/101447544?v=4?s=100"" width=""100px;"" alt=""Priyanshu Maurya""/><br /><sub><b>Priyanshu Maurya</b></sub></a><br /><a href=""#design-PriyansuMaurya"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PriyansuMaurya"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dylannalex""><img src=""https://avatars.githubusercontent.com/u/59183947?v=4?s=100"" width=""100px;"" alt=""Dylan Tintenfich""/><br /><sub><b>Dylan Tintenfich</b></sub></a><br /><a href=""#design-dylannalex"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dylannalex"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RonStrauss""><img src=""https://avatars.githubusercontent.com/u/82303541?v=4?s=100"" width=""100px;"" alt=""Ron Strauss""/><br /><sub><b>Ron Strauss</b></sub></a><br /><a href=""#design-RonStrauss"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RonStrauss"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MohammadAlBanna""><img src=""https://avatars.githubusercontent.com/u/7462007?v=4?s=100"" width=""100px;"" alt=""Mohammed AlBanna""/><br /><sub><b>Mohammed AlBanna</b></sub></a><br /><a href=""#design-MohammadAlBanna"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MohammadAlBanna"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/MukundMohanan""><img src=""https://avatars.githubusercontent.com/u/32845021?v=4?s=100"" width=""100px;"" alt=""Mukund M""/><br /><sub><b>Mukund M</b></sub></a><br /><a href=""#design-MukundMohanan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MukundMohanan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://frankiefab.com""><img src=""https://avatars.githubusercontent.com/u/46662771?v=4?s=100"" width=""100px;"" alt=""Franklin Ohaegbulam""/><br /><sub><b>Franklin Ohaegbulam</b></sub></a><br /><a href=""#design-frankiefab100"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=frankiefab100"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://nisarg0606.github.io/""><img src=""https://avatars.githubusercontent.com/u/64687773?v=4?s=100"" width=""100px;"" alt=""Nisarg Shah""/><br /><sub><b>Nisarg Shah</b></sub></a><br /><a href=""#design-nisarg0606"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=nisarg0606"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.unikdahal.com.np""><img src=""https://avatars.githubusercontent.com/u/61407386?v=4?s=100"" width=""100px;"" alt=""Unik Dahal""/><br /><sub><b>Unik Dahal</b></sub></a><br /><a href=""#design-unikdahal"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=unikdahal"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/readi1y""><img src=""https://avatars.githubusercontent.com/u/121257452?v=4?s=100"" width=""100px;"" alt=""Readily""/><br /><sub><b>Readily</b></sub></a><br /><a href=""#design-readi1y"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=readi1y"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/alexandre-poitevin-yahya-abou-imran""><img src=""https://avatars.githubusercontent.com/u/31008523?v=4?s=100"" width=""100px;"" alt=""Alexandre Poitevin""/><br /><sub><b>Alexandre Poitevin</b></sub></a><br /><a href=""#design-yahya-abou-imran"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=yahya-abou-imran"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Scaramir""><img src=""https://avatars.githubusercontent.com/u/29096190?v=4?s=100"" width=""100px;"" alt=""Scaramir""/><br /><sub><b>Scaramir</b></sub></a><br /><a href=""#design-Scaramir"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Scaramir"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://pruthvi.ca""><img src=""https://avatars.githubusercontent.com/u/779092?v=4?s=100"" width=""100px;"" alt=""Pruthvi""/><br /><sub><b>Pruthvi</b></sub></a><br /><a href=""#design-pruthvi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pruthvi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Kalmanq""><img src=""https://avatars.githubusercontent.com/u/76232104?v=4?s=100"" width=""100px;"" alt=""Kalmanq""/><br /><sub><b>Kalmanq</b></sub></a><br /><a href=""#design-Kalmanq"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Kalmanq"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://alfatahnesab.com""><img src=""https://avatars.githubusercontent.com/u/16444407?v=4?s=100"" width=""100px;"" alt=""Alfatah Nesab""/><br /><sub><b>Alfatah Nesab</b></sub></a><br /><a href=""#design-alfatahnesab"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alfatahnesab"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/arudesai""><img src=""https://avatars.githubusercontent.com/u/56399105?v=4?s=100"" width=""100px;"" alt=""arudesai""/><br /><sub><b>arudesai</b></sub></a><br /><a href=""#design-arudesai"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=arudesai"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Dreamy26""><img src=""https://avatars.githubusercontent.com/u/53249146?v=4?s=100"" width=""100px;"" alt=""Adryenne""/><br /><sub><b>Adryenne</b></sub></a><br /><a href=""#design-Dreamy26"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Dreamy26"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Elcaveman""><img src=""https://avatars.githubusercontent.com/u/61284089?v=4?s=100"" width=""100px;"" alt=""El mehdi oudaoud""/><br /><sub><b>El mehdi oudaoud</b></sub></a><br /><a href=""#design-Elcaveman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Elcaveman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/JayantGoel001""><img src=""https://avatars.githubusercontent.com/u/54479676?v=4?s=100"" width=""100px;"" alt=""Jayant Goel""/><br /><sub><b>Jayant Goel</b></sub></a><br /><a href=""#design-JayantGoel001"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=JayantGoel001"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://tsukizombina.github.io/""><img src=""https://avatars.githubusercontent.com/u/7613290?v=4?s=100"" width=""100px;"" alt=""Tsuki""/><br /><sub><b>Tsuki</b></sub></a><br /><a href=""#design-TsukiZombina"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TsukiZombina"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/plemanski""><img src=""https://avatars.githubusercontent.com/u/22970533?v=4?s=100"" width=""100px;"" alt=""Peter Lemanski""/><br /><sub><b>Peter Lemanski</b></sub></a><br /><a href=""#design-plemanski"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=plemanski"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Annurag-byte""><img src=""https://avatars.githubusercontent.com/u/94035812?v=4?s=100"" width=""100px;"" alt=""Annurag-byte""/><br /><sub><b>Annurag-byte</b></sub></a><br /><a href=""#design-Annurag-byte"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Annurag-byte"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://vua11.vercel.app""><img src=""https://avatars.githubusercontent.com/u/70167429?v=4?s=100"" width=""100px;"" alt=""Anthony Vu""/><br /><sub><b>Anthony Vu</b></sub></a><br /><a href=""#design-vua11"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vua11"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vitalnik""><img src=""https://avatars.githubusercontent.com/u/3410985?v=4?s=100"" width=""100px;"" alt=""Vitaly Nikolaychuk""/><br /><sub><b>Vitaly Nikolaychuk</b></sub></a><br /><a href=""#design-vitalnik"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vitalnik"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://nathancho.net""><img src=""https://avatars.githubusercontent.com/u/10931888?v=4?s=100"" width=""100px;"" alt=""Nathan""/><br /><sub><b>Nathan</b></sub></a><br /><a href=""#design-hatchcanon"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hatchcanon"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://petukhov.cyou/""><img src=""https://avatars.githubusercontent.com/u/72270591?v=4?s=100"" width=""100px;"" alt=""Evgenii Petukhov""/><br /><sub><b>Evgenii Petukhov</b></sub></a><br /><a href=""#design-evgenii-petukhov"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=evgenii-petukhov"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dehre""><img src=""https://avatars.githubusercontent.com/u/23709926?v=4?s=100"" width=""100px;"" alt=""Loris Guerra""/><br /><sub><b>Loris Guerra</b></sub></a><br /><a href=""#design-dehre"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dehre"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/fakhriaunur""><img src=""https://avatars.githubusercontent.com/u/9006080?v=4?s=100"" width=""100px;"" alt=""fakhriaunur""/><br /><sub><b>fakhriaunur</b></sub></a><br /><a href=""#design-fakhriaunur"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=fakhriaunur"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.mehdihyani.me/""><img src=""https://avatars.githubusercontent.com/u/62780960?v=4?s=100"" width=""100px;"" alt=""Mehdi HYANI""/><br /><sub><b>Mehdi HYANI</b></sub></a><br /><a href=""#design-BR4INL3SS"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=BR4INL3SS"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://sarvex.github.io/""><img src=""https://avatars.githubusercontent.com/u/1885938?v=4?s=100"" width=""100px;"" alt=""Sarvex Jatasra""/><br /><sub><b>Sarvex Jatasra</b></sub></a><br /><a href=""#design-sarvex"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=sarvex"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/santimanuelr""><img src=""https://avatars.githubusercontent.com/u/8482241?v=4?s=100"" width=""100px;"" alt=""santimanuelr""/><br /><sub><b>santimanuelr</b></sub></a><br /><a href=""#design-santimanuelr"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=santimanuelr"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/evgrezanov""><img src=""https://avatars.githubusercontent.com/u/5329288?v=4?s=100"" width=""100px;"" alt=""Evgeniy Rezanov""/><br /><sub><b>Evgeniy Rezanov</b></sub></a><br /><a href=""#design-evgrezanov"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=evgrezanov"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://dev.to/soniajm""><img src=""https://avatars.githubusercontent.com/u/98415819?v=4?s=100"" width=""100px;"" alt=""Sonia M""/><br /><sub><b>Sonia M</b></sub></a><br /><a href=""#design-letscode-17"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=letscode-17"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://grzegorzkmita.com""><img src=""https://avatars.githubusercontent.com/u/97115044?v=4?s=100"" width=""100px;"" alt=""Grzegorz Kmita""/><br /><sub><b>Grzegorz Kmita</b></sub></a><br /><a href=""#design-Jirafey"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Jirafey"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/manul30""><img src=""https://avatars.githubusercontent.com/u/67177371?v=4?s=100"" width=""100px;"" alt=""Manuel Carita""/><br /><sub><b>Manuel Carita</b></sub></a><br /><a href=""#design-manul30"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=manul30"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ftcister""><img src=""https://avatars.githubusercontent.com/u/63937848?v=4?s=100"" width=""100px;"" alt=""Felipe Cisternas Alvarez""/><br /><sub><b>Felipe Cisternas Alvarez</b></sub></a><br /><a href=""#design-ftcister"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ftcister"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/guoci""><img src=""https://avatars.githubusercontent.com/u/1260178?v=4?s=100"" width=""100px;"" alt=""Guo Ci""/><br /><sub><b>Guo Ci</b></sub></a><br /><a href=""#design-guoci"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=guoci"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mediumhotcoffee""><img src=""https://avatars.githubusercontent.com/u/38895096?v=4?s=100"" width=""100px;"" alt=""Marcos Silva""/><br /><sub><b>Marcos Silva</b></sub></a><br /><a href=""#design-mediumhotcoffee"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mediumhotcoffee"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kylekao""><img src=""https://avatars.githubusercontent.com/u/29105860?v=4?s=100"" width=""100px;"" alt=""KK""/><br /><sub><b>KK</b></sub></a><br /><a href=""#design-kylekao"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kylekao"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/shubhanjanmedhi""><img src=""https://avatars.githubusercontent.com/u/28539208?v=4?s=100"" width=""100px;"" alt=""Shubhanjan Medhi""/><br /><sub><b>Shubhanjan Medhi</b></sub></a><br /><a href=""#design-shubhanjanmedhi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=shubhanjanmedhi"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/arthurfrodrigues/""><img src=""https://avatars.githubusercontent.com/u/69909375?v=4?s=100"" width=""100px;"" alt=""ArthurFerreiraRodrigues""/><br /><sub><b>ArthurFerreiraRodrigues</b></sub></a><br /><a href=""#design-ArthurFerreiraRodrigues"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ArthurFerreiraRodrigues"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/PabloHermun""><img src=""https://avatars.githubusercontent.com/u/99298400?v=4?s=100"" width=""100px;"" alt=""PabloHermun""/><br /><sub><b>PabloHermun</b></sub></a><br /><a href=""#design-PabloHermun"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PabloHermun"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/disha-baldawa""><img src=""https://avatars.githubusercontent.com/u/108571891?v=4?s=100"" width=""100px;"" alt=""disha-baldawa""/><br /><sub><b>disha-baldawa</b></sub></a><br /><a href=""#design-disha-baldawa"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=disha-baldawa"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/StaroMoon""><img src=""https://avatars.githubusercontent.com/u/8587762?v=4?s=100"" width=""100px;"" alt=""StaroMoon""/><br /><sub><b>StaroMoon</b></sub></a><br /><a href=""#design-StaroMoon"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=StaroMoon"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/amila-t-kumarasekara""><img src=""https://avatars.githubusercontent.com/u/84329334?v=4?s=100"" width=""100px;"" alt=""Amila T Kumarasekara""/><br /><sub><b>Amila T Kumarasekara</b></sub></a><br /><a href=""#design-amila-t-kumarasekara"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amila-t-kumarasekara"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://amosmachora.vercel.app""><img src=""https://avatars.githubusercontent.com/u/81857018?v=4?s=100"" width=""100px;"" alt=""Amoh Prince""/><br /><sub><b>Amoh Prince</b></sub></a><br /><a href=""#design-AmohPrince"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AmohPrince"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AngeloGC""><img src=""https://avatars.githubusercontent.com/u/80314503?v=4?s=100"" width=""100px;"" alt=""AngeloGC""/><br /><sub><b>AngeloGC</b></sub></a><br /><a href=""#design-AngeloGC"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AngeloGC"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://ebubegloryogbonda.dev/""><img src=""https://avatars.githubusercontent.com/u/22121310?v=4?s=100"" width=""100px;"" alt=""Ebube Glory Ogbonda""/><br /><sub><b>Ebube Glory Ogbonda</b></sub></a><br /><a href=""#design-OgbondaGlory"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=OgbondaGlory"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://belavadi.com""><img src=""https://avatars.githubusercontent.com/u/16673094?v=4?s=100"" width=""100px;"" alt=""Prahalad Belavadi""/><br /><sub><b>Prahalad Belavadi</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=prahaladbelavadi"" title=""Documentation"">📖</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ant-st""><img src=""https://avatars.githubusercontent.com/u/122909818?v=4?s=100"" width=""100px;"" alt=""Antoni Sarnowski-Trypka""/><br /><sub><b>Antoni Sarnowski-Trypka</b></sub></a><br /><a href=""#design-ant-st"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ant-st"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/albertopasqualetto""><img src=""https://avatars.githubusercontent.com/u/39854348?v=4?s=100"" width=""100px;"" alt=""Alberto Pasqualetto""/><br /><sub><b>Alberto Pasqualetto</b></sub></a><br /><a href=""#design-albertopasqualetto"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=albertopasqualetto"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://weblast.eu""><img src=""https://avatars.githubusercontent.com/u/18403325?v=4?s=100"" width=""100px;"" alt=""Amir Babaei""/><br /><sub><b>Amir Babaei</b></sub></a><br /><a href=""#design-amirbabaei97"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=amirbabaei97"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/syedhannan""><img src=""https://avatars.githubusercontent.com/u/91002522?v=4?s=100"" width=""100px;"" alt=""Syed Abdul Hannan""/><br /><sub><b>Syed Abdul Hannan</b></sub></a><br /><a href=""#design-syedhannan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=syedhannan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/TheSrajan""><img src=""https://avatars.githubusercontent.com/u/123892470?v=4?s=100"" width=""100px;"" alt=""Srajan Rai""/><br /><sub><b>Srajan Rai</b></sub></a><br /><a href=""#design-TheSrajan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=TheSrajan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AndroidLion48""><img src=""https://avatars.githubusercontent.com/u/92341925?v=4?s=100"" width=""100px;"" alt=""Clarence Moore""/><br /><sub><b>Clarence Moore</b></sub></a><br /><a href=""#design-AndroidLion48"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AndroidLion48"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.spring.io""><img src=""https://avatars.githubusercontent.com/u/77793919?v=4?s=100"" width=""100px;"" alt=""Nguyen Anh Tuan""/><br /><sub><b>Nguyen Anh Tuan</b></sub></a><br /><a href=""#design-ng-anhhtuann"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ng-anhhtuann"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/dar2dar2""><img src=""https://avatars.githubusercontent.com/u/35633178?v=4?s=100"" width=""100px;"" alt=""dar2dar2""/><br /><sub><b>dar2dar2</b></sub></a><br /><a href=""#design-dar2dar2"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=dar2dar2"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/itachi-13""><img src=""https://avatars.githubusercontent.com/u/87619819?v=4?s=100"" width=""100px;"" alt=""Ameer Ibrahim""/><br /><sub><b>Ameer Ibrahim</b></sub></a><br /><a href=""#design-itachi-13"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=itachi-13"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Tiagolugatto""><img src=""https://avatars.githubusercontent.com/u/56102177?v=4?s=100"" width=""100px;"" alt=""Tiago Lugatto""/><br /><sub><b>Tiago Lugatto</b></sub></a><br /><a href=""#design-Tiagolugatto"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Tiagolugatto"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/raremiroir""><img src=""https://avatars.githubusercontent.com/u/80620847?v=4?s=100"" width=""100px;"" alt=""raremiroir""/><br /><sub><b>raremiroir</b></sub></a><br /><a href=""#design-raremiroir"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=raremiroir"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/csis0247""><img src=""https://avatars.githubusercontent.com/u/21369255?v=4?s=100"" width=""100px;"" alt=""Moobie""/><br /><sub><b>Moobie</b></sub></a><br /><a href=""#design-csis0247"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=csis0247"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AlicanDursun""><img src=""https://avatars.githubusercontent.com/u/55031061?v=4?s=100"" width=""100px;"" alt=""AlicanDursun""/><br /><sub><b>AlicanDursun</b></sub></a><br /><a href=""#design-AlicanDursun"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AlicanDursun"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/bbalsam""><img src=""https://avatars.githubusercontent.com/u/43484084?v=4?s=100"" width=""100px;"" alt=""bbalsam""/><br /><sub><b>bbalsam</b></sub></a><br /><a href=""#design-bbalsam"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bbalsam"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/hajeklu""><img src=""https://avatars.githubusercontent.com/u/40526897?v=4?s=100"" width=""100px;"" alt=""Luboš Hájek""/><br /><sub><b>Luboš Hájek</b></sub></a><br /><a href=""#design-hajeklu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=hajeklu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mrshahzeb7""><img src=""https://avatars.githubusercontent.com/u/69900372?v=4?s=100"" width=""100px;"" alt=""mrshahzeb7""/><br /><sub><b>mrshahzeb7</b></sub></a><br /><a href=""#design-mrshahzeb7"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mrshahzeb7"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/konjoinfinity""><img src=""https://avatars.githubusercontent.com/u/46323883?v=4?s=100"" width=""100px;"" alt=""Wesley Scholl""/><br /><sub><b>Wesley Scholl</b></sub></a><br /><a href=""#design-konjoinfinity"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=konjoinfinity"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ltenfield""><img src=""https://avatars.githubusercontent.com/u/11895716?v=4?s=100"" width=""100px;"" alt=""Lawrence Turcotte""/><br /><sub><b>Lawrence Turcotte</b></sub></a><br /><a href=""#design-ltenfield"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ltenfield"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/madseventwo""><img src=""https://avatars.githubusercontent.com/u/51255499?v=4?s=100"" width=""100px;"" alt=""Michael DiPaolo""/><br /><sub><b>Michael DiPaolo</b></sub></a><br /><a href=""#design-madseventwo"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=madseventwo"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/codemaster08240328""><img src=""https://avatars.githubusercontent.com/u/39701522?v=4?s=100"" width=""100px;"" alt=""Smart-Codi""/><br /><sub><b>Smart-Codi</b></sub></a><br /><a href=""#design-codemaster08240328"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=codemaster08240328"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/vivekkumar1503/""><img src=""https://avatars.githubusercontent.com/u/49686162?v=4?s=100"" width=""100px;"" alt=""Vivek Kumar""/><br /><sub><b>Vivek Kumar</b></sub></a><br /><a href=""#design-vivekDebugs"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vivekDebugs"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.linkedin.com/in/imoiseev""><img src=""https://avatars.githubusercontent.com/u/7127317?v=4?s=100"" width=""100px;"" alt=""Igor Moiseev""/><br /><sub><b>Igor Moiseev</b></sub></a><br /><a href=""#design-igormoiseev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=igormoiseev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/bard-pedersen""><img src=""https://avatars.githubusercontent.com/u/72338855?v=4?s=100"" width=""100px;"" alt=""Bård Pedersen""/><br /><sub><b>Bård Pedersen</b></sub></a><br /><a href=""#design-bardpedersen"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=bardpedersen"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://hoaphan.net""><img src=""https://avatars.githubusercontent.com/u/5586453?v=4?s=100"" width=""100px;"" alt=""HOA PHAN""/><br /><sub><b>HOA PHAN</b></sub></a><br /><a href=""#design-s50600822"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=s50600822"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/GaborModra""><img src=""https://avatars.githubusercontent.com/u/93826830?v=4?s=100"" width=""100px;"" alt=""GaborModra""/><br /><sub><b>GaborModra</b></sub></a><br /><a href=""#design-GaborModra"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=GaborModra"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vivek-114""><img src=""https://avatars.githubusercontent.com/u/48213072?v=4?s=100"" width=""100px;"" alt=""vivek-114""/><br /><sub><b>vivek-114</b></sub></a><br /><a href=""#design-vivek-114"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vivek-114"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/kayumuzzaman""><img src=""https://avatars.githubusercontent.com/u/46846503?v=4?s=100"" width=""100px;"" alt=""Robin""/><br /><sub><b>Robin</b></sub></a><br /><a href=""#design-kayumuzzaman"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=kayumuzzaman"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://yatseyko.com""><img src=""https://avatars.githubusercontent.com/u/34627441?v=4?s=100"" width=""100px;"" alt=""Alex""/><br /><sub><b>Alex</b></sub></a><br /><a href=""#design-alex-yatseyko"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alex-yatseyko"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://jehrlinger.wordpress.com""><img src=""https://avatars.githubusercontent.com/u/1110676?v=4?s=100"" width=""100px;"" alt=""John Ehrlinger""/><br /><sub><b>John Ehrlinger</b></sub></a><br /><a href=""#design-ehrlinger"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ehrlinger"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://snelsi.com""><img src=""https://avatars.githubusercontent.com/u/15171036?v=4?s=100"" width=""100px;"" alt=""Roman Zhuravlov""/><br /><sub><b>Roman Zhuravlov</b></sub></a><br /><a href=""#design-snelsi"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=snelsi"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mrblue6ix""><img src=""https://avatars.githubusercontent.com/u/82508439?v=4?s=100"" width=""100px;"" alt=""Jordan Moss""/><br /><sub><b>Jordan Moss</b></sub></a><br /><a href=""#design-mrblue6ix"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mrblue6ix"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RaeShelly""><img src=""https://avatars.githubusercontent.com/u/72581570?v=4?s=100"" width=""100px;"" alt=""RaeShelly""/><br /><sub><b>RaeShelly</b></sub></a><br /><a href=""#design-RaeShelly"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RaeShelly"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gmollard""><img src=""https://avatars.githubusercontent.com/u/22834092?v=4?s=100"" width=""100px;"" alt=""gmollard""/><br /><sub><b>gmollard</b></sub></a><br /><a href=""#design-gmollard"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gmollard"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/midikaif""><img src=""https://avatars.githubusercontent.com/u/107634998?v=4?s=100"" width=""100px;"" alt=""Md Kaif Khan""/><br /><sub><b>Md Kaif Khan</b></sub></a><br /><a href=""#design-midikaif"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=midikaif"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/promeraq""><img src=""https://avatars.githubusercontent.com/u/95442056?v=4?s=100"" width=""100px;"" alt=""Pablo Romera""/><br /><sub><b>Pablo Romera</b></sub></a><br /><a href=""#design-promeraq"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=promeraq"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ErikBustos""><img src=""https://avatars.githubusercontent.com/u/22849104?v=4?s=100"" width=""100px;"" alt=""Erik Bustos""/><br /><sub><b>Erik Bustos</b></sub></a><br /><a href=""#design-ErikBustos"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ErikBustos"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/trogfield""><img src=""https://avatars.githubusercontent.com/u/22109189?v=4?s=100"" width=""100px;"" alt=""trogfield""/><br /><sub><b>trogfield</b></sub></a><br /><a href=""#design-trogfield"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=trogfield"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/simon-aichhorn""><img src=""https://avatars.githubusercontent.com/u/36436746?v=4?s=100"" width=""100px;"" alt=""simon-aichhorn""/><br /><sub><b>simon-aichhorn</b></sub></a><br /><a href=""#design-simon-aichhorn"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=simon-aichhorn"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/gulectufan""><img src=""https://avatars.githubusercontent.com/u/65404074?v=4?s=100"" width=""100px;"" alt=""Tufan GÜLEÇ""/><br /><sub><b>Tufan GÜLEÇ</b></sub></a><br /><a href=""#design-gulectufan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=gulectufan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ugurberkecan""><img src=""https://avatars.githubusercontent.com/u/42906958?v=4?s=100"" width=""100px;"" alt=""Uğur Berkecan Ünlü""/><br /><sub><b>Uğur Berkecan Ünlü</b></sub></a><br /><a href=""#design-ugurberkecan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ugurberkecan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/revanthsonu""><img src=""https://avatars.githubusercontent.com/u/40160940?v=4?s=100"" width=""100px;"" alt=""Revanth Naik""/><br /><sub><b>Revanth Naik</b></sub></a><br /><a href=""#design-revanthsonu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=revanthsonu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Lia-Pires""><img src=""https://avatars.githubusercontent.com/u/102235852?v=4?s=100"" width=""100px;"" alt=""Lia Pires""/><br /><sub><b>Lia Pires</b></sub></a><br /><a href=""#design-Lia-Pires"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Lia-Pires"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Bambam320""><img src=""https://avatars.githubusercontent.com/u/89107952?v=4?s=100"" width=""100px;"" alt=""Igor Mestechkin""/><br /><sub><b>Igor Mestechkin</b></sub></a><br /><a href=""#design-Bambam320"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Bambam320"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/AnirudhKaranth""><img src=""https://avatars.githubusercontent.com/u/97871145?v=4?s=100"" width=""100px;"" alt=""Anirudh Karanth""/><br /><sub><b>Anirudh Karanth</b></sub></a><br /><a href=""#design-AnirudhKaranth"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=AnirudhKaranth"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/KBobovskiy""><img src=""https://avatars.githubusercontent.com/u/35502578?v=4?s=100"" width=""100px;"" alt=""KBobovskiy""/><br /><sub><b>KBobovskiy</b></sub></a><br /><a href=""#design-KBobovskiy"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KBobovskiy"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/zhatiayua""><img src=""https://avatars.githubusercontent.com/u/32076811?v=4?s=100"" width=""100px;"" alt=""zhatiayua""/><br /><sub><b>zhatiayua</b></sub></a><br /><a href=""#design-zhatiayua"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=zhatiayua"" title=""Code"">💻</a> <a href=""#content-zhatiayua"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/davidlaket/""><img src=""https://avatars.githubusercontent.com/u/51886804?v=4?s=100"" width=""100px;"" alt=""David Cardona""/><br /><sub><b>David Cardona</b></sub></a><br /><a href=""#design-DavidLakeT"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=DavidLakeT"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/castilhera""><img src=""https://avatars.githubusercontent.com/u/32399161?v=4?s=100"" width=""100px;"" alt=""Paulo Castilho""/><br /><sub><b>Paulo Castilho</b></sub></a><br /><a href=""#design-castilhera"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=castilhera"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/PicchiSeba""><img src=""https://avatars.githubusercontent.com/u/38473030?v=4?s=100"" width=""100px;"" alt=""Sebastiano Picchi""/><br /><sub><b>Sebastiano Picchi</b></sub></a><br /><a href=""#design-PicchiSeba"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=PicchiSeba"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pjotar""><img src=""https://avatars.githubusercontent.com/u/16525325?v=4?s=100"" width=""100px;"" alt=""pjotar""/><br /><sub><b>pjotar</b></sub></a><br /><a href=""#design-pjotar"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pjotar"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/RimelCHERIF""><img src=""https://avatars.githubusercontent.com/u/52446873?v=4?s=100"" width=""100px;"" alt=""Rimel CHERIF""/><br /><sub><b>Rimel CHERIF</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=RimelCHERIF"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Arsaluddin""><img src=""https://avatars.githubusercontent.com/u/91743738?v=4?s=100"" width=""100px;"" alt=""Arsal uddin""/><br /><sub><b>Arsal uddin</b></sub></a><br /><a href=""#content-Arsaluddin"" title=""Content"">🖋</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/KasporskiDzmitry""><img src=""https://avatars.githubusercontent.com/u/31612563?v=4?s=100"" width=""100px;"" alt=""Dmitry Kasporsky""/><br /><sub><b>Dmitry Kasporsky</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KasporskiDzmitry"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/SoftwareDev1014""><img src=""https://avatars.githubusercontent.com/u/47503803?v=4?s=100"" width=""100px;"" alt=""SoftwareDev1014""/><br /><sub><b>SoftwareDev1014</b></sub></a><br /><a href=""#design-SoftwareDev1014"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=SoftwareDev1014"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Robvred""><img src=""https://avatars.githubusercontent.com/u/12579254?v=4?s=100"" width=""100px;"" alt=""@Robvred""/><br /><sub><b>@Robvred</b></sub></a><br /><a href=""#design-Robvred"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Robvred"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/KasunShanaka""><img src=""https://avatars.githubusercontent.com/u/62996748?v=4?s=100"" width=""100px;"" alt=""Kasun Shanaka""/><br /><sub><b>Kasun Shanaka</b></sub></a><br /><a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=KasunShanaka"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/9AMTech""><img src=""https://avatars.githubusercontent.com/u/48345582?v=4?s=100"" width=""100px;"" alt=""Ahmad M.""/><br /><sub><b>Ahmad M.</b></sub></a><br /><a href=""#design-9AMTech"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=9AMTech"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/alex-kozin""><img src=""https://avatars.githubusercontent.com/u/23097023?v=4?s=100"" width=""100px;"" alt=""Alex Kozin""/><br /><sub><b>Alex Kozin</b></sub></a><br /><a href=""#design-alex-kozin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alex-kozin"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://mandymeindersma.com/""><img src=""https://avatars.githubusercontent.com/u/17459171?v=4?s=100"" width=""100px;"" alt=""Mandy Meindersma""/><br /><sub><b>Mandy Meindersma</b></sub></a><br /><a href=""#design-MandyMeindersma"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=MandyMeindersma"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Rahib777-7""><img src=""https://avatars.githubusercontent.com/u/74979271?v=4?s=100"" width=""100px;"" alt=""LEGALISE PIRACY""/><br /><sub><b>LEGALISE PIRACY</b></sub></a><br /><a href=""#design-Rahib777-7"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Rahib777-7"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://alexlogvin.altervista.org""><img src=""https://avatars.githubusercontent.com/u/6129602?v=4?s=100"" width=""100px;"" alt=""Alex Logvin""/><br /><sub><b>Alex Logvin</b></sub></a><br /><a href=""#design-alexlogvin"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=alexlogvin"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/ariacomputer""><img src=""https://avatars.githubusercontent.com/u/10091898?v=4?s=100"" width=""100px;"" alt=""Aria Dahl""/><br /><sub><b>Aria Dahl</b></sub></a><br /><a href=""#design-ariacomputer"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ariacomputer"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://www.xcrafted.co.uk""><img src=""https://avatars.githubusercontent.com/u/21038876?v=4?s=100"" width=""100px;"" alt=""Mustafa Arifoglu""/><br /><sub><b>Mustafa Arifoglu</b></sub></a><br /><a href=""#design-marifoglu"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=marifoglu"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://yevhen999.vercel.app""><img src=""https://avatars.githubusercontent.com/u/105009162?v=4?s=100"" width=""100px;"" alt=""Yevhen Leshchenko""/><br /><sub><b>Yevhen Leshchenko</b></sub></a><br /><a href=""#design-Yevhen999"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Yevhen999"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/anubhav1206""><img src=""https://avatars.githubusercontent.com/u/53504460?v=4?s=100"" width=""100px;"" alt=""Anubhav Adhikari""/><br /><sub><b>Anubhav Adhikari</b></sub></a><br /><a href=""#design-anubhav1206"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=anubhav1206"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/ntatko""><img src=""https://avatars.githubusercontent.com/u/37306038?v=4?s=100"" width=""100px;"" alt=""Noah Tatko""/><br /><sub><b>Noah Tatko</b></sub></a><br /><a href=""#design-ntatko"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=ntatko"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/mohitgadhavi1""><img src=""https://avatars.githubusercontent.com/u/37660846?v=4?s=100"" width=""100px;"" alt=""Mohit Gadhavi""/><br /><sub><b>Mohit Gadhavi</b></sub></a><br /><a href=""#design-mohitgadhavi1"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=mohitgadhavi1"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/pedrocostab""><img src=""https://avatars.githubusercontent.com/u/40375460?v=4?s=100"" width=""100px;"" alt=""Pedro Basílio""/><br /><sub><b>Pedro Basílio</b></sub></a><br /><a href=""#design-pedrocostab"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=pedrocostab"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/realsanjeev""><img src=""https://avatars.githubusercontent.com/u/45820805?v=4?s=100"" width=""100px;"" alt=""RealSanjeev""/><br /><sub><b>RealSanjeev</b></sub></a><br /><a href=""#design-realsanjeev"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=realsanjeev"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.linkedin.com/in/iamakashhazra""><img src=""https://avatars.githubusercontent.com/u/4105390?v=4?s=100"" width=""100px;"" alt=""Akash Hazra""/><br /><sub><b>Akash Hazra</b></sub></a><br /><a href=""#design-iamakashhazra"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=iamakashhazra"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://www.dahlen.org/""><img src=""https://avatars.githubusercontent.com/u/23745709?v=4?s=100"" width=""100px;"" alt=""Christoph Dahlen""/><br /><sub><b>Christoph Dahlen</b></sub></a><br /><a href=""#design-m0wlheld"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=m0wlheld"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/vincentonepointone""><img src=""https://avatars.githubusercontent.com/u/63422692?v=4?s=100"" width=""100px;"" alt=""Vincent du Plessis""/><br /><sub><b>Vincent du Plessis</b></sub></a><br /><a href=""#design-vincentonepointone"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=vincentonepointone"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""http://tamrazyan.com/""><img src=""https://avatars.githubusercontent.com/u/123498?v=4?s=100"" width=""100px;"" alt=""Karen Tamrazyan""/><br /><sub><b>Karen Tamrazyan</b></sub></a><br /><a href=""#design-karentamrazyan"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=karentamrazyan"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Mirza-Younus-Baig""><img src=""https://avatars.githubusercontent.com/u/30597752?v=4?s=100"" width=""100px;"" alt=""Mirza Younus Baig""/><br /><sub><b>Mirza Younus Baig</b></sub></a><br /><a href=""#design-Mirza-Younus-Baig"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Mirza-Younus-Baig"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/webdev-ashishk""><img src=""https://avatars.githubusercontent.com/u/127021921?v=4?s=100"" width=""100px;"" alt=""Ashish Kumar""/><br /><sub><b>Ashish Kumar</b></sub></a><br /><a href=""#design-webdev-ashishk"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=webdev-ashishk"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/Unknown1934-del""><img src=""https://avatars.githubusercontent.com/u/63234449?v=4?s=100"" width=""100px;"" alt=""Unknown6334""/><br /><sub><b>Unknown6334</b></sub></a><br /><a href=""#design-Unknown1934-del"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=Unknown1934-del"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/flowaz""><img src=""https://avatars.githubusercontent.com/u/133242638?v=4?s=100"" width=""100px;"" alt=""flowaz""/><br /><sub><b>flowaz</b></sub></a><br /><a href=""#design-flowaz"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=flowaz"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/zi-aikra""><img src=""https://avatars.githubusercontent.com/u/129437412?v=4?s=100"" width=""100px;"" alt=""zi-aikra""/><br /><sub><b>zi-aikra</b></sub></a><br /><a href=""#design-zi-aikra"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=zi-aikra"" title=""Code"">💻</a></td>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://github.com/payalpm""><img src=""https://avatars.githubusercontent.com/u/76490207?v=4?s=100"" width=""100px;"" alt=""PAYAL PM""/><br /><sub><b>PAYAL PM</b></sub></a><br /><a href=""#design-payalpm"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=payalpm"" title=""Code"">💻</a></td>
    </tr>
    <tr>
      <td align=""center"" valign=""top"" width=""14.28%""><a href=""https://lennartloesche.de/""><img src=""https://avatars.githubusercontent.com/u/69513317?v=4?s=100"" width=""100px;"" alt=""Lennart Lösche""/><br /><sub><b>Lennart Lösche</b></sub></a><br /><a href=""#design-l3nnartt"" title=""Design"">🎨</a> <a href=""https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/commits?author=l3nnartt"" title=""Code"">💻</a></td>
    </tr>
  </tbody>
</table>

<!-- markdownlint-restore -->
<!-- prettier-ignore-end -->

<!-- ALL-CONTRIBUTORS-LIST:END -->

This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification.
Contributions of any kind welcome!

<a id=""bottom-page""></a>

#### [ [Go back to the top of the page](#top-page) ]

## Contributor Over Time

[![GitHub Contributor Over Time](https://contributor-overtime-api.git-contributor.com/contributors-svg?chart=contributorOverTime&repo=ebazhanov/linkedin-skill-assessments-quizzes)](https://git-contributor.com?chart=contributorOverTime&repo=ebazhanov/linkedin-skill-assessments-quizzes)

## Stargazers over time

[![Stargazers over time](https://starchart.cc/Ebazhanov/linkedin-quiz-assessments.svg)](https://starchart.cc/Ebazhanov/linkedin-quiz-assessments)

## Visualisation of this repository by Gource

[https://www.youtube.com/watch?v=24cZVytc5D4](https://www.youtube.com/watch?v=24cZVytc5D4)

![gource](gource.gif)
"
udacity/fullstack-nanodegree-vm,Python,"# Full Stack Web Developer Nanodegree program virtual machine

<a href=""https://www.udacity.com/"">
  <img src=""https://s3-us-west-1.amazonaws.com/udacity-content/rebrand/svg/logo.min.svg"" width=""300"" alt=""Udacity logo"">
</a>

Virtual machine for the [Relational Databases](https://www.udacity.com/course/intro-to-relational-databases--ud197) and [Full Stack Foundations](https://www.udacity.com/course/full-stack-foundations--ud088) courses in the [Full Stack Web Developer Nanodegree program](https://www.udacity.com/course/full-stack-web-developer-nanodegree--nd004)

## Table of Contents

- [Table of Contents](#table-of-contents)
- [Intro](#intro)
- [Installation](#installation)
- [Instructions](#instructions)
- [Troubleshooting](#troubleshooting)
- [Supporting Materials](#supporting-materials)

## Intro

In the next part of this course, you'll use a virtual machine (VM) to run an SQL database server and a web app that uses it. The VM is a Linux server system that runs on top of your own computer. You can share files easily between your computer and the VM; and you'll be running a web service inside the VM which you'll be able to access from your regular browser.

We're using tools called [Vagrant](https://www.vagrantup.com/) and [VirtualBox](https://www.virtualbox.org/wiki/Download_Old_Builds_5_1) to install and manage the VM. You'll need to install these to do some of the exercises. The instructions on this page will help you do this.

### Conceptual overview

[This video](https://www.youtube.com/watch?v=djnqoEO2rLc) offers a conceptual overview of virtual machines and Vagrant. You don't need to watch it to proceed, but you may find it informative.

### Use a terminal

You'll be doing these exercises using a Unix-style terminal on your computer. If you are using a **Mac or Linux** system, your regular terminal program will do just fine. On **Windows**, we recommend using the **Git Bash** terminal that comes with the Git software. If you don't already have Git installed, download Git from [git-scm.com](https://git-scm.com/downloads).

For a refresher on using the Unix shell, look back at [our Shell Workshop](https://www.udacity.com/course/ud206).

If you'd like to learn more about Git, take a look at [our course about Git](https://www.udacity.com/course/ud123).

## Installation

### Install VirtualBox

VirtualBox is the software that actually runs the virtual machine. [You can download it from virtualbox.org, here.](https://www.virtualbox.org/wiki/Download_Old_Builds_5_1) Install the _platform package_ for your operating system. You do not need the extension pack or the SDK. You do not need to launch VirtualBox after installing it; Vagrant will do that.

Currently (October 2017), the supported version of VirtualBox to install is version 5.1. Newer versions do not work with the current release of Vagrant.

**Ubuntu users:** If you are running Ubuntu 14.04, install VirtualBox using the Ubuntu Software Center instead. Due to a reported bug, installing VirtualBox from the site may uninstall other software you need.

### Install Vagrant

Vagrant is the software that configures the VM and lets you share files between your host computer and the VM's filesystem. [Download it from vagrantup.com.](https://www.vagrantup.com/downloads.html) Install the version for your operating system.

**Windows users:** The Installer may ask you to grant network permissions to Vagrant or make a firewall exception. Be sure to allow this.

![vagrant --version](https://d17h27t6h515a5.cloudfront.net/topher/2016/December/584881ee_screen-shot-2016-12-07-at-13.40.43/screen-shot-2016-12-07-at-13.40.43.png)

_If Vagrant is successfully installed, you will be able to run_ `vagrant --version`
_in your terminal to see the version number._
_The shell prompt in your terminal may differ. Here, the_ `$` _sign is the shell prompt._

### Download the VM configuration

Use Github to fork and clone, or download, the repository [https://github.com/udacity/fullstack-nanodegree-vm](https://github.com/udacity/fullstack-nanodegree-vm).

You will end up with a new directory containing the VM files. Change to this directory in your terminal with `cd`. Inside, you will find another directory called **vagrant**. Change directory to the **vagrant** directory:

![vagrant-directory](https://d17h27t6h515a5.cloudfront.net/topher/2016/December/58487f12_screen-shot-2016-12-07-at-13.28.31/screen-shot-2016-12-07-at-13.28.31.png)

_Navigating to the FSND-Virtual-Machine directory and listing the files in it._
_This picture was taken on a Mac, but the commands will look the same on Git Bash on Windows._

## Instructions

### Start the virtual machine

From your terminal, inside the **vagrant** subdirectory, run the command `vagrant up`. This will cause Vagrant to download the Linux operating system and install it. This may take quite a while (many minutes) depending on how fast your Internet connection is.

![vagrant-up-start](https://d17h27t6h515a5.cloudfront.net/topher/2016/December/58488603_screen-shot-2016-12-07-at-13.57.50/screen-shot-2016-12-07-at-13.57.50.png)

_Starting the Ubuntu Linux installation with `vagrant up`._
_This screenshot shows just the beginning of many, many pages of output in a lot of colors._

When `vagrant up` is finished running, you will get your shell prompt back. At this point, you can run `vagrant ssh` to log in to your newly installed Linux VM!

![linux-vm-login](https://d17h27t6h515a5.cloudfront.net/topher/2016/December/58488962_screen-shot-2016-12-07-at-14.12.29/screen-shot-2016-12-07-at-14.12.29.png)

_Logging into the Linux VM with `vagrant ssh`._

### Logged in

If you are now looking at a shell prompt that starts with the word `vagrant` (as in the above screenshot), congratulations — you've gotten logged into your Linux VM.

If not, take a look at the [Troubleshooting](#troubleshooting) section below.

### The files for this course

Inside the VM, change directory to `/vagrant` and look around with `ls`.

The files you see here are the same as the ones in the `vagrant` subdirectory on your computer (where you started Vagrant from). Any file you create in one will be automatically shared to the other. This means that you can edit code in your favorite text editor, and run it inside the VM.

Files in the VM's `/vagrant` directory are shared with the `vagrant` folder on your computer. But other data inside the VM is not. For instance, the PostgreSQL database itself lives only inside the VM.

### Running the database

The PostgreSQL database server will automatically be started inside the VM. You can use the `psql` command-line tool to access it and run SQL statements:

![linux-vm-PostgreSQL](https://d17h27t6h515a5.cloudfront.net/topher/2016/December/58489186_screen-shot-2016-12-07-at-14.46.25/screen-shot-2016-12-07-at-14.46.25.png)

_Running `psql`, the PostgreSQL command interface, inside the VM._

### Logging out and in

If you type `exit` (or `Ctrl-D`) at the shell prompt inside the VM, you will be logged out, and put back into your host computer's shell. To log back in, make sure you're in the same directory and type `vagrant ssh` again.

If you reboot your computer, you will need to run `vagrant up` to restart the VM.

## Troubleshooting

### I'm not sure if it worked

If you can type `vagrant ssh` and log into your VM, then it worked! It's normal for the `vagrant up` process to display a lot of text in many colors, including sometimes scary-looking messages in red, green, and purple. If you get your shell prompt back at the end, and you can log in, it should be OK.

### `vagrant up` is taking a long time

Because it's downloading a whole Linux operating system from the Internet.

### I'm on Windows, and when I run `vagrant ssh`, I don't get a shell prompt

Some versions of Windows and Vagrant have a problem communicating the right settings for the terminal. There is a workaround: Instead of `vagrant ssh`, run the command `winpty vagrant ssh` instead.

### I'm on Windows and getting an error about virtualization

Sometimes other virtualization programs such as Docker or Hyper-V can interfere with VirtualBox. Try shutting these other programs down first.

In addition, some Windows PCs have settings in the BIOS or UEFI (firmware) or in the operating system that disable the use of virtualization. To change this, you may need to reboot your computer and access the firmware settings. [A web search](https://www.google.com/search?q=enable%20virtualization%20windows%2010) can help you find the settings for your computer and operating system. Unfortunately there are so many different versions of Windows and PCs that we can't offer a simple guide to doing this.

### Why are we using a VM, it seems complicated

It is complicated. In this case, the point of it is to be able to offer the same software (Linux and PostgreSQL) regardless of what kind of computer you're running on.

### I got some other error message

If you're getting a specific textual error message, try looking it up on your favorite search engine. If that doesn't help, take a screenshot and post it to the discussion forums, along with as much detail as you can provide about the process you went through to get there.

### If all else fails, try an older version

Udacity mentors have noticed that some newer versions of Vagrant don't work on all operating systems. Version 1.9.2 is reported to be stabler on some systems, and version 1.9.1 is the supported version on Ubuntu 17.04. You can download older versions of Vagrant from [the Vagrant releases index](https://releases.hashicorp.com/vagrant/).

## Supporting Materials

[Virtual machine repository on GitHub](https://github.com/udacity/fullstack-nanodegree-vm)

[(Back to TOC)](#table-of-contents)"
scrapy/scrapy,Python,".. image:: https://scrapy.org/img/scrapylogo.png
   :target: https://scrapy.org/
   
======
Scrapy
======

.. image:: https://img.shields.io/pypi/v/Scrapy.svg
   :target: https://pypi.python.org/pypi/Scrapy
   :alt: PyPI Version

.. image:: https://img.shields.io/pypi/pyversions/Scrapy.svg
   :target: https://pypi.python.org/pypi/Scrapy
   :alt: Supported Python Versions

.. image:: https://github.com/scrapy/scrapy/workflows/Ubuntu/badge.svg
   :target: https://github.com/scrapy/scrapy/actions?query=workflow%3AUbuntu
   :alt: Ubuntu

.. image:: https://github.com/scrapy/scrapy/workflows/macOS/badge.svg
   :target: https://github.com/scrapy/scrapy/actions?query=workflow%3AmacOS
   :alt: macOS

.. image:: https://github.com/scrapy/scrapy/workflows/Windows/badge.svg
   :target: https://github.com/scrapy/scrapy/actions?query=workflow%3AWindows
   :alt: Windows

.. image:: https://img.shields.io/badge/wheel-yes-brightgreen.svg
   :target: https://pypi.python.org/pypi/Scrapy
   :alt: Wheel Status

.. image:: https://img.shields.io/codecov/c/github/scrapy/scrapy/master.svg
   :target: https://codecov.io/github/scrapy/scrapy?branch=master
   :alt: Coverage report

.. image:: https://anaconda.org/conda-forge/scrapy/badges/version.svg
   :target: https://anaconda.org/conda-forge/scrapy
   :alt: Conda Version


Overview
========

Scrapy is a fast high-level web crawling and web scraping framework, used to
crawl websites and extract structured data from their pages. It can be used for
a wide range of purposes, from data mining to monitoring and automated testing.

Scrapy is maintained by Zyte_ (formerly Scrapinghub) and `many other
contributors`_.

.. _many other contributors: https://github.com/scrapy/scrapy/graphs/contributors
.. _Zyte: https://www.zyte.com/

Check the Scrapy homepage at https://scrapy.org for more information,
including a list of features.


Requirements
============

* Python 3.7+
* Works on Linux, Windows, macOS, BSD

Install
=======

The quick way:

.. code:: bash

    pip install scrapy

See the install section in the documentation at
https://docs.scrapy.org/en/latest/intro/install.html for more details.

Documentation
=============

Documentation is available online at https://docs.scrapy.org/ and in the ``docs``
directory.

Releases
========

You can check https://docs.scrapy.org/en/latest/news.html for the release notes.

Community (blog, twitter, mail list, IRC)
=========================================

See https://scrapy.org/community/ for details.

Contributing
============

See https://docs.scrapy.org/en/master/contributing.html for details.

Code of Conduct
---------------

Please note that this project is released with a Contributor `Code of Conduct <https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md>`_.

By participating in this project you agree to abide by its terms.
Please report unacceptable behavior to opensource@zyte.com.

Companies using Scrapy
======================

See https://scrapy.org/companies/ for a list.

Commercial Support
==================

See https://scrapy.org/support/ for details.
"
celery/celery,Python,".. image:: https://docs.celeryq.dev/en/latest/_images/celery-banner-small.png

|build-status| |coverage| |license| |wheel| |semgrep| |pyversion| |pyimp| |ocbackerbadge| |ocsponsorbadge|

:Version: 5.3.0rc1 (dawn-chorus)
:Web: https://docs.celeryq.dev/en/stable/index.html
:Download: https://pypi.org/project/celery/
:Source: https://github.com/celery/celery/
:Keywords: task, queue, job, async, rabbitmq, amqp, redis,
  python, distributed, actors

Donations
=========

This project relies on your generous donations.

If you are using Celery to create a commercial product, please consider becoming our `backer`_ or our `sponsor`_ to ensure Celery's future.

.. _`backer`: https://opencollective.com/celery#backer
.. _`sponsor`: https://opencollective.com/celery#sponsor

For enterprise
==============

Available as part of the Tidelift Subscription.

The maintainers of ``celery`` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. `Learn more. <https://tidelift.com/subscription/pkg/pypi-celery?utm_source=pypi-celery&utm_medium=referral&utm_campaign=enterprise&utm_term=repo>`_

What's a Task Queue?
====================

Task queues are used as a mechanism to distribute work across threads or
machines.

A task queue's input is a unit of work, called a task, dedicated worker
processes then constantly monitor the queue for new work to perform.

Celery communicates via messages, usually using a broker
to mediate between clients and workers. To initiate a task a client puts a
message on the queue, the broker then delivers the message to a worker.

A Celery system can consist of multiple workers and brokers, giving way
to high availability and horizontal scaling.

Celery is written in Python, but the protocol can be implemented in any
language. In addition to Python there's node-celery_ for Node.js,
a `PHP client`_, `gocelery`_, gopher-celery_ for Go, and rusty-celery_ for Rust.

Language interoperability can also be achieved by using webhooks
in such a way that the client enqueues an URL to be requested by a worker.

.. _node-celery: https://github.com/mher/node-celery
.. _`PHP client`: https://github.com/gjedeer/celery-php
.. _`gocelery`: https://github.com/gocelery/gocelery
.. _gopher-celery: https://github.com/marselester/gopher-celery
.. _rusty-celery: https://github.com/rusty-celery/rusty-celery

What do I need?
===============

Celery version 5.3.0a1 runs on,

- Python (3.7, 3.8, 3.9, 3.10)
- PyPy3.7 (7.3.7+)


This is the version of celery which will support Python 3.7 or newer.

If you're running an older version of Python, you need to be running
an older version of Celery:

- Python 3.6: Celery 5.1 or earlier.
- Python 2.7: Celery 4.x series.
- Python 2.6: Celery series 3.1 or earlier.
- Python 2.5: Celery series 3.0 or earlier.
- Python 2.4: Celery series 2.2 or earlier.

Celery is a project with minimal funding,
so we don't support Microsoft Windows.
Please don't open any issues related to that platform.

*Celery* is usually used with a message broker to send and receive messages.
The RabbitMQ, Redis transports are feature complete,
but there's also experimental support for a myriad of other solutions, including
using SQLite for local development.

*Celery* can run on a single machine, on multiple machines, or even
across datacenters.

Get Started
===========

If this is the first time you're trying to use Celery, or you're
new to Celery v5.3.0a1 coming from previous versions then you should read our
getting started tutorials:

- `First steps with Celery`_

    Tutorial teaching you the bare minimum needed to get started with Celery.

- `Next steps`_

    A more complete overview, showing more features.

.. _`First steps with Celery`:
    https://docs.celeryq.dev/en/stable/getting-started/first-steps-with-celery.html

.. _`Next steps`:
    https://docs.celeryq.dev/en/stable/getting-started/next-steps.html

 You can also get started with Celery by using a hosted broker transport CloudAMQP. The largest hosting provider of RabbitMQ is a proud sponsor of Celery.

Celery is...
=============

- **Simple**

    Celery is easy to use and maintain, and does *not need configuration files*.

    It has an active, friendly community you can talk to for support,
    like at our `mailing-list`_, or the IRC channel.

    Here's one of the simplest applications you can make:

    .. code-block:: python

        from celery import Celery

        app = Celery('hello', broker='amqp://guest@localhost//')

        @app.task
        def hello():
            return 'hello world'

- **Highly Available**

    Workers and clients will automatically retry in the event
    of connection loss or failure, and some brokers support
    HA in way of *Primary/Primary* or *Primary/Replica* replication.

- **Fast**

    A single Celery process can process millions of tasks a minute,
    with sub-millisecond round-trip latency (using RabbitMQ,
    py-librabbitmq, and optimized settings).

- **Flexible**

    Almost every part of *Celery* can be extended or used on its own,
    Custom pool implementations, serializers, compression schemes, logging,
    schedulers, consumers, producers, broker transports, and much more.

It supports...
================

    - **Message Transports**

        - RabbitMQ_, Redis_, Amazon SQS

    - **Concurrency**

        - Prefork, Eventlet_, gevent_, single threaded (``solo``)

    - **Result Stores**

        - AMQP, Redis
        - memcached
        - SQLAlchemy, Django ORM
        - Apache Cassandra, IronCache, Elasticsearch

    - **Serialization**

        - *pickle*, *json*, *yaml*, *msgpack*.
        - *zlib*, *bzip2* compression.
        - Cryptographic message signing.

.. _`Eventlet`: http://eventlet.net/
.. _`gevent`: http://gevent.org/

.. _RabbitMQ: https://rabbitmq.com
.. _Redis: https://redis.io
.. _SQLAlchemy: http://sqlalchemy.org

Framework Integration
=====================

Celery is easy to integrate with web frameworks, some of which even have
integration packages:

    +--------------------+------------------------+
    | `Django`_          | not needed             |
    +--------------------+------------------------+
    | `Pyramid`_         | `pyramid_celery`_      |
    +--------------------+------------------------+
    | `Pylons`_          | `celery-pylons`_       |
    +--------------------+------------------------+
    | `Flask`_           | not needed             |
    +--------------------+------------------------+
    | `web2py`_          | `web2py-celery`_       |
    +--------------------+------------------------+
    | `Tornado`_         | `tornado-celery`_      |
    +--------------------+------------------------+

The integration packages aren't strictly necessary, but they can make
development easier, and sometimes they add important hooks like closing
database connections at ``fork``.

.. _`Django`: https://djangoproject.com/
.. _`Pylons`: http://pylonsproject.org/
.. _`Flask`: https://flask.palletsprojects.com/
.. _`web2py`: http://web2py.com/
.. _`Bottle`: https://bottlepy.org/
.. _`Pyramid`: https://docs.pylonsproject.org/projects/pyramid/en/latest/
.. _`pyramid_celery`: https://pypi.org/project/pyramid_celery/
.. _`celery-pylons`: https://pypi.org/project/celery-pylons/
.. _`web2py-celery`: https://code.google.com/p/web2py-celery/
.. _`Tornado`: https://www.tornadoweb.org/
.. _`tornado-celery`: https://github.com/mher/tornado-celery/

.. _celery-documentation:

Documentation
=============

The `latest documentation`_ is hosted at Read The Docs, containing user guides,
tutorials, and an API reference.

最新的中文文档托管在 https://www.celerycn.io/ 中，包含用户指南、教程、API接口等。

.. _`latest documentation`: https://docs.celeryq.dev/en/latest/

.. _celery-installation:

Installation
============

You can install Celery either via the Python Package Index (PyPI)
or from source.

To install using ``pip``:

::


    $ pip install -U Celery

.. _bundles:

Bundles
-------

Celery also defines a group of bundles that can be used
to install Celery and the dependencies for a given feature.

You can specify these in your requirements or on the ``pip``
command-line by using brackets. Multiple bundles can be specified by
separating them by commas.

::


    $ pip install ""celery[amqp]""

    $ pip install ""celery[amqp,redis,auth,msgpack]""

The following bundles are available:

Serializers
~~~~~~~~~~~

:``celery[auth]``:
    for using the ``auth`` security serializer.

:``celery[msgpack]``:
    for using the msgpack serializer.

:``celery[yaml]``:
    for using the yaml serializer.

Concurrency
~~~~~~~~~~~

:``celery[eventlet]``:
    for using the ``eventlet`` pool.

:``celery[gevent]``:
    for using the ``gevent`` pool.

Transports and Backends
~~~~~~~~~~~~~~~~~~~~~~~

:``celery[amqp]``:
    for using the RabbitMQ amqp python library.

:``celery[redis]``:
    for using Redis as a message transport or as a result backend.

:``celery[sqs]``:
    for using Amazon SQS as a message transport.

:``celery[tblib``]:
    for using the ``task_remote_tracebacks`` feature.

:``celery[memcache]``:
    for using Memcached as a result backend (using ``pylibmc``)

:``celery[pymemcache]``:
    for using Memcached as a result backend (pure-Python implementation).

:``celery[cassandra]``:
    for using Apache Cassandra/Astra DB as a result backend with the DataStax driver.

:``celery[azureblockblob]``:
    for using Azure Storage as a result backend (using ``azure-storage``)

:``celery[s3]``:
    for using S3 Storage as a result backend.

:``celery[couchbase]``:
    for using Couchbase as a result backend.

:``celery[arangodb]``:
    for using ArangoDB as a result backend.

:``celery[elasticsearch]``:
    for using Elasticsearch as a result backend.

:``celery[riak]``:
    for using Riak as a result backend.

:``celery[cosmosdbsql]``:
    for using Azure Cosmos DB as a result backend (using ``pydocumentdb``)

:``celery[zookeeper]``:
    for using Zookeeper as a message transport.

:``celery[sqlalchemy]``:
    for using SQLAlchemy as a result backend (*supported*).

:``celery[pyro]``:
    for using the Pyro4 message transport (*experimental*).

:``celery[slmq]``:
    for using the SoftLayer Message Queue transport (*experimental*).

:``celery[consul]``:
    for using the Consul.io Key/Value store as a message transport or result backend (*experimental*).

:``celery[django]``:
    specifies the lowest version possible for Django support.

    You should probably not use this in your requirements, it's here
    for informational purposes only.


.. _celery-installing-from-source:

Downloading and installing from source
--------------------------------------

Download the latest version of Celery from PyPI:

https://pypi.org/project/celery/

You can install it by doing the following,:

::


    $ tar xvfz celery-0.0.0.tar.gz
    $ cd celery-0.0.0
    $ python setup.py build
    # python setup.py install

The last command must be executed as a privileged user if
you aren't currently using a virtualenv.

.. _celery-installing-from-git:

Using the development version
-----------------------------

With pip
~~~~~~~~

The Celery development version also requires the development
versions of ``kombu``, ``amqp``, ``billiard``, and ``vine``.

You can install the latest snapshot of these using the following
pip commands:

::


    $ pip install https://github.com/celery/celery/zipball/main#egg=celery
    $ pip install https://github.com/celery/billiard/zipball/main#egg=billiard
    $ pip install https://github.com/celery/py-amqp/zipball/main#egg=amqp
    $ pip install https://github.com/celery/kombu/zipball/main#egg=kombu
    $ pip install https://github.com/celery/vine/zipball/main#egg=vine

With git
~~~~~~~~

Please see the Contributing section.

.. _getting-help:

Getting Help
============

.. _mailing-list:

Mailing list
------------

For discussions about the usage, development, and future of Celery,
please join the `celery-users`_ mailing list.

.. _`celery-users`: https://groups.google.com/group/celery-users/

.. _irc-channel:

IRC
---

Come chat with us on IRC. The **#celery** channel is located at the
`Libera Chat`_ network.

.. _`Libera Chat`: https://libera.chat/

.. _bug-tracker:

Bug tracker
===========

If you have any suggestions, bug reports, or annoyances please report them
to our issue tracker at https://github.com/celery/celery/issues/

.. _wiki:

Wiki
====

https://github.com/celery/celery/wiki

Credits
=======

.. _contributing-short:

Contributors
------------

This project exists thanks to all the people who contribute. Development of
`celery` happens at GitHub: https://github.com/celery/celery

You're highly encouraged to participate in the development
of `celery`. If you don't like GitHub (for some reason) you're welcome
to send regular patches.

Be sure to also read the `Contributing to Celery`_ section in the
documentation.

.. _`Contributing to Celery`:
    https://docs.celeryq.dev/en/stable/contributing.html

|oc-contributors|

.. |oc-contributors| image:: https://opencollective.com/celery/contributors.svg?width=890&button=false
    :target: https://github.com/celery/celery/graphs/contributors

Backers
-------

Thank you to all our backers! 🙏 [`Become a backer`_]

.. _`Become a backer`: https://opencollective.com/celery#backer

|oc-backers|

.. |oc-backers| image:: https://opencollective.com/celery/backers.svg?width=890
    :target: https://opencollective.com/celery#backers

Sponsors
--------

Support this project by becoming a sponsor. Your logo will show up here with a
link to your website. [`Become a sponsor`_]

.. _`Become a sponsor`: https://opencollective.com/celery#sponsor

|oc-sponsors|

.. |oc-sponsors| image:: https://opencollective.com/celery/sponsor/0/avatar.svg
    :target: https://opencollective.com/celery/sponsor/0/website

.. _license:

License
=======

This software is licensed under the `New BSD License`. See the ``LICENSE``
file in the top distribution directory for the full license text.

.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround

.. |build-status| image:: https://github.com/celery/celery/actions/workflows/python-package.yml/badge.svg
    :alt: Build status
    :target: https://github.com/celery/celery/actions/workflows/python-package.yml

.. |coverage| image:: https://codecov.io/github/celery/celery/coverage.svg?branch=main
    :target: https://codecov.io/github/celery/celery?branch=main

.. |license| image:: https://img.shields.io/pypi/l/celery.svg
    :alt: BSD License
    :target: https://opensource.org/licenses/BSD-3-Clause

.. |wheel| image:: https://img.shields.io/pypi/wheel/celery.svg
    :alt: Celery can be installed via wheel
    :target: https://pypi.org/project/celery/

.. |semgrep| image:: https://img.shields.io/badge/semgrep-security-green.svg
    :alt: Semgrep security
    :target: https://go.semgrep.dev/home

.. |pyversion| image:: https://img.shields.io/pypi/pyversions/celery.svg
    :alt: Supported Python versions.
    :target: https://pypi.org/project/celery/

.. |pyimp| image:: https://img.shields.io/pypi/implementation/celery.svg
    :alt: Supported Python implementations.
    :target: https://pypi.org/project/celery/

.. |ocbackerbadge| image:: https://opencollective.com/celery/backers/badge.svg
    :alt: Backers on Open Collective
    :target: #backers

.. |ocsponsorbadge| image:: https://opencollective.com/celery/sponsors/badge.svg
    :alt: Sponsors on Open Collective
    :target: #sponsors

.. |downloads| image:: https://pepy.tech/badge/celery
    :alt: Downloads
    :target: https://pepy.tech/project/celery
"
RasaHQ/rasa,Python,"<h1 align=""center"">Rasa Open Source</h1>

<div align=""center"">

[![Join the chat on Rasa Community Forum](https://img.shields.io/badge/forum-join%20discussions-brightgreen.svg)](https://forum.rasa.com/?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![PyPI version](https://badge.fury.io/py/rasa.svg)](https://badge.fury.io/py/rasa)
[![Supported Python Versions](https://img.shields.io/pypi/pyversions/rasa.svg)](https://pypi.python.org/pypi/rasa)
[![Build Status](https://github.com/RasaHQ/rasa/workflows/Continuous%20Integration/badge.svg)](https://github.com/RasaHQ/rasa/actions)
[![Coverage Status](https://api.codeclimate.com/v1/badges/756dc6fea1d5d3e127f7/test_coverage)](https://codeclimate.com/github/RasaHQ/rasa/)
[![Documentation Status](https://img.shields.io/badge/docs-stable-brightgreen.svg)](https://rasa.com/docs)
![Documentation Build](https://img.shields.io/netlify/d2e447e4-5a5e-4dc7-be5d-7c04ae7ff706?label=Documentation%20Build)
[![FOSSA Status](https://app.fossa.com/api/projects/custom%2B8141%2Fgit%40github.com%3ARasaHQ%2Frasa.git.svg?type=shield)](https://app.fossa.com/projects/custom%2B8141%2Fgit%40github.com%3ARasaHQ%2Frasa.git?ref=badge_shield)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/orgs/RasaHQ/projects/23)

</div>

<hr />

💡 **We're migrating issues to Jira** 💡

Starting January 2023, issues for Rasa Open Source are located in
[this Jira board](https://rasa-open-source.atlassian.net/browse/OSS). You can browse issues without being logged in;
if you want to create issues, you'll need to create a Jira account.

<hr />

<img align=""right"" height=""255"" src=""https://www.rasa.com/assets/img/sara/sara-open-source-2.0.png"" alt=""An image of Sara, the Rasa mascot bird, holding a flag that reads Open Source with one wing, and a wrench in the other"" title=""Rasa Open Source"">

Rasa is an open source machine learning framework to automate text and voice-based conversations. With Rasa, you can build contextual assistants on:
- Facebook Messenger
- Slack
- Google Hangouts
- Webex Teams
- Microsoft Bot Framework
- Rocket.Chat
- Mattermost
- Telegram
- Twilio
- Your own custom conversational channels

or voice assistants as:
- Alexa Skills
- Google Home Actions

Rasa helps you build contextual assistants capable of having layered conversations with
lots of back-and-forth. In order for a human to have a meaningful exchange with a contextual
assistant, the assistant needs to be able to use context to build on things that were previously
discussed – Rasa enables you to build assistants that can do this in a scalable way.

There's a lot more background information in this
[blog post](https://medium.com/rasa-blog/a-new-approach-to-conversational-software-2e64a5d05f2a).

---
- 🤔 [Learn more about Rasa](https://rasa.community/)

- 🤓 [Read The Docs](https://rasa.com/docs/rasa/)

- 😁 [Install Rasa](https://rasa.com/docs/rasa/installation/environment-set-up)

- 🚀 [Dive deeper in the learning center](https://learning.rasa.com/)

- 🤗 [Contribute](#how-to-contribute)

- ❓ [Get enterprise-grade support](https://rasa.com/support/)

- 🏢 [Explore the features of our commercial platform](https://rasa.com/product/rasa-platform/)

- 📚 [Learn more about research papers that leverage Rasa](https://scholar.google.com/scholar?oi=bibs&hl=en&authuser=1&cites=16243802403383697687,353275993797024115,14567308604105196228,9067977709825839723,9855847065463746011&as_sdt=5)



---
## Where to get help

There is extensive documentation in the [Rasa Docs](https://rasa.com/docs/rasa).
Make sure to select the correct version so you are looking at
the docs for the version you installed.

Please use [Rasa Community Forum](https://forum.rasa.com) for quick answers to
questions.

### README Contents:
- [How to contribute](#how-to-contribute)
- [Development Internals](#development-internals)
- [Releases](#releases)
- [License](#license)

### How to contribute
We are very happy to receive and merge your contributions into this repository!

To contribute via pull request, follow these steps:

1. Create an issue describing the feature you want to work on (or
   have a look at the [contributor board](https://github.com/orgs/RasaHQ/projects/23))
2. Write your code, tests and documentation, and format them with ``black``
3. Create a pull request describing your changes

For more detailed instructions on how to contribute code, check out these [code contributor guidelines](CONTRIBUTING.md).

You can find more information about how to contribute to Rasa (in lots of
different ways!) [on our website.](http://rasa.community).

Your pull request will be reviewed by a maintainer, who will get
back to you about any necessary changes or questions. You will
also be asked to sign a
[Contributor License Agreement](https://cla-assistant.io/RasaHQ/rasa).


## Development Internals

### Installing Poetry

Rasa uses Poetry for packaging and dependency management. If you want to build it from source,
you have to install Poetry first. Please follow
[the official guide](https://python-poetry.org/docs/#installation) to see all possible options.

To update an existing poetry version to the [version](.github/poetry_version.txt), currently used in rasa, run:
```shell
    poetry self update <version>
```

### Managing environments

The official [Poetry guide](https://python-poetry.org/docs/managing-environments/) suggests to use
[pyenv](https://github.com/pyenv/pyenv) or any other similar tool to easily switch between Python versions.
This is how it can be done:

```bash
pyenv install 3.10.10
pyenv local 3.10.10  # Activate Python 3.10.10 for the current project
```
*Note*: If you have trouble installing a specific version of python on your system
it might be worth trying other supported versions.

By default, Poetry will try to use the currently activated Python version to create the virtual environment
for the current project automatically. You can also create and activate a virtual environment manually — in this
case, Poetry should pick it up and use it to install the dependencies. For example:

```bash
python -m venv .venv
source .venv/bin/activate
```

You can make sure that the environment is picked up by executing

```bash
poetry env info
```

### Building from source

To install dependencies and `rasa` itself in editable mode execute

```bash
make install
```

*Note for macOS users*: under macOS Big Sur we've seen some compiler issues for
dependencies. Using `export SYSTEM_VERSION_COMPAT=1` before the installation helped.


#### Installing optional dependencies

In order to install rasa's optional dependencies, you need to run:

```bash
make install-full
```

*Note for macOS users*: The command `make install-full` could result in a failure while installing `tokenizers`
(issue described in depth [here](https://github.com/huggingface/tokenizers/issues/1050)).

In order to resolve it, you must follow these steps to install a Rust compiler:
```bash
brew install rustup
rustup-init
```

After initialising the Rust compiler, you should restart the console and check its installation:
```bash
rustc --version
```

In case the PATH variable had not been automatically setup, run:
```bash
export PATH=""$HOME/.cargo/bin:$PATH""
```


### Running and changing the documentation

First of all, install all the required dependencies:

```bash
make install install-docs
```

After the installation has finished, you can run and view the documentation
locally using:

```bash
make livedocs
```

It should open a new tab with the local version of the docs in your browser;
if not, visit http://localhost:3000 in your browser.
You can now change the docs locally and the web page will automatically reload
and apply your changes.

### Running the Tests

In order to run the tests, make sure that you have the development requirements installed:

```bash
make prepare-tests-ubuntu # Only on Ubuntu and Debian based systems
make prepare-tests-macos  # Only on macOS
```

Then, run the tests:

```bash
make test
```

They can also be run at multiple jobs to save some time:

```bash
JOBS=[n] make test
```

Where `[n]` is the number of jobs desired. If omitted, `[n]` will be automatically chosen by pytest.


### Running the Integration Tests

In order to run the integration tests, make sure that you have the development requirements installed:

```bash
make prepare-tests-ubuntu # Only on Ubuntu and Debian based systems
make prepare-tests-macos  # Only on macOS
```

Then, you'll need to start services with the following command which uses
[Docker Compose](https://docs.docker.com/compose/install/):

```bash
make run-integration-containers
```

Finally, you can run the integration tests like this:

```bash
make test-integration
```


### Resolving merge conflicts

Poetry doesn't include any solution that can help to resolve merge conflicts in
the lock file `poetry.lock` by default.
However, there is a great tool called [poetry-merge-lock](https://poetry-merge-lock.readthedocs.io/en/latest/).
Here is how you can install it:

```bash
pip install poetry-merge-lock
```

Just execute this command to resolve merge conflicts in `poetry.lock` automatically:

```bash
poetry-merge-lock
```

### Build a Docker image locally

In order to build a Docker image on your local machine execute the following command:

```bash
make build-docker
```

The Docker image is available on your local machine as `rasa:localdev`.

### Code Style

To ensure a standardized code style we use the formatter [black](https://github.com/ambv/black).
To ensure our type annotations are correct we use the type checker [pytype](https://github.com/google/pytype).
If your code is not formatted properly or doesn't type check, GitHub will fail to build.

#### Formatting

If you want to automatically format your code on every commit, you can use [pre-commit](https://pre-commit.com/).
Just install it via `pip install pre-commit` and execute `pre-commit install` in the root folder.
This will add a hook to the repository, which reformats files on every commit.

If you want to set it up manually, install black via `poetry install`.
To reformat files execute
```
make formatter
```

#### Type Checking

If you want to check types on the codebase, install `mypy` using `poetry install`.
To check the types execute
```
make types
```

### Deploying documentation updates

We use `Docusaurus v2` to build docs for tagged versions and for the `main` branch.
To run Docusaurus, install `Node.js 12.x`.
The static site that gets built is pushed to the `documentation` branch of this repo.

We host the site on netlify. On `main` branch builds (see `.github/workflows/documentation.yml`), we push the built docs to
the `documentation` branch. Netlify automatically re-deploys the docs pages whenever there is a change to that branch.

## Releases
Rasa has implemented robust policies governing version naming, as well as release pace for major, minor, and patch releases.

The values for a given version number (MAJOR.MINOR.PATCH) are incremented as follows:
- MAJOR version for incompatible API changes or other breaking changes.
- MINOR version for functionality added in a backward compatible manner.
- PATCH version for backward compatible bug fixes.

The following table describes the version types and their expected *release cadence*:

| Version Type |                                                                  Description                                                                  |  Target Cadence |
|--------------|-----------------------------------------------------------------------------------------------------------------------------------------------|-----------------|
| Major        | For significant changes, or when any backward-incompatible changes are introduced to the API or data model.                                   | Every 1 - 2 yrs |
| Minor        | For when new backward-compatible functionality is introduced, a minor feature is introduced, or when a set of smaller features is rolled out. | +/- Quarterly   |
| Patch        | For backward-compatible bug fixes that fix incorrect behavior.                                                                                | As needed       |

While this table represents our target release frequency, we reserve the right to modify it based on changing market conditions and technical requirements.

### Maintenance Policy
Our End of Life policy defines how long a given release is considered supported, as well as how long a release is
considered to be still in active development or maintenance.

The maintentance duration and end of life for every release are shown on our website as part of the [Product Release and Maintenance Policy](https://rasa.com/rasa-product-release-and-maintenance-policy/).

### Cutting a Major / Minor release
#### A week before release day

1. **Make sure the [milestone](https://github.com/RasaHQ/rasa/milestones) already exists and is scheduled for the
correct date.**
2. **Take a look at the issues & PRs that are in the milestone**: does it look about right for the release highlights
we are planning to ship? Does it look like anything is missing? Don't worry about being aware of every PR that should
be in, but it's useful to take a moment to evaluate what's assigned to the milestone.
3. **Post a message on the engineering Slack channel**, letting the team know you'll be the one cutting the upcoming
release, as well as:
    1. Providing the link to the appropriate milestone
    2. Reminding everyone to go over their issues and PRs and please assign them to the milestone
    3. Reminding everyone of the scheduled date for the release

#### A day before release day

1. **Go over the milestone and evaluate the status of any PR merging that's happening. Follow up with people on their
bugs and fixes.** If the release introduces new bugs or regressions that can't be fixed in time, we should discuss on
Slack about this and take a decision on how to move forward. If the issue is not ready to be merged in time, we remove the issue / PR from the milestone and notify the PR owner and the product manager on Slack about it. The PR / issue owners are responsible for
communicating any issues which might be release relevant. Postponing the release should be considered as an edge case scenario.

#### Release day! 🚀

1. **At the start of the day, post a small message on slack announcing release day!** Communicate you'll be handling
the release, and the time you're aiming to start releasing (again, no later than 4pm, as issues may arise and
cause delays). This message should be posted early in the morning and before moving forward with any of the steps of the release,
   in order to give enough time to people to check their PRs and issues. That way they can plan any remaining work. A template of the slack message can be found [here](https://rasa-hq.slack.com/archives/C36SS4N8M/p1613032208137500?thread_ts=1612876410.068400&cid=C36SS4N8M).
   The release time should be communicated transparently so that others can plan potentially necessary steps accordingly. If there are bigger changes this should be communicated.
2. Make sure the milestone is empty (everything has been either merged or moved to the next milestone)
3. Once everything in the milestone is taken care of, post a small message on Slack communicating you are about to
start the release process (in case anything is missing).
4. **You may now do the release by following the instructions outlined in the
[Rasa Open Source README](#steps-to-release-a-new-version) !**

#### After a Major release

After a Major release has been completed, please follow [these instructions to complete the documentation update](./docs/README.md#manual-steps-after-a-new-version).

### Steps to release a new version
Releasing a new version is quite simple, as the packages are build and distributed by GitHub Actions.

*Release steps*:
1. Make sure all dependencies are up to date (**especially Rasa SDK**)
    - For Rasa SDK, except in the case of a patch release, that means first creating a [new Rasa SDK release](https://github.com/RasaHQ/rasa-sdk#steps-to-release-a-new-version) (make sure the version numbers between the new Rasa and Rasa SDK releases match)
    - Once the tag with the new Rasa SDK release is pushed and the package appears on [pypi](https://pypi.org/project/rasa-sdk/), the dependency in the rasa repository can be resolved (see below).
2. If this is a minor / major release: Make sure all fixes from currently supported minor versions have been merged from their respective release branches (e.g. 3.3.x) back into main.
3. In case of a minor release, create a new branch that corresponds to the new release, e.g.
   ```bash
    git checkout -b 1.2.x
    git push origin 1.2.x
    ```
4. Switch to the branch you want to cut the release from (`main` in case of a major, the `<major>.<minor>.x` branch for minors and patches)
    - Update the `rasa-sdk` entry in `pyproject.toml` with the new release version and run `poetry update`. This creates a new `poetry.lock` file with all dependencies resolved.
    - Commit the changes with `git commit -am ""bump rasa-sdk dependency""` but do not push them. They will be automatically picked up by the following step.
5. If this is a major release, update the list of actively maintained versions [in the README](#actively-maintained-versions) and in [the docs](./docs/docs/actively-maintained-versions.mdx).
6. Run `make release`
7. Create a PR against the release branch (e.g. `1.2.x`)
8. Once your PR is merged, tag a new release (this SHOULD always happen on the release branch), e.g. using
    ```bash
    git checkout 1.2.x
    git pull origin 1.2.x
    git tag 1.2.0 -m ""next release""
    git push origin 1.2.0 --tags
    ```
    GitHub will build this tag and publish the build artifacts.
9. After all the steps are completed and if everything goes well then we should see a message automatically posted in the company's Slack (`product` channel) like this [one](https://rasa-hq.slack.com/archives/C7B08Q5FX/p1614354499046600)
10. If no message appears in the channel then you can do the following checks:
    - Check the workflows in [Github Actions](https://github.com/RasaHQ/rasa/actions) and make sure that the merged PR of the current release is completed successfully. To easily find your PR you can use the filters `event: push` and `branch: <version number>` (example on release 2.4 you can see [here](https://github.com/RasaHQ/rasa/actions/runs/643344876))
    - If the workflow is not completed, then try to re run the workflow in case that solves the problem
    - If the problem persists, check also the log files and try to find the root cause of the issue
    - If you still cannot resolve the error, contact the infrastructure team by providing any helpful information from your investigation
11.  After the message is posted correctly in the `product` channel, check also in the `product-engineering-alerts` channel if there are any alerts related to the Rasa Open Source release like this [one](https://rasa-hq.slack.com/archives/C01585AN2NP/p1615486087001000)

### Cutting a Patch release

Patch releases are simpler to cut, since they are meant to contain only bugfixes.

**The only things you need to do to cut a patch release are:**

1. Notify the engineering team on Slack that you are planning to cut a patch, in case someone has an important fix
to add.
2. Make sure the bugfix(es) are in the release branch you will use (p.e if you are cutting a `2.0.4` patch, you will
need your fixes to be on the `2.0.x` release branch). All patch releases must come from a `.x` branch!
3. Once you're ready to release the Rasa Open Source patch, checkout the branch, run `make release` and follow the
steps + get the PR merged.
4. Once the PR is in, pull the `.x` branch again and push the tag!

### Additional Release Tasks 
**Note: This is only required if the released version is the highest version available.
For instance, perform the following steps when version > [version](https://github.com/RasaHQ/rasa/blob/main/rasa/version.py) on main.**

In order to check compatibility between the new released Rasa version to the latest version of Rasa X/Enterprise, we perform the following steps:
1. Following a new Rasa release, an automated pull request is created in [Rasa-X-Demo](https://github.com/RasaHQ/rasa-x-demo/pulls). 
2. Once the above PR is merged, follow instructions [here](https://github.com/RasaHQ/rasa-x-demo/blob/master/.github/VERSION_BUMPER_PR_COMMENT.md), to release a version.
3. Update the new version in the Rasa X/Enterprise [env file](https://github.com/RasaHQ/rasa-x/blob/main/.env).
The [Rasa-X-Demo](https://github.com/RasaHQ/rasa-x-demo) project uses the new updated Rasa version to train and test a model which in turn is used by our CI to run tests in the Rasa X/Enterprise repository, 
thus validating compatibility between Rasa and Rasa X/Enterprise.

### Actively maintained versions

Please refer to the [Rasa Product Release and Maintenance Policy](https://rasa.com/rasa-product-release-and-maintenance-policy/) page.

## License
Licensed under the Apache License, Version 2.0.
Copyright 2022 Rasa Technologies GmbH. [Copy of the license](LICENSE.txt).

A list of the Licenses of the dependencies of the project can be found at
the bottom of the
[Libraries Summary](https://libraries.io/github/RasaHQ/rasa).
"
explosion/spaCy,Python,"<a href=""https://explosion.ai""><img src=""https://explosion.ai/assets/img/logo.svg"" width=""125"" height=""125"" align=""right"" /></a>

# spaCy: Industrial-strength NLP

spaCy is a library for **advanced Natural Language Processing** in Python and
Cython. It's built on the very latest research, and was designed from day one to
be used in real products.

spaCy comes with
[pretrained pipelines](https://spacy.io/models) and
currently supports tokenization and training for **70+ languages**. It features
state-of-the-art speed and **neural network models** for tagging,
parsing, **named entity recognition**, **text classification** and more,
multi-task learning with pretrained **transformers** like BERT, as well as a
production-ready [**training system**](https://spacy.io/usage/training) and easy
model packaging, deployment and workflow management. spaCy is commercial
open-source software, released under the [MIT license](https://github.com/explosion/spaCy/blob/master/LICENSE).

💥 **We'd love to hear more about your experience with spaCy!**
[Fill out our survey here.](https://form.typeform.com/to/aMel9q9f)

💫 **Version 3.5 out now!**
[Check out the release notes here.](https://github.com/explosion/spaCy/releases)

[![Azure Pipelines](https://img.shields.io/azure-devops/build/explosion-ai/public/8/master.svg?logo=azure-pipelines&style=flat-square&label=build)](https://dev.azure.com/explosion-ai/public/_build?definitionId=8)
[![Current Release Version](https://img.shields.io/github/release/explosion/spacy.svg?style=flat-square&logo=github)](https://github.com/explosion/spaCy/releases)
[![pypi Version](https://img.shields.io/pypi/v/spacy.svg?style=flat-square&logo=pypi&logoColor=white)](https://pypi.org/project/spacy/)
[![conda Version](https://img.shields.io/conda/vn/conda-forge/spacy.svg?style=flat-square&logo=conda-forge&logoColor=white)](https://anaconda.org/conda-forge/spacy)
[![Python wheels](https://img.shields.io/badge/wheels-%E2%9C%93-4c1.svg?longCache=true&style=flat-square&logo=python&logoColor=white)](https://github.com/explosion/wheelwright/releases)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/ambv/black)
<br />
[![PyPi downloads](https://static.pepy.tech/personalized-badge/spacy?period=total&units=international_system&left_color=grey&right_color=orange&left_text=pip%20downloads)](https://pypi.org/project/spacy/)
[![Conda downloads](https://img.shields.io/conda/dn/conda-forge/spacy?label=conda%20downloads)](https://anaconda.org/conda-forge/spacy)
[![spaCy on Twitter](https://img.shields.io/twitter/follow/spacy_io.svg?style=social&label=Follow)](https://twitter.com/spacy_io)

## 📖 Documentation

| Documentation                                                                                                                                                                                                             |                                                                                                                                                                                                                                                                                                                              |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| ⭐️ **[spaCy 101]**                                                                                                                                                                                                       | New to spaCy? Here's everything you need to know!                                                                                                                                                                                                                                                                            |
| 📚 **[Usage Guides]**                                                                                                                                                                                                     | How to use spaCy and its features.                                                                                                                                                                                                                                                                                           |
| 🚀 **[New in v3.0]**                                                                                                                                                                                                      | New features, backwards incompatibilities and migration guide.                                                                                                                                                                                                                                                               |
| 🪐 **[Project Templates]**                                                                                                                                                                                                | End-to-end workflows you can clone, modify and run.                                                                                                                                                                                                                                                                          |
| 🎛 **[API Reference]**                                                                                                                                                                                                     | The detailed reference for spaCy's API.                                                                                                                                                                                                                                                                                      |
| 📦 **[Models]**                                                                                                                                                                                                           | Download trained pipelines for spaCy.                                                                                                                                                                                                                                                                                        |
| 🌌 **[Universe]**                                                                                                                                                                                                         | Plugins, extensions, demos and books from the spaCy ecosystem.                                                                                                                                                                                                                                                               |
| 👩‍🏫 **[Online Course]**                                                                                                                                                                                                    | Learn spaCy in this free and interactive online course.                                                                                                                                                                                                                                                                      |
| 📺 **[Videos]**                                                                                                                                                                                                           | Our YouTube channel with video tutorials, talks and more.                                                                                                                                                                                                                                                                    |
| 🛠 **[Changelog]**                                                                                                                                                                                                         | Changes and version history.                                                                                                                                                                                                                                                                                                 |
| 💝 **[Contribute]**                                                                                                                                                                                                       | How to contribute to the spaCy project and code base.                                                                                                                                                                                                                                                                        |
| <a href=""https://explosion.ai/spacy-tailored-pipelines""><img src=""https://user-images.githubusercontent.com/13643239/152853098-1c761611-ccb0-4ec6-9066-b234552831fe.png"" width=""125"" alt=""spaCy Tailored Pipelines""/></a> | Get a custom spaCy pipeline, tailor-made for your NLP problem by spaCy's core developers. Streamlined, production-ready, predictable and maintainable. Start by completing our 5-minute questionnaire to tell us what you need and we'll be in touch! **[Learn more &rarr;](https://explosion.ai/spacy-tailored-pipelines)** |
| <a href=""https://explosion.ai/spacy-tailored-analysis""><img src=""https://user-images.githubusercontent.com/1019791/206151300-b00cd189-e503-4797-aa1e-1bb6344062c5.png"" width=""125"" alt=""spaCy Tailored Pipelines""/></a> | Bespoke advice for problem solving, strategy and analysis for applied NLP projects. Services include data strategy, code reviews, pipeline design and annotation coaching. Curious? Fill in our 5-minute questionnaire to tell us what you need and we'll be in touch! **[Learn more &rarr;](https://explosion.ai/spacy-tailored-analysis)** |

[spacy 101]: https://spacy.io/usage/spacy-101
[new in v3.0]: https://spacy.io/usage/v3
[usage guides]: https://spacy.io/usage/
[api reference]: https://spacy.io/api/
[models]: https://spacy.io/models
[universe]: https://spacy.io/universe
[videos]: https://www.youtube.com/c/ExplosionAI
[online course]: https://course.spacy.io
[project templates]: https://github.com/explosion/projects
[changelog]: https://spacy.io/usage#changelog
[contribute]: https://github.com/explosion/spaCy/blob/master/CONTRIBUTING.md


## 💬 Where to ask questions

The spaCy project is maintained by the [spaCy team](https://explosion.ai/about).
Please understand that we won't be able to provide individual support via email.
We also believe that help is much more valuable if it's shared publicly, so that
more people can benefit from it.

| Type                            | Platforms                               |
| ------------------------------- | --------------------------------------- |
| 🚨 **Bug Reports**              | [GitHub Issue Tracker]                  |
| 🎁 **Feature Requests & Ideas** | [GitHub Discussions]                    |
| 👩‍💻 **Usage Questions**          | [GitHub Discussions] · [Stack Overflow] |
| 🗯 **General Discussion**        | [GitHub Discussions]                    |

[github issue tracker]: https://github.com/explosion/spaCy/issues
[github discussions]: https://github.com/explosion/spaCy/discussions
[stack overflow]: https://stackoverflow.com/questions/tagged/spacy

## Features

- Support for **70+ languages**
- **Trained pipelines** for different languages and tasks
- Multi-task learning with pretrained **transformers** like BERT
- Support for pretrained **word vectors** and embeddings
- State-of-the-art speed
- Production-ready **training system**
- Linguistically-motivated **tokenization**
- Components for named **entity recognition**, part-of-speech-tagging, dependency parsing, sentence segmentation, **text classification**, lemmatization, morphological analysis, entity linking and more
- Easily extensible with **custom components** and attributes
- Support for custom models in **PyTorch**, **TensorFlow** and other frameworks
- Built in **visualizers** for syntax and NER
- Easy **model packaging**, deployment and workflow management
- Robust, rigorously evaluated accuracy

📖 **For more details, see the
[facts, figures and benchmarks](https://spacy.io/usage/facts-figures).**

## ⏳ Install spaCy

For detailed installation instructions, see the
[documentation](https://spacy.io/usage).

- **Operating system**: macOS / OS X · Linux · Windows (Cygwin, MinGW, Visual
  Studio)
- **Python version**: Python 3.6+ (only 64 bit)
- **Package managers**: [pip] · [conda] (via `conda-forge`)

[pip]: https://pypi.org/project/spacy/
[conda]: https://anaconda.org/conda-forge/spacy

### pip

Using pip, spaCy releases are available as source packages and binary wheels.
Before you install spaCy and its dependencies, make sure that
your `pip`, `setuptools` and `wheel` are up to date.

```bash
pip install -U pip setuptools wheel
pip install spacy
```

To install additional data tables for lemmatization and normalization you can
run `pip install spacy[lookups]` or install
[`spacy-lookups-data`](https://github.com/explosion/spacy-lookups-data)
separately. The lookups package is needed to create blank models with
lemmatization data, and to lemmatize in languages that don't yet come with
pretrained models and aren't powered by third-party libraries.

When using pip it is generally recommended to install packages in a virtual
environment to avoid modifying system state:

```bash
python -m venv .env
source .env/bin/activate
pip install -U pip setuptools wheel
pip install spacy
```

### conda

You can also install spaCy from `conda` via the `conda-forge` channel. For the
feedstock including the build recipe and configuration, check out
[this repository](https://github.com/conda-forge/spacy-feedstock).

```bash
conda install -c conda-forge spacy
```

### Updating spaCy

Some updates to spaCy may require downloading new statistical models. If you're
running spaCy v2.0 or higher, you can use the `validate` command to check if
your installed models are compatible and if not, print details on how to update
them:

```bash
pip install -U spacy
python -m spacy validate
```

If you've trained your own models, keep in mind that your training and runtime
inputs must match. After updating spaCy, we recommend **retraining your models**
with the new version.

📖 **For details on upgrading from spaCy 2.x to spaCy 3.x, see the
[migration guide](https://spacy.io/usage/v3#migrating).**

## 📦 Download model packages

Trained pipelines for spaCy can be installed as **Python packages**. This
means that they're a component of your application, just like any other module.
Models can be installed using spaCy's [`download`](https://spacy.io/api/cli#download)
command, or manually by pointing pip to a path or URL.

| Documentation              |                                                                  |
| -------------------------- | ---------------------------------------------------------------- |
| **[Available Pipelines]**  | Detailed pipeline descriptions, accuracy figures and benchmarks. |
| **[Models Documentation]** | Detailed usage and installation instructions.                    |
| **[Training]**             | How to train your own pipelines on your data.                    |

[available pipelines]: https://spacy.io/models
[models documentation]: https://spacy.io/usage/models
[training]: https://spacy.io/usage/training

```bash
# Download best-matching version of specific model for your spaCy installation
python -m spacy download en_core_web_sm

# pip install .tar.gz archive or .whl from path or URL
pip install /Users/you/en_core_web_sm-3.0.0.tar.gz
pip install /Users/you/en_core_web_sm-3.0.0-py3-none-any.whl
pip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.0.0/en_core_web_sm-3.0.0.tar.gz
```

### Loading and using models

To load a model, use [`spacy.load()`](https://spacy.io/api/top-level#spacy.load)
with the model name or a path to the model data directory.

```python
import spacy
nlp = spacy.load(""en_core_web_sm"")
doc = nlp(""This is a sentence."")
```

You can also `import` a model directly via its full name and then call its
`load()` method with no arguments.

```python
import spacy
import en_core_web_sm

nlp = en_core_web_sm.load()
doc = nlp(""This is a sentence."")
```

📖 **For more info and examples, check out the
[models documentation](https://spacy.io/docs/usage/models).**

## ⚒ Compile from source

The other way to install spaCy is to clone its
[GitHub repository](https://github.com/explosion/spaCy) and build it from
source. That is the common way if you want to make changes to the code base.
You'll need to make sure that you have a development environment consisting of a
Python distribution including header files, a compiler,
[pip](https://pip.pypa.io/en/latest/installing/),
[virtualenv](https://virtualenv.pypa.io/en/latest/) and
[git](https://git-scm.com) installed. The compiler part is the trickiest. How to
do that depends on your system.

| Platform    |                                                                                                                                                                                                                                                                     |
| ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **Ubuntu**  | Install system-level dependencies via `apt-get`: `sudo apt-get install build-essential python-dev git` .                                                                                                                                                            |
| **Mac**     | Install a recent version of [XCode](https://developer.apple.com/xcode/), including the so-called ""Command Line Tools"". macOS and OS X ship with Python and git preinstalled.                                                                                        |
| **Windows** | Install a version of the [Visual C++ Build Tools](https://visualstudio.microsoft.com/visual-cpp-build-tools/) or [Visual Studio Express](https://visualstudio.microsoft.com/vs/express/) that matches the version that was used to compile your Python interpreter. |

For more details
and instructions, see the documentation on
[compiling spaCy from source](https://spacy.io/usage#source) and the
[quickstart widget](https://spacy.io/usage#section-quickstart) to get the right
commands for your platform and Python version.

```bash
git clone https://github.com/explosion/spaCy
cd spaCy

python -m venv .env
source .env/bin/activate

# make sure you are using the latest pip
python -m pip install -U pip setuptools wheel

pip install -r requirements.txt
pip install --no-build-isolation --editable .
```

To install with extras:

```bash
pip install --no-build-isolation --editable .[lookups,cuda102]
```

## 🚦 Run tests

spaCy comes with an [extensive test suite](spacy/tests). In order to run the
tests, you'll usually want to clone the repository and build spaCy from source.
This will also install the required development dependencies and test utilities
defined in the [`requirements.txt`](requirements.txt).

Alternatively, you can run `pytest` on the tests from within the installed
`spacy` package. Don't forget to also install the test utilities via spaCy's
[`requirements.txt`](requirements.txt):

```bash
pip install -r requirements.txt
python -m pytest --pyargs spacy
```
"
binux/pyspider,Python,"pyspider [![Build Status]][Travis CI] [![Coverage Status]][Coverage]
========

A Powerful Spider(Web Crawler) System in Python.

- Write script in Python
- Powerful WebUI with script editor, task monitor, project manager and result viewer
- [MySQL](https://www.mysql.com/), [MongoDB](https://www.mongodb.org/), [Redis](http://redis.io/), [SQLite](https://www.sqlite.org/), [Elasticsearch](https://www.elastic.co/products/elasticsearch); [PostgreSQL](http://www.postgresql.org/) with [SQLAlchemy](http://www.sqlalchemy.org/) as database backend
- [RabbitMQ](http://www.rabbitmq.com/), [Redis](http://redis.io/) and [Kombu](http://kombu.readthedocs.org/) as message queue
- Task priority, retry, periodical, recrawl by age, etc...
- Distributed architecture, Crawl Javascript pages, Python 2.{6,7}, 3.{3,4,5,6} support, etc...

Tutorial: [http://docs.pyspider.org/en/latest/tutorial/](http://docs.pyspider.org/en/latest/tutorial/)  
Documentation: [http://docs.pyspider.org/](http://docs.pyspider.org/)  
Release notes: [https://github.com/binux/pyspider/releases](https://github.com/binux/pyspider/releases)  

Sample Code 
-----------

```python
from pyspider.libs.base_handler import *


class Handler(BaseHandler):
    crawl_config = {
    }

    @every(minutes=24 * 60)
    def on_start(self):
        self.crawl('http://scrapy.org/', callback=self.index_page)

    @config(age=10 * 24 * 60 * 60)
    def index_page(self, response):
        for each in response.doc('a[href^=""http""]').items():
            self.crawl(each.attr.href, callback=self.detail_page)

    def detail_page(self, response):
        return {
            ""url"": response.url,
            ""title"": response.doc('title').text(),
        }
```


Installation
------------

* `pip install pyspider`
* run command `pyspider`, visit [http://localhost:5000/](http://localhost:5000/)

**WARNING:** WebUI is open to the public by default, it can be used to execute any command which may harm your system. Please use it in an internal network or [enable `need-auth` for webui](http://docs.pyspider.org/en/latest/Command-Line/#-config).

Quickstart: [http://docs.pyspider.org/en/latest/Quickstart/](http://docs.pyspider.org/en/latest/Quickstart/)

Contribute
----------

* Use It
* Open [Issue], send PR
* [User Group]
* [中文问答](http://segmentfault.com/t/pyspider)


TODO
----

### v0.4.0

- [ ] a visual scraping interface like [portia](https://github.com/scrapinghub/portia)


License
-------
Licensed under the Apache License, Version 2.0


[Build Status]:         https://img.shields.io/travis/binux/pyspider/master.svg?style=flat
[Travis CI]:            https://travis-ci.org/binux/pyspider
[Coverage Status]:      https://img.shields.io/coveralls/binux/pyspider.svg?branch=master&style=flat
[Coverage]:             https://coveralls.io/r/binux/pyspider
[Try]:                  https://img.shields.io/badge/try-pyspider-blue.svg?style=flat
[Issue]:                https://github.com/binux/pyspider/issues
[User Group]:           https://groups.google.com/group/pyspider-users
"
tensorflow/tensor2tensor,Python,"# Tensor2Tensor

[![PyPI
version](https://badge.fury.io/py/tensor2tensor.svg)](https://badge.fury.io/py/tensor2tensor)
[![GitHub
Issues](https://img.shields.io/github/issues/tensorflow/tensor2tensor.svg)](https://github.com/tensorflow/tensor2tensor/issues)
[![Contributions
welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](CONTRIBUTING.md)
[![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/tensor2tensor/Lobby)
[![License](https://img.shields.io/badge/License-Apache%202.0-brightgreen.svg)](https://opensource.org/licenses/Apache-2.0)
[![Travis](https://img.shields.io/travis/tensorflow/tensor2tensor.svg)](https://travis-ci.org/tensorflow/tensor2tensor)
[![Run on FH](https://static.floydhub.com/button/button-small.svg)](https://floydhub.com/run)

[Tensor2Tensor](https://github.com/tensorflow/tensor2tensor), or
[T2T](https://github.com/tensorflow/tensor2tensor) for short, is a library
of deep learning models and datasets designed to make deep learning more
accessible and [accelerate ML
research](https://research.googleblog.com/2017/06/accelerating-deep-learning-research.html).


T2T was developed by researchers and engineers in the
[Google Brain team](https://research.google.com/teams/brain/) and a community
of users. It is now deprecated &mdash; we keep it running and welcome
bug-fixes, but encourage users to use the successor library [Trax](https://github.com/google/trax).

### Quick Start

[This iPython notebook](https://colab.research.google.com/github/tensorflow/tensor2tensor/blob/master/tensor2tensor/notebooks/hello_t2t.ipynb)
explains T2T and runs in your browser using a free VM from Google,
no installation needed. Alternatively, here is a one-command version that
installs T2T, downloads MNIST, trains a model and evaluates it:

```
pip install tensor2tensor && t2t-trainer \
  --generate_data \
  --data_dir=~/t2t_data \
  --output_dir=~/t2t_train/mnist \
  --problem=image_mnist \
  --model=shake_shake \
  --hparams_set=shake_shake_quick \
  --train_steps=1000 \
  --eval_steps=100
```

### Contents

* [Suggested Datasets and Models](#suggested-datasets-and-models)
  * [Mathematical Language Understanding](#mathematical-language-understanding)
  * [Story, Question and Answer](#story-question-and-answer)
  * [Image Classification](#image-classification)
  * [Image Generation](#image-generation)
  * [Language Modeling](#language-modeling)
  * [Sentiment Analysis](#sentiment-analysis)
  * [Speech Recognition](#speech-recognition)
  * [Summarization](#summarization)
  * [Translation](#translation)
* [Basics](#basics)
  * [Walkthrough](#walkthrough)
  * [Installation](#installation)
  * [Features](#features)
* [T2T Overview](#t2t-overview)
  * [Datasets](#datasets)
  * [Problems and Modalities](#problems-and-modalities)
  * [Models](#models)
  * [Hyperparameter Sets](#hyperparameter-sets)
  * [Trainer](#trainer)
* [Adding your own components](#adding-your-own-components)
* [Adding a dataset](#adding-a-dataset)
* [Papers](#papers)
* [Run on FloydHub](#run-on-floydhub)

## Suggested Datasets and Models

Below we list a number of tasks that can be solved with T2T when
you train the appropriate model on the appropriate problem.
We give the problem and model below and we suggest a setting of
hyperparameters that we know works well in our setup. We usually
run either on Cloud TPUs or on 8-GPU machines; you might need
to modify the hyperparameters if you run on a different setup.

### Mathematical Language Understanding

For evaluating mathematical expressions at the character level involving addition, subtraction and multiplication of both positive and negative decimal numbers with variable digits assigned to symbolic variables, use

* the [MLU](https://art.wangperawong.com/mathematical_language_understanding_train.tar.gz) data-set:
 `--problem=algorithmic_math_two_variables`

You can try solving the problem with different transformer models and hyperparameters as described in the [paper](https://arxiv.org/abs/1812.02825):
* Standard transformer:
`--model=transformer`
`--hparams_set=transformer_tiny`
* Universal transformer:
`--model=universal_transformer`
`--hparams_set=universal_transformer_tiny`
* Adaptive universal transformer:
`--model=universal_transformer`
`--hparams_set=adaptive_universal_transformer_tiny`

### Story, Question and Answer

For answering questions based on a story, use

* the [bAbi](https://research.fb.com/downloads/babi/) data-set:
 `--problem=babi_qa_concat_task1_1k`

You can choose the bAbi task from the range [1,20] and the subset from 1k or
10k. To combine test data from all tasks into a single test set, use
`--problem=babi_qa_concat_all_tasks_10k`

### Image Classification

For image classification, we have a number of standard data-sets:

* ImageNet (a large data-set): `--problem=image_imagenet`, or one
   of the re-scaled versions (`image_imagenet224`, `image_imagenet64`,
   `image_imagenet32`)
* CIFAR-10: `--problem=image_cifar10` (or
    `--problem=image_cifar10_plain` to turn off data augmentation)
* CIFAR-100: `--problem=image_cifar100`
* MNIST: `--problem=image_mnist`

For ImageNet, we suggest to use the ResNet or Xception, i.e.,
use `--model=resnet --hparams_set=resnet_50` or
`--model=xception --hparams_set=xception_base`.
Resnet should get to above 76% top-1 accuracy on ImageNet.

For CIFAR and MNIST, we suggest to try the shake-shake model:
`--model=shake_shake --hparams_set=shakeshake_big`.
This setting trained for `--train_steps=700000` should yield
close to 97% accuracy on CIFAR-10.

### Image Generation

For (un)conditional image generation, we have a number of standard data-sets:

* CelebA: `--problem=img2img_celeba` for image-to-image translation, namely,
    superresolution from 8x8 to 32x32.
* CelebA-HQ: `--problem=image_celeba256_rev` for a downsampled 256x256.
* CIFAR-10: `--problem=image_cifar10_plain_gen_rev` for class-conditional
    32x32 generation.
* LSUN Bedrooms: `--problem=image_lsun_bedrooms_rev`
* MS-COCO: `--problem=image_text_ms_coco_rev` for text-to-image generation.
* Small ImageNet (a large data-set): `--problem=image_imagenet32_gen_rev` for
    32x32 or `--problem=image_imagenet64_gen_rev` for 64x64.

We suggest to use the Image Transformer, i.e., `--model=imagetransformer`, or
the Image Transformer Plus, i.e., `--model=imagetransformerpp` that uses
discretized mixture of logistics, or variational auto-encoder, i.e.,
`--model=transformer_ae`.
For CIFAR-10, using `--hparams_set=imagetransformer_cifar10_base` or
`--hparams_set=imagetransformer_cifar10_base_dmol` yields 2.90 bits per
dimension. For Imagenet-32, using
`--hparams_set=imagetransformer_imagenet32_base` yields 3.77 bits per dimension.

### Language Modeling

For language modeling, we have these data-sets in T2T:

* PTB (a small data-set): `--problem=languagemodel_ptb10k` for
    word-level modeling and `--problem=languagemodel_ptb_characters`
    for character-level modeling.
* LM1B (a billion-word corpus): `--problem=languagemodel_lm1b32k` for
    subword-level modeling and `--problem=languagemodel_lm1b_characters`
    for character-level modeling.

We suggest to start with `--model=transformer` on this task and use
`--hparams_set=transformer_small` for PTB and
`--hparams_set=transformer_base` for LM1B.

### Sentiment Analysis

For the task of recognizing the sentiment of a sentence, use

* the IMDB data-set: `--problem=sentiment_imdb`

We suggest to use `--model=transformer_encoder` here and since it is
a small data-set, try `--hparams_set=transformer_tiny` and train for
few steps (e.g., `--train_steps=2000`).

### Speech Recognition

For speech-to-text, we have these data-sets in T2T:

* Librispeech (US English): `--problem=librispeech` for
    the whole set and `--problem=librispeech_clean` for a smaller
    but nicely filtered part.

* Mozilla Common Voice (US English): `--problem=common_voice` for the whole set
    `--problem=common_voice_clean` for a quality-checked subset.

### Summarization

For summarizing longer text into shorter one we have these data-sets:

* CNN/DailyMail articles summarized into a few sentences:
  `--problem=summarize_cnn_dailymail32k`

We suggest to use `--model=transformer` and
`--hparams_set=transformer_prepend` for this task.
This yields good ROUGE scores.

### Translation

There are a number of translation data-sets in T2T:

* English-German: `--problem=translate_ende_wmt32k`
* English-French: `--problem=translate_enfr_wmt32k`
* English-Czech: `--problem=translate_encs_wmt32k`
* English-Chinese: `--problem=translate_enzh_wmt32k`
* English-Vietnamese: `--problem=translate_envi_iwslt32k`
* English-Spanish: `--problem=translate_enes_wmt32k`

You can get translations in the other direction by appending `_rev` to
the problem name, e.g., for German-English use
`--problem=translate_ende_wmt32k_rev`
(note that you still need to download the original data with t2t-datagen
`--problem=translate_ende_wmt32k`).

For all translation problems, we suggest to try the Transformer model:
`--model=transformer`. At first it is best to try the base setting,
`--hparams_set=transformer_base`. When trained on 8 GPUs for 300K steps
this should reach a BLEU score of about 28 on the English-German data-set,
which is close to state-of-the art. If training on a single GPU, try the
`--hparams_set=transformer_base_single_gpu` setting. For very good results
or larger data-sets (e.g., for English-French), try the big model
with `--hparams_set=transformer_big`.

See this [example](https://github.com/tensorflow/tensor2tensor/blob/master/tensor2tensor/notebooks/Transformer_translate.ipynb) to know how the translation works.

## Basics

### Walkthrough

Here's a walkthrough training a good English-to-German translation
model using the Transformer model from [*Attention Is All You
Need*](https://arxiv.org/abs/1706.03762) on WMT data.

```
pip install tensor2tensor

# See what problems, models, and hyperparameter sets are available.
# You can easily swap between them (and add new ones).
t2t-trainer --registry_help

PROBLEM=translate_ende_wmt32k
MODEL=transformer
HPARAMS=transformer_base_single_gpu

DATA_DIR=$HOME/t2t_data
TMP_DIR=/tmp/t2t_datagen
TRAIN_DIR=$HOME/t2t_train/$PROBLEM/$MODEL-$HPARAMS

mkdir -p $DATA_DIR $TMP_DIR $TRAIN_DIR

# Generate data
t2t-datagen \
  --data_dir=$DATA_DIR \
  --tmp_dir=$TMP_DIR \
  --problem=$PROBLEM

# Train
# *  If you run out of memory, add --hparams='batch_size=1024'.
t2t-trainer \
  --data_dir=$DATA_DIR \
  --problem=$PROBLEM \
  --model=$MODEL \
  --hparams_set=$HPARAMS \
  --output_dir=$TRAIN_DIR

# Decode

DECODE_FILE=$DATA_DIR/decode_this.txt
echo ""Hello world"" >> $DECODE_FILE
echo ""Goodbye world"" >> $DECODE_FILE
echo -e 'Hallo Welt\nAuf Wiedersehen Welt' > ref-translation.de

BEAM_SIZE=4
ALPHA=0.6

t2t-decoder \
  --data_dir=$DATA_DIR \
  --problem=$PROBLEM \
  --model=$MODEL \
  --hparams_set=$HPARAMS \
  --output_dir=$TRAIN_DIR \
  --decode_hparams=""beam_size=$BEAM_SIZE,alpha=$ALPHA"" \
  --decode_from_file=$DECODE_FILE \
  --decode_to_file=translation.en

# See the translations
cat translation.en

# Evaluate the BLEU score
# Note: Report this BLEU score in papers, not the internal approx_bleu metric.
t2t-bleu --translation=translation.en --reference=ref-translation.de
```

### Installation


```
# Assumes tensorflow or tensorflow-gpu installed
pip install tensor2tensor

# Installs with tensorflow-gpu requirement
pip install tensor2tensor[tensorflow_gpu]

# Installs with tensorflow (cpu) requirement
pip install tensor2tensor[tensorflow]
```

Binaries:

```
# Data generator
t2t-datagen

# Trainer
t2t-trainer --registry_help
```

Library usage:

```
python -c ""from tensor2tensor.models.transformer import Transformer""
```

### Features

* Many state of the art and baseline models are built-in and new models can be
  added easily (open an issue or pull request!).
* Many datasets across modalities - text, audio, image - available for
  generation and use, and new ones can be added easily (open an issue or pull
  request for public datasets!).
* Models can be used with any dataset and input mode (or even multiple); all
  modality-specific processing (e.g. embedding lookups for text tokens) is done
  with `bottom` and `top` transformations, which are specified per-feature in the
  model.
* Support for multi-GPU machines and synchronous (1 master, many workers) and
  asynchronous (independent workers synchronizing through a parameter server)
  [distributed training](https://tensorflow.github.io/tensor2tensor/distributed_training.html).
* Easily swap amongst datasets and models by command-line flag with the data
  generation script `t2t-datagen` and the training script `t2t-trainer`.
* Train on [Google Cloud ML](https://tensorflow.github.io/tensor2tensor/cloud_mlengine.html) and [Cloud TPUs](https://tensorflow.github.io/tensor2tensor/cloud_tpu.html).

## T2T overview

### Problems

**Problems** consist of features such as inputs and targets, and metadata such
as each feature's modality (e.g. symbol, image, audio) and vocabularies. Problem
features are given by a dataset, which is stored as a `TFRecord` file with
`tensorflow.Example` protocol buffers. All
problems are imported in
[`all_problems.py`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/data_generators/all_problems.py)
or are registered with `@registry.register_problem`. Run
[`t2t-datagen`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/bin/t2t-datagen)
to see the list of available problems and download them.

### Models

**`T2TModel`s** define the core tensor-to-tensor computation. They apply a
default transformation to each input and output so that models may deal with
modality-independent tensors (e.g. embeddings at the input; and a linear
transform at the output to produce logits for a softmax over classes). All
models are imported in the
[`models` subpackage](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/models/__init__.py),
inherit from [`T2TModel`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/utils/t2t_model.py),
and are registered with
[`@registry.register_model`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/utils/registry.py).

### Hyperparameter Sets

**Hyperparameter sets** are encoded in
[`HParams`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/utils/hparam.py)
objects, and are registered with
[`@registry.register_hparams`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/utils/registry.py).
Every model and problem has a `HParams`. A basic set of hyperparameters are
defined in
[`common_hparams.py`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/layers/common_hparams.py)
and hyperparameter set functions can compose other hyperparameter set functions.

### Trainer

The **trainer** binary is the entrypoint for training, evaluation, and
inference. Users can easily switch between problems, models, and hyperparameter
sets by using the `--model`, `--problem`, and `--hparams_set` flags. Specific
hyperparameters can be overridden with the `--hparams` flag. `--schedule` and
related flags control local and distributed training/evaluation
([distributed training documentation](https://github.com/tensorflow/tensor2tensor/tree/master/docs/distributed_training.md)).

## Adding your own components

T2T's components are registered using a central registration mechanism that
enables easily adding new ones and easily swapping amongst them by command-line
flag. You can add your own components without editing the T2T codebase by
specifying the `--t2t_usr_dir` flag in `t2t-trainer`.

You can do so for models, hyperparameter sets, modalities, and problems. Please
do submit a pull request if your component might be useful to others.

See the [`example_usr_dir`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/test_data/example_usr_dir)
for an example user directory.

## Adding a dataset

To add a new dataset, subclass
[`Problem`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/data_generators/problem.py)
and register it with `@registry.register_problem`. See
[`TranslateEndeWmt8k`](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/data_generators/translate_ende.py)
for an example. Also see the [data generators
README](https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/data_generators/README.md).

## Run on FloydHub

[![Run on FloydHub](https://static.floydhub.com/button/button.svg)](https://floydhub.com/run)

Click this button to open a [Workspace](https://blog.floydhub.com/workspaces/) on [FloydHub](https://www.floydhub.com/?utm_medium=readme&utm_source=tensor2tensor&utm_campaign=jul_2018). You can use the workspace to develop and test your code on a fully configured cloud GPU machine.

Tensor2Tensor comes preinstalled in the environment, you can simply open a [Terminal](https://docs.floydhub.com/guides/workspace/#using-terminal) and run your code.

```bash
# Test the quick-start on a Workspace's Terminal with this command
t2t-trainer \
  --generate_data \
  --data_dir=./t2t_data \
  --output_dir=./t2t_train/mnist \
  --problem=image_mnist \
  --model=shake_shake \
  --hparams_set=shake_shake_quick \
  --train_steps=1000 \
  --eval_steps=100
```

Note: Ensure compliance with the FloydHub [Terms of Service](https://www.floydhub.com/about/terms).

## Papers

When referencing Tensor2Tensor, please cite [this
paper](https://arxiv.org/abs/1803.07416).

```
@article{tensor2tensor,
  author    = {Ashish Vaswani and Samy Bengio and Eugene Brevdo and
    Francois Chollet and Aidan N. Gomez and Stephan Gouws and Llion Jones and
    \L{}ukasz Kaiser and Nal Kalchbrenner and Niki Parmar and Ryan Sepassi and
    Noam Shazeer and Jakob Uszkoreit},
  title     = {Tensor2Tensor for Neural Machine Translation},
  journal   = {CoRR},
  volume    = {abs/1803.07416},
  year      = {2018},
  url       = {http://arxiv.org/abs/1803.07416},
}
```

Tensor2Tensor was used to develop a number of state-of-the-art models
and deep learning methods. Here we list some papers that were based on T2T
from the start and benefited from its features and architecture in ways
described in the [Google Research Blog post introducing
T2T](https://research.googleblog.com/2017/06/accelerating-deep-learning-research.html).

* [Attention Is All You Need](https://arxiv.org/abs/1706.03762)
* [Depthwise Separable Convolutions for Neural Machine
   Translation](https://arxiv.org/abs/1706.03059)
* [One Model To Learn Them All](https://arxiv.org/abs/1706.05137)
* [Discrete Autoencoders for Sequence Models](https://arxiv.org/abs/1801.09797)
* [Generating Wikipedia by Summarizing Long
   Sequences](https://arxiv.org/abs/1801.10198)
* [Image Transformer](https://arxiv.org/abs/1802.05751)
* [Training Tips for the Transformer Model](https://arxiv.org/abs/1804.00247)
* [Self-Attention with Relative Position Representations](https://arxiv.org/abs/1803.02155)
* [Fast Decoding in Sequence Models using Discrete Latent Variables](https://arxiv.org/abs/1803.03382)
* [Adafactor: Adaptive Learning Rates with Sublinear Memory Cost](https://arxiv.org/abs/1804.04235)
* [Universal Transformers](https://arxiv.org/abs/1807.03819)
* [Attending to Mathematical Language with Transformers](https://arxiv.org/abs/1812.02825)
* [The Evolved Transformer](https://arxiv.org/abs/1901.11117)
* [Model-Based Reinforcement Learning for Atari](https://arxiv.org/abs/1903.00374)
* [VideoFlow: A Flow-Based Generative Model for Video](https://arxiv.org/abs/1903.01434)

*NOTE: This is not an official Google product.*
"
CrazyBotsz/Adv-Auto-Filter-Bot-V2,Python,"# Adv Auto Filter Bot V2

<p align=""center"">
  <a href=""https://github.com/CrazyBotsz/Adv-Auto-Filter-Bot-V2/stargazers"">
    <img src=""https://img.shields.io/github/stars/CrazyBotsz/Adv-Auto-Filter-Bot-V2?style=social"">

  </a>
  
  <a href=""https://github.com/CrazyBotsz/Adv-Auto-Filter-Bot-V2/fork"">
    <img src=""https://img.shields.io/github/forks/CrazyBotsz/Adv-Auto-Filter-Bot-V2?label=Fork&style=social"">

  </a>  
</p>

__This Is Just An Simple Advance Auto Filter Bot Complete Rewritten Version Of [Adv-Filter-Bot](https://github.com/CrazyBotsz/Adv-Auto-Filter-Bot)..__

__Just Sent Any Text As Query It Will Search For All Connected Chat's Files In Its MongoDB And Reply You With The Message Link As A Button__


## Usage

**__How To Use Me!?__**

* -> Add me to any group and make me admin<br>
* -> Add me to your channel as admin with full previlages

**Bot Commands (Works Only In Groups) :**


  * -> `/add chat_id`<br>
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
OR
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- To establish a connection of group with a channel (Bot should be admin with full previlages in both group and channel)<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`/add @Username`


  * -> `/del chat_id`<br>
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
OR 
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- To delete a group's coneection with a channel (Use disable option from settigns pannel for disconnecting temporarily instead of deleteing)<br>
    &nbsp;&nbsp;&nbsp;&nbsp; `/del @Username`


  * -> `/delall`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - To delete all connections of a group and deletes all its file from DB
  
  * -> `/settings`&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -  To disaply a Settings Pannel Instance which can be used to tweek bot's settings accordingly

    * -> Channel - Button will show you all the connected chats with the group along with there index buttons correspnding to there order for furthur controls...

    * -> Filter Types - Button will show you the 3 filter types available in bot... Pressing each buttons will either enable or disable them and this will take into action as soon as you use them...without the need of a restart....

    * -> Configure - Button will help you to change no. of pages/ buttons per page/ total result without acutally editing the repo... Also it provide option to Enable/Disable  showing Invite Link in each results

    * -> Status - Button will show the stats of your current group

### Pre Requisites 
------------------
* ->__Your Bot Token From [@BotFather](http://www.telegram.dog/BotFather)__

* ->__Your APP ID And API Harsh From [Telegram](http://www.my.telegram.org) or [@UseTGXBot](http://www.telegram.dog/UseTGXBot)__

* ->__Your User Session String Obtained From [@PyrogramStringBot](http://www.telegram.dog/PyrogramStringBot)__

* ->__Mongo DB URL Obtained From [Mongo DB](http://www.mongodb.com)__

#### PR's Are Very Welcome

## Deploy
You can deploy this bot anywhere.

<i>**[Watch Deploying Tutorial...](https://youtu.be/KTearEPhumc)**</i>

<details><summary>Deploy To Heroku</summary>
<p>
<br>
<a href=""https://github.com/AlbertEinsteinTG/af-deploy-script"">
  <img src=""https://www.herokucdn.com/deploy/button.svg"" alt=""Deploy"">
</a>
</p>
</details>

<details><summary>Deploy To VPS</summary>
<p>
<pre>
git clone https://github.com/CrazyBotsz/Adv-Auto-Filter-Bot-V2
cd Adv-Auto-Filter-Bot-V2
pip3 install -r requirements.txt
# Change The Vars Of bot/__init__.py File Accordingly
python3 -m bot
</pre>
</p>
</details>

## Support   
Join Our [Telegram Group](https://www.telegram.dog/CrazyBotszGrp) For Support/Assistance And Our [Channel](https://www.telegram.dog/CrazyBotsz) For Updates.   
   
Report Bugs, Give Feature Requests There..   
Do Fork And Star The Repository If You Liked It.

## Disclaimer
[![GNU Affero General Public License v3.0](https://www.gnu.org/graphics/agplv3-155x51.png)](https://www.gnu.org/licenses/agpl-3.0.en.html#header)    
Licensed under [GNU AGPL v3.0.](https://github.com/CrazyBotsz/Adv-Auto-Filter-Bot-V2/blob/main/LICENSE)
Selling The Codes To Other People For Money Is *Strictly Prohibited*.


## Credits

 - Thanks To Dan For His Awsome [Libary](https://github.com/pyrogram/pyrogram)
 - Thanks To SpEcHiDe For His Awesome [DeleteMessagesRoBot](https://github.com/SpEcHiDe/DeleteMessagesRoBot)
 - [Thanks To Me 👀](https://github.com/AlbertEinsteinTG)
"
buckyroberts/Source-Code-from-Tutorials,Python,"#### Source Code from thenewboston Tutorials

We are in the process of adding the source code from all of the tutorials to a public GitHub repository. If anyone would like to contribute, please feel free!

[thenewboston Videos and Tutorials](https://www.thenewboston.com/videos.php)

Linux: https://docs.google.com/document/d/1FgMqlHYDva5--sJuR1fc-wbidpvHMFKEvK4RHqD4px0/edit?usp=sharing

DigitalOcean: https://docs.google.com/document/d/1xOllgXRN10fWz1TsURh0OYI60TAVz0snD8HOzga5CCA/edit?usp=sharing

***

##### How to Submit Source Code

1 - Download [GitHub for Windows](https://windows.github.com/) or [GitHub for Mac](https://mac.github.com/)

2 - On the top right of this page, click ""Fork"". This will create a copy for you.

![](http://i.imgur.com/UTwzOgC.png)

3 - Once your copy has been created, click “Clone in Desktop” to download and save it on your computer. 

![](http://i.imgur.com/uNy5iHg.png)

4 - From here you can make changes, add folders, add source code files, etc... 

5 - When you are finished with your changes, open GitHub for Windows (or Mac)

6 - Add a commit message and click ""Commit to master""

![](http://i.imgur.com/jHcjXvF.png)

7 - Click ""Sync"" on the top right to save the changes to your GitHub account.

![](http://i.imgur.com/hk9mIZS.png)

8 - On your GitHub page for that repo, you will now see a “Pull Request” link. Click it. 

![](http://i.imgur.com/pogptvB.png)

9 - On this page, click the “Create pull request” button.

10 - Add a comment and click “create pull request” again button to submit.
"
bloominstituteoftechnology/Intro-Python-I,Python,"# Intro to Python I

_Note: This project spans two modules (modules 1 and 2). You should roughly try to finish the first half of the problems during module 1 and the second half of the problems during module 2._

It's time to learn a new language! Python!

Python is a popular, easy-to-use programming language that has significant
traction in the field.

Remember the goal is _learning to learn_, so keep track of what works for you
and what doesn't as you go through the process of exploring Python.

## Techniques for learning new languages

* Try to relate things you already know in another language (e.g. what an
  _array_ is) to the corresponding things in Python (e.g. a _list_) and how to
  use them.

* Write a bunch of ""toy programs"" that demonstrate different key features of the
  language

* Explore the standard library that's available for the language. Skim it
  briefly for now--the idea isn't to memorize everything but to file away
  generally what functionality is available.

* Write a more substantial toy program that uses a variety of the features.

Again, keep track of what works for you. Try different things to see what works
best for learning new languages.

## Resources

* [Installing Python 3](https://github.com/BloomInstituteOfTechnology/CS-Wiki/wiki/Installing-Python-3)
* [JavaScript<->Python cheatsheet](https://github.com/BloomInstituteOfTechnology/CS-Wiki/wiki/Javascript-Python-cheatsheet)
* [How to read Specs and Code](https://github.com/BloomInstituteOfTechnology/CS-Wiki/wiki/How-to-Read-Specifications-and-Code)
* [Python 3 standard library](https://docs.python.org/3.6/library/)

## Getting started

Make sure you have Python 3 installed. You can check this by running `python3 --version` in your terminal and ensuring that it returns a version string that is at least 3.6.5. 

## Goals

* Learn the basic syntax and structure of Python

## Summary

* Implement a number of tiny Python programs that demonstrate Python syntax and
  language concepts.

## Instructions

_Note: This project spans two modules (modules 1 and 2). You should roughly try to finish the first half of the problems during module 1 and the second half of the problems during module 2._

Each directory inside the `src/` directory presents exercises revolving around a
particular concept in Python. Not all of these concepts are unique to Python (in
fact, most probably aren't). This means that you can leverage knowledge you've
obtained via exposure to other programming languages towards learning Python. 

The suggested order for going through each of the directories is: 

* `hello` -- Hello world
* `bignum` -- Print some big numbers
* `datatypes` -- Experiment with type conversion
* `modules` -- Learn to import from modules
* `printing` -- Formatted print output
* `lists` -- Python's version of arrays
* `tuples` -- Immutable lists typically for heterogenous data
* `slices` -- Accessing parts of lists
* `comprehensions` -- List comprehensions
* `dictionaries` -- Dictionaries
* `functions` -- Functions
* `args` -- Arguments and Keyword Arguments
* `scopes` -- Global, Local, and Non-Local scope
* `file_io` -- Read and write from files
* `cal` -- Experiment with module imports and implement a text-based calendar
* `classes` -- Classes and objects

## Stretch Goals

1. One of Python's main philosophical tenets is its emphasis on readability. To
   that end, the Python community has standardized around a style guide called
   [PEP 8](https://www.python.org/dev/peps/pep-0008/). Take a look at it and
   then go over the code you've written and make sure it adheres to what PEP 8
   recommends. Alternatively, PEP 8 linters exist for most code editors (you can
   find instructions on installing a Python linter for VSCode
   [here](https://code.visualstudio.com/docs/python/linting)). Try installing
   one for your editor!

2. Rewrite code challenges you've solved before or projects you've implemented
   before in a different language in Python. Start getting in as much practice
   with the language as possible!

3. Write a program to determine if a number, given on the command line, is prime.

   1. How can you optimize this program?
   2. Implement [The Sieve of
      Eratosthenes](https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes), one
      of the oldest algorithms known (ca. 200 BC).
"
gregmalcolm/python_koans,Python,"============
Python Koans
============

.. image:: https://travis-ci.org/gregmalcolm/python_koans.png?branch=master
   :target: http://travis-ci.org/gregmalcolm/python_koans

.. image:: https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod
    :target: https://gitpod.io/#https://github.com/gregmalcolm/python_koans
    
.. image:: https://www.eclipse.org/che/contribute.svg
    :target: https://workspaces.openshift.com/f?url=https://gitpod.io/#https://github.com/gregmalcolm/python_koans

One click installation:
-----------------------

.. image:: https://www.eclipse.org/che/contribute.svg
    :target: https://workspaces.openshift.com/f?url=https://gitpod.io/#https://github.com/gregmalcolm/python_koans
|   or
.. image:: https://gitpod.io/button/open-in-gitpod.svg
    :target: https://gitpod.io/#https://gitpod.io/#https://github.com/gregmalcolm/python_koans

|

Python Koans is a port of Edgecase's ""Ruby Koans"" which can be found
at http://rubykoans.com/.

.. image:: https://user-images.githubusercontent.com/2614930/28401740-ec6214b2-6cd0-11e7-8afd-30ed3102bfd6.png

Python Koans is an interactive tutorial for learning the Python programming
language by making tests pass.

Most tests are *fixed* by filling the missing parts of assert functions. Eg:

.. code-block:: python

    self.assertEqual(__, 1+2)

which can be fixed by replacing the __ part with the appropriate code:

.. code-block:: python

    self.assertEqual(3, 1+2)

Occasionally you will encounter some failing tests that are already filled out.
In these cases you will need to finish implementing some code to progress. For
example, there is an exercise for writing some code that will tell you if a
triangle is equilateral, isosceles or scalene.

As well as being a great way to learn some Python, it is also a good way to get
a taste of Test Driven Development (TDD).


Downloading Python Koans
------------------------

Python Koans is available on GitHub:

* https://github.com/gregmalcolm/python_koans

You can clone with Git or download the source as a zip/gz/bz2.


Installing Python Koans
-----------------------

Aside from downloading or checking out the latest version of Python Koans, you
need to install the Python interpreter.

At this time of writing, we support Python 3. The policy is to try to keep
current with the latest production version.

You should be able to work with newer Python versions, but older ones will
likely give you problems.

You can download Python from here:

* https://www.python.org/downloads/

After installing Python make sure the folder containing the python executable
is in the system path. In other words, you need to be able to run Python from a
command console. It will either be ``python3`` or for Windows it will be ``python.exe``.

If you have problems, this may help:

* https://www.python.org/about/gettingstarted/

Windows users may also want to update the line in the batch file ``run.bat`` to
set the python path::

    SET PYTHON_PATH=C:\Python39


Getting Started
---------------

Jake Hebbert has created a couple of screencasts available here:

https://www.youtube.com/watch?v=e2WXgXEjbHY&list=PL5Up_u-XkWgNcunP_UrTJG_3EXgbK2BQJ&index=1

Or if you prefer to read:

From a \*nix terminal or Windows command prompt run::

.. code-block:: sh

    python contemplate_koans.py

or:

.. code-block:: sh

    python3 contemplate_koans.py

In my case I'm using Python 3 with Windows, so I fire up my command
shell (cmd.exe) and run this:

.. image:: https://user-images.githubusercontent.com/2614930/28401747-f723ff00-6cd0-11e7-9b9a-a6993b753cf6.png

Apparently a test failed::

    AssertionError: False is not True

It also tells me exactly where the problem is, it's an assert on line 12
of ``.\\koans\\about_asserts.py``. This one is easy, just change ``False`` to ``True`` to
make the test pass.

Sooner or later you will likely encounter tests where you are not sure what the
expected value should be. For example:

.. code-block:: python

    class Dog:
        pass

    def test_objects_are_objects(self):
        fido = self.Dog()
        self.assertEqual(__, isinstance(fido, object))

This is where the Python Command Line can come in handy. In this case I can
fire up the command line, recreate the scenario and run queries:

.. image:: https://user-images.githubusercontent.com/2614930/28401750-f9dcb296-6cd0-11e7-98eb-c20318eada33.png

Sniffer Support
---------------

Sniffer allows you to run the tests continuously. If you modify any files files
in the koans directory, it will rerun the tests.

To set this up, you need to install sniffer:

.. code-block:: sh

    python3 -m pip install sniffer

You should also run one of these libraries depending on your system. This will
automatically trigger sniffer when a file changes, otherwise sniffer will have
to poll to see if the files have changed.

On Linux:

.. code-block:: sh

    python3 -m pip install pyinotify

On Windows:

.. code-block:: sh

    python3 -m pip install pywin32

    Also available here:

    https://github.com/mhammond/pywin32/releases

On macOS:

.. code-block:: sh

    python3 -m pip install MacFSEvents

Once it is set up, you just run:

.. code-block:: sh

    sniffer

Just modify one of the koans files and you'll see that the tests are triggered
automatically. Sniffer is controlled by ``scent.py``.

Getting the Most From the Koans
-------------------------------

Quoting the Ruby Koans instructions:

	""In test-driven development the mantra has always been, red, green,
	refactor. Write a failing test and run it (red), make the test pass
	(green), then refactor it (that is look at the code and see if you
	can make it any better). In this case you will need to run the koan
	and see it fail (red), make the test pass (green), then take a
	moment and reflect upon the test to see what it is teaching you
	and improve the code to better communicate its intent (refactor).""



Finding More Koan Projects
--------------------------

There are number of other great Koan projects out there for various languages
and frameworks. Most of them can be found in GitHub. Also there is a little
koans activity on Bitbucket.

* GitHub koan projects:
    https://github.com/search?q=koans&ref=cmdform

* Bitbucket koan projects:
    https://bitbucket.org/repo/all?name=koans

Translations
------------

Translations are always welcome! Feel free to add one to this README
if you happen to work on one:

https://github.com/mswell/python_koans_br

Acknowledgments
---------------

Thanks go to Jim Weirich and Joe O'Brien for the original Ruby Koans that the
Python Koans is based on! Also the Ruby Koans in turn borrows from Metakoans
so thanks also go to Ara Howard for that!

Also thanks to everyone who has contributed to Python Koans! I got a great
headstart by taking over a code base initiated by the combined Mikes of
FPIP. So here's a little plug for their very cool Python podcast:

* https://www.frompythonimportpodcast.com/

A big thanks also to Mike Pirnat @pirnat and Kevin Chase @kjc have pitched in
as co-maintainers at various times
"
bloominstituteoftechnology/Data-Structures,Python,"# Data Structures 

Topics:
 * Singly Linked Lists
 * Queues and Stacks
 * Doubly Linked Lists
 * Binary Search Trees
 * Related Code Challenge Problems

Stretch Goals:
 * LRU Cache
 * Heaps
 * AVL Trees

## Completion Requirements
 * Module 1: Implement the Stack and Queue classes using built-in Python lists and the Node and LinkedList classes you created during the Module 1 Guided Project.
 * Module 2: Implement the Doubly Linked List class
 * Module 3: Implement the Binary Search Tree class
 * Module 4: Implement traversal methods on Binary Search Trees
 
 > NOTE: The quickest and easiest way to reliably import a file in Python is to just copy and paste the file you want to import into the same directory as the file that wants to import. This obviously isn't considered best practice, but it is the most reliable way to do it across all platforms.  If the import isn't working, feel free to try this method.

### Stacks
* Should have the methods: `push`, `pop`, and `len`.
   * `push` adds an item to the top of the stack.
   * `pop` removes and returns the element at the top of the stack
   * `len` returns the number of elements in the stack.

### Queues
 * Has the methods: `enqueue`, `dequeue`, and `len`.
   * `enqueue` adds an element to the back of the queue.
   * `dequeue` removes and returns the element at the front of the queue.
   * `len` returns the number of elements in the queue.
 
![Image of Queue](https://upload.wikimedia.org/wikipedia/commons/thumb/5/52/Data_Queue.svg/600px-Data_Queue.svg.png)

### Doubly Linked Lists
 * The `ListNode` class, which represents a single node in the doubly-linked list, has already been implemented for you. Inspect this code and try to understand what it is doing to the best of your ability.
 * The `DoublyLinkedList` class itself should have the methods: `add_to_head`, `add_to_tail`, `remove_from_head`, `remove_from_tail`, `move_to_front`, `move_to_end`, `delete`, and `get_max`.
   * `add_to_head` replaces the head of the list with a new value that is passed in.
   * `add_to_tail` replaces the tail of the list with a new value that is passed in.
   * `remove_from_head` removes the head node and returns the value stored in it.
   * `remove_from_tail` removes the tail node and returns the value stored in it.
   * `move_to_front` takes a reference to a node in the list and moves it to the front of the list, shifting all other list nodes down. 
   * `move_to_end` takes a reference to a node in the list and moves it to the end of the list, shifting all other list nodes up. 
   * `delete` takes a reference to a node in the list and removes it from the list. The deleted node's `previous` and `next` pointers should point to each afterwards.
   * `get_max` returns the maximum value in the list. 
 * The `head` property is a reference to the first node and the `tail` property is a reference to the last node.
 
![Image of Doubly Linked List](https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Doubly-linked-list.svg/610px-Doubly-linked-list.svg.png)

### Binary Search Trees
* Should have the methods `insert`, `contains`, `get_max`.
  * `insert` adds the input value to the binary search tree, adhering to the rules of the ordering of elements in a binary search tree.
  * `contains` searches the binary search tree for the input value, returning a boolean indicating whether the value exists in the tree or not.
  * `get_max` returns the maximum value in the binary search tree.
  * `for_each` performs a traversal of _every_ node in the tree, executing the passed-in callback function on each tree node value. There is a myriad of ways to perform tree traversal; in this case any of them should work. 

![Image of Binary Search Tree](https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Binary_search_tree.svg/300px-Binary_search_tree.svg.png)

---

Once you've gotten the tests passing, it's time to analyze the runtime complexity of your `get` and `set` operations. There's a way to get both operations down to sub-linear time. In fact, we can get them each down to constant time by picking the right data structures to use. 

Here are you some things to think about with regards to optimizing your implementation: If you opted to use a dictionary to work with key-value pairs, we know that dictionaries give us constant access time, which is great. It's cheap and efficient to fetch pairs. A problem arises though from the fact that dictionaries don't have any way of remembering the order in which key-value pairs are added. But we definitely need something to remember the order in which pairs are added. Can you think of some ways to get around this constraint?

## Stretch Goals

### LRU Cache
An LRU (Least Recently Used) cache is an in-memory storage structure that adheres to the [Least Recently Used](https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)) caching strategy. 

In essence, you can think of an LRU cache as a data structure that keeps track of the order in which elements (which take the form of key-value pairs) it holds are added and updated. The cache also has a max number of entries it can hold. This is important because once the cache is holding the max number of entries, if a new entry is to be inserted, another pre-existing entry needs to be evicted from the cache. Because the cache is using a least-recently used strategy, the oldest entry (the one that was added/updated the longest time ago) is removed to make space for the new entry. 

So what operations will we need on our cache? We'll certainly need some sort of `set` operation to add key-value pairs to the cache. Newly-set pairs will get moved up the priority order such that every other pair in the cache is now one spot lower in the priority order that the cache maintains. The lowest-priority pair will get removed from the cache if the cache is already at its maximal capacity. Additionally, in the case that the key already exists in the cache, we simply want to overwrite the old value associated with the key with the newly-specified value. 

We'll also need a `get` operation that fetches a value given a key. When a key-value pair is fetched from the cache, we'll go through the same priority-increase dance that also happens when a new pair is added to the cache.

Note that the only way for entries to be removed from the cache is when one needs to be evicted to make room for a new one. Thus, there is no explicit `remove` method. 

Given the above spec, try to get a working implementation that passes the tests. What data structure(s) might be good candidates with which to build our cache on top of? Hint: Since our cache is going to be storing key-value pairs, we might want to use a structure that is adept at handling those. 

### AVL Tree
An AVL tree (Georgy Adelson-Velsky and Landis' tree, named after the inventors) is a self-balancing binary search tree. In an AVL tree, the heights of the two child subtrees of any node differ by at most one; if at any time they differ by more than one, rebalancing is done to restore this property.

We define balance factor for each node as :
```
balanceFactor = height(left subtree) - height(right subtree)
```

The balance factor of any node of an AVL tree is in the integer range [-1,+1]. If after any modification in the tree, the balance factor becomes less than −1 or greater than +1, the subtree rooted at this node is unbalanced, and a rotation is needed.

![AVL tree rebalancing](https://s3.amazonaws.com/hr-challenge-images/0/1436854305-b167cc766c-AVL_Tree_Rebalancing.svg.png)

Implement an AVL Tree class that exhibits the aforementioned behavior. The tree's `insert` method should perform the same logic as what was implemented for the binary search tree, with the caveat that upon inserting a new element into the tree, it will then check to see if the tree needs to be rebalanced. 

How does the time complexity of the AVL Tree's insertion method differ from the binary search tree's?
"
littlecodersh/ItChat,Python,"# itchat

[![Gitter][gitter-picture]][gitter] ![py27][py27] ![py35][py35] [English version][english-version]

itchat是一个开源的微信个人号接口，使用python调用微信从未如此简单。

使用不到三十行的代码，你就可以完成一个能够处理所有信息的微信机器人。

当然，该api的使用远不止一个机器人，更多的功能等着你来发现，比如[这些][tutorial2]。

该接口与公众号接口[itchatmp][itchatmp]共享类似的操作方式，学习一次掌握两个工具。

如今微信已经成为了个人社交的很大一部分，希望这个项目能够帮助你扩展你的个人的微信号、方便自己的生活。

## 安装

可以通过本命令安装itchat：

```python
pip install itchat
```

## 简单入门实例

有了itchat，如果你想要给文件传输助手发一条信息，只需要这样：

```python
import itchat

itchat.auto_login()

itchat.send('Hello, filehelper', toUserName='filehelper')
```

如果你想要回复发给自己的文本消息，只需要这样：

```python
import itchat

@itchat.msg_register(itchat.content.TEXT)
def text_reply(msg):
    return msg.text

itchat.auto_login()
itchat.run()
```

一些进阶应用可以在下面的开源机器人的源码和进阶应用中看到，或者你也可以阅览[文档][document]。

## 试一试

这是一个基于这一项目的[开源小机器人][robot-source-code]，百闻不如一见，有兴趣可以尝试一下。

由于好友数量实在增长过快，自动通过好友验证的功能演示暂时关闭。

![QRCode][robot-qr]

## 截屏

![file-autoreply][robot-demo-file] ![login-page][robot-demo-login]

## 进阶应用

### 特殊的字典使用方式

通过打印itchat的用户以及注册消息的参数，可以发现这些值都是字典。

但实际上itchat精心构造了相应的消息、用户、群聊、公众号类。

其所有的键值都可以通过这一方式访问：

```python
@itchat.msg_register(TEXT)
def _(msg):
    # equals to print(msg['FromUserName'])
    print(msg.fromUserName)
```

属性名为键值首字母小写后的内容。

```python
author = itchat.search_friends(nickName='LittleCoder')[0]
author.send('greeting, littlecoder!')
```

### 各类型消息的注册

通过如下代码，微信已经可以就日常的各种信息进行获取与回复。

```python
import itchat, time
from itchat.content import *

@itchat.msg_register([TEXT, MAP, CARD, NOTE, SHARING])
def text_reply(msg):
    msg.user.send('%s: %s' % (msg.type, msg.text))

@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])
def download_files(msg):
    msg.download(msg.fileName)
    typeSymbol = {
        PICTURE: 'img',
        VIDEO: 'vid', }.get(msg.type, 'fil')
    return '@%s@%s' % (typeSymbol, msg.fileName)

@itchat.msg_register(FRIENDS)
def add_friend(msg):
    msg.user.verify()
    msg.user.send('Nice to meet you!')

@itchat.msg_register(TEXT, isGroupChat=True)
def text_reply(msg):
    if msg.isAt:
        msg.user.send(u'@%s\u2005I received: %s' % (
            msg.actualNickName, msg.text))

itchat.auto_login(True)
itchat.run(True)
```

### 命令行二维码

通过以下命令可以在登陆的时候使用命令行显示二维码：

```python
itchat.auto_login(enableCmdQR=True)
```

部分系统可能字幅宽度有出入，可以通过将enableCmdQR赋值为特定的倍数进行调整：

```python
# 如部分的linux系统，块字符的宽度为一个字符（正常应为两字符），故赋值为2
itchat.auto_login(enableCmdQR=2)
```

默认控制台背景色为暗色（黑色），若背景色为浅色（白色），可以将enableCmdQR赋值为负值：

```python
itchat.auto_login(enableCmdQR=-1)
```

### 退出程序后暂存登陆状态

通过如下命令登陆，即使程序关闭，一定时间内重新开启也可以不用重新扫码。

```python
itchat.auto_login(hotReload=True)
```

### 用户搜索

使用`search_friends`方法可以搜索用户，有四种搜索方式：
1. 仅获取自己的用户信息
2. 获取特定`UserName`的用户信息
3. 获取备注、微信号、昵称中的任何一项等于`name`键值的用户
4. 获取备注、微信号、昵称分别等于相应键值的用户

其中三、四项可以一同使用，下面是示例程序：

```python
# 获取自己的用户信息，返回自己的属性字典
itchat.search_friends()
# 获取特定UserName的用户信息
itchat.search_friends(userName='@abcdefg1234567')
# 获取任何一项等于name键值的用户
itchat.search_friends(name='littlecodersh')
# 获取分别对应相应键值的用户
itchat.search_friends(wechatAccount='littlecodersh')
# 三、四项功能可以一同使用
itchat.search_friends(name='LittleCoder机器人', wechatAccount='littlecodersh')
```

关于公众号、群聊的获取与搜索在文档中有更加详细的介绍。

### 附件的下载与发送

itchat的附件下载方法存储在msg的Text键中。

发送的文件的文件名（图片给出的默认文件名）都存储在msg的FileName键中。

下载方法接受一个可用的位置参数（包括文件名），并将文件相应的存储。

```python
@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])
def download_files(msg):
    msg.download(msg.fileName)
    itchat.send('@%s@%s' % (
        'img' if msg['Type'] == 'Picture' else 'fil', msg['FileName']),
        msg['FromUserName'])
    return '%s received' % msg['Type']
```

如果你不需要下载到本地，仅想要读取二进制串进行进一步处理可以不传入参数，方法将会返回图片的二进制串。

```python
@itchat.msg_register([PICTURE, RECORDING, ATTACHMENT, VIDEO])
def download_files(msg):
    with open(msg.fileName, 'wb') as f:
        f.write(msg.download())
```

### 用户多开

使用如下命令可以完成多开的操作：

```python
import itchat

newInstance = itchat.new_instance()
newInstance.auto_login(hotReload=True, statusStorageDir='newInstance.pkl')

@newInstance.msg_register(itchat.content.TEXT)
def reply(msg):
    return msg.text

newInstance.run()
```

### 退出及登陆完成后调用特定方法

登陆完成后的方法需要赋值在`loginCallback`中。

而退出后的方法需要赋值在`exitCallback`中。

```python
import time

import itchat

def lc():
    print('finish login')
def ec():
    print('exit')

itchat.auto_login(loginCallback=lc, exitCallback=ec)
time.sleep(3)
itchat.logout()
```

若不设置loginCallback的值，则将会自动删除二维码图片并清空命令行显示。

## 常见问题与解答

Q: 如何通过这个包将自己的微信号变为控制器？

A: 有两种方式：发送、接受自己UserName的消息；发送接收文件传输助手（filehelper）的消息

Q: 为什么我发送信息的时候部分信息没有成功发出来？

A: 有些账号是天生无法给自己的账号发送信息的，建议使用`filehelper`代替。

## 作者

[LittleCoder][littlecodersh]: 构架及维护Python2 Python3版本。

[tempdban][tempdban]: 协议、构架及日常维护。

[Chyroc][Chyroc]: 完成第一版本的Python3构架。

## 类似项目

[youfou/wxpy][youfou-wxpy]: 优秀的api包装和配套插件，微信机器人/优雅的微信个人号API

[liuwons/wxBot][liuwons-wxBot]: 类似的基于Python的微信机器人

[zixia/wechaty][zixia-wechaty]: 基于Javascript(ES6)的微信个人账号机器人NodeJS框架/库

[sjdy521/Mojo-Weixin][Mojo-Weixin]: 使用Perl语言编写的微信客户端框架，可通过插件提供基于HTTP协议的api接口供其他语言调用

[HanSon/vbot][HanSon-vbot]: 基于PHP7的微信个人号机器人，通过实现匿名函数可以方便地实现各种自定义的功能

[yaphone/itchat4j][yaphone-itchat4j]: 用Java扩展个人微信号的能力

[kanjielu/jeeves][kanjielu-jeeves]: 使用springboot开发的微信机器人

## 问题和建议

如果有什么问题或者建议都可以在这个[Issue][issue#1]和我讨论

或者也可以在gitter上交流：[![Gitter][gitter-picture]][gitter]

当然也可以加入我们新建的QQ群讨论：549762872, 205872856

[gitter-picture]: https://badges.gitter.im/littlecodersh/ItChat.svg
[gitter]: https://gitter.im/littlecodersh/ItChat?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge
[py27]: https://img.shields.io/badge/python-2.7-ff69b4.svg
[py35]: https://img.shields.io/badge/python-3.5-red.svg
[english-version]: https://github.com/littlecodersh/ItChat/blob/master/README_EN.md
[itchatmp]: https://github.com/littlecodersh/itchatmp
[document]: https://itchat.readthedocs.org/zh/latest/
[tutorial2]: http://python.jobbole.com/86532/
[robot-source-code]: https://gist.github.com/littlecodersh/ec8ddab12364323c97d4e36459174f0d
[robot-qr]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FQRCode2.jpg?imageView/2/w/400/
[robot-demo-file]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FScreenshots%2F%E5%BE%AE%E4%BF%A1%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%9B%BE%E7%89%87.png?imageView/2/w/300/
[robot-demo-login]: http://7xrip4.com1.z0.glb.clouddn.com/ItChat%2FScreenshots%2F%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E6%88%AA%E5%9B%BE.jpg?imageView/2/w/450/
[littlecodersh]: https://github.com/littlecodersh
[tempdban]: https://github.com/tempdban
[Chyroc]: https://github.com/Chyroc
[youfou-wxpy]: https://github.com/youfou/wxpy
[liuwons-wxBot]: https://github.com/liuwons/wxBot
[zixia-wechaty]: https://github.com/zixia/wechaty
[Mojo-Weixin]: https://github.com/sjdy521/Mojo-Weixin
[HanSon-vbot]: https://github.com/hanson/vbot
[yaphone-itchat4j]: https://github.com/yaphone/itchat4j
[kanjielu-jeeves]: https://github.com/kanjielu/jeeves
[issue#1]: https://github.com/littlecodersh/ItChat/issues/1
"
saltstack/salt,Python,".. image:: https://img.shields.io/github/license/saltstack/salt
   :alt: Salt Project License: Apache v2.0
   :target: https://github.com/saltstack/salt/blob/master/LICENSE

.. image:: https://img.shields.io/pypi/dm/salt?label=pypi%20downloads
   :alt: PyPi Package Downloads
   :target: https://pypi.org/project/salt

.. image:: https://img.shields.io/lgtm/grade/python/github/saltstack/salt
   :alt: PyPi Package Downloads
   :target: https://lgtm.com/projects/g/saltstack/salt/context:python

.. image:: https://img.shields.io/badge/slack-@saltstackcommunity-blue.svg?logo=slack
   :alt: Salt Project Slack Community
   :target: https://join.slack.com/t/saltstackcommunity/shared_invite/zt-3av8jjyf-oBQ2M0vhXOhJpNpRkPWBvg

.. image:: https://img.shields.io/twitch/status/saltprojectoss
   :alt: Salt Project Twitch Channel
   :target: https://www.twitch.tv/saltprojectoss

.. image:: https://img.shields.io/reddit/subreddit-subscribers/saltstack?style=social
   :alt: Salt Project subreddit
   :target: https://www.reddit.com/r/saltstack/

.. image:: https://img.shields.io/twitter/follow/Salt_Project_OS?style=social&logo=twitter
   :alt: Follow SaltStack on Twitter
   :target: https://twitter.com/intent/follow?screen_name=Salt_Project_OS

.. figure:: https://gitlab.com/saltstack/open/salt-branding-guide/-/raw/master/logos/SaltProject_altlogo_teal.png?inline=true
   :scale: 80 %
   :width: 1000px
   :height: 356px
   :align: center
   :alt: Salt Project Logo

* `Latest Salt Documentation`_
* `Open an issue`_ (bug report, feature request, etc.)

*Salt is the world's fastest, most intelligent and scalable automation*
*engine.*

About Salt
==========
Built on Python, Salt is an event-driven automation tool and framework to
deploy, configure, and manage complex IT systems. Use Salt to automate common
infrastructure administration tasks and ensure that all the components of your
infrastructure are operating in a consistent desired state.

Salt has many possible uses, including configuration management, which involves:

* Managing operating system deployment and configuration.
* Installing and configuring software applications and services.
* Managing servers, virtual machines, containers, databases, web servers,
  network devices, and more.
* Ensuring consistent configuration and preventing configuration drift.

Salt is ideal for configuration management because it is pluggable,
customizable, and plays well with many existing technologies. Salt enables you
to deploy and manage applications that use any tech stack running on nearly any
`operating system <https://docs.saltproject.io/salt/install-guide/en/latest/topics/salt-supported-operating-systems.html>`_,
including different types of network devices such as switches and routers from a
variety of vendors.

In addition to configuration management Salt can also:

* Automate and orchestrate routine IT processes, such as common required tasks
  for scheduled server downtimes or upgrading operating systems or applications.
* Create self-aware, self-healing systems that can automatically respond to
  outages, common administration problems, or other important events.


About our sponsors
==================
Salt powers VMware's `vRealize Automation SaltStack Config`_, and can be found
under the hood of products from Juniper, Cisco, Cloudflare, Nutanix, SUSE, and
Tieto, to name a few.

The original sponsor of our community, SaltStack, was `acquired by VMware in 2020 <https://www.vmware.com/company/acquisitions/saltstack.html>`_.
The Salt Project remains an open source ecosystem that VMware supports and
contributes to. VMware ensures the code integrity and quality of the Salt
modules by acting as the official sponsor and manager of the Salt project. Many
of the core Salt Project contributors are also VMware employees. This team
carefully reviews and enhances the Salt modules to ensure speed, quality, and
security.


Download and install Salt
=========================
Salt is tested and packaged to run on CentOS, Debian, RHEL, Ubuntu, MacOS,
Windows, and more. Download Salt and get started now. See
`supported operating systems <https://docs.saltproject.io/salt/install-guide/en/latest/topics/salt-supported-operating-systems.html>`_
for more information.

To download and install Salt, see:
* `The Salt install guide <https://docs.saltproject.io/salt/install-guide/en/latest/index.html>`_
* `Salt Project repository <https://repo.saltproject.io/>`_


Technical support
=================
Report bugs or problems using Salt by opening an issue: `<https://github.com/saltstack/salt/issues>`_

To join our community forum where you can exchange ideas, best practices,
discuss technical support questions, and talk to project maintainers, join our
Slack workspace: `Salt Project Community Slack`_


Salt Project documentation
==========================
Installation instructions, tutorials, in-depth API and module documentation:

* `The Salt install guide <https://docs.saltproject.io/salt/install-guide/en/latest/index.html>`_
* `The Salt user guide <https://docs.saltproject.io/salt/user-guide/en/latest/>`_
* `Latest Salt documentation`_
* `Salt's contributing guide <https://docs.saltproject.io/en/master/topics/development/contributing.html>`_


Security advisories
===================
Keep an eye on the Salt Project
`Security Announcements <https://saltproject.io/security-announcements/>`_
landing page. Salt Project recommends subscribing to the
`Salt Project Security RSS feed <https://saltproject.io/feed/?post_type=security>`_
to receive notification when new information is available regarding security
announcements.

Other channels to receive security announcements include the
`Salt Community mailing list <https://groups.google.com/forum/#!forum/salt-users>`_
and the `Salt Project Community Slack`_.


Responsibly reporting security vulnerabilities
++++++++++++++++++++++++++++++++++++++++++++++
When reporting security vulnerabilities for Salt or other SaltStack projects,
refer to the `SECURITY.md`_ file found in this repository.


Join our community
==================
Salt is built by the Salt Project community, which includes more than 3,000
contributors working in roles just like yours. This well-known and trusted
community works together to improve the underlying technology and extend Salt by
creating a variety of execution and state modules to accomplish the most common
tasks or solve the most important problems that people in your role are likely
to face.

If you want to help extend Salt or solve a problem with Salt, you can join our
community and contribute today.

Please be sure to review our
`Code of Conduct <https://github.com/saltstack/salt/blob/master/CODE_OF_CONDUCT.md>`_.
Also, check out some of our community resources including:

* `Salt Project Community Wiki <https://github.com/saltstack/community/wiki>`_
* `Salt Project Community Slack`_
* `Salt Project: IRC on LiberaChat <https://web.libera.chat/#salt>`_
* `Salt Project YouTube channel <https://www.youtube.com/channel/UCpveTIucFx9ljGelW63-BWg>`_
* `Salt Project Twitch channel <https://www.twitch.tv/saltprojectoss>`_

There are lots of ways to get involved in our community. Every month, there are
around a dozen opportunities to meet with other contributors and the Salt Core
team and collaborate in real time. The best way to keep track is by subscribing
to the **Salt Project Community Events Calendar** on the main
`<https://saltproject.io>`_ website.

If you have additional questions, email us at saltproject@vmware.com or reach out
directly to the Community Manager, Jimmy Chunga via Slack. We'd be glad to
have you join our community!


License
=======
Salt is licensed under the Apache 2.0 license. Please
see the
`LICENSE file <https://github.com/saltstack/salt/blob/master/LICENSE>`_ for the
full text of the Apache license, followed by a full summary of the licensing
used by external modules.

A complete list of attributions and dependencies can be found here:
`salt/DEPENDENCIES.md <https://github.com/saltstack/salt/blob/master/DEPENDENCIES.md>`_

.. _Salt Project Community Slack: https://join.slack.com/t/saltstackcommunity/shared_invite/zt-3av8jjyf-oBQ2M0vhXOhJpNpRkPWBvg
.. _vRealize Automation SaltStack Config: https://www.vmware.com/products/vrealize-automation/saltstack-config.html
.. _Latest Salt Documentation: https://docs.saltproject.io/en/latest/
.. _Open an issue: https://github.com/saltstack/salt/issues/new/choose
.. _SECURITY.md: https://github.com/saltstack/salt/blob/master/SECURITY.md
.. _Calendar html: https://outlook.office365.com/owa/calendar/105f69bacd4541baa849529aed37eb2d@vmware.com/434ec2155b2b4cce90144c87f0dd03d56626754050155294962/calendar.html
.. _Calendar ics: https://outlook.office365.com/owa/calendar/105f69bacd4541baa849529aed37eb2d@vmware.com/434ec2155b2b4cce90144c87f0dd03d56626754050155294962/calendar.ics
"
anasty17/mirror-leech-telegram-bot,Python,"This is a Telegram Bot written in Python for mirroring files on the Internet to your Google Drive, Telegram or to any rclone supported cloud. Based on [python-aria-mirror-bot](https://github.com/lzzy12/python-aria-mirror-bot)

# Features

## By [anasty17](https://github.com/anasty17)

In each single file there is a major change from base code, it's almost totaly different. Here some of features and fixes that I remember.

### qBittorrent

- Qbittorrent support
- Select files from Torrent before and while downloading
- Seed torrents to specific ratio and time
- Edit Global Options while bot running from bot settings

### Aria2c

- Select files from Torrent before and while downloading
- Seed torrents to specific ratio and time
- Netrc support
- Direct link authentication for specific link while using the bot (it will work even if only username or password)
- Improve aria.sh
- Fix all download listener functions and status
- Edit Global Options while bot running from bot settings

### TG Upload/Download

- Leech support
- Splitting
- Thumbnail for each user
- Leech filename prefix for each user. Stolen from [Juned KH](https://github.com/junedkh)
- Set upload as document or as media for each user
- 4GB file upload with premium account
- Upload all files to specific superGroup/channel.
- Leech Split size and equal split size settings for each user
- Ability to leech splitted file parts in media group. Setting for each user
- Download using premium account if available
- Download restricted messages (document or link) by tg private/public/super links

### Google

- Stop duplicates for all tasks
- Download from Google Drive
- Counting Google Drive files/folders
- Search in multiple Drive folder/TeamDrive
- Recursive Search (only with `root` or TeamDrive ID, folder ids will be listed with non-recursive method). Based on [Sreeraj](https://github.com/SVR666) searchX-bot.
- Use Token.pickle if file not found with Service Account, for all Gdrive functions
- Random Service Account for each task

### Status

- Clone Status
- Extract Status
- Archive Status
- Seed Status
- Status Pages for unlimited tasks
- Ability to cancel upload/clone/archive/extract/split
- Cancel all buttons for choosing specific tasks status to cancel
- Fix flooding issues
- Fix overall upload and download speed

### Yt-dlp

- Switch from youtube-dl to yt-dlp and fix all conflicts
- Yt-dlp quality buttons
- Ability to use specific yt-dlp option for each task
- Custom default yt-dlp options for each user
- Fix download progress
- Embed original thumbnail and add it for leech
- All supported audio formats

### Database

- Mongo Database support
- Store bot settings
- Store user settings including thumbnails and rclone config in database
- Store private files
- Store RSS data
- Store incompleted task messages

### Torrents Search

- Torrent search support
- Search on torrents with Torrent Search API
- Search on torrents with variable plugins using qBittorrent search engine

### Archives

- Zip instead of tar
- Using 7-zip tool to extract all supported types
- Extract rar, zip and 7z within folder or splits with or without password
- Zip file/folder with or without password

### RSS

- Rss feed. Based on this repository [rss-chan](https://github.com/hyPnOtICDo0g/rss-chan)
- Filters added
- Edit any feed while running: pause, resume, edit command and edit filters
- Rss for each user with tag
- Sudo settings to control users feeds
- All functions have been improved using buttons from one command.

### Rclone

- Download and Upload using rclone with and without random service accounts
- Ability to choose config, remote and path from list with buttons
- Ability to set rclone flags for each task or globally from config
- Rclone.conf for each user
- Clone server-side
- Rclone serve for combine remote to use it as index from all remotes

### Overall

- Docker image support for linux `amd64, arm64/v8, arm/v7`
- Switch from sync to async
- SWitch from python-telegram-bot to pyrogram
- Edit variables and overwrite the private files while bot running
- Update bot at startup and with restart command using `UPSTREAM_REPO`
- Improve Telegraph. Based on [Sreeraj](https://github.com/SVR666) loaderX-bot
- Mirror/Leech/Watch/Clone/Count/Del by reply
- Mirror/Leech/Clone multi links/files with one command
- Custom name for all links except torrents. For files you should add extension except yt-dlp links
- Extensions Filter for the files to be uploaded/cloned
- View Link button. Extra button to open index link in broswer instead of direct download for file
- Queueing System for all tasks
- Ability to zip/unzip multi links in same directory. Mostly helpful in unziping tg file parts
- Almost all repository functions have been improved and many other details can't mention all of them
- Many bugs have been fixed

## From Base and other Repositories

- Mirror direct download links, Torrent, Mega.nz and Telegram files to Google Drive
- Copy files from someone's Drive to your Drive
- Download/Upload progress, Speeds and ETAs
- Mirror all youtube-dl supported links
- Docker support
- Uploading to Team Drive
- Index Link support
- Service Account support
- Delete files from Drive
- Multiple Trackers support
- Shell and Executor
- Add sudo users
- Extract password protected files
- Extract these filetypes
  > ZIP, RAR, TAR, 7z, ISO, WIM, CAB, GZIP, BZIP2, APM, ARJ, CHM, CPIO, CramFS, DEB, DMG, FAT, HFS, LZH, LZMA, LZMA2, MBR, MSI, MSLZ, NSIS, NTFS, RPM, SquashFS, UDF, VHD, XAR, Z, TAR.XZ
- Direct links Supported:
  > mediafire, letsupload.io, hxfile.co, antfiles, fembed.com, fembed.net, femax20.com, layarkacaxxi.icu, fcdn.stream, sbplay.org, naniplay.com, naniplay.nanime.in, naniplay.nanime.biz, sbembed.com, streamtape.com, streamsb.net, feurl.com, upload.ee, pixeldrain.com, racaty.net, 1fichier.com, 1drv.ms (Only works for file not folder or business account), uptobox.com and solidfiles.com, linkbox.to, shrdsk.me (sharedisk.io), akmfiles.com, wetransfer.com, mdisk.me (with ytdl), terabox.com (you need to add cookies txt with name) [terabox.txt](https://github.com/ytdl-org/youtube-dl#how-do-i-pass-cookies-to-youtube-dl) and almost every anonfiles based sites

# How to deploy?

## Prerequisites

- Tutorial Video from A to Z:
  - Thanks to [Wiszky](https://github.com/vishnoe115)

 <p><a href=""https://youtu.be/IUmq1paCiHI""> <img src=""https://img.shields.io/badge/See%20Video-black?style=for-the-badge&logo=YouTube"" width=""160""""/></a></p>

### 1. Installing requirements

- Clone this repo:

```
git clone https://github.com/anasty17/mirror-leech-telegram-bot mirrorbot/ && cd mirrorbot
```

- For Debian based distros

```
sudo apt install python3 python3-pip
```

Install Docker by following the [official Docker docs](https://docs.docker.com/engine/install/debian/)

- For Arch and it's derivatives:

```
sudo pacman -S docker python
```

- Install dependencies for running setup scripts:

```
pip3 install -r requirements-cli.txt
```

------

### 2. Setting up config file

```
cp config_sample.env config.env
```

- Remove the first line saying:

```
_____REMOVE_THIS_LINE_____=True
```

Fill up rest of the fields. Meaning of each field is discussed below. **NOTE**: All values must be filled between quotes, even if it's `Int`, `Bool` or `List`.

**1. Required Fields**

- `BOT_TOKEN`: The Telegram Bot Token that you got from [@BotFather](https://t.me/BotFather). `Str`
- `OWNER_ID`: The Telegram User ID (not username) of the Owner of the bot. `Int`
- `TELEGRAM_API`: This is to authenticate your Telegram account for downloading Telegram files. You can get this from <https://my.telegram.org>. `Int`
- `TELEGRAM_HASH`: This is to authenticate your Telegram account for downloading Telegram files. You can get this from <https://my.telegram.org>. `Str`

**2. Optional Fields**

- `USER_SESSION_STRING`: To download/upload from your telegram account and to send rss. To generate session string use this command `python3 generate_string_session.py` after mounting repo folder for sure. `Str`. **NOTE**: You can't use bot with private message. Use it with superGroup.
- `DATABASE_URL`: Your Mongo Database URL (Connection string). Follow this [Generate Database](https://github.com/anasty17/mirror-leech-telegram-bot/tree/master#generate-database) to generate database. Data will be saved in Database: auth and sudo users, users settings including thumbnails for each user, rss data and incomplete tasks. **NOTE**: You can always edit all settings that saved in database from the official site -> (Browse collections). `Str`
- `DOWNLOAD_DIR`: The path to the local folder where the downloads should be downloaded to. `Str`
- `CMD_SUFFIX`: commands index number. This number will added at the end all commands. `Str`|`Int`
- `AUTHORIZED_CHATS`: Fill user_id and chat_id of groups/users you want to authorize. Separate them by space. `Int`
- `SUDO_USERS`: Fill user_id of users whom you want to give sudo permission. Separate them by space. `Int`
- `DEFAULT_UPLOAD`: Whether `rc` to upload to `RCLONE_PATH` or `gd` to upload to `GDRIVE_ID`. Default is `gd`. Read More [HERE](https://github.com/anasty17/mirror-leech-telegram-bot/tree/master#upload).`Str`
- `STATUS_UPDATE_INTERVAL`: Time in seconds after which the progress/status message will be updated. Recommended `10` seconds at least. `Int`
- `AUTO_DELETE_MESSAGE_DURATION`: Interval of time (in seconds), after which the bot deletes it's message and command message which is expected to be viewed instantly. **NOTE**: Set to `-1` to disable auto message deletion. `Int`
- `STATUS_LIMIT`: Limit the no. of tasks shown in status message with buttons. Default is `10`. **NOTE**: Recommended limit is `4` tasks. `Int`
- `EXTENSION_FILTER`: File extensions that won't upload/clone. Separate them by space. `Str`
- `INCOMPLETE_TASK_NOTIFIER`: Get incomplete task messages after restart. Require database and superGroup. Default is `False`. `Bool`
- `UPTOBOX_TOKEN`: Uptobox token to mirror uptobox links. Get it from [Uptobox Premium Account](https://uptobox.com/my_account). `str`
- `YT_DLP_OPTIONS`: Default yt-dlp options. Check all possible options [HERE](https://github.com/yt-dlp/yt-dlp/blob/master/yt_dlp/YoutubeDL.py#L184) or use this [script](https://t.me/mltb_official/177) to convert cli arguments to api options. Format: key:value|key:value|key:value. Add `^` before integer or float, some numbers must be numeric and some string. `str`
  - Example: ""format:bv*+mergeall[vcodec=none]|nocheckcertificate:True""
- `USE_SERVICE_ACCOUNTS`: Whether to use Service Accounts or not, with google-api-python-client. For this to work see [Using Service Accounts](https://github.com/anasty17/mirror-leech-telegram-bot#generate-service-accounts-what-is-service-account) section below. Default is `False`. `Bool`

### GDrive Tools

- `GDRIVE_ID`: This is the Folder/TeamDrive ID of the Google Drive OR `root` to which you want to upload all the mirrors using google-api-python-client. `Str`
- `IS_TEAM_DRIVE`: Set `True` if uploading to TeamDrive using google-api-python-client. Default is `False`. `Bool`
- `INDEX_URL`: Refer to <https://gitlab.com/ParveenBhadooOfficial/Google-Drive-Index>. `Str`
- `STOP_DUPLICATE`: Bot will check file/folder name in Drive incase uploading to `GDRIVE_ID`. If it's present in Drive then downloading or cloning will be stopped. (**NOTE**: Item will be checked using name and not hash, so this feature is not perfect yet). Default is `False`. `Bool`

### Rclone

- `RCLONE_PATH`: Default rclone path to which you want to upload all the mirrors using rclone. `Str`
- `RCLONE_FLAGS`: key:value|key|key|key:value . Check here all [RcloneFlags](https://rclone.org/flags/). `Str`
- `RCLONE_SERVE_URL`: Valid URL where the bot is deployed to use rclone serve. Format of URL should be `http://myip`, where `myip` is the IP/Domain(public) of your bot or if you have chosen port other than `80` so write it in this format `http://myip:port` (`http` and not `https`). `Str`
- `RCLONE_SERVE_PORT`: Which is the **RCLONE_SERVE_URL** Port. Default is `8080`. `Int`
- `RCLONE_SERVE_USER`: Username for rclone serve authentication. `Str`
- `RCLONE_SERVE_PASS`: Password for rclone serve authentication. `Str`

### Update

- `UPSTREAM_REPO`: Your github repository link, if your repo is private add `https://username:{githubtoken}@github.com/{username}/{reponame}` format. Get token from [Github settings](https://github.com/settings/tokens). So you can update your bot from filled repository on each restart. `Str`.
  - **NOTE**: Any change in docker or requirements you need to deploy/build again with updated repo to take effect. DON'T delete .gitignore file. For more information read [THIS](https://github.com/anasty17/mirror-leech-telegram-bot/tree/master#upstream-repo-recommended).
- `UPSTREAM_BRANCH`: Upstream branch for update. Default is `master`. `Str`

### Leech

- `LEECH_SPLIT_SIZE`: Size of split in bytes. Default is `2GB`. Default is `4GB` if your account is premium. `Int`
- `AS_DOCUMENT`: Default type of Telegram file upload. Default is `False` mean as media. `Bool`
- `EQUAL_SPLITS`: Split files larger than **LEECH_SPLIT_SIZE** into equal parts size (Not working with zip cmd). Default is `False`. `Bool`
- `MEDIA_GROUP`: View Uploaded splitted file parts in media group. Default is `False`. `Bool`.
- `LEECH_FILENAME_PREFIX`: Add custom word to leeched file name. `Str`
- `DUMP_CHAT_ID`: Chat ID to where leeched files would be uploaded. `Int`. **NOTE**: Only available for superGroup/channel. Add `-100` before channel/superGroup id. In short don't add bot id or your id!

### qBittorrent/Aria2c

- `TORRENT_TIMEOUT`: Timeout of dead torrents downloading with qBittorrent and Aria2c in seconds. `Int`
- `BASE_URL`: Valid BASE URL where the bot is deployed to use torrent web files selection. Format of URL should be `http://myip`, where `myip` is the IP/Domain(public) of your bot or if you have chosen port other than `80` so write it in this format `http://myip:port` (`http` and not `https`). `Str`
- `BASE_URL_PORT`: Which is the **BASE_URL** Port. Default is `80`. `Int`
- `WEB_PINCODE`: Whether to ask for pincode before selecting files from torrent in web or not. Default is `False`. `Bool`.
  - **Qbittorrent NOTE**: If your facing ram issues then set limit for `MaxConnections`, decrease `AsyncIOThreadsCount`, set limit of `DiskWriteCacheSize` to `32` and decrease `MemoryWorkingSetLimit` from qbittorrent.conf or bsetting command.

### RSS

- `RSS_DELAY`: Time in seconds for rss refresh interval. Recommended `900` second at least. Default is `900` in sec. `Int`
- `RSS_CHAT_ID`: Chat ID where rss links will be sent. If you want message to be sent to the channel then add channel id. Add `-100` before channel id. `Int`
  - **RSS NOTES**: `RSS_CHAT_ID` is required, otherwise monitor will not work. You must use `USER_STRING_SESSION` --OR-- *CHANNEL*. If using channel then bot should be added in both channel and group(linked to channel) and `RSS_CHAT_ID` is the channel id, so messages sent by the bot to channel will be forwarded to group. Otherwise with `USER_STRING_SESSION` add group id for `RSS_CHAT_ID`. If `DATABASE_URL` not added you will miss the feeds while bot offline.

### MEGA

- `MEGA_EMAIL`: E-Mail used to sign-in on mega.nz for using premium account. `Str`
- `MEGA_PASSWORD`: Password for mega.nz account. `Str`

### Queue System

- `QUEUE_ALL`: Number of parallel tasks of downloads and uploads. For example if 20 task added and `QUEUE_ALL` is `8`, then the summation of uploading and downloading tasks are 8 and the rest in queue. `Int`. **NOTE**: if you want to fill `QUEUE_DOWNLOAD` or `QUEUE_UPLOAD`, then `QUEUE_ALL` value must be greater than or equal to the greatest one and less than or equal to summation of `QUEUE_UPLOAD` and `QUEUE_DOWNLOAD`.
- `QUEUE_DOWNLOAD`: Number of all parallel downloading tasks. `Int`
- `QUEUE_UPLOAD`: Number of all parallel uploading tasks. `Int`

### Torrent Search

- `SEARCH_API_LINK`: Search api app link. Get your api from deploying this [repository](https://github.com/Ryuk-me/Torrent-Api-py). `Str`
  - Supported Sites:
  >1337x, Piratebay, Nyaasi, Torlock, Torrent Galaxy, Zooqle, Kickass, Bitsearch, MagnetDL, Libgen, YTS, Limetorrent, TorrentFunk, Glodls, TorrentProject and YourBittorrent
- `SEARCH_LIMIT`: Search limit for search api, limit for each site and not overall result limit. Default is zero (Default api limit for each site). `Int`
- `SEARCH_PLUGINS`: List of qBittorrent search plugins (github raw links). I have added some plugins, you can remove/add plugins as you want. Main Source: [qBittorrent Search Plugins (Official/Unofficial)](https://github.com/qbittorrent/search-plugins/wiki/Unofficial-search-plugins). `List`

------

### 3. Build And Run the Docker Image

Make sure you still mount the app folder and installed the docker from official documentation.

- There are two methods to build and run the docker:
  1. Using official docker commands.
  2. Using docker-compose. (Recommended)

------

#### Build And Run The Docker Image Using Official Docker Commands

- Start Docker daemon (SKIP if already running, mostly you don't need to do this):

```
sudo dockerd
```

- Build Docker image:

```
sudo docker build . -t mltb
```

- Run the image:

```
sudo docker run -p 80:80 -p 8080:8080 mltb
```

- To stop the running image:

```
sudo docker ps
```

```
sudo docker stop id
```

----

#### Build And Run The Docker Image Using docker-compose

**NOTE**: If you want to use ports other than 80 and 8080 for torrent file selection and rclone serve respectively, change it in [docker-compose.yml](https://github.com/anasty17/mirror-leech-telegram-bot/blob/master/docker-compose.yml) also.

- Install docker-compose

```
sudo apt install docker-compose
```

- Build and run Docker image or to view current running image:

```
sudo docker-compose up
```

- After editing files with nano for example (nano start.sh):

```
sudo docker-compose up --build
```

- To stop the running image:

```
sudo docker-compose stop
```

- To run the image:

```
sudo docker-compose start
```

- To get latest log from already running image (after mounting the folder):

```
sudo docker-compose up
```

- Tutorial video from Tortoolkit repo for docker-compose and checking ports

<p><a href=""https://youtu.be/c8_TU1sPK08""> <img src=""https://img.shields.io/badge/See%20Video-black?style=for-the-badge&logo=YouTube"" width=""160""""/></a></p>

------

#### Docker Notes

**IMPORTANT NOTES**:

1. Set `BASE_URL_PORT` and `RCLONE_SERVE_PORT` variables to any port you want to use. Default is `80` and `8080` respectively.
2. You should stop the running image before deleting the container and you should delete the container before the image.
3. To delete the container (this will not affect on the image):

```
sudo docker container prune
```

4. To delete the images:

```
sudo docker image prune -a
```

5. Check the number of processing units of your machine with `nproc` cmd and times it by 4, then edit `AsyncIOThreadsCount` in qBittorrent.conf.

------

# Extras

## Bot commands to be set in [@BotFather](https://t.me/BotFather)

```
mirror - or /m Mirror
zipmirror - or /zm Mirror and upload as zip
unzipmirror - or /uzm Mirror and extract files
qbmirror - or /qm Mirror torrent using qBittorrent
qbzipmirror - or /qzm Mirror torrent using qb and upload as zip
qbunzipmirror - or /quzm Mirror torrent using qb and extract files
leech - or /l Leech
zipleech - or /zl Leech and upload as zip
unzipleech - or /uzl Leech and extract files
qbleech - or /ql Leech torrent using qBittorrent
qbzipleech - or /qzl Leech torrent using qb and upload as zip
qbunzipleech - or /quzl Leech torrent using qb and extract
clone - Copy file/folder to Drive
count - Count file/folder from Drive
ytdl - or /y Mirror yt-dlp supported link
ytdlzip - or /yz Mirror yt-dlp supported link as zip
ytdlleech - or /yl Leech through yt-dlp supported link
ytdlzipleech - or /yzl Leech yt-dlp support link as zip
usetting - User settings
bsetting - Bot settings
status - Get Mirror Status message
btsel - Select files from torrent
rss - Rss menu
list - Search files in Drive
search - Search for torrents with API
cancel - Cancel a task
cancelall - Cancel all tasks
del - Delete file/folder from Drive
log - Get the Bot Log
shell - Run commands in Shell
restart - Restart the Bot
stats - Bot Usage Stats
ping - Ping the Bot
help - All cmds with description
```

------

## Getting Google OAuth API credential file and token.pickle

**NOTES**

- Old authentication changed, now we can't use bot or replit to generate token.pickle. You need OS with a local browser. For example `Termux`.
- Windows users should install python3 and pip. You can find how to install and use them from google or from this [telegraph](https://telegra.ph/Create-Telegram-Mirror-Leech-Bot-by-Deploying-App-with-Heroku-Branch-using-Github-Workflow-12-06) from [Wiszky](https://github.com/vishnoe115) tutorial.
- You can ONLY open the generated link from `generate_drive_token.py` in local browser.

1. Visit the [Google Cloud Console](https://console.developers.google.com/apis/credentials)
2. Go to the OAuth Consent tab, fill it, and save.
3. Go to the Credentials tab and click Create Credentials -> OAuth Client ID
4. Choose Desktop and Create.
5. Publish your OAuth consent screen App to prevent **token.pickle** from expire
6. Use the download button to download your credentials.
7. Move that file to the root of mirrorbot, and rename it to **credentials.json**
8. Visit [Google API page](https://console.developers.google.com/apis/library)
9. Search for Google Drive Api and enable it
10. Finally, run the script to generate **token.pickle** file for Google Drive:

```
pip3 install google-api-python-client google-auth-httplib2 google-auth-oauthlib
python3 generate_drive_token.py
```

------

## Getting rclone.conf

1. Install rclone from [Official Site](https://rclone.org/install/)
2. Create new remote(s) using `rclone config` command.
3. Copy rclone.conf from .config/rclone/rclone.conf to repo folder

------

## Upload

- `RCLONE_PATH` is like `GDRIVE_ID` a default path for mirror. In additional to those variables `DEFAULT_UPLOAD` to choose the default tool whether it's rclone or google-api-python-client.
- If `DEFAULT_UPLOAD` = 'rc' then you must fill `RCLONE_PATH` with path as default one or with `rcl` to select destination path on each new task.
- If `DEFAULT_UPLOAD` = 'gd' then you must fill `GDRIVE_ID` with folder/TD id.
- rclone.conf can be added before deploy like token.pickle to repo folder root or use bsetting to upload it as private file.
- If rclone.conf uploaded from usetting or added in `rclone/{user_id}.conf` then `RCLONE_PATH` must start with `mrcc:`.
- Whenever you want to write path manually to use user rclone.conf that added from usetting then you must add the `mrcc:` at the beginning.
- So in short, up: has 4 possible values which is: gd(Upload to GDRIVE_ID), rc(Upload to RCLONE_PATH), rcl(Select Rclone Path) and rclone_path(remote:path(owner rclone.conf) or mrcc:remote:path(user rclone.conf))

------

## UPSTREAM REPO (Recommended)

- `UPSTREAM_REPO` variable can be used for edit/add any file in repository.
- You can add private/public repository link to grab/overwrite all files from it.
- You can skip adding the privates files like token.pickle or accounts folder before deploying, simply fill `UPSTREAM_REPO` private one in case you want to grab all files including private files.
- If you added private files while deploying and you have added private `UPSTREAM_REPO` and your private files in this private repository, so your private files will be overwritten from this repository. Also if you are using database for private files, then all files from database will override the private files that added before deploying or from private `UPSTREAM_REPO`.
- If you filled `UPSTREAM_REPO` with the official repository link, then be carefull incase any change in requirements.txt your bot will not start after restart. In this case you need to deploy again with updated code to install the new requirements or simply by changing the `UPSTREAM_REPO` to you fork link with that old updates.
- In case you you filled `UPSTREAM_REPO` with your fork link be carefull also if you fetched the commits from the official repository.
- The changes in your `UPSTREAM_REPO` will take affect only after restart.

------

## Bittorrent Seed

- Add `d:ratio:time` perfix along with leech or mirror cmd.
- Using `d` perfix alone will lead to use global options for aria2c or qbittorrent.

### Qbittorrent

- Global options: `GlobalMaxRatio` and `GlobalMaxSeedingMinutes` in qbittorrent.conf, `-1` means no limit, but you can cancel manually.
  - **NOTE**: Don't change `MaxRatioAction`.

### Aria2c

- Global options: `--seed-ratio` (0 means no limit) and `--seed-time` (0 means no seed) in aria.sh.

------

## Using Service Accounts for uploading to avoid user rate limit

>For Service Account to work, you must set `USE_SERVICE_ACCOUNTS` = ""True"" in config file or environment variables.
>**NOTE**: Using Service Accounts is only recommended while uploading to a Team Drive.

### 1. Generate Service Accounts. [What is Service Account?](https://cloud.google.com/iam/docs/service-accounts)

Let us create only the Service Accounts that we need.

**Warning**: Abuse of this feature is not the aim of this project and we do **NOT** recommend that you make a lot of projects, just one project and 100 SAs allow you plenty of use, its also possible that over abuse might get your projects banned by Google.

>**NOTE**: If you have created SAs in past from this script, you can also just re download the keys by running:

```
python3 gen_sa_accounts.py --download-keys $PROJECTID
```

>**NOTE:** 1 Service Account can upload/copy around 750 GB a day, 1 project can make 100 Service Accounts so you can upload 75 TB a day.

>**NOTE:** All people can copy `2TB/DAY` from each file creator (uploader account), so if you got error `userRateLimitExceeded` that doesn't mean your limit exceeded but file creator limit have been exceeded which is `2TB/DAY`.

#### Two methods to create service accounts

Choose one of these methods

##### 1. Create Service Accounts in existed Project (Recommended Method)

- List your projects ids

```
python3 gen_sa_accounts.py --list-projects
```

- Enable services automatically by this command

```
python3 gen_sa_accounts.py --enable-services $PROJECTID
```

- Create Sevice Accounts to current project

```
python3 gen_sa_accounts.py --create-sas $PROJECTID
```

- Download Sevice Accounts as accounts folder

```
python3 gen_sa_accounts.py --download-keys $PROJECTID
```

##### 2. Create Service Accounts in New Project

```
python3 gen_sa_accounts.py --quick-setup 1 --new-only
```

A folder named accounts will be created which will contain keys for the Service Accounts.

### 2. Add Service Accounts

#### Two methods to add service accounts

Choose one of these methods

##### 1. Add Them To Google Group then to Team Drive (Recommended)

- Mount accounts folder

```
cd accounts
```

- Grab emails form all accounts to emails.txt file that would be created in accounts folder
- `For Windows using PowerShell`

```
$emails = Get-ChildItem .\**.json |Get-Content -Raw |ConvertFrom-Json |Select -ExpandProperty client_email >>emails.txt
```

- `For Linux`

```
grep -oPh '""client_email"": ""\K[^""]+' *.json > emails.txt
```

- Unmount acounts folder

```
cd ..
```

Then add emails from emails.txt to Google Group, after that add this Google Group to your Shared Drive and promote it to manager and delete email.txt file from accounts folder

##### 2. Add Them To Team Drive Directly

- Run:

```
python3 add_to_team_drive.py -d SharedTeamDriveSrcID
```

------

## Generate Database

1. Go to `https://mongodb.com/` and sign-up.
2. Create Shared Cluster.
3. Press on `Database` under `Deployment` Header, your created cluster will be there.
5. Press on connect, choose `Allow Acces From Anywhere` and press on `Add IP Address` without editing the ip, then create user.
6. After creating user press on `Choose a connection`, then press on `Connect your application`. Choose `Driver` **python** and `version` **3.6 or later**.
7. Copy your `connection string` and replace `<password>` with the password of your user, then press close.

------

## Multi Drive List

To use list from multi TD/folder. Run driveid.py in your terminal and follow it. It will generate **list_drives.txt** file or u can simply create `list_drives.txt` file in working directory and fill it, check below format:

```
DriveName folderID/tdID or `root` IndexLink(if available)
DriveName folderID/tdID or `root` IndexLink(if available)
```

Example:

```
TD1 root https://example.dev
TD2 0AO1JDB1t3i5jUk9PVA https://example.dev
```

-----

## Yt-dlp and Aria2c Authentication Using .netrc File

For using your premium accounts in yt-dlp or for protected Index Links, create .netrc file according to following format:

**Note**: Create .netrc and not netrc, this file will be hidden, so view hidden files to edit it after creation.

Format:

```
machine host login username password my_password
```

Example:

```
machine instagram login anas.tayyar password mypassword
```

**Instagram Note**: You must login even if you want to download public posts and after first try you must confirm that this was you logged in from different ip(you can confirm from phone app).

**Youtube Note**: For `youtube` authentication use [cookies.txt](https://github.com/ytdl-org/youtube-dl#how-do-i-pass-cookies-to-youtube-dl) file.

Using Aria2c you can also use built in feature from bot with or without username. Here example for index link without username.

```
machine example.workers.dev password index_password
```

Where host is the name of extractor (eg. instagram, Twitch). Multiple accounts of different hosts can be added each separated by a new line.

-----

## Donations

<p> If you feel like showing your appreciation for this project, then how about buying me a coffee.</p>

[![""Buy Me A Coffee""](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/anasty17)

USDT Address:

```
TEzjjfkxLKQqndpsdpkA7jgiX7QQCL5p4f
```

Network:

```
TRC20
```

BTC Address:

```
17dkvxjqdc3yiaTs6dpjUB1TjV3tD7ScWe
```

ETH Address:

```
0xf798a8a1c72d593e16d8f3bb619ebd1a093c7309
```

-----
"
phoniex628/jd_maotai_seckill,,"# Jd_Seckill

## 特别声明:

* 本仓库发布的`jd_seckill`项目中涉及的任何脚本，仅用于测试和学习研究，禁止用于商业用途，不能保证其合法性，准确性，完整性和有效性，请根据情况自行判断。

* 本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。

* `huanghyw` 对任何脚本问题概不负责，包括但不限于由任何脚本错误导致的任何损失或损害.

* 间接使用脚本的任何用户，包括但不限于建立VPS或在某些行为违反国家/地区法律或相关法规的情况下进行传播, `huanghyw` 对于由此引起的任何隐私泄漏或其他后果概不负责。

* 请勿将`jd_seckill`项目的任何内容用于商业或非法目的，否则后果自负。

* 如果任何单位或个人认为该项目的脚本可能涉嫌侵犯其权利，则应及时通知并提供身份证明，所有权证明，我们将在收到认证文件后删除相关脚本。

* 以任何方式查看此项目的人或直接或间接使用`jd_seckill`项目的任何脚本的使用者都应仔细阅读此声明。`huanghyw` 保留随时更改或补充此免责声明的权利。一旦使用并复制了任何相关脚本或`jd_seckill`项目，则视为您已接受此免责声明。
  
* 您必须在下载后的24小时内从计算机或手机中完全删除以上内容。  
  
* 本项目遵循`GPL-3.0 License`协议，如果本特别声明与`GPL-3.0 License`协议有冲突之处，以本特别声明为准。

> ***您使用或者复制了本仓库且本人制作的任何代码或项目，则视为`已接受`此声明，请仔细阅读***  
> ***您在本声明未发出之时点使用或者复制了本仓库且本人制作的任何代码或项目且此时还在使用，则视为`已接受`此声明，请仔细阅读***

## 简介
通过我这段时间的使用（2020-12-12至2020-12-17），证实这个脚本确实能抢到茅台。我自己三个账号抢了四瓶，帮两个朋友抢了4瓶。
大家只要确认自己配置文件没有问题，Cookie没有失效，坚持下去总能成功的。

根据这段时间大家的反馈，除了茅台，其它不需要加购物车的商品也不能抢。具体原因还没有进行排查，应该是京东非茅台商品抢购流程发生了变化。  
为了避免耽误大家的时间，先不要抢购非茅台商品。  
等这个问题处理好了，会上线新版本。


## 暗中观察

根据12月14日以来抢茅台的日志分析，大胆推断再接再厉返回Json消息中`resultCode`与小白信用的关系。  
这里主要分析出现频率最高的`90016`和`90008`。  

### 样例JSON
```json
{'errorMessage': '很遗憾没有抢到，再接再厉哦。', 'orderId': 0, 'resultCode': 90016, 'skuId': 0, 'success': False}
{'errorMessage': '很遗憾没有抢到，再接再厉哦。', 'orderId': 0, 'resultCode': 90008, 'skuId': 0, 'success': False}
```

### 数据统计

| 案例 | 小白信用 | 90016 | 90008 | 抢到耗时 |
| ---- | ---- | ---- | ---- | ---- |
| 张三 | 63.8 | 59.63% | 40.37% | 暂未抢到 |
| 李四 | 92.9 | 72.05% | 27.94% | 4天 |
| 王五 | 99.6 | 75.70% | 24.29% | 暂未抢到 |
| 赵六 | 103.4 | 91.02% | 8.9% | 2天 |

### 猜测
推测返回90008是京东的风控机制，代表这次请求直接失败，不参与抢购。  
小白信用越低越容易触发京东的风控。  

从数据来看小白信用与风控的关系大概每十分为一个等级，所以赵六基本上没有被拦截，李四和王五的拦截几率相近，张三的拦截几率最高。  

风控放行后才会进行抢购，这时候用的应该是水库计数模型，假设无法一次性拿到所有数据的情况下来尽量的做到抢购成功用户的均匀分布，这样就和概率相关了。  

> 综上，张三想成功有点困难，小白信用是100+的用户成功几率最大。

## 主要功能

- 登陆京东商城（[www.jd.com](http://www.jd.com/)）
  - 用京东APP扫码给出的二维码
- 预约茅台
  - 定时自动预约
- 秒杀预约后等待抢购
  - 定时开始自动抢购

## 运行环境

- [Python 3](https://www.python.org/)

## 第三方库

- 需要使用到的库已经放在requirements.txt，使用pip安装的可以使用指令  
`pip install -r requirements.txt`
- 如果国内安装第三方库比较慢，可以使用以下指令进行清华源加速
`pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/`

## 使用教程  
#### 1. 推荐Chrome浏览器
#### 2. 网页扫码登录，或者账号密码登录
#### 3. 填写config.ini配置信息 
(1)`eid`和`fp`找个普通商品随便下单,然后抓包就能看到,这两个值可以填固定的 
> 随便找一个商品下单，然后进入结算页面，打开浏览器的调试窗口，切换到控制台Tab页，在控制台中输入变量`_JdTdudfp`，即可从输出的Json中获取`eid`和`fp`。  
> 不会的话参考原作者的issue https://github.com/zhou-xiaojun/jd_mask/issues/22

(2)`sku_id`,`DEFAULT_USER_AGENT` 
> `sku_id`已经按照茅台的填好。
> `cookies_string` 现在已经不需要填写了
> `DEFAULT_USER_AGENT` 可以用默认的。谷歌浏览器也可以浏览器地址栏中输入about:version 查看`USER_AGENT`替换

(3)配置一下时间
> 现在不强制要求同步最新时间了，程序会自动同步京东时间
>> 但要是电脑时间快慢了好几个小时，最好还是同步一下吧

以上都是必须的.
> tips：
> 在程序开始运行后，会检测本地时间与京东服务器时间，输出的差值为本地时间-京东服务器时间，即-50为本地时间比京东服务器时间慢50ms。
> 本代码的执行的抢购时间以本地电脑/服务器时间为准

(4)修改抢购瓶数
> 代码中默认抢购瓶数为2，且无法在配置文件中修改
> 如果一个月内抢购过一瓶，最好修改抢购瓶数为1 
> 具体修改为：在`jd_spider_requests.py`文件中搜索`self.seckill_num = 2`，将`2`改为`1`

#### 4.运行main.py 
根据提示选择相应功能即可

#### 5.抢购结果确认 
抢购是否成功通常在程序开始的一分钟内可见分晓！  
搜索日志，出现“抢购成功，订单号xxxxx""，代表成功抢到了，务必半小时内支付订单！程序暂时不支持自动停止，需要手动STOP！  
若两分钟还未抢购成功，基本上就是没抢到！程序暂时不支持自动停止，需要手动STOP！  

## 打赏
不用再打赏了，抢到茅台的同学请保持这份喜悦，没抢到的继续加油 :)  

## 感谢
##### 非常感谢原作者 https://github.com/zhou-xiaojun/jd_mask 提供的代码
##### 也非常感谢 https://github.com/wlwwu/jd_maotai 进行的优化
"
MorvanZhou/Reinforcement-learning-with-tensorflow,Python,"<p align=""center"">
    <a href=""https://www.youtube.com/watch?v=pieI7rOXELI&list=PLXO45tsB95cIplu-fLMpUEEZTwrDNh6Ba"" target=""_blank"">
    <img width=""60%"" src=""https://github.com/MorvanZhou/Reinforcement-learning-with-tensorflow/blob/master/RL_cover.jpg"" style=""max-width:100%;"">
    </a>
</p>


<br>

# Reinforcement Learning Methods and Tutorials

In these tutorials for reinforcement learning, it covers from the basic RL algorithms to advanced algorithms developed recent years.

**If you speak Chinese, visit [莫烦 Python](https://mofanpy.com) or my [Youtube channel](https://www.youtube.com/channel/UCdyjiB5H8Pu7aDTNVXTTpcg) for more.**

**As many requests about making these tutorials available in English, please find them in this playlist:** ([https://www.youtube.com/playlist?list=PLXO45tsB95cIplu-fLMpUEEZTwrDNh6Ba](https://www.youtube.com/playlist?list=PLXO45tsB95cIplu-fLMpUEEZTwrDNh6Ba))

# Table of Contents

* Tutorials
    * [Simple entry example](contents/1_command_line_reinforcement_learning)
    * [Q-learning](contents/2_Q_Learning_maze)
    * [Sarsa](contents/3_Sarsa_maze)
    * [Sarsa(lambda)](contents/4_Sarsa_lambda_maze)
    * [Deep Q Network (DQN)](contents/5_Deep_Q_Network)
    * [Using OpenAI Gym](contents/6_OpenAI_gym)
    * [Double DQN](contents/5.1_Double_DQN)
    * [DQN with Prioitized Experience Replay](contents/5.2_Prioritized_Replay_DQN)
    * [Dueling DQN](contents/5.3_Dueling_DQN)
    * [Policy Gradients](contents/7_Policy_gradient_softmax)
    * [Actor-Critic](contents/8_Actor_Critic_Advantage)
    * [Deep Deterministic Policy Gradient (DDPG)](contents/9_Deep_Deterministic_Policy_Gradient_DDPG)
    * [A3C](contents/10_A3C)
    * [Dyna-Q](contents/11_Dyna_Q)
    * [Proximal Policy Optimization (PPO)](contents/12_Proximal_Policy_Optimization)
    * [Curiosity Model](/contents/Curiosity_Model), [Random Network Distillation (RND)](/contents/Curiosity_Model/Random_Network_Distillation.py)
* [Some of my experiments](experiments)
    * [2D Car](experiments/2D_car)
    * [Robot arm](experiments/Robot_arm)
    * [BipedalWalker](experiments/Solve_BipedalWalker)
    * [LunarLander](experiments/Solve_LunarLander)

# Some RL Networks
### [Deep Q Network](contents/5_Deep_Q_Network)

<a href=""contents/5_Deep_Q_Network"">
    <img class=""course-image"" src=""https://mofanpy.com/static/results/reinforcement-learning/4-3-2.png"">
</a>

### [Double DQN](contents/5.1_Double_DQN)

<a href=""contents/5.1_Double_DQN"">
    <img class=""course-image"" src=""https://mofanpy.com/static/results/reinforcement-learning/4-5-3.png"">
</a>

### [Dueling DQN](contents/5.3_Dueling_DQN)

<a href=""contents/5.3_Dueling_DQN"">
    <img class=""course-image"" src=""https://mofanpy.com/static/results/reinforcement-learning/4-7-4.png"">
</a>

### [Actor Critic](contents/8_Actor_Critic_Advantage)

<a href=""contents/8_Actor_Critic_Advantage"">
    <img class=""course-image"" src=""https://mofanpy.com/static/results/reinforcement-learning/6-1-1.png"">
</a>

### [Deep Deterministic Policy Gradient](contents/9_Deep_Deterministic_Policy_Gradient_DDPG)

<a href=""contents/9_Deep_Deterministic_Policy_Gradient_DDPG"">
    <img class=""course-image"" src=""https://mofanpy.com/static/results/reinforcement-learning/6-2-2.png"">
</a>

### [A3C](contents/10_A3C)

<a href=""contents/10_A3C"">
    <img class=""course-image"" src=""https://mofanpy.com/static/results/reinforcement-learning/6-3-2.png"">
</a>

### [Proximal Policy Optimization (PPO)](contents/12_Proximal_Policy_Optimization)

<a href=""contents/12_Proximal_Policy_Optimization"">
    <img class=""course-image"" src=""https://mofanpy.com/static/results/reinforcement-learning/6-4-3.png"">
</a>

### [Curiosity Model](/contents/Curiosity_Model)

<a href=""/contents/Curiosity_Model"">
    <img class=""course-image"" src=""/contents/Curiosity_Model/Curiosity.png"">
</a>

# Donation

*If this does help you, please consider donating to support me for better tutorials. Any contribution is greatly appreciated!*

<div >
  <a href=""https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=morvanzhou%40gmail%2ecom&amp;lc=C2&amp;item_name=MorvanPython&amp;currency_code=AUD&amp;bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted"">
    <img style=""border-radius: 20px;  box-shadow: 0px 0px 10px 1px  #888888;""
         src=""https://www.paypalobjects.com/webstatic/en_US/i/btn/png/silver-pill-paypal-44px.png""
         alt=""Paypal""
         height=""auto"" ></a>
</div>

<div>
  <a href=""https://www.patreon.com/morvan"">
    <img src=""https://mofanpy.com/static/img/support/patreon.jpg""
         alt=""Patreon""
         height=120></a>
</div>
"
Jack-Cherish/Machine-Learning,Python,"# Machine-Learning
* [In English](https://github.com/Jack-Cherish/Machine-Learning/blob/master/README-eng.md ""悬停显示"")<br>

原创文章每周最少两篇，**后续最新文章**会在[【公众号】](https://cuijiahua.com/wp-content/uploads/2020/05/gzh-w.jpg)首发，视频[【B站】](https://space.bilibili.com/331507846)首发，大家可以加我[【微信】](https://cuijiahua.com/wp-content/uploads/2020/05/gzh-w.jpg)进**交流群**，技术交流或提意见都可以，欢迎**Star**！

<p align=""center"">
  <a href=""https://cuijiahua.com/wp-content/uploads/2020/05/gzh-w.jpg"" target=""_blank""><img src=""https://img.shields.io/badge/weChat-微信群-blue.svg"" alt=""微信群""></a>
  <a href=""https://cuijiahua.com/wp-content/uploads/2020/05/gzh-w.jpg"" target=""_blank""><img src=""https://img.shields.io/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-Jack%20Cui-lightgrey.svg"" alt=""公众号""></a>
  <a href=""https://space.bilibili.com/331507846""><img src=""https://img.shields.io/badge/bilibili-哔哩哔哩-critical"" alt=""B站""></a>
  <a href=""https://www.zhihu.com/people/Jack--Cui"" target=""_blank""><img src=""https://img.shields.io/badge/zhihu-知乎-informational"" alt=""知乎""></a>
  <a href=""https://blog.csdn.net/c406495762"" target=""_blank""><img src=""https://img.shields.io/badge/csdn-CSDN-red.svg"" alt=""CSDN""></a>
  <a href=""https://www.toutiao.com/c/user/token/MS4wLjABAAAA5gJtmezUJ6vli2hZvnN13iLnzKLpuF8gGHeS0iVlmNs/"" target=""_blank""><img src=""https://img.shields.io/badge/toutiao-%E5%A4%B4%E6%9D%A1-important.svg"" alt=""头条""></a>
  <a href=""https://juejin.im/user/5ea2ca74e51d4546b50d5f9f"" target=""_blank""><img src=""https://img.shields.io/badge/juejin-掘金-blue.svg"" alt=""掘金""></a>
</p>
	
### 文章首发声明

* 文章在自己的公众号和个人网站首发，其他平台文章均属转发，如想获得最新更新进展，欢迎关注我的个人网站：http://cuijiahua.com/

## 第二章：kNN（k-邻域算法）

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记(一)：k-近邻算法(史诗级干货长文) | [个人网站](http://cuijiahua.com/blog/2017/11/ml_1_knn.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/75172850 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/28656126 ""悬停显示"") |


### 代码

* [1.简单k-NN](https://github.com/Jack-Cherish/Machine-Learning/tree/master/kNN/1.%E7%AE%80%E5%8D%95k-NN ""悬停显示"")

* [2.海伦约会](https://github.com/Jack-Cherish/Machine-Learning/tree/master/kNN/2.%E6%B5%B7%E4%BC%A6%E7%BA%A6%E4%BC%9A ""悬停显示"")

* [3.数字识别](https://github.com/Jack-Cherish/Machine-Learning/tree/master/kNN/3.%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB ""悬停显示"")

## 第三章：Decision Tree（决策树）

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记(二)：决策树基础篇之让我们从相亲说起 | [个人网站](http://cuijiahua.com/blog/2017/11/ml_2_decision_tree_1.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/75663451 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/28688281 ""悬停显示"") |
| Python3《机器学习实战》学习笔记(三)：决策树实战篇之为自己配个隐形眼镜 | [个人网站](http://cuijiahua.com/blog/2017/11/ml_3_decision_tree_2.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/76262487 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/28714382 ""悬停显示"") |

### 代码
  
* [1.贷款预测](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Decision%20Tree/Decision%20Tree.py ""悬停显示"")

* [2.隐形眼镜](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Decision%20Tree/Sklearn-Decision%20Tree.py ""悬停显示"")

## 第四章：Navie Bayes（朴素贝叶斯）

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记（四）：朴素贝叶斯基础篇之言论过滤器 | [个人网站](http://cuijiahua.com/blog/2017/11/ml_4_bayes_1.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/77341116 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/28719332 ""悬停显示"") |
| Python3《机器学习实战》学习笔记（五）：朴素贝叶斯实战篇之新浪新闻分类 | [个人网站](http://cuijiahua.com/blog/2017/11/ml_5_bayes_2.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/77500679 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/28720393 ""悬停显示"") |

### 代码
  
* [1.言论过滤器](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Naive%20Bayes/bayes.py ""悬停显示"")

* [2.垃圾邮件过滤器](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Naive%20Bayes/bayes-modify.py ""悬停显示"")

* [3.新浪新闻分类器](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Naive%20Bayes/nbc.py ""悬停显示"")
  
## 第五章：Logistic（Logistic回归）

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记（六）：Logistic回归基础篇之梯度上升算法 | [个人网站](http://cuijiahua.com/blog/2017/11/ml_6_logistic_1.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/77723333 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/28922957 ""悬停显示"") |
| Python3《机器学习实战》学习笔记（七）：Logistic回归实战篇之预测病马死亡率 | [个人网站](http://cuijiahua.com/blog/2017/11/ml_7_logistic_2.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/77851973 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/29073560 ""悬停显示"") |

### 代码

* [1.Logistic基础训练](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Logistic/LogRegres.py ""悬停显示"")

* [2.改进的随机梯度上升算法](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Logistic/LogRegres-gj.py ""悬停显示"")

* [3.病马死亡率预测](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Logistic/colicLogRegres.py ""悬停显示"")

## 第六章：SVM（支持向量机）

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记（八）：支持向量机原理篇之手撕线性SVM | [个人网站](http://cuijiahua.com/blog/2017/11/ml_8_svm_1.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/78072313 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/29604517 ""悬停显示"") |
| Python3《机器学习实战》学习笔记（九）：支持向量机实战篇之再撕非线性SVM | [个人网站](http://cuijiahua.com/blog/2017/11/ml_9_svm_2.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/78158354 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/29872905 ""悬停显示"") |

### 代码

* [1.简化版SMO算法](https://github.com/Jack-Cherish/Machine-Learning/blob/master/SVM/svm-simple.py ""悬停显示"")

* [2.完整版SMO算法](https://github.com/Jack-Cherish/Machine-Learning/blob/master/SVM/svm-smo.py ""悬停显示"")

* [3.非线性SVM](https://github.com/Jack-Cherish/Machine-Learning/blob/master/SVM/svmMLiA.py ""悬停显示"")

* [4.Sklearn SVC手写数字识别](https://github.com/Jack-Cherish/Machine-Learning/blob/master/SVM/svm-svc.py ""悬停显示"")

## 第七章：AdaBoost

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记（十）：提升分类器性能利器-AdaBoost | [个人网站](http://cuijiahua.com/blog/2017/11/ml_10_adaboost.html ""悬停显示"") | [CSDN](http://blog.csdn.net/c406495762/article/details/78212124 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/30035094 ""悬停显示"") |

### 代码

* [1.基于单层决策树的AdaBoost训练过程](https://github.com/Jack-Cherish/Machine-Learning/blob/master/AdaBoost/adaboost.py ""悬停显示"")

* [2.在难数据集上应用AdaBoost](https://github.com/Jack-Cherish/Machine-Learning/blob/master/AdaBoost/horse_adaboost.py ""悬停显示"")

* [3.sklearn实现AdaBoost](https://github.com/Jack-Cherish/Machine-Learning/blob/master/AdaBoost/sklearn_adaboost.py ""悬停显示"")

* [4.ROC曲线绘制](https://github.com/Jack-Cherish/Machine-Learning/blob/master/AdaBoost/ROC.py ""悬停显示"")

## 第八章：Regression

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记（十一）：线性回归基础篇之预测鲍鱼年龄 | [个人网站](http://cuijiahua.com/blog/2017/11/ml_11_regression_1.html ""悬停显示"") |[CSDN](http://blog.csdn.net/c406495762/article/details/78760239 ""悬停显示"") | [知乎](https://zhuanlan.zhihu.com/p/31860100  ""悬停显示"")|
| Python3《机器学习实战》学习笔记（十二）：线性回归提高篇之乐高玩具套件二手价预测 | [个人网站](http://cuijiahua.com/blog/2017/12/ml_12_regression_2.html ""悬停显示"") | no | no |

### 代码

* [1.线性回归(普通线性回归+局部加权线性回归)](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Regression/regression_old.py ""悬停显示"")

* [2.预测鲍鱼年龄](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Regression/abalone.py ""悬停显示"")

* [3.逐步线性回归](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Regression/regression.py ""悬停显示"")

* [4.乐高玩具二手价格预测](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Regression/lego.py ""悬停显示"")

## 第九章：Regression Tree

|   文章   |  个人网站  |    CSDN    |    知乎    |
| :------  | :--------: | :--------: | :--------: |
| Python3《机器学习实战》学习笔记（十三）：树回归基础篇之CART算法与树剪枝 | [个人网站](http://cuijiahua.com/blog/2017/12/ml_13_regtree_1.html ""悬停显示"") | no | no |


### 代码

* [1.树回归](https://github.com/Jack-Cherish/Machine-Learning/blob/master/Regression%20Trees/regTrees.py ""悬停显示"")

## 聚类

|   文章   |  个人网站  |    公众号    |
| :------  | :--------: | :--------: |
| 嘿，来聚个类！| [个人网站](https://cuijiahua.com/blog/2021/04/ml-14.html) | [公众号](https://mp.weixin.qq.com/s/oxB5icj8KOfFja8XTHf7jg) |

更多精彩，敬请期待！

<a name=""微信""></a>  <a name=""公众号""></a>

<img src=""https://ftp.bmp.ovh/imgs/2020/07/112254f0199e3d4f.jpg"" alt=""wechat"" width=""400"" height=""200"" align=""bottom"" />
"
jumpserver/jumpserver,Python,"<p align=""center"">
  <a href=""https://jumpserver.org""><img src=""https://download.jumpserver.org/images/jumpserver-logo.svg"" alt=""JumpServer"" width=""300"" /></a>
</p>
<h3 align=""center"">广受欢迎的开源堡垒机</h3>

<p align=""center"">
  <a href=""https://www.gnu.org/licenses/gpl-3.0.html""><img src=""https://img.shields.io/github/license/jumpserver/jumpserver"" alt=""License: GPLv3""></a>
  <a href=""https://hub.docker.com/u/jumpserver""><img src=""https://img.shields.io/docker/pulls/jumpserver/jms_all.svg"" alt=""Docker pulls""></a>
  <a href=""https://github.com/jumpserver/jumpserver/releases/latest""><img src=""https://img.shields.io/github/v/release/jumpserver/jumpserver"" alt=""Latest release""></a>
  <a href=""https://github.com/jumpserver/jumpserver""><img src=""https://img.shields.io/github/stars/jumpserver/jumpserver?color=%231890FF&style=flat-square"" alt=""Stars""></a>
</p>


<p align=""center"">
    JumpServer <a href=""https://github.com/jumpserver/jumpserver/releases/tag/v3.0.0"">v3.0</a> 正式发布。
    <br>
    9 年时间，倾情投入，用心做好一款开源堡垒机。
</p>

|                                                  :warning: 注意 :warning:                                                   |
|:-------------------------------------------------------------------------------------------------------------------------:|
| 3.0 架构上和 2.0 变化较大，建议全新安装一套环境来体验。如需升级，请务必升级前进行备份，并[查阅文档](https://kb.fit2cloud.com/?p=06638d69-f109-4333-b5bf-65b17b297ed9) |

--------------------------

JumpServer 是广受欢迎的开源堡垒机，是符合 4A 规范的专业运维安全审计系统。JumpServer 堡垒机帮助企业以更安全的方式管控和登录各种类型的资产，包括：

- **SSH**: Linux / Unix / 网络设备 等；
- **Windows**: Web 方式连接 / 原生 RDP 连接；
- **数据库**: MySQL / Oracle / SQLServer / PostgreSQL 等；
- **Kubernetes**: 支持连接到 K8s 集群中的 Pods；
- **Web 站点**: 各类系统的 Web 管理后台；
- **应用**: 通过 Remote App 连接各类应用。

## 产品特色

- **开源**: 零门槛，线上快速获取和安装；
- **无插件**: 仅需浏览器，极致的 Web Terminal 使用体验；
- **分布式**: 支持分布式部署和横向扩展，轻松支持大规模并发访问；
- **多云支持**: 一套系统，同时管理不同云上面的资产；
- **多租户**: 一套系统，多个子公司或部门同时使用；
- **云端存储**: 审计录像云端存储，永不丢失；

## UI 展示

![UI展示](https://docs.jumpserver.org/zh/v3/img/dashboard.png)

## 在线体验

- 环境地址：<https://demo.jumpserver.org/>

| :warning: 注意                 |
|:-----------------------------|
| 该环境仅作体验目的使用，我们会定时清理、重置数据！    |
| 请勿修改体验环境用户的密码！               |
| 请勿在环境中添加业务生产环境地址、用户名密码等敏感信息！ |

## 快速开始

- [快速入门](https://docs.jumpserver.org/zh/v3/quick_start/)
- [产品文档](https://docs.jumpserver.org)
- [在线学习](https://edu.fit2cloud.com/page/2635362)
- [知识库](https://kb.fit2cloud.com/categories/jumpserver)

## 案例研究

- [腾讯海外游戏：基于JumpServer构建游戏安全运营能力](https://blog.fit2cloud.com/?p=3704)
- [万华化学：通过JumpServer管理全球化分布式IT资产，并且实现与云管平台的联动](https://blog.fit2cloud.com/?p=3504)
- [雪花啤酒：JumpServer堡垒机使用体会](https://blog.fit2cloud.com/?p=3412)
- [顺丰科技：JumpServer 堡垒机护航顺丰科技超大规模资产安全运维](https://blog.fit2cloud.com/?p=1147)
- [沐瞳游戏：通过JumpServer管控多项目分布式资产](https://blog.fit2cloud.com/?p=3213)
- [携程：JumpServer 堡垒机部署与运营实战](https://blog.fit2cloud.com/?p=851)
- [大智慧：JumpServer 堡垒机让“大智慧”的混合 IT 运维更智慧](https://blog.fit2cloud.com/?p=882)
- [小红书：JumpServer 堡垒机大规模资产跨版本迁移之路](https://blog.fit2cloud.com/?p=516)
- [中手游：JumpServer堡垒机助力中手游提升多云环境下安全运维能力](https://blog.fit2cloud.com/?p=732)
- [中通快递：JumpServer主机安全运维实践](https://blog.fit2cloud.com/?p=708)
- [东方明珠：JumpServer高效管控异构化、分布式云端资产](https://blog.fit2cloud.com/?p=687)
- [江苏农信：JumpServer堡垒机助力行业云安全运维](https://blog.fit2cloud.com/?p=666)

## 社区交流

如果您在使用过程中有任何疑问或对建议，欢迎提交 [GitHub Issue](https://github.com/jumpserver/jumpserver/issues/new/choose)。

您也可以到我们的 [社区论坛](https://bbs.fit2cloud.com/c/js/5) 及微信交流群当中进行交流沟通。

**微信交流群**

<img src=""https://download.jumpserver.org/images/wecom-group.jpeg"" alt=""微信群二维码"" width=""200""/>

### 参与贡献

欢迎提交 PR 参与贡献。感谢以下贡献者，他们让 JumpServer 变的越来越好。

<a href=""https://github.com/jumpserver/jumpserver/graphs/contributors""><img src=""https://opencollective.com/jumpserver/contributors.svg?width=890&button=false"" /></a>

## 组件项目

| 项目                                                     | 状态                                                                                                                                                                     | 描述                                                                                      |
|--------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------|
| [Lina](https://github.com/jumpserver/lina)             | <a href=""https://github.com/jumpserver/lina/releases""><img alt=""Lina release"" src=""https://img.shields.io/github/release/jumpserver/lina.svg"" /></a>                   | JumpServer Web UI 项目                                                                    |
| [Luna](https://github.com/jumpserver/luna)             | <a href=""https://github.com/jumpserver/luna/releases""><img alt=""Luna release"" src=""https://img.shields.io/github/release/jumpserver/luna.svg"" /></a>                   | JumpServer Web Terminal 项目                                                              |
| [KoKo](https://github.com/jumpserver/koko)             | <a href=""https://github.com/jumpserver/koko/releases""><img alt=""Koko release"" src=""https://img.shields.io/github/release/jumpserver/koko.svg"" /></a>                   | JumpServer 字符协议 Connector 项目，替代原来 Python 版本的 [Coco](https://github.com/jumpserver/coco) |
| [Lion](https://github.com/jumpserver/lion-release)     | <a href=""https://github.com/jumpserver/lion-release/releases""><img alt=""Lion release"" src=""https://img.shields.io/github/release/jumpserver/lion-release.svg"" /></a>   | JumpServer 图形协议 Connector 项目，依赖 [Apache Guacamole](https://guacamole.apache.org/)       |
| [Magnus](https://github.com/jumpserver/magnus-release) | <a href=""https://github.com/jumpserver/magnus-release/releases""><img alt=""Magnus release"" src=""https://img.shields.io/github/release/jumpserver/magnus-release.svg"" /> | JumpServer 数据库代理 Connector 项目                                                           |
| [Clients](https://github.com/jumpserver/clients)       | <a href=""https://github.com/jumpserver/clients/releases""><img alt=""Clients release"" src=""https://img.shields.io/github/release/jumpserver/clients.svg"" />              | JumpServer 客户端 项目                                                                       |
| [Installer](https://github.com/jumpserver/installer)   | <a href=""https://github.com/jumpserver/installer/releases""><img alt=""Installer release"" src=""https://img.shields.io/github/release/jumpserver/installer.svg"" />        | JumpServer 安装包 项目                                                                       |

## 安全说明

JumpServer是一款安全产品，请参考 [基本安全建议](https://docs.jumpserver.org/zh/master/install/install_security/)
进行安装部署。如果您发现安全相关问题，请直接联系我们：

- 邮箱：support@fit2cloud.com
- 电话：400-052-0755

## 致谢开源

- [Apache Guacamole](https://guacamole.apache.org/)： Web 页面连接 RDP、SSH、VNC 等协议资产，JumpServer Lion 组件使用到该项目；
- [OmniDB](https://omnidb.org/)： Web 页面连接使用数据库，JumpServer Web 数据库组件使用到该项目。

## License & Copyright

Copyright (c) 2014-2023 飞致云 FIT2CLOUD, All rights reserved.

Licensed under The GNU General Public License version 3 (GPLv3)  (the ""License""); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

https://www.gnu.org/licenses/gpl-3.0.html

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""
AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
language governing permissions and limitations under the License.
"
openai/gpt-2,Python,"**Status:** Archive (code is provided as-is, no updates expected)

# gpt-2

Code and models from the paper [""Language Models are Unsupervised Multitask Learners""](https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf).

You can read about GPT-2 and its staged release in our [original blog post](https://blog.openai.com/better-language-models/), [6 month follow-up post](https://openai.com/blog/gpt-2-6-month-follow-up/), and [final post](https://www.openai.com/blog/gpt-2-1-5b-release/).

We have also [released a dataset](https://github.com/openai/gpt-2-output-dataset) for researchers to study their behaviors.

<sup>*</sup> *Note that our original parameter counts were wrong due to an error (in our previous blog posts and paper).  Thus you may have seen small referred to as 117M and medium referred to as 345M.*

## Usage

This repository is meant to be a starting point for researchers and engineers to experiment with GPT-2.

For basic information, see our [model card](./model_card.md).

### Some caveats

- GPT-2 models' robustness and worst case behaviors are not well-understood.  As with any machine-learned model, carefully evaluate GPT-2 for your use case, especially if used without fine-tuning or in safety-critical applications where reliability is important.
- The dataset our GPT-2 models were trained on contains many texts with [biases](https://twitter.com/TomerUllman/status/1101485289720242177) and factual inaccuracies, and thus GPT-2 models are likely to be biased and inaccurate as well.
- To avoid having samples mistaken as human-written, we recommend clearly labeling samples as synthetic before wide dissemination.  Our models are often incoherent or inaccurate in subtle ways, which takes more than a quick read for a human to notice.

### Work with us

Please [let us know](mailto:languagequestions@openai.com) if you’re doing interesting research with or working on applications of GPT-2!  We’re especially interested in hearing from and potentially working with those who are studying
- Potential malicious use cases and defenses against them (e.g. the detectability of synthetic text)
- The extent of problematic content (e.g. bias) being baked into the models and effective mitigations

## Development

See [DEVELOPERS.md](./DEVELOPERS.md)

## Contributors

See [CONTRIBUTORS.md](./CONTRIBUTORS.md)

## Citation

Please use the following bibtex entry:
```
@article{radford2019language,
  title={Language Models are Unsupervised Multitask Learners},
  author={Radford, Alec and Wu, Jeff and Child, Rewon and Luan, David and Amodei, Dario and Sutskever, Ilya},
  year={2019}
}
```

## Future work

We may release code for evaluating the models on various benchmarks.

We are still considering release of the larger models.

## License

[Modified MIT](./LICENSE)
"
openai/baselines,Python,"**Status:** Maintenance (expect bug fixes and minor updates)

<img src=""data/logo.jpg"" width=25% align=""right"" /> [![Build status](https://travis-ci.org/openai/baselines.svg?branch=master)](https://travis-ci.org/openai/baselines)

# Baselines

OpenAI Baselines is a set of high-quality implementations of reinforcement learning algorithms.

These algorithms will make it easier for the research community to replicate, refine, and identify new ideas, and will create good baselines to build research on top of. Our DQN implementation and its variants are roughly on par with the scores in published papers. We expect they will be used as a base around which new ideas can be added, and as a tool for comparing a new approach against existing ones. 

## Prerequisites 
Baselines requires python3 (>=3.5) with the development headers. You'll also need system packages CMake, OpenMPI and zlib. Those can be installed as follows
### Ubuntu 
    
```bash
sudo apt-get update && sudo apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev
```
    
### Mac OS X
Installation of system packages on Mac requires [Homebrew](https://brew.sh). With Homebrew installed, run the following:
```bash
brew install cmake openmpi
```
    
## Virtual environment
From the general python package sanity perspective, it is a good idea to use virtual environments (virtualenvs) to make sure packages from different projects do not interfere with each other. You can install virtualenv (which is itself a pip package) via
```bash
pip install virtualenv
```
Virtualenvs are essentially folders that have copies of python executable and all python packages.
To create a virtualenv called venv with python3, one runs 
```bash
virtualenv /path/to/venv --python=python3
```
To activate a virtualenv: 
```
. /path/to/venv/bin/activate
```
More thorough tutorial on virtualenvs and options can be found [here](https://virtualenv.pypa.io/en/stable/) 


## Tensorflow versions
The master branch supports Tensorflow from version 1.4 to 1.14. For Tensorflow 2.0 support, please use tf2 branch.

## Installation
- Clone the repo and cd into it:
    ```bash
    git clone https://github.com/openai/baselines.git
    cd baselines
    ```
- If you don't have TensorFlow installed already, install your favourite flavor of TensorFlow. In most cases, you may use
    ```bash 
    pip install tensorflow-gpu==1.14 # if you have a CUDA-compatible gpu and proper drivers
    ```
    or 
    ```bash
    pip install tensorflow==1.14
    ```
    to install Tensorflow 1.14, which is the latest version of Tensorflow supported by the master branch. Refer to [TensorFlow installation guide](https://www.tensorflow.org/install/)
    for more details. 

- Install baselines package
    ```bash
    pip install -e .
    ```

### MuJoCo
Some of the baselines examples use [MuJoCo](http://www.mujoco.org) (multi-joint dynamics in contact) physics simulator, which is proprietary and requires binaries and a license (temporary 30-day license can be obtained from [www.mujoco.org](http://www.mujoco.org)). Instructions on setting up MuJoCo can be found [here](https://github.com/openai/mujoco-py)

## Testing the installation
All unit tests in baselines can be run using pytest runner:
```
pip install pytest
pytest
```

## Training models
Most of the algorithms in baselines repo are used as follows:
```bash
python -m baselines.run --alg=<name of the algorithm> --env=<environment_id> [additional arguments]
```
### Example 1. PPO with MuJoCo Humanoid
For instance, to train a fully-connected network controlling MuJoCo humanoid using PPO2 for 20M timesteps
```bash
python -m baselines.run --alg=ppo2 --env=Humanoid-v2 --network=mlp --num_timesteps=2e7
```
Note that for mujoco environments fully-connected network is default, so we can omit `--network=mlp`
The hyperparameters for both network and the learning algorithm can be controlled via the command line, for instance:
```bash
python -m baselines.run --alg=ppo2 --env=Humanoid-v2 --network=mlp --num_timesteps=2e7 --ent_coef=0.1 --num_hidden=32 --num_layers=3 --value_network=copy
```
will set entropy coefficient to 0.1, and construct fully connected network with 3 layers with 32 hidden units in each, and create a separate network for value function estimation (so that its parameters are not shared with the policy network, but the structure is the same)

See docstrings in [common/models.py](baselines/common/models.py) for description of network parameters for each type of model, and 
docstring for [baselines/ppo2/ppo2.py/learn()](baselines/ppo2/ppo2.py#L152) for the description of the ppo2 hyperparameters. 

### Example 2. DQN on Atari 
DQN with Atari is at this point a classics of benchmarks. To run the baselines implementation of DQN on Atari Pong:
```
python -m baselines.run --alg=deepq --env=PongNoFrameskip-v4 --num_timesteps=1e6
```

## Saving, loading and visualizing models

### Saving and loading the model
The algorithms serialization API is not properly unified yet; however, there is a simple method to save / restore trained models. 
`--save_path` and `--load_path` command-line option loads the tensorflow state from a given path before training, and saves it after the training, respectively. 
Let's imagine you'd like to train ppo2 on Atari Pong,  save the model and then later visualize what has it learnt.
```bash
python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2
```
This should get to the mean reward per episode about 20. To load and visualize the model, we'll do the following - load the model, train it for 0 steps, and then visualize: 
```bash
python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=0 --load_path=~/models/pong_20M_ppo2 --play
```

*NOTE:* Mujoco environments require normalization to work properly, so we wrap them with VecNormalize wrapper. Currently, to ensure the models are saved with normalization (so that trained models can be restored and run without further training) the normalization coefficients are saved as tensorflow variables. This can decrease the performance somewhat, so if you require high-throughput steps with Mujoco and do not need saving/restoring the models, it may make sense to use numpy normalization instead. To do that, set 'use_tf=False` in [baselines/run.py](baselines/run.py#L116). 

### Logging and vizualizing learning curves and other training metrics
By default, all summary data, including progress, standard output, is saved to a unique directory in a temp folder, specified by a call to Python's [tempfile.gettempdir()](https://docs.python.org/3/library/tempfile.html#tempfile.gettempdir).
The directory can be changed with the `--log_path` command-line option.
```bash
python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2 --log_path=~/logs/Pong/
```
*NOTE:* Please be aware that the logger will overwrite files of the same name in an existing directory, thus it's recommended that folder names be given a unique timestamp to prevent overwritten logs.

Another way the temp directory can be changed is through the use of the `$OPENAI_LOGDIR` environment variable.

For examples on how to load and display the training data, see [here](docs/viz/viz.ipynb).

## Subpackages

- [A2C](baselines/a2c)
- [ACER](baselines/acer)
- [ACKTR](baselines/acktr)
- [DDPG](baselines/ddpg)
- [DQN](baselines/deepq)
- [GAIL](baselines/gail)
- [HER](baselines/her)
- [PPO1](baselines/ppo1) (obsolete version, left here temporarily)
- [PPO2](baselines/ppo2) 
- [TRPO](baselines/trpo_mpi)



## Benchmarks
Results of benchmarks on Mujoco (1M timesteps) and Atari (10M timesteps) are available 
[here for Mujoco](https://htmlpreview.github.com/?https://github.com/openai/baselines/blob/master/benchmarks_mujoco1M.htm) 
and
[here for Atari](https://htmlpreview.github.com/?https://github.com/openai/baselines/blob/master/benchmarks_atari10M.htm) 
respectively. Note that these results may be not on the latest version of the code, particular commit hash with which results were obtained is specified on the benchmarks page. 

To cite this repository in publications:

    @misc{baselines,
      author = {Dhariwal, Prafulla and Hesse, Christopher and Klimov, Oleg and Nichol, Alex and Plappert, Matthias and Radford, Alec and Schulman, John and Sidor, Szymon and Wu, Yuhuai and Zhokhov, Peter},
      title = {OpenAI Baselines},
      year = {2017},
      publisher = {GitHub},
      journal = {GitHub repository},
      howpublished = {\url{https://github.com/openai/baselines}},
    }

"
quantopian/zipline,Python,".. image:: https://media.quantopian.com/logos/open_source/zipline-logo-03_.png
    :target: https://www.zipline.io
    :width: 212px
    :align: center
    :alt: Zipline

=============

|Gitter|
|pypi version status|
|pypi pyversion status|
|travis status|
|appveyor status|
|Coverage Status|

Zipline is a Pythonic algorithmic trading library. It is an event-driven
system for backtesting. Zipline is currently used in production as the backtesting and live-trading
engine powering `Quantopian <https://www.quantopian.com>`_ -- a free,
community-centered, hosted platform for building and executing trading
strategies. Quantopian also offers a `fully managed service for professionals <https://factset.quantopian.com>`_
that includes Zipline, Alphalens, Pyfolio, FactSet data, and more.

- `Join our Community! <https://groups.google.com/forum/#!forum/zipline>`_
- `Documentation <https://www.zipline.io>`_
- Want to Contribute? See our `Development Guidelines <https://www.zipline.io/development-guidelines>`_

Features
========

- **Ease of Use:** Zipline tries to get out of your way so that you can
  focus on algorithm development. See below for a code example.
- **""Batteries Included"":** many common statistics like
  moving average and linear regression can be readily accessed from
  within a user-written algorithm.
- **PyData Integration:** Input of historical data and output of performance statistics are
  based on Pandas DataFrames to integrate nicely into the existing
  PyData ecosystem.
- **Statistics and Machine Learning Libraries:** You can use libraries like matplotlib, scipy,
  statsmodels, and sklearn to support development, analysis, and
  visualization of state-of-the-art trading systems.

Installation
============

Zipline currently supports Python 2.7, 3.5, and 3.6, and may be installed via
either pip or conda.

**Note:** Installing Zipline is slightly more involved than the average Python
package. See the full `Zipline Install Documentation`_ for detailed
instructions.

For a development installation (used to develop Zipline itself), create and
activate a virtualenv, then run the ``etc/dev-install`` script.

Quickstart
==========

See our `getting started tutorial <https://www.zipline.io/beginner-tutorial>`_.

The following code implements a simple dual moving average algorithm.

.. code:: python

    from zipline.api import order_target, record, symbol

    def initialize(context):
        context.i = 0
        context.asset = symbol('AAPL')


    def handle_data(context, data):
        # Skip first 300 days to get full windows
        context.i += 1
        if context.i < 300:
            return

        # Compute averages
        # data.history() has to be called with the same params
        # from above and returns a pandas dataframe.
        short_mavg = data.history(context.asset, 'price', bar_count=100, frequency=""1d"").mean()
        long_mavg = data.history(context.asset, 'price', bar_count=300, frequency=""1d"").mean()

        # Trading logic
        if short_mavg > long_mavg:
            # order_target orders as many shares as needed to
            # achieve the desired number of shares.
            order_target(context.asset, 100)
        elif short_mavg < long_mavg:
            order_target(context.asset, 0)

        # Save values for later inspection
        record(AAPL=data.current(context.asset, 'price'),
               short_mavg=short_mavg,
               long_mavg=long_mavg)


You can then run this algorithm using the Zipline CLI.
First, you must download some sample pricing and asset data:

.. code:: bash

    $ zipline ingest
    $ zipline run -f dual_moving_average.py --start 2014-1-1 --end 2018-1-1 -o dma.pickle --no-benchmark

This will download asset pricing data data sourced from Quandl, and stream it through the algorithm over the specified time range.
Then, the resulting performance DataFrame is saved in ``dma.pickle``, which you can load and analyze from within Python.

You can find other examples in the ``zipline/examples`` directory.

Questions?
==========

If you find a bug, feel free to `open an issue <https://github.com/quantopian/zipline/issues/new>`_ and fill out the issue template.

Contributing
============

All contributions, bug reports, bug fixes, documentation improvements, enhancements, and ideas are welcome. Details on how to set up a development environment can be found in our `development guidelines <https://www.zipline.io/development-guidelines>`_.

If you are looking to start working with the Zipline codebase, navigate to the GitHub `issues` tab and start looking through interesting issues. Sometimes there are issues labeled as `Beginner Friendly <https://github.com/quantopian/zipline/issues?q=is%3Aissue+is%3Aopen+label%3A%22Beginner+Friendly%22>`_ or `Help Wanted <https://github.com/quantopian/zipline/issues?q=is%3Aissue+is%3Aopen+label%3A%22Help+Wanted%22>`_.

Feel free to ask questions on the `mailing list <https://groups.google.com/forum/#!forum/zipline>`_ or on `Gitter <https://gitter.im/quantopian/zipline>`_.

.. note::

   Please note that Zipline is not a community-led project. Zipline is
   maintained by the Quantopian engineering team, and we are quite small and
   often busy.

   Because of this, we want to warn you that we may not attend to your pull
   request, issue, or direct mention in months, or even years. We hope you
   understand, and we hope that this note might help reduce any frustration or
   wasted time.


.. |Gitter| image:: https://badges.gitter.im/Join%20Chat.svg
   :target: https://gitter.im/quantopian/zipline?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
.. |pypi version status| image:: https://img.shields.io/pypi/v/zipline.svg
   :target: https://pypi.python.org/pypi/zipline
.. |pypi pyversion status| image:: https://img.shields.io/pypi/pyversions/zipline.svg
   :target: https://pypi.python.org/pypi/zipline
.. |travis status| image:: https://travis-ci.org/quantopian/zipline.svg?branch=master
   :target: https://travis-ci.org/quantopian/zipline
.. |appveyor status| image:: https://ci.appveyor.com/api/projects/status/3dg18e6227dvstw6/branch/master?svg=true
   :target: https://ci.appveyor.com/project/quantopian/zipline/branch/master
.. |Coverage Status| image:: https://coveralls.io/repos/quantopian/zipline/badge.svg
   :target: https://coveralls.io/r/quantopian/zipline

.. _`Zipline Install Documentation` : https://www.zipline.io/install
"
MisterBooo/LeetCodeAnimation,Java,"![LeetCode Animation All in One](https://upload-images.jianshu.io/upload_images/1940317-e837182a805cecce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)

[![Travis](https://img.shields.io/badge/language-C++-red.svg)](https://developer.apple.com/.md)
[![Travis](https://img.shields.io/badge/language-Java-yellow.svg)](https://developer.apple.com/.md)


[There is an English version of README here. just click it！](https://github.com/MisterBooo/LeetCodeAnimation/blob/master/README-En.md)

我会尽力将 LeetCode 上所有的题目都用动画的形式演示出来，计划用 3 到 4 年时间去完成它，期待与你见证这一天！

文章最新首发于微信公众号 **吴师兄学算法**，您可以关注获取最新的文章。

为了帮助大家更好的入门学习算法，经过半年的积累，我给大家整理了《剑指 Offer》系列的四十道题目，都是算法面试的高频题目，每一道题目我都提供详细的分析、精美的配图、易于理解的动画视频，适合那些第一次刷题的同学，当然，也适合重复刷题的老手再次学习巩固基础。

![](https://weixin-1257126549.cos.ap-guangzhou.myqcloud.com/blog/qebp5.png)


文章同步博客地址：https://blog.algomooc.com/

## 汇总

| 序号 | 题目&题解                                                    | 动画                                                         |
| ---- | ------------------------------------------------------------ | ------------------------------------------------------------ |
| 0    | [十大经典排序算法动画与解析，看我就够了！（配代码完全版）](https://mp.weixin.qq.com/s/vn3KiV-ez79FmbZ36SX9lg) |                                                              |
| 1    | [两数之和](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第1号问题：两数之和.md) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/av47v.gif) |
| 2    | [两数相加](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第2号问题：两数相加.md) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/fz933.gif) |
| 3    | [无重复字符的最长子串](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第3号问题：无重复字符的最长子串.md) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/vxa7f.gif) |
| 4    | [寻找两个有序数组的中位数](https://mp.weixin.qq.com/s/FBlH7o-ssj_iMEPLcvsY2w) |                                                              |
| 9    | [回文数](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第9号问题：回文数.md) |                                                              |
| 10   | [正则表达式匹配](https://mp.weixin.qq.com/s/ZoytuPt5dfP5pMODbuKnCQ) |                                                              |
| 11   | [盛最多水的容器](https://mp.weixin.qq.com/s/0PCW-7JzU8rfrLA5GQmFiQ) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/en8u4.gif) |
| 15   | [三数之和](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第15号问题：三数之和.md) |                                                              |
| 19   | [删除链表的倒数第 N 个节点](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第19号问题：删除链表的倒数第N个节点.md) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/metqn.gif) |
| 20   | [有效的括号](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第20号问题：有效的括号.md) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/ey3lr.gif) |
| 21   | [合并两个有序链表](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第21号问题：合并两个有序链表.md) |                                                              |
| 23   | [合并 K 个排序链表](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第23号问题：合并K个排序链表.md) |                                                              |
| 24   | [两两交换链表中的节点](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第24号问题：两两交换链表中的节点.md) |                                                              |
| 25   | [K 个一组翻转链表](https://mp.weixin.qq.com/s/YOz66mJchVIEQjA7TBV2cg) |                                                              |
| 26   | [删除排序数组中的重复项](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第26号问题：删除排序数组中的重复项.md) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/4tk72.gif) |
| 32   | [最长有效括号](https://mp.weixin.qq.com/s/CPIDKHsg3ROT10rVFDyDJQ) |                                                              |
| 38   | [报数](https://mp.weixin.qq.com/s/DKXJR8pNX3fKGvtSn0TEjw)    |                                                              |
| 41   | [缺失的第一个正数](<https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247486473&idx=3&sn=06bf5f9c17cd3cb328934acc698b0ec3&chksm=fa0e6388cd79ea9e30c67dd2e5251056d860ba45e1fcbbcd4524573072305396d06629312c91&token=1735603091&lang=zh_CN#rd>) |                                                              |
| 66   | [加一](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第66号问题：加一.md) |                                                              |
| 75   | [颜色分类](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第75号问题：颜色分类.md) | ![](https://blog-1257126549.cos.ap-guangzhou.myqcloud.com/blog/ehgxu.gif) |
| 86   | [分割链表](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第86号问题：分割链表.md) |                                                              |
| 92   | [反转链表 II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第92号问题：反转链表II.md) |                                                              |
| 94   | [二叉树的中序遍历](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第94号问题：二叉树的中序遍历.md) |                                                              |
| 101  | [对称二叉树](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第101号问题：对称二叉树.md) |                                                              |
| 102  | [二叉树的层序遍历](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第102号问题：二叉树的层序遍历.md) |                                                              |
| 103  | [二叉树的锯齿形层次遍历](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第103号问题：二叉树的锯齿形层次遍历.md) |                                                              |
| 107  | [二叉树的层次遍历 II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第107号问题：二叉树的层次遍历II.md) |                                                              |
| 118  | [杨辉三角](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第118号问题：杨辉三角.md) |                                                              |
| 119  | [杨辉三角II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第119号问题：杨辉三角II.md) |                                                              |
| 110  | [平衡二叉树](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第110号问题：平衡二叉树.md) |                                                              |
| 121  | [买卖股票的最佳时机](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第121号问题：买卖股票的最佳时机.md) |                                                              |
| 122  | [买卖股票的最佳时机II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第122号问题：买卖股票的最佳时机II.md) |                                                              |
| 123  | [买卖股票的最佳时机III](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第123号问题：买卖股票的最佳时机III.md) |                                                              |
| 125  | [验证回文串](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第125号问题：验证回文串.md) |                                                              |
| 131  | [分割回文串](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第131号问题：分割回文串.md) |                                                              |
| 136  | [只出现一次的数字](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第136号问题：只出现一次的数字.md) |                                                              |
| 138  | [复制带随机指针](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第138号问题：复制带随机指针.md) |                                                              |
| 139  | [单词拆分](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第139号问题：单词拆分.md) |                                                              |
| 141  | [环形链表](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第141号问题：环形链表.md) |                                                              |
| 144  | [二叉树的前序遍历](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第144号问题：二叉树的前序遍历.md) |                                                              |
| 145  | [二叉树的后序遍历](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第145号问题：二叉树的后序遍历.md) |                                                              |
| 146  | [LRU缓存机制](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第146号问题：LRU缓存机制.md) |                                                              |
| 150  | [逆波兰表达式求值](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第150号问题：逆波兰表达式求值.md) |                                                              |
| 153  | [寻找旋转排序数组中的最小值](<https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247486243&idx=3&sn=ed49d65662be56ca76753141b91ce6ef&chksm=fa0e64a2cd79edb4b64d11e3af5f0ee2f597bbd843d5f34a812ef70f0f97e190d381e77f05f8&token=387372133&lang=zh_CN#rd>) |                                                              |
| 164  | [最大间距](https://mp.weixin.qq.com/s/xHxjCDdFZyCW2pnY6Cz8SQ) |                                                              |
| 167  | [两数之和 II - 输入有序数组](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第167号问题：两数之和II-输入有序数组.md) |                                                              |
| 169  | [求众数](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第169号问题：求众数.md) |                                                              |
| 172  | [阶乘后的零](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第172号问题：阶乘后的零.md) |                                                              |
| 187  | [重复的 DNA 序列](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第187号问题：重复的DNA序列.md) |                                                              |
| 191  | [位1的个数](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第191号问题：位1的个数.md) |                                                              |
| 199  | [二叉树的右视图](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第199号问题：二叉树的右视图.md) |                                                              |
| 201  | [数字范围按位与](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第201号问题：数字范围按位与.md) |                                                              |
| 203  | [移除链表元素](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第203号问题：移除链表元素.md) |                                                              |
| 206  | [反转链表](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第206号问题：反转链表.md) |                                                              |
| 209  | [长度最小的子数组](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第209号问题：长度最小的子数组.md) |                                                              |
| 219  | [存在重复元素 II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第219号问题：存在重复元素II.md) |                                                              |
| 229  | [求众数II](https://mp.weixin.qq.com/s/ObO4eQbjp1s1g_WXPkjixQ) |                                                              |
| 231  | [2的幂](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第231号问题：2的幂.md) |                                                              |
| 232  | [使用栈实现队列](https://mp.weixin.qq.com/s/j6w94_PjvsL9Dip_xBcqcg) |                                                              |
| 237  | [删除链表中的节点](https://mp.weixin.qq.com/s/2XdUeDNblryFpXpTUgsaMQ) |                                                              |
| 239  | [滑动窗口最大值](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第239号问题：滑动窗口最大值.md) |                                                              |
| 242  | [有效的字母异位词](https://mp.weixin.qq.com/s/o5HTxmOgpftSaQdebS9zyQ) |                                                              |
| 268  | [缺失数字](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第268号问题：缺失数字.md) |                                                              |
| 279  | [完全平方数](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第279号问题：完全平方数.md) |                                                              |
| 283  | [移动零](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第283号问题：移动零.md) |                                                              |
| 295  | [数据流的中位数](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第295号问题：数据流的中位数.md) |                                                              |
| 301  | [删除无效的括号](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第301号问题：删除无效的括号.md) |                                                              |
| 319  | [灯泡开关](https://mp.weixin.qq.com/s/u35RGvT5Bc2o7jM-Uu_ZYA) |                                                              |
| 326  | [3 的幂](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第326号问题：3的幂.md) |                                                              |
| 328  | [奇偶链表](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第328号问题：奇偶链表.md) |                                                              |
| 342  | [4的幂](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第342号问题：4的幂.md) |                                                              |
| 344  | [反转字符串](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第344号问题：反转字符串.md) |                                                              |
| 347  | [前K个高频元素](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第347号问题：前K个高频元素.md) |                                                              |
| 349  | [两个数组的交集](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第349号问题：两个数组的交集.md) |                                                              |
| 350  | [两个数组的交集 II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第350号问题：两个数组的交集II.md) |                                                              |
| 445  | [两数相加 II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第445号问题：两数相加II.md) |                                                              |
| 447  | [回旋镖的数量](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第447号问题：回旋镖的数量.md) |                                                              |
| 454  | [四数相加 II](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第454号问题：四数相加II.md) |                                                              |
| 642  | [设计一个搜索自动完成系统](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第642号问题：设计一个搜索自动完成系统.md) |                                                              |
| 690  | [员工的重要性](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第690号问题：员工的重要性.md) |                                                              |
| 739  | [每日温度](https://mp.weixin.qq.com/s/3kDSOHyd-qOw7apzj0Z9YQ) |                                                              |
| 877  | [石子游戏](https://github.com/MisterBooo/LeetCodeAnimation/tree/master/notes/LeetCode第877号问题：石子游戏.md) |                                                              |
| 1025 | [除数博弈](https://mp.weixin.qq.com/s/0u6z02QYj1OpAwf54k8-Dw) |                                                              |
| 1099 | [小于 K 的两数之和](https://mp.weixin.qq.com/s/S6BbLeP_th_9JheNX7NN-w) |                                                              |





![](Pictures/qrcode.jpg)


"
macrozheng/mall-learning,Java,"# mall学习教程
<p>
    <a href=""#公众号""><img src=""http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-macrozheng-blue.svg"" alt=""公众号""></a>
    <a href=""#公众号""><img src=""http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E4%BA%A4%E6%B5%81-%E5%BE%AE%E4%BF%A1%E7%BE%A4-2BA245.svg"" alt=""交流""></a>
    <a href=""https://github.com/macrozheng/mall""><img src=""http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%90%8E%E5%8F%B0%E9%A1%B9%E7%9B%AE-mall-blue.svg"" alt=""后台项目""></a>
    <a href=""https://github.com/macrozheng/mall-admin-web""><img src=""http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE-mall--admin--web-green.svg"" alt=""前端项目""></a>
    <a href=""https://github.com/macrozheng/mall-swarm""><img src=""http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/Cloud%E7%89%88%E6%9C%AC-mall--swarm-brightgreen.svg"" alt=""SpringCloud版本""></a>
</p>

## 简介
mall学习教程，架构、业务、技术要点全方位解析。mall项目（50k+star）是一套电商系统，使用现阶段主流技术实现。涵盖了SpringBoot 2.3.0、MyBatis 3.4.6、Elasticsearch 7.6.2、RabbitMQ 3.7.15、Redis 5.0、MongoDB 4.2.5、Mysql5.7等技术，采用Docker容器化部署。

## 项目地址
- 后台项目：[https://github.com/macrozheng/mall](https://github.com/macrozheng/mall)
- 前端项目：[https://github.com/macrozheng/mall-admin-web](https://github.com/macrozheng/mall-admin-web)
- 微服务项目：[https://github.com/macrozheng/mall-swarm](https://github.com/macrozheng/mall-swarm)

## 更好的阅读体验
- 文档地址：[https://www.macrozheng.com](https://www.macrozheng.com)
- 备用地址：[https://macrozheng.github.io/mall-learning](https://macrozheng.github.io/mall-learning)

## 序章

> 项目架构及数据库概览，推荐一些项目学习所需知识点。

- [mall架构及功能概览](https://www.macrozheng.com/mall/foreword/mall_foreword_01.html)
- [mall学习所需知识点（推荐资料）](https://www.macrozheng.com/mall/foreword/mall_foreword_02.html)

## 架构篇

> 手把手教你搭建一个mall在使用的项目骨架，带你逐步熟悉mall所使用的技术栈。

- [mall整合SpringBoot+MyBatis搭建基本骨架](https://www.macrozheng.com/mall/architect/mall_arch_01.html)
- [mall整合Swagger-UI实现在线API文档](https://www.macrozheng.com/mall/architect/mall_arch_02.html)
- [mall整合Redis实现缓存功能](https://www.macrozheng.com/mall/architect/mall_arch_03.html)
- [mall整合SpringSecurity和JWT实现认证和授权（一）](https://www.macrozheng.com/mall/architect/mall_arch_04.html)
- [mall整合SpringSecurity和JWT实现认证和授权（二）](https://www.macrozheng.com/mall/architect/mall_arch_05.html)
- [mall整合SpringTask实现定时任务](https://www.macrozheng.com/mall/architect/mall_arch_06.html)
- [mall整合Elasticsearch实现商品搜索](https://www.macrozheng.com/mall/architect/mall_arch_07.html)
- [mall整合Mongodb实现文档操作](https://www.macrozheng.com/mall/architect/mall_arch_08.html)
- [mall整合RabbitMQ实现延迟消息](https://www.macrozheng.com/mall/architect/mall_arch_09.html)
- [mall整合OSS实现文件上传](https://www.macrozheng.com/mall/architect/mall_arch_10.html)

## 业务篇

> 全面解析mall中使用的数据库表结构，带你熟悉mall项目中的电商业务。

- [mall数据库表结构概览](https://www.macrozheng.com/mall/database/mall_database_overview.html)
- [商品模块数据库表解析（一）](https://www.macrozheng.com/mall/database/mall_pms_01.html)
- [商品模块数据库表解析（二）](https://www.macrozheng.com/mall/database/mall_pms_02.html)
- [订单模块数据库表解析（一）](https://www.macrozheng.com/mall/database/mall_oms_01.html)
- [订单模块数据库表解析（二）](https://www.macrozheng.com/mall/database/mall_oms_02.html)
- [订单模块数据库表解析（三）](https://www.macrozheng.com/mall/database/mall_oms_03.html)
- [营销模块数据库表解析（一）](https://www.macrozheng.com/mall/database/mall_sms_01.html)
- [营销模块数据库表解析（二）](https://www.macrozheng.com/mall/database/mall_sms_02.html)
- [营销模块数据库表解析（三）](https://www.macrozheng.com/mall/database/mall_sms_03.html)
- [权限管理功能设计与优化](https://www.macrozheng.com/mall/database/mall_permission.html)

## 技术要点篇

> mall中一些功能的技术要点解析，这些技术要点和业务结合地比较紧密。

- [MyBatis Generator使用过程中踩过的一个坑](https://www.macrozheng.com/mall/technology/mybatis_mapper.html)
- [SpringBoot应用中使用AOP记录接口访问日志](https://www.macrozheng.com/mall/technology/aop_log.html)
- [前后端分离项目，如何解决跨域问题](https://www.macrozheng.com/mall/technology/springboot_cors.html)
- [Java 8都出那么久了，Stream API了解下？](https://www.macrozheng.com/mall/technology/java_stream.html)
- [仅需四步，整合SpringSecurity+JWT实现登录认证！](https://www.macrozheng.com/mall/technology/springsecurity_use.html)
- [前后端分离项目，如何优雅实现文件存储！](https://www.macrozheng.com/mall/technology/minio_use.html)
- [前后端分离项目，引入Spring Cloud Gateway遇到的一个问题！](https://www.macrozheng.com/mall/technology/gateway_cors.html)
- [手把手教你搞定权限管理，结合Spring Security实现接口的动态权限控制！](https://www.macrozheng.com/mall/technology/permission_back.html)
- [手把手教你搞定权限管理，结合Vue实现菜单的动态权限控制！](https://www.macrozheng.com/mall/technology/permission_front.html)
- [商品SKU功能设计与优化](https://www.macrozheng.com/mall/technology/product_sku.html)
- [SpringBoot中处理校验逻辑的两种方式，真的很机智！](https://www.macrozheng.com/mall/technology/springboot_validator.html)
- [使用Redis+AOP优化权限管理功能，这波操作贼爽！](https://www.macrozheng.com/mall/technology/redis_permission.html)
- [Elasticsearch项目实战，商品搜索功能设计与实现！](https://www.macrozheng.com/mall/technology/product_search.html)
- [RabbitMQ实现延迟消息居然如此简单，整个插件就完事了！](https://www.macrozheng.com/mall/technology/rabbitmq_delay.html)
- [给Swagger升级了新版本，没想到居然有这么多坑！](https://www.macrozheng.com/mall/technology/swagger_upgrade.html)
- [Elasticsearch 升级 7.x 版本后，我感觉掉坑里了！](https://www.macrozheng.com/mall/technology/elasticsearch_upgrade.html)
- [搞定Mall项目中的权限管理功能，弄懂这些问题就妥了！](https://www.macrozheng.com/mall/technology/mall_permission_question.html)

## 部署篇

> mall开发及生产环境的搭建，涵盖Windows、Docker、K8S及自动化部署。

- [mall在Windows环境下的部署](https://www.macrozheng.com/mall/deploy/mall_deploy_windows.html)
- [mall在Linux环境下的部署（基于Docker容器）](https://www.macrozheng.com/mall/deploy/mall_deploy_docker.html)
- [mall在Linux环境下的部署（基于Docker Compose）](https://www.macrozheng.com/mall/deploy/mall_deploy_docker_compose.html)
- [mall前端项目的安装与部署](https://www.macrozheng.com/mall/deploy/mall_deploy_web.html)
- [mall-swarm在Windows环境下的部署](https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_windows.html)
- [mall-swarm在Linux环境下的部署（基于Docker容器）](https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_docker.html)
- [mall使用Jenkins实现自动化部署](https://www.macrozheng.com/mall/deploy/mall_deploy_jenkins.html)
- [mall-swarm使用Jenkins实现自动化部署](https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_jenkins.html)
- [mall-swarm微服务项目在K8S下的实践！](https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_k8s.html)

## 参考篇

> mall相关技术的参考教程，每篇都是可以独立学习的教程，学习过程中遇到不懂的知识点可以从这里找找。

- [开发者必备Mysql命令](https://www.macrozheng.com/mall/reference/mysql.html)
- [还在百度Linux命令？推荐一套我用起来特顺手的命令！](https://www.macrozheng.com/mall/reference/linux_command.html)
- [Linux防火墙Firewall和Iptables的使用](https://www.macrozheng.com/mall/reference/linux_firewall.html)
- [还在百度Docker命令？推荐一套我用起来特顺手的命令！](https://www.macrozheng.com/mall/reference/docker_command.html)
- [使用Maven插件为SpringBoot应用构建Docker镜像](https://www.macrozheng.com/mall/reference/docker_maven.html)
- [使用DockerFile为SpringBoot应用构建Docker镜像](https://www.macrozheng.com/mall/reference/docker_file.html)
- [使用Docker Compose部署SpringBoot应用](https://www.macrozheng.com/mall/reference/docker_compose.html)
- [Hutool中那些常用的工具类和方法 ](https://www.macrozheng.com/mall/reference/hutool_start.html)
- [Nginx的这些妙用，你肯定有不知道的！](https://www.macrozheng.com/mall/reference/nginx.html)
- [使用Jenkins一键打包部署SpringBoot应用，就是这么6！](https://www.macrozheng.com/mall/reference/jenkins.html)
- [使用Jenkins一键打包部署前端应用，就是这么6！](https://www.macrozheng.com/mall/reference/jenkins_vue.html)
- [Github标星19K+Star，10分钟自建对象存储服务！](https://www.macrozheng.com/mall/reference/minio.html)
- [Spring Data Redis 最佳实践！](https://www.macrozheng.com/mall/reference/spring_data_redis.html)
- [Elasticsearch快速入门，掌握这些刚刚好！](https://www.macrozheng.com/mall/reference/elasticsearch_start.html)
- [MongoDB快速入门，掌握这些刚刚好！](https://www.macrozheng.com/mall/reference/mongodb_start.html)
- [我常用的自动化部署技巧，贼好用，推荐给大家！](https://www.macrozheng.com/mall/reference/springboot_auto_deploy.html)
- [连RabbitMQ的5种核心消息模式都不懂，也敢说自己会用消息队列！](https://www.macrozheng.com/mall/reference/rabbitmq_start.html)
- [SpringBoot应用整合ELK实现日志收集](https://www.macrozheng.com/mall/reference/mall_tiny_elk.html)
- [你居然还去服务器上捞日志，搭个日志收集系统难道不香么！](https://www.macrozheng.com/mall/reference/mall_elk_advance.html)
- [给Swagger换了个新皮肤，瞬间高大上了！](https://www.macrozheng.com/mall/reference/knife4j_start.html)
- [Docker服务开放了这个端口，服务器分分钟变肉机！](https://www.macrozheng.com/mall/reference/docker_protect_socket.html)
- [居然有人想白嫖我的日志，赶紧开启安全保护压压惊！](https://www.macrozheng.com/mall/reference/elk_security.html)
- [Nginx如何支持HTTPS？手把手教贼简单！](https://www.macrozheng.com/mall/reference/nginx_https_start.html)
- [还在手动整合Swagger？Swagger官方Starter是真的香！](https://www.macrozheng.com/mall/reference/swagger_starter.html)
- [肝了一周总结的SpringBoot实战教程，太实用了！](https://www.macrozheng.com/mall/reference/springboot_start.html)
- [解放双手！MyBatis官方代码生成工具给力！](https://www.macrozheng.com/mall/reference/mybatis_generator_start.html)
- [Lombok有啥牛皮的？SpringBoot和IDEA官方都要支持它！](https://www.macrozheng.com/mall/reference/lombok_start.html)


## 公众号

学习不走弯路，关注公众号「**macrozheng**」，回复「**学习路线**」，获取mall项目专属学习路线！

加微信群交流，公众号后台回复「**加群**」即可。

![公众号图片](http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/banner/qrcode_for_macrozheng_258.jpg)
"
alibaba/Sentinel,Java,"<img src=""https://user-images.githubusercontent.com/9434884/43697219-3cb4ef3a-9975-11e8-9a9c-73f4f537442d.png"" alt=""Sentinel Logo"" width=""50%"">

# Sentinel: The Sentinel of Your Microservices

[![Sentinel CI](https://github.com/alibaba/Sentinel/actions/workflows/ci.yml/badge.svg)](https://github.com/alibaba/Sentinel/actions/workflows/ci.yml)
[![Codecov](https://codecov.io/gh/alibaba/Sentinel/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/Sentinel)
[![Maven Central](https://img.shields.io/maven-central/v/com.alibaba.csp/sentinel-core.svg?label=Maven%20Central)](https://search.maven.org/search?q=g:com.alibaba.csp%20AND%20a:sentinel-core)
[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)
[![Gitter](https://badges.gitter.im/alibaba/Sentinel.svg)](https://gitter.im/alibaba/Sentinel)
[![Leaderboard](https://img.shields.io/badge/Sentinel-Check%20Your%20Contribution-orange)](https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=sentinel)

## Introduction

As distributed systems become increasingly popular, the reliability between services is becoming more important than ever before.
Sentinel takes ""flow"" as breakthrough point, and works on multiple fields including **flow control**, **traffic shaping**,
**concurrency limiting**, **circuit breaking** and **system adaptive overload protection**,
to guarantee reliability and resilience for microservices.

Sentinel has the following features:

- **Rich applicable scenarios**: Sentinel has been wildly used in Alibaba, and has covered almost all the core-scenarios in Double-11 (11.11) Shopping Festivals in the past 10 years, such as “Second Kill” which needs to limit burst flow traffic to meet the system capacity, message peak clipping and valley fills, circuit breaking for unreliable downstream services, cluster flow control, etc.
- **Real-time monitoring**: Sentinel also provides real-time monitoring ability. You can see the runtime information of a single machine in real-time, and the aggregated runtime info of a cluster with less than 500 nodes.
- **Widespread open-source ecosystem**: Sentinel provides out-of-box integrations with commonly-used frameworks and libraries such as Spring Cloud, gRPC, Apache Dubbo and Quarkus. You can easily use Sentinel by simply add the adapter dependency to your services.
- **Polyglot support**: Sentinel has provided native support for Java, [Go](https://github.com/alibaba/sentinel-golang), [C++](https://github.com/alibaba/sentinel-cpp) and [Rust](https://github.com/sentinel-group/sentinel-rust).
- **Various SPI extensions**: Sentinel provides easy-to-use SPI extension interfaces that allow you to quickly customize your logic, for example, custom rule management, adapting data sources, and so on.

Features overview:

![features-of-sentinel](./doc/image/sentinel-features-overview-en.png)

The community is also working on **the specification of traffic governance and fault-tolerance**.
Please refer to [OpenSergo](https://opensergo.io/) for details.

## Documentation

See the [Sentinel Website](https://sentinelguard.io/) for the official website of Sentinel.

See the [中文文档](https://sentinelguard.io/zh-cn/docs/introduction.html) for document in Chinese.

See the [Wiki](https://github.com/alibaba/Sentinel/wiki) for full documentation, examples, blog posts, operational details and other information.

Sentinel provides integration modules for various open-source frameworks
(e.g. Spring Cloud, Apache Dubbo, gRPC, Quarkus, Spring WebFlux, Reactor) and service mesh.
You can refer to [the document](https://sentinelguard.io/en-us/docs/open-source-framework-integrations.html) for more information.

If you are using Sentinel, please [**leave a comment here**](https://github.com/alibaba/Sentinel/issues/18) to tell us your scenario to make Sentinel better.
It's also encouraged to add the link of your blog post, tutorial, demo or customized components to [**Awesome Sentinel**](./doc/awesome-sentinel.md).

## Ecosystem Landscape

![ecosystem-landscape](./doc/image/sentinel-opensource-eco-landscape-en.png)

## Quick Start

Below is a simple demo that guides new users to use Sentinel in just 3 steps. It also shows how to monitor this demo using the dashboard.

### 1. Add Dependency

**Note:** Sentinel requires JDK 1.8 or later.

If you're using Maven, just add the following dependency in `pom.xml`.

```xml
<!-- replace here with the latest version -->
<dependency>
    <groupId>com.alibaba.csp</groupId>
    <artifactId>sentinel-core</artifactId>
    <version>1.8.6</version>
</dependency>
```

If not, you can download JAR in [Maven Center Repository](https://mvnrepository.com/artifact/com.alibaba.csp/sentinel-core).

### 2. Define Resource

Wrap your code snippet via Sentinel API: `SphU.entry(resourceName)`.
In below example, it is `System.out.println(""hello world"");`:

```java
try (Entry entry = SphU.entry(""HelloWorld"")) {
    // Your business logic here.
    System.out.println(""hello world"");
} catch (BlockException e) {
    // Handle rejected request.
    e.printStackTrace();
}
// try-with-resources auto exit
```

So far the code modification is done. We've also provided [annotation support module](https://github.com/alibaba/Sentinel/blob/master/sentinel-extension/sentinel-annotation-aspectj/README.md) to define resource easier.

### 3. Define Rules

If we want to limit the access times of the resource, we can **set rules to the resource**.
The following code defines a rule that limits access to the resource to 20 times per second at the maximum.

```java
List<FlowRule> rules = new ArrayList<>();
FlowRule rule = new FlowRule();
rule.setResource(""HelloWorld"");
// set limit qps to 20
rule.setCount(20);
rule.setGrade(RuleConstant.FLOW_GRADE_QPS);
rules.add(rule);
FlowRuleManager.loadRules(rules);
```

For more information, please refer to [How To Use](https://sentinelguard.io/en-us/docs/basic-api-resource-rule.html).

### 4. Check the Result

After running the demo for a while, you can see the following records in `~/logs/csp/${appName}-metrics.log.{date}` (When using the default `DateFileLogHandler`).

```
|--timestamp-|------date time----|-resource-|p |block|s |e|rt  |occupied
1529998904000|2018-06-26 15:41:44|HelloWorld|20|0    |20|0|0   |0
1529998905000|2018-06-26 15:41:45|HelloWorld|20|5579 |20|0|728 |0
1529998906000|2018-06-26 15:41:46|HelloWorld|20|15698|20|0|0   |0
1529998907000|2018-06-26 15:41:47|HelloWorld|20|19262|20|0|0   |0
1529998908000|2018-06-26 15:41:48|HelloWorld|20|19502|20|0|0   |0
1529998909000|2018-06-26 15:41:49|HelloWorld|20|18386|20|0|0   |0

p stands for incoming request, block for blocked by rules, s for success handled by Sentinel, e for exception count, rt for average response time (ms), occupied stands for occupiedPassQps since 1.5.0 which enable us booking more than 1 shot when entering.
```

This shows that the demo can print ""hello world"" 20 times per second.

More examples and information can be found in the [How To Use](https://sentinelguard.io/en-us/docs/basic-api-resource-rule.html) section.

The working principles of Sentinel can be found in [How it works](https://sentinelguard.io/en-us/docs/basic-implementation.html) section.

Samples can be found in the [sentinel-demo](https://github.com/alibaba/Sentinel/tree/master/sentinel-demo) module.

### 5. Start Dashboard

> Note: Java 8 is required for building or running the dashboard.

Sentinel also provides a simple dashboard application, on which you can monitor the clients and configure the rules in real time.

![dashboard](https://user-images.githubusercontent.com/9434884/55449295-84866d80-55fd-11e9-94e5-d3441f4a2b63.png)

For details please refer to [Dashboard](https://github.com/alibaba/Sentinel/wiki/Dashboard).

## Trouble Shooting and Logs

Sentinel will generate logs for troubleshooting and real-time monitoring.
All the information can be found in [logs](https://sentinelguard.io/en-us/docs/logs.html).

## Bugs and Feedback

For bug report, questions and discussions please submit [GitHub Issues](https://github.com/alibaba/sentinel/issues).

Contact us via [Gitter](https://gitter.im/alibaba/Sentinel) or [Email](mailto:sentinel@linux.alibaba.com).

## Contributing

Contributions are always welcomed! Please refer to [CONTRIBUTING](./CONTRIBUTING.md) for detailed guidelines.

You can start with the issues labeled with [`good first issue`](https://github.com/alibaba/Sentinel/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22).

## Enterprise Service

If you need Sentinel enterprise service support (Sentinel 企业版), or purchase cloud product services,
you can join the discussion by the DingTalk group (34754806). It can also be directly activated
and used through the [microservice engine (MSE 微服务引擎) provided by Alibaba Cloud](https://cn.aliyun.com/product/aliware/mse?spm=sentinel-github.index.0.0.0).

## Credits

Thanks [Guava](https://github.com/google/guava), which provides some inspiration on rate limiting.

And thanks for all [contributors](https://github.com/alibaba/Sentinel/graphs/contributors) of Sentinel!

## Who is using

These are only part of the companies using Sentinel, for reference only.
If you are using Sentinel, please [add your company here](https://github.com/alibaba/Sentinel/issues/18) to tell us your scenario to make Sentinel better :)

![Alibaba Group](https://docs.alibabagroup.com/assets2/images/en/global/logo_header.png)
![AntFin](https://user-images.githubusercontent.com/9434884/90598732-30961c00-e226-11ea-8c86-0b1d7f7875c7.png)
![Taiping Renshou](http://www.cntaiping.com/tplresource/cms/www/taiping/img/home_new/tp_logo_img.png)
![拼多多](http://cdn.pinduoduo.com/assets/img/pdd_logo_v3.png)
![爱奇艺](https://user-images.githubusercontent.com/9434884/90598445-a51c8b00-e225-11ea-9327-3543525f3f2a.png)
![Shunfeng Technology](https://user-images.githubusercontent.com/9434884/48463502-2f48eb80-e817-11e8-984f-2f9b1b789e2d.png)
![二维火](https://user-images.githubusercontent.com/9434884/49358468-bc43de00-f70d-11e8-97fe-0bf05865f29f.png)
![Mandao](https://user-images.githubusercontent.com/9434884/48463559-6cad7900-e817-11e8-87e4-42952b074837.png)
![文轩在线](http://static.winxuancdn.com/css/v2/images/logo.png)
![客如云](https://www.keruyun.com/static/krynew/images/logo.png)
![亲宝宝](https://stlib.qbb6.com/wclt/img/home_hd/version1/title_logo.png)
![金汇金融](https://res.jinhui365.com/r/images/logo2.png?v=1.527)
![闪电购](http://cdn.52shangou.com/shandianbang/official-source/3.1.1/build/images/logo.png)
"
shuzheng/zheng,Java,"# zheng
[![Build Status](https://travis-ci.org/shuzheng/zheng.svg?branch=master)](https://travis-ci.org/shuzheng/zheng)
[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/shuzheng/zheng/pulls)
[![GitHub stars](https://img.shields.io/github/stars/shuzheng/zheng.svg?style=social&label=Stars)](https://github.com/shuzheng/zheng)
[![GitHub forks](https://img.shields.io/github/forks/shuzheng/zheng.svg?style=social&label=Fork)](https://github.com/shuzheng/zheng)

交流QQ群：133107819、284280411、305155242🈵、528049386、157869467🈵、570766789🈵、601147566🈵、309985359🈵、336380857🈵、522723488、556447629、654558397🈵、392564561🈵、494594000🈵、494070275🈵、168267539🈵、652798487🈵、650979251🈵、622461564🈵、219381522🈵、487874426🈵、398342630🈵、205986087🈵、574153262🈵、606890936🈵、565434047🈵、680947971🈵、341884034🈵、562977817🈵、478962414🈵、679219230🈵、676766033🈵、621874750🈵、522903600🈵、524932879🈵、376261902🈵、481096887🈵、232104667🈵、637879277🈵、697575367🈵、702995203🈵、708665910🈵、697141239🈵、574057714🈵、631332162🈵、591739143🈵、731016871🈵、598738752🈵、748759166🈵、159816595(群内含各种工具、文档、视频教程下载)

## 前言

　　`zheng`项目不仅仅是一个开发架构，而是努力打造一套从 **前端模板** - **基础框架** - **分布式架构** - **开源项目** - **持续集成** - **自动化部署** - **系统监测** - **无缝升级** 的全方位J2EE企业级开发解决方案。

## 项目介绍

　　基于Spring+SpringMVC+Mybatis分布式敏捷开发系统架构，提供整套公共微服务服务模块：内容管理、支付中心、用户管理（包括第三方）、微信平台、存储系统、配置中心、日志分析、任务和通知等，支持服务治理、监控和追踪，努力为中小型企业打造全方位J2EE企业级开发解决方案。

### 组织结构

``` lua
zheng
├── zheng-common -- SSM框架公共模块
├── zheng-admin -- 后台管理模板
├── zheng-ui -- 前台thymeleaf模板[端口:1000]
├── zheng-config -- 配置中心[端口:1001]
├── zheng-upms -- 用户权限管理系统
|    ├── zheng-upms-common -- upms系统公共模块
|    ├── zheng-upms-dao -- 代码生成模块，无需开发
|    ├── zheng-upms-client -- 集成upms依赖包，提供单点认证、授权、统一会话管理
|    ├── zheng-upms-rpc-api -- rpc接口包
|    ├── zheng-upms-rpc-service -- rpc服务提供者
|    └── zheng-upms-server -- 用户权限系统及SSO服务端[端口:1111]
├── zheng-cms -- 内容管理系统
|    ├── zheng-cms-common -- cms系统公共模块
|    ├── zheng-cms-dao -- 代码生成模块，无需开发
|    ├── zheng-cms-rpc-api -- rpc接口包
|    ├── zheng-cms-rpc-service -- rpc服务提供者
|    ├── zheng-cms-search -- 搜索服务[端口:2221]
|    ├── zheng-cms-admin -- 后台管理[端口:2222]
|    ├── zheng-cms-job -- 消息队列、任务调度等[端口:2223]
|    └── zheng-cms-web -- 网站前台[端口:2224]
├── zheng-pay -- 支付系统
|    ├── zheng-pay-common -- pay系统公共模块
|    ├── zheng-pay-dao -- 代码生成模块，无需开发
|    ├── zheng-pay-rpc-api -- rpc接口包
|    ├── zheng-pay-rpc-service -- rpc服务提供者
|    ├── zheng-pay-sdk -- 开发工具包
|    ├── zheng-pay-admin -- 后台管理[端口:3331]
|    └── zheng-pay-web -- 演示示例[端口:3332]
├── zheng-ucenter -- 用户系统(包括第三方登录)
|    ├── zheng-ucenter-common -- ucenter系统公共模块
|    ├── zheng-ucenter-dao -- 代码生成模块，无需开发
|    ├── zheng-ucenter-rpc-api -- rpc接口包
|    ├── zheng-ucenter-rpc-service -- rpc服务提供者
|    └── zheng-ucenter-web -- 网站前台[端口:4441]
├── zheng-wechat -- 微信系统
|    ├── zheng-wechat-mp -- 微信公众号管理系统
|    |    ├── zheng-wechat-mp-dao -- 代码生成模块，无需开发
|    |    ├── zheng-wechat-mp-service -- 业务逻辑
|    |    └── zheng-wechat-mp-admin -- 后台管理[端口:5551]
|    └── zheng-ucenter-app -- 微信小程序后台
├── zheng-api -- API接口总线系统
|    ├── zheng-api-common -- api系统公共模块
|    ├── zheng-api-rpc-api -- rpc接口包
|    ├── zheng-api-rpc-service -- rpc服务提供者
|    └── zheng-api-server -- api系统服务端[端口:6666]
├── zheng-oss -- 对象存储系统
|    ├── zheng-oss-sdk -- 开发工具包
|    ├── zheng-oss-web -- 前台接口[端口:7771]
|    └── zheng-oss-admin -- 后台管理[端口:7772]
├── zheng-message -- 实时通知系统
|    ├── zheng-message-sdk -- 开发工具包
|    ├── zheng-message-server -- 服务端[端口:8881,SocketIO端口:8882]
|    └── zheng-message-client -- 客户端
├── zheng-shop -- 电子商务系统
└── zheng-demo -- 示例模块(包含一些示例代码等)
     ├── zheng-demo-rpc-api -- rpc接口包
     ├── zheng-demo-rpc-service -- rpc服务提供者
     └── zheng-demo-web -- 演示示例[端口:9999]
```

### 技术选型

#### 后端技术:
技术 | 名称 | 官网
----|------|----
Spring Framework | 容器  | [http://projects.spring.io/spring-framework/](http://projects.spring.io/spring-framework/)
SpringMVC | MVC框架  | [http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#mvc](http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#mvc)
Apache Shiro | 安全框架  | [http://shiro.apache.org/](http://shiro.apache.org/)
Spring session | 分布式Session管理  | [http://projects.spring.io/spring-session/](http://projects.spring.io/spring-session/)
MyBatis | ORM框架  | [http://www.mybatis.org/mybatis-3/zh/index.html](http://www.mybatis.org/mybatis-3/zh/index.html)
MyBatis Generator | 代码生成  | [http://www.mybatis.org/generator/index.html](http://www.mybatis.org/generator/index.html)
PageHelper | MyBatis物理分页插件  | [http://git.oschina.net/free/Mybatis_PageHelper](http://git.oschina.net/free/Mybatis_PageHelper)
Druid | 数据库连接池  | [https://github.com/alibaba/druid](https://github.com/alibaba/druid)
FluentValidator | 校验框架  | [https://github.com/neoremind/fluent-validator](https://github.com/neoremind/fluent-validator)
Thymeleaf | 模板引擎  | [http://www.thymeleaf.org/](http://www.thymeleaf.org/)
Velocity | 模板引擎  | [http://velocity.apache.org/](http://velocity.apache.org/)
ZooKeeper | 分布式协调服务  | [http://zookeeper.apache.org/](http://zookeeper.apache.org/)
Dubbo | 分布式服务框架  | [http://dubbo.io/](http://dubbo.io/)
TBSchedule & elastic-job | 分布式调度框架  | [https://github.com/dangdangdotcom/elastic-job](https://github.com/dangdangdotcom/elastic-job)
Redis | 分布式缓存数据库  | [https://redis.io/](https://redis.io/)
Solr & Elasticsearch | 分布式全文搜索引擎  | [http://lucene.apache.org/solr/](http://lucene.apache.org/solr/) [https://www.elastic.co/](https://www.elastic.co/)
Quartz | 作业调度框架  | [http://www.quartz-scheduler.org/](http://www.quartz-scheduler.org/)
Ehcache | 进程内缓存框架  | [http://www.ehcache.org/](http://www.ehcache.org/)
ActiveMQ | 消息队列  | [http://activemq.apache.org/](http://activemq.apache.org/)
JStorm | 实时流式计算框架  | [http://jstorm.io/](http://jstorm.io/)
FastDFS | 分布式文件系统  | [https://github.com/happyfish100/fastdfs](https://github.com/happyfish100/fastdfs)
Log4J | 日志组件  | [http://logging.apache.org/log4j/1.2/](http://logging.apache.org/log4j/1.2/)
Swagger2 | 接口测试框架  | [http://swagger.io/](http://swagger.io/)
sequence | 分布式高效ID生产  | [http://git.oschina.net/yu120/sequence](http://git.oschina.net/yu120/sequence)
AliOSS & Qiniu & QcloudCOS | 云存储  | [https://www.aliyun.com/product/oss/](https://www.aliyun.com/product/oss/) [http://www.qiniu.com/](http://www.qiniu.com/) [https://www.qcloud.com/product/cos](https://www.qcloud.com/product/cos)
Protobuf & json | 数据序列化  | [https://github.com/google/protobuf](https://github.com/google/protobuf)
Jenkins | 持续集成工具  | [https://jenkins.io/index.html](https://jenkins.io/index.html)
Maven | 项目构建管理  | [http://maven.apache.org/](http://maven.apache.org/)
Netty-socketio | 实时推送  | [https://github.com/mrniko/netty-socketio](https://github.com/mrniko/netty-socketio)

#### 前端技术:
技术 | 名称 | 官网
----|------|----
jQuery | 函式库  | [http://jquery.com/](http://jquery.com/)
Bootstrap | 前端框架  | [http://getbootstrap.com/](http://getbootstrap.com/)
Bootstrap-table | Bootstrap数据表格  | [http://bootstrap-table.wenzhixin.net.cn/](http://bootstrap-table.wenzhixin.net.cn/)
Font-awesome | 字体图标  | [http://fontawesome.io/](http://fontawesome.io/)
material-design-iconic-font | 字体图标  | [https://github.com/zavoloklom/material-design-iconic-font](https://github.com/zavoloklom/material-design-iconic-font)
Waves | 点击效果插件  | [https://github.com/fians/Waves](https://github.com/fians/Waves)
zTree | 树插件  | [http://www.treejs.cn/v3/](http://www.treejs.cn/v3/)
Select2 | 选择框插件  | [https://github.com/select2/select2](https://github.com/select2/select2)
jquery-confirm | 弹出窗口插件  | [https://github.com/craftpip/jquery-confirm](https://github.com/craftpip/jquery-confirm)
jQuery EasyUI | 基于jQuery的UI插件集合体  | [http://www.jeasyui.com](http://www.jeasyui.com)
React | 界面构建框架  | [https://github.com/facebook/react](https://github.com/facebook/react)
Editor.md | Markdown编辑器  | [https://github.com/pandao/editor.md](https://github.com/pandao/editor.md)
zhengAdmin | 后台管理系统模板  | [https://github.com/shuzheng/zhengAdmin](https://github.com/shuzheng/zhengAdmin)
autoMail | 邮箱地址自动补全插件  | [https://github.com/shuzheng/autoMail](https://github.com/shuzheng/autoMail)
zheng.jprogress.js | 加载进度条插件  | [https://github.com/shuzheng/zheng.jprogress.js](https://github.com/shuzheng/zheng.jprogress.js)
zheng.jtotop.js | 返回顶部插件  | [https://github.com/shuzheng/zheng.jtotop.js](https://github.com/shuzheng/zheng.jtotop.js)
socket.io.js | SocketIO插件  | [https://socket.io/](https://socket.io/)

#### 架构图

![架构图](project-bootstrap/architect.png)

#### 模块依赖

![模块依赖](project-bootstrap/project.png)

#### 模块介绍

> zheng-common

Spring+SpringMVC+Mybatis框架集成公共模块，包括公共配置、MybatisGenerator扩展插件、通用BaseService、工具类等。

> zheng-admin

基于bootstrap实现的响应式Material Design风格的通用后台管理系统，`zheng`项目所有后台系统都是使用该模块界面作为前端展示。

> zheng-ui

各个子系统前台thymeleaf模板，前端资源模块，使用nginx代理，实现动静分离。

> zheng-upms

本系统是基于RBAC授权和基于用户授权的细粒度权限控制通用平台，并提供单点登录、会话管理和日志管理。接入的系统可自由定义组织、角色、权限、资源等。用户权限=所拥有角色权限合集+用户加权限-用户减权限，优先级：用户减权限>用户加权限>角色权限

> zheng-oss

文件存储系统，提供四种方案：

- **阿里云** OSS
- **腾讯云** COS
- **七牛云**
- 本地分布式存储

![阿里云OSS](project-bootstrap/aliyun-oss-post-callback.png)

> zheng-api

服务网关，对外暴露统一规范的接口和包装响应结果，包括各个子系统的交互接口、对外开放接口、开发加密接口、接口文档等服务，可在该模块支持验签、鉴权、路由、限流、监控、容错、日志等功能。示例图：

![API网关](project-bootstrap/gateway_config.png)


> zheng-cms

内容管理系统：支持多标签、多类目、强大评论的内容管理，有基本单页展示，菜单管理，系统设置等功能。

> zheng-pay

- 一站式支付解决方案，统一下单接口，支持支付宝、微信、网银等多种支付方式。不涉及业务的纯粹的支付平台。

- 统一下单（统一下单接口、统一扫码）、订单管理、数据分析、财务报表、商户管理、渠道管理、对账系统、系统监控。

![统一扫码支付](project-bootstrap/zheng-pay.png)

> zheng-ucenter

通用用户管理系统， 实现最常用的用户注册、登录、资料管理、个人中心、第三方登录等基本需求，支持扩展二次开发。

> zheng-wechat-mp

微信公众号管理平台，除实现官网后台自动回复、菜单管理、素材管理、用户管理、消息群发等基础功能外，还有二维码推广、营销活动、微网站、会员卡、优惠券等。

> zheng-wechat-app 

微信小程序后台

> zheng-message

基于Netty实现SocketIO的实时推送系统。支持命名空间、二进制数据、SSL、ACK等功能。

## 环境搭建（QQ群内有“zheng环境搭建和系统部署文档.doc”）

#### 开发工具:
- MySql: 数据库
- jetty: 开发服务器
- Tomcat: 应用服务器
- SVN|Git: 版本管理
- Nginx: 反向代理服务器
- Varnish: HTTP加速器
- IntelliJ IDEA: 开发IDE
- PowerDesigner: 建模工具
- Navicat for MySQL: 数据库客户端

#### 开发环境：
- Jdk7+
- Mysql5.5+
- Redis
- Zookeeper
- ActiveMQ
- Dubbo-admin
- Dubbo-monitor

### 工具安装

环境搭建和系统部署文档(作者：小兵，QQ群共享提供下载)

### 资源下载

- JDK7 [http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html](http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html ""JDK7"")
- Maven [http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi ""Maven"")
- Redis [https://redis.io/download](https://redis.io/download ""Redis"")
- ActiveMQ [http://activemq.apache.org/download-archives.html](http://activemq.apache.org/download-archives.html ""ActiveMQ"")
- ZooKeeper [http://www.apache.org/dyn/closer.cgi/zookeeper/](http://www.apache.org/dyn/closer.cgi/zookeeper/ ""ZooKeeper"")
- Dubbo [http://dubbo.io/Download-zh.htm](http://dubbo.io/Download-zh.htm ""Dubbo"")
- Elastic Stack [https://www.elastic.co/downloads](https://www.elastic.co/downloads ""Elastic Stack"")
- Nginx [http://nginx.org/en/download.html](http://nginx.org/en/download.html ""Nginx"")
- Jenkins [http://updates.jenkins-ci.org/download/war/](http://updates.jenkins-ci.org/download/war/ ""Jenkins"")
- dubbo-admin-2.5.3 [http://download.csdn.net/detail/shuzheng5201314/9733652](http://download.csdn.net/detail/shuzheng5201314/9733652 ""dubbo-admin-2.5.3"")
- dubbo-admin-2.5.4-SNAPSHOT-jdk8 [http://download.csdn.net/detail/shuzheng5201314/9733657](http://download.csdn.net/detail/shuzheng5201314/9733657 ""dubbo-admin-2.5.4-SNAPSHOT-jdk8"")
- 更多资源请加QQ群

## 开发指南:

- 1、本机安装Jdk7、Mysql、Redis、Zookeeper、ActiveMQ并**启动相关服务**，使用默认配置默认端口即可
- 2、克隆源代码到本地并打开，**推荐使用IntelliJ IDEA**，本地编译并安装到本地maven仓库

### 修改本地Host

- 127.0.0.1	ui.zhangshuzheng.cn
- 127.0.0.1	upms.zhangshuzheng.cn
- 127.0.0.1	cms.zhangshuzheng.cn
- 127.0.0.1	pay.zhangshuzheng.cn
- 127.0.0.1	ucenter.zhangshuzheng.cn
- 127.0.0.1	wechat.zhangshuzheng.cn
- 127.0.0.1	api.zhangshuzheng.cn
- 127.0.0.1	oss.zhangshuzheng.cn
- 127.0.0.1 config.zhangshuzheng.cn

- 127.0.0.1	zkserver
- 127.0.0.1	rdserver
- 127.0.0.1	dbserver
- 127.0.0.1	mqserver

### 编译流程

maven编译安装zheng/pom.xml文件即可

### 启动顺序（后台）

> 准备工作

- 新建zheng数据库，导入project-datamodel文件夹下的zheng.sql

- 修改各dao模块和rpc-service模块的redis.properties、jdbc.properties、generator.properties数据库连接等配置信息，其中master.redis.password、master.jdbc.password、slave.jdbc.password、generator.jdbc.password密码值使用了AES加密，请使用com.zheng.common.util.AESUtil工具类修改这些值

- 启动Zookeeper、Redis、ActiveMQ、Nginx（配置文件参考project-tools/nginx下的*.conf文件）

> **zheng-upms**

- 首先启动 zheng-upms-rpc-service(直接运行src目录下的ZhengUpmsRpcServiceApplication#main方法启动) => zheng-upms-server(jetty)，然后按需启动对应子系统xxx的zheng-xxx-rpc-service(main方法) => zheng-xxx-webapp(jetty)

![启动演示](project-bootstrap/start.png)

- 访问 [http://upms.zhangshuzheng.cn:1111/](http://upms.zhangshuzheng.cn:1111/ ""统一后台地址"")，子系统菜单已经配置到zheng-upms权限中，不用直接访问子系统，默认帐号密码：admin/123456

- 登录成功后，可在右上角切换已注册系统访问

> **zheng-cms**

- zheng-cms-admin：启动ActiveMQ-启动 => 启动zheng-rpc-service => 启动zheng-cms-admin

- zheng-cms-web：启动nginx代理zheng-ui静态资源，配置文件可参考 [nginx.conf](http://git.oschina.net/shuzheng/zheng/attach_files)

> **zheng-oss**

- 首先启动zheng-oss-web服务

- 开发阶段，如果zheng-oss-web没有公网域名，推荐使用`ngrok`内网穿透工具，为开发环境提供公网域名，实现上传回调

- 启动nginx代理zheng-ui静态资源


### 开发演示（QQ群内有“zheng十分钟视频：从检出到启动.wmv”）

- 创建数据表（建议使用PowerDesigner）

- 直接运行对应项目dao模块中的generator.main()，可自动生成单表的CRUD功能和对应的model、example、mapper、service代码

    - 生成的model和example均已实现Serializable接口，支持分布式

    - 已包含抽象类BaseServiceImpl，只需要继承抽象类并传入泛型参数，即可默认实现mapper接口所有方法，特殊需求直接扩展即可
    
    - BaseServiceImpl默认已实现四种根据条件分页接口
     
        - selectByExampleWithBLOBsForStartPage()
        
        - selectByExampleForStartPage()
        
        - selectByExampleWithBLOBsForOffsetPage()
        
        - selectByExampleForOffsetPage()

    - BaseServiceImpl方法根据读写操作自动切换主从数据源，继承的扩展接口，可手动通过`DynamicDataSource.setDataSource(DataSourceEnum.XXX.getName())`指定数据源

- 启动流程：优先rcp-service服务提供者，再启动其他webapp

- 扩展流程：可扩展和拆分rpc-api和rpc-service模块，可按微服务拆分或场景拆分

### 部署方式（QQ群内有“zheng十分钟视频：从打包到linux服务器部署.wmv”）

- war包项目：使用tomcat等web容器启动

- rpc-service服务提供者jar包：将打包后的zheng-xxx-rpc-service-assembly.tar.gz文件解压，使用bin目录的管理脚本运行即可，支持优雅停机。

### 框架规范约定

约定优于配置(convention over configuration)，此框架约定了很多编程规范，下面一一列举：

```

- service类，需要在叫名`service`的包下，并以`Service`结尾，如`CmsArticleServiceImpl`

- controller类，需要在以`controller`结尾的包下，类名以Controller结尾，如`CmsArticleController.java`，并继承`BaseController`

- spring task类，需要在叫名`task`的包下，并以`Task`结尾，如`TestTask.java`

- mapper.xml，需要在名叫`mapper`的包下，并以`Mapper.xml`结尾，如`CmsArticleMapper.xml`

- mapper接口，需要在名叫`mapper`的包下，并以`Mapper`结尾，如`CmsArticleMapper.java`

- model实体类，需要在名叫`model`的包下，命名规则为数据表转驼峰规则，如`CmsArticle.java`

- spring配置文件，命名规则为`applicationContext-*.xml`

- 类名：首字母大写驼峰规则；方法名：首字母小写驼峰规则；常量：全大写；变量：首字母小写驼峰规则，尽量非缩写

- springmvc配置加到对应模块的`springMVC-servlet.xml`文件里

- 配置文件放到`src/main/resources`目录下

- 静态资源文件放到`src/main/webapp/resources`目录下

- jsp文件，需要在`/WEB-INF/jsp`目录下

- `RequestMapping`和返回物理试图路径的url尽量写全路径，如：`@RequestMapping(""/manage"")`、`return ""/manage/index""`

- `RequestMapping`指定method

- 模块命名为`项目`-`子项目`-`业务`，如`zheng-cms-admin`

- 数据表命名为：`子系统`_`表`，如`cms_article`

- 更多规范，参考[[阿里巴巴Java开发手册] http://git.oschina.net/shuzheng/zheng/attach_files

```

## 演示地址

演示地址： [http://upms.zhangshuzheng.cn/](http://47.93.195.63/zheng-upms-server/sso/login?backurl=http%3A%2F%2F47.93.195.63%2Fzheng-upms-server%2Fmanage%2Findex ""演示地址"")

### 预览图
![idea](project-bootstrap/idea.png)
![login](project-bootstrap/zheng-login.png)
![upms](project-bootstrap/zheng-upms.png)
![cms](project-bootstrap/zheng-cms.png)
![swagger](project-bootstrap/api.png)

### 数据模型
![数据库模型](project-datamodel/zheng.png)

### 拓扑图
![拓扑图](project-bootstrap/distributedSystem.png)

### 开发进度
![开发进度](project-bootstrap/progress.png)

### 参与开发

首先谢谢大家支持，如果你希望参与开发，欢迎通过[Github](https://github.com/shuzheng/zheng ""Github"")上fork本项目，并Pull Request您的commit。

### 常见问题

- Eclipse下，dubbo找不到dubbo.xsd报错，不影响使用，如果要解决，可参考 [http://blog.csdn.net/gjldwz/article/details/50555922](http://blog.csdn.net/gjldwz/article/details/50555922)

- 报zheng-xxx.jar包找不到,请按照文档编译顺序，将源代码编译并安装到本地maven仓库

- zheng-cms-admin启动卡住：因为没有启动activemq

- zheng-upms-server访问报session不存在：因为没有启动redis服务

- 界面没有样式：因为zheng-admin没有编译安装到本地仓库

- linux下执行rpc-service脚本报“bin/bash^M 坏的解释器”，使用sed -i 's/\r$//' filename删除脚本中\r字符

## 附件

### zheng相关博客

- [zheng-1：环境搭建及项目部署](http://www.jianshu.com/p/b2fb42e17b58 ""zheng-1：环境搭建及项目部署"")

- [zheng项目新建一个module学习学习](http://blog.csdn.net/u014449653/article/details/78294862 ""zheng项目新建一个module学习学习"")

- [zheng项目系统简单的分析记录](http://blog.csdn.net/u014449653/article/details/78319135 ""zheng项目系统简单的分析记录"")

- [zheng项目-从rpc-service开始！](http://blog.csdn.net/u014449653/article/details/78341171 ""zheng项目-从rpc-service开始！"")

- [进击zheng项目zheng-umps-server](http://blog.csdn.net/u014449653/article/details/78355849 ""进击zheng项目zheng-umps-server"")

- [zheng环境搭建](http://blog.csdn.net/u011781521/article/details/79012311 ""zheng环境搭建"")

- [让zheng支持activiti工作流](http://blog.csdn.net/ctmold/article/details/79082406 ""让zheng支持activiti工作流"")

- [让zheng更完美地支持ajax提交的json数据](http://blog.csdn.net/ctmold/article/details/79081483 ""让zheng更完美地支持ajax提交的json数据"")

### 优秀文章和博客

- [Git原理及使用](https://zhuanlan.zhihu.com/p/66506485 ""Git原理及使用"")

- [创业互联网公司如何搭建自己的技术框架](http://shuzheng5201314.iteye.com/blog/2330151 ""创业互联网公司如何搭建自己的技术框架"")

- [微服务实战](https://segmentfault.com/a/1190000004634172 ""微服务实战"")

- [单点登录原理与简单实现](http://shuzheng5201314.iteye.com/blog/2343910 ""单点登录原理与简单实现"")

- [ITeye论坛关于权限控制的讨论](http://www.iteye.com/magazines/82 ""ITeye论坛关于权限控制的讨论"")

- [RBAC新解：基于资源的权限管理(Resource-Based Access Control)](http://globeeip.iteye.com/blog/1236167 ""RBAC新解：基于资源的权限管理(Resource-Based Access Control)"")

- [网站架构经验随笔](http://jinnianshilongnian.iteye.com/blog/2289904 ""网站架构经验随笔"")

- [支付系统架构](http://shuzheng5201314.iteye.com/blog/2355431 ""支付系统架构"")

- [Spring整合JMS](http://elim.iteye.com/blog/1893038 ""Spring整合JMS"")

- [跟我学Shiro目录贴](http://jinnianshilongnian.iteye.com/blog/2018398 ""跟我学Shiro目录贴"")

- [跟我学SpringMVC目录汇总贴](http://jinnianshilongnian.iteye.com/blog/1752171 ""跟我学SpringMVC目录汇总贴"")

- [跟我学spring3 目录贴](http://jinnianshilongnian.iteye.com/blog/1482071 ""跟我学spring3 目录贴"")

- [跟我学OpenResty(Nginx+Lua)开发目录贴](http://jinnianshilongnian.iteye.com/blog/2190344 ""跟我学OpenResty(Nginx+Lua)开发目录贴"")

- [Redis中文网](http://www.redis.net.cn/ ""Redis中文网"")

- [读懂Redis并配置主从集群及高可用部署](http://mp.weixin.qq.com/s?__biz=MzIxNTYzOTQ0Ng==&mid=2247483668&idx=1&sn=cd31574877d38cf7ff9c047b86c9bf23&chksm=979475eda0e3fcfb6b5006bcd19c5a838eca9e369252847dbdf97820bf418201dd75c1dadda3&mpshare=1&scene=23&srcid=0117KUiiITwi2ETRan16xRVg#rd ""读懂Redis并配置主从集群及高可用部署"")

- [Redis哨兵-实现Redis高可用](http://redis.majunwei.com/topics/sentinel.html ""Redis哨兵-实现Redis高可用"")

- [ELK(ElasticSearch, Logstash, Kibana)搭建实时日志分析平台](http://www.open-open.com/lib/view/open1451801542042.html ""ELK(ElasticSearch, Logstash, Kibana)搭建实时日志分析平台"")

- [Nginx基本功能极速入门](http://xxgblog.com/2015/05/17/nginx-start/ ""Nginx基本功能极速入门"")

- [mybatis-genarator 自定义插件](https://my.oschina.net/alexgaoyh/blog/702791 ""mybatis-genarator 自定义插件"")

- [Elasticsearch权威指南（中文版）](https://es.xiaoleilu.com/510_Deployment/20_hardware.html ""Elasticsearch权威指南（中文版）"")

- [springMVC对简单对象、Set、List、Map的数据绑定和常见问题.](http://blog.csdn.net/z_dendy/article/details/12648641 ""springMVC对简单对象、Set、List、Map的数据绑定和常见问题."")

- [如何细粒度地控制你的MyBatis二级缓存](http://blog.csdn.net/luanlouis/article/details/41800511 ""如何细粒度地控制你的MyBatis二级缓存"")

- [Git 在团队中的最佳实践--如何正确使用Git Flow](hhttps://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow ""Git 在团队中的最佳实践--如何正确使用Git Flow"")

- [做个男人，做个成熟的男人，做个有城府的男人](http://shuzheng5201314.iteye.com/blog/1387820 ""做个男人，做个成熟的男人，做个有城府的男人"")


### 在线小工具

- [在线Cron表达式生成器](http://cron.qqe2.com/ ""在线Cron表达式生成器"")

- [在线工具 - 程序员的工具箱](http://tool.lu/ ""在线工具 - 程序员的工具箱"")

### 在线文档

- [JDK7英文文档](http://tool.oschina.net/apidocs/apidoc?api=jdk_7u4 ""JDK7英文文档"")

- [Spring4.x文档](http://spring.oschina.mopaas.com/ ""Spring4.x文档"")

- [Mybatis3官网](http://www.mybatis.org/mybatis-3/zh/index.html ""Mybatis3官网"")

- [Dubbo官网](http://dubbo.io/ ""Dubbo官网"")

- [Nginx中文文档](http://tool.oschina.net/apidocs/apidoc?api=nginx-zh ""Nginx中文文档"")

- [Freemarker在线手册](http://freemarker.foofun.cn/ ""Freemarker在线中文手册"")

- [Velocity在线手册](http://velocity.apache.org/engine/devel/developer-guide.html ""Velocity在线手册"")

- [Bootstrap在线手册](http://www.bootcss.com/ ""Bootstrap在线手册"")

- [Git官网中文文档](https://git-scm.com/book/zh/v2 ""Git官网中文文档"")

- [Thymeleaf](http://www.thymeleaf.org/doc/tutorials/3.0/thymeleafspring.html ""Thymeleaf"")

## 许可证

[MIT](LICENSE ""MIT"")
"
alibaba/arthas,Java,"## Arthas

![arthas](site/docs/.vuepress/public/images/arthas.png)

[![Build Status](https://github.com/alibaba/arthas/workflows/JavaCI/badge.svg)](https://github.com/alibaba/arthas/actions)
[![codecov](https://codecov.io/gh/alibaba/arthas/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/arthas)
[![maven](https://img.shields.io/maven-central/v/com.taobao.arthas/arthas-packaging.svg)](https://search.maven.org/search?q=g:com.taobao.arthas)
![license](https://img.shields.io/github/license/alibaba/arthas.svg)
[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas ""Average time to resolve an issue"")
[![Percentage of issues still open](http://isitmaintained.com/badge/open/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas ""Percentage of issues still open"")
[![Leaderboard](https://img.shields.io/badge/Arthas-Check%20Your%20Contribution-orange)](https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=arthas)

`Arthas` is a Java Diagnostic tool open sourced by Alibaba.

Arthas allows developers to troubleshoot production issues for Java applications without modifying code or restarting servers.

[中文说明/Chinese Documentation](README_CN.md)

### Background

Often times, the production system network is inaccessible from the local development environment. If issues are encountered in production systems, it is impossible to use IDEs to debug the application remotely. More importantly, debugging in production environment is unacceptable, as it will suspend all the threads, resulting in the suspension of business services. 

Developers could always try to reproduce the same issue on the test/staging environment. However, this is tricky as some issues cannot be reproduced easily on a different environment, or even disappear once restarted. 

And if you're thinking of adding some logs to your code to help troubleshoot the issue, you will have to go through the following lifecycle; test, staging, and then to production. Time is money! This approach is inefficient! Besides, the issue may not be reproducible once the JVM is restarted, as described above.

Arthas was built to solve these issues. A developer can troubleshoot your production issues on-the-fly. No JVM restart, no additional code changes. Arthas works as an observer, which will never suspend your existing threads.

### Key features

* Check whether a class is loaded, or where the class is being loaded. (Useful for troubleshooting jar file conflicts)
* Decompile a class to ensure the code is running as expected.
* View classloader statistics, e.g. the number of classloaders, the number of classes loaded per classloader, the classloader hierarchy, possible classloader leaks, etc.
* View the method invocation details, e.g. method parameter, return object, thrown exception, and etc.
* Check the stack trace of specified method invocation. This is useful when a developers wants to know the caller of the said method.
* Trace the method invocation to find slow sub-invocations.
* Monitor method invocation statistics, e.g. qps, rt, success rate and etc.
* Monitor system metrics, thread states and cpu usage, gc statistics, and etc.
* Supports command line interactive mode, with auto-complete feature enabled.
* Supports telnet and websocket, which enables both local and remote diagnostics with command line and browsers.
* Supports profiler/Flame Graph
* Support get objects in the heap that are instances of the specified class. 
* Supports JDK 6+.
* Supports Linux/Mac/Windows.


### [Online Tutorials(Recommended)](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en)

* [Usages](tutorials/katacoda/README.md#online-tutorial-usages)

### Quick start

#### Use `arthas-boot`(Recommended)

Download`arthas-boot.jar`，Start with `java` command:

```bash
curl -O https://arthas.aliyun.com/arthas-boot.jar
java -jar arthas-boot.jar
```

Print usage:

```bash
java -jar arthas-boot.jar -h
```

#### Use `as.sh`

You can install Arthas with one single line command on Linux, Unix, and Mac. Copy the following command and paste it into the command line, then press *Enter* to run:

```bash
curl -L https://arthas.aliyun.com/install.sh | sh
```

The command above will download the bootstrap script `as.sh` to the current directory. You can move it any other place you want, or put its location in `$PATH`.

You can enter its interactive interface by executing `as.sh`, or execute `as.sh -h` for more help information.


### Documentation

* [Online Tutorials(Recommended)](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en)
* [User manual](https://arthas.aliyun.com/doc/en)
* [Installation](https://arthas.aliyun.com/doc/en/install-detail.html)
* [Download](https://arthas.aliyun.com/doc/en/download.html)
* [Quick start](https://arthas.aliyun.com/doc/en/quick-start.html)
* [Advanced usage](https://arthas.aliyun.com/doc/en/advanced-use.html)
* [Commands](https://arthas.aliyun.com/doc/en/commands.html)
* [WebConsole](https://arthas.aliyun.com/doc/en/web-console.html)
* [Docker](https://arthas.aliyun.com/doc/en/docker.html)
* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/en/spring-boot-starter.html)
* [User cases](https://github.com/alibaba/arthas/issues?q=label%3Auser-case)
* [FAQ](https://arthas.aliyun.com/doc/en/faq)
* [Compile and debug/How to contribute](https://github.com/alibaba/arthas/blob/master/CONTRIBUTING.md)
* [Release Notes](https://github.com/alibaba/arthas/releases)


### Feature Showcase

#### Dashboard

* https://arthas.aliyun.com/doc/en/dashboard

![dashboard](site/docs/.vuepress/public/images/dashboard.png)

#### Thread

* https://arthas.aliyun.com/doc/en/thread

See what is eating your CPU (ranked by top CPU usage) and what is going on there in one glance:

```bash
$ thread -n 3
""as-command-execute-daemon"" Id=29 cpuUsage=75% RUNNABLE
    at sun.management.ThreadImpl.dumpThreads0(Native Method)
    at sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:440)
    at com.taobao.arthas.core.command.monitor200.ThreadCommand$1.action(ThreadCommand.java:58)
    at com.taobao.arthas.core.command.handler.AbstractCommandHandler.execute(AbstractCommandHandler.java:238)
    at com.taobao.arthas.core.command.handler.DefaultCommandHandler.handleCommand(DefaultCommandHandler.java:67)
    at com.taobao.arthas.core.server.ArthasServer$4.run(ArthasServer.java:276)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)

    Number of locked synchronizers = 1
    - java.util.concurrent.ThreadPoolExecutor$Worker@6cd0b6f8

""as-session-expire-daemon"" Id=25 cpuUsage=24% TIMED_WAITING
    at java.lang.Thread.sleep(Native Method)
    at com.taobao.arthas.core.server.DefaultSessionManager$2.run(DefaultSessionManager.java:85)

""Reference Handler"" Id=2 cpuUsage=0% WAITING on java.lang.ref.Reference$Lock@69ba0f27
    at java.lang.Object.wait(Native Method)
    -  waiting on java.lang.ref.Reference$Lock@69ba0f27
    at java.lang.Object.wait(Object.java:503)
    at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)
```

#### jad

* https://arthas.aliyun.com/doc/en/jad

Decompile your class with one shot:

```java
$ jad javax.servlet.Servlet

ClassLoader:
+-java.net.URLClassLoader@6108b2d7
  +-sun.misc.Launcher$AppClassLoader@18b4aac2
    +-sun.misc.Launcher$ExtClassLoader@1ddf84b8

Location:
/Users/xxx/work/test/lib/servlet-api.jar

/*
 * Decompiled with CFR 0_122.
 */
package javax.servlet;

import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public interface Servlet {
    public void init(ServletConfig var1) throws ServletException;

    public ServletConfig getServletConfig();

    public void service(ServletRequest var1, ServletResponse var2) throws ServletException, IOException;

    public String getServletInfo();

    public void destroy();
}
```

#### mc
* https://arthas.aliyun.com/doc/en/mc

Memory compiler, compiles `.java` files into `.class` files in memory.

```bash
$ mc /tmp/Test.java
```

#### retransform

* https://arthas.aliyun.com/doc/en/retransform

Load the external `*.class` files to retransform/hotswap the loaded classes in JVM.

```bash
retransform /tmp/Test.class
retransform -c 327a647b /tmp/Test.class /tmp/Test\$Inner.class
```

#### sc

* https://arthas.aliyun.com/doc/en/sc

Search any loaded class with detailed information.

```bash
$ sc -d org.springframework.web.context.support.XmlWebApplicationContext
 class-info        org.springframework.web.context.support.XmlWebApplicationContext
 code-source       /Users/xxx/work/test/WEB-INF/lib/spring-web-3.2.11.RELEASE.jar
 name              org.springframework.web.context.support.XmlWebApplicationContext
 isInterface       false
 isAnnotation      false
 isEnum            false
 isAnonymousClass  false
 isArray           false
 isLocalClass      false
 isMemberClass     false
 isPrimitive       false
 isSynthetic       false
 simple-name       XmlWebApplicationContext
 modifier          public
 annotation
 interfaces
 super-class       +-org.springframework.web.context.support.AbstractRefreshableWebApplicationContext
                     +-org.springframework.context.support.AbstractRefreshableConfigApplicationContext
                       +-org.springframework.context.support.AbstractRefreshableApplicationContext
                         +-org.springframework.context.support.AbstractApplicationContext
                           +-org.springframework.core.io.DefaultResourceLoader
                             +-java.lang.Object
 class-loader      +-org.apache.catalina.loader.ParallelWebappClassLoader
                     +-java.net.URLClassLoader@6108b2d7
                       +-sun.misc.Launcher$AppClassLoader@18b4aac2
                         +-sun.misc.Launcher$ExtClassLoader@1ddf84b8
 classLoaderHash   25131501

```


#### vmtool

* https://arthas.aliyun.com/doc/en/vmtool

Get objects in the heap that are instances of the specified class.

```bash
$ vmtool --action getInstances --className java.lang.String --limit 10
@String[][
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com.taobao.arthas.core.shell.session.Session],
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/],
    @String[java/util/concurrent/ConcurrentHashMap$ValueIterator],
    @String[java/util/concurrent/locks/LockSupport],
]
```

#### stack

* https://arthas.aliyun.com/doc/en/stack

View the call stack of `test.arthas.TestStack#doGet`:

```bash
$ stack test.arthas.TestStack doGet
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 286 ms.
ts=2018-09-18 10:11:45;thread_name=http-bio-8080-exec-10;id=d9;is_daemon=true;priority=5;TCCL=org.apache.catalina.loader.ParallelWebappClassLoader@25131501
    @test.arthas.TestStack.doGet()
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:624)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:731)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110)
        ...
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:451)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1121)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
        at java.lang.Thread.run(Thread.java:745)
```

#### Trace

* https://arthas.aliyun.com/doc/en/trace

See what is slowing down your method invocation with trace command:

![trace](site/docs/.vuepress/public/images/trace.png)

#### Watch

* https://arthas.aliyun.com/doc/en/watch

Watch the first parameter and thrown exception of `test.arthas.TestWatch#doGet` only if it throws exception.

```bash
$ watch test.arthas.TestWatch doGet {params[0], throwExp} -e
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 65 ms.
ts=2018-09-18 10:26:28;result=@ArrayList[
    @RequestFacade[org.apache.catalina.connector.RequestFacade@79f922b2],
    @NullPointerException[java.lang.NullPointerException],
]
```

#### Monitor

* https://arthas.aliyun.com/doc/en/monitor

Monitor a specific method invocation statistics, including the total number of invocations, average response time, success rate, and every 5 seconds:

```bash
$ monitor -c 5 org.apache.dubbo.demo.provider.DemoServiceImpl sayHello
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 109 ms.
 timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 2018-09-20 09:45:32  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.67        0.00%

 timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 2018-09-20 09:45:37  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     1.00        0.00%

 timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 2018-09-20 09:45:42  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.43        0.00%
```

#### Time Tunnel(tt)

* https://arthas.aliyun.com/doc/en/tt

Record method invocation data, so that you can check the method invocation parameters, returned value, and thrown exceptions later. It works as if you could come back and replay the past method invocation via time tunnel.

```bash
$ tt -t org.apache.dubbo.demo.provider.DemoServiceImpl sayHello
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 75 ms.
 INDEX   TIMESTAMP            COST(ms)  IS-RET  IS-EXP   OBJECT         CLASS                          METHOD
-------------------------------------------------------------------------------------------------------------------------------------
 1000    2018-09-20 09:54:10  1.971195  true    false    0x55965cca     DemoServiceImpl                sayHello
 1001    2018-09-20 09:54:11  0.215685  true    false    0x55965cca     DemoServiceImpl                sayHello
 1002    2018-09-20 09:54:12  0.236303  true    false    0x55965cca     DemoServiceImpl                sayHello
 1003    2018-09-20 09:54:13  0.159598  true    false    0x55965cca     DemoServiceImpl                sayHello
 1004    2018-09-20 09:54:14  0.201982  true    false    0x55965cca     DemoServiceImpl                sayHello
 1005    2018-09-20 09:54:15  0.214205  true    false    0x55965cca     DemoServiceImpl                sayHello
 1006    2018-09-20 09:54:16  0.241863  true    false    0x55965cca     DemoServiceImpl                sayHello
 1007    2018-09-20 09:54:17  0.305747  true    false    0x55965cca     DemoServiceImpl                sayHello
 1008    2018-09-20 09:54:18  0.18468   true    false    0x55965cca     DemoServiceImpl                sayHello
```

#### Classloader

* https://arthas.aliyun.com/doc/en/classloader

```bash
$ classloader
 name                                                  numberOfInstances  loadedCountTotal
 BootstrapClassLoader                                  1                  3346
 com.taobao.arthas.agent.ArthasClassloader             1                  1262
 java.net.URLClassLoader                               2                  1033
 org.apache.catalina.loader.ParallelWebappClassLoader  1                  628
 sun.reflect.DelegatingClassLoader                     166                166
 sun.misc.Launcher$AppClassLoader                      1                  31
 com.alibaba.fastjson.util.ASMClassLoader              6                  15
 sun.misc.Launcher$ExtClassLoader                      1                  7
 org.jvnet.hk2.internal.DelegatingClassLoader          2                  2
 sun.reflect.misc.MethodUtil                           1                  1
```

#### Web Console

* https://arthas.aliyun.com/doc/en/web-console

![web console](site/docs/.vuepress/public/images/web-console-local.png)


#### Profiler/FlameGraph

* https://arthas.aliyun.com/doc/en/profiler

```bash
$ profiler start
Started [cpu] profiling
```

```
$ profiler stop
profiler output file: /tmp/demo/arthas-output/20211207-111550.html
OK
```

View profiler results under arthas-output via browser:

![](site/docs/.vuepress/public/images/arthas-output-svg.jpg)

#### Arthas Spring Boot Starter

* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/spring-boot-starter.html)

### Known Users

Arthas has more than 120 registered users, [View All](USERS.md).

Welcome to register the company name in this issue: https://github.com/alibaba/arthas/issues/111 (in order of registration)

![Alibaba](static/alibaba.png)
![Alipay](static/alipay.png)
![Aliyun](static/aliyun.png)
![Taobao](static/taobao.png)
![ICBC](static/icbc.png)
![雪球财经](static/xueqiu.png)
![顺丰科技](static/sf.png)
![贝壳找房](static/ke.png)
![vipkid](static/vipkid.png)
![百度凤巢](static/baidufengchao.png)
![有赞](static/youzan.png)
![科大讯飞](static/iflytek.png)
![智联招聘](static/zhaopin.png)

### Derivative Projects

* [Bistoury: A project that integrates Arthas](https://github.com/qunarcorp/bistoury)
* [A fork of arthas using MVEL](https://github.com/XhinLiang/arthas)

### Credits

#### Contributors

This project exists, thanks to all the people who contributed.

<a href=""https://github.com/alibaba/arthas/graphs/contributors""><img src=""https://opencollective.com/arthas/contributors.svg?width=890&button=false"" /></a>

#### Projects

* [bytekit](https://github.com/alibaba/bytekit) Java Bytecode Kit.
* [greys-anatomy](https://github.com/oldmanpushcart/greys-anatomy): The Arthas code base has derived from Greys, we thank for the excellent work done by Greys.
* [termd](https://github.com/alibaba/termd): Arthas's terminal implementation is based on termd, an open source library for writing terminal applications in Java.
* [crash](https://github.com/crashub/crash): Arthas's text based user interface rendering is based on codes extracted from [here](https://github.com/crashub/crash/tree/1.3.2/shell)
* [cli](https://github.com/alibaba/cli): Arthas's command line interface implementation is based on cli, open sourced by vert.x
* [compiler](https://github.com/skalogs/SkaETL/tree/master/compiler) Arthas's memory compiler.
* [Apache Commons Net](https://commons.apache.org/proper/commons-net/) Arthas's telnet client.
* [async-profiler](https://github.com/jvm-profiling-tools/async-profiler) Arthas's profiler command.
"
libgdx/libgdx,Java,"![logo](libgdx_logo.svg)

[![GitHub Actions build status](https://img.shields.io/github/actions/workflow/status/libgdx/libgdx/build-publish.yml?branch=master&label=GitHub%20Actions)](https://github.com/libgdx/libgdx/actions?query=workflow%3A%22Build+and+Publish%22)

[![Sonatype Nexus (Releases)](https://img.shields.io/nexus/r/com.badlogicgames.gdx/gdx?nexusVersion=2&server=https%3A%2F%2Foss.sonatype.org&label=version)](https://search.maven.org/artifact/com.badlogicgames.gdx/gdx)
[![Sonatype Nexus (Snapshots)](https://img.shields.io/nexus/s/com.badlogicgames.gdx/gdx?server=https%3A%2F%2Foss.sonatype.org&label=snapshot)](https://oss.sonatype.org/#nexus-search;gav~com.badlogicgames.gdx~gdx~~~~kw,versionexpand)

[![Discord Chat](https://img.shields.io/discord/348229412858101762?logo=discord)](https://libgdx.com/community/discord/)

## Cross-platform Game Development Framework
**[libGDX](https://libgdx.com) is a cross-platform Java game development framework based on OpenGL (ES) that works on Windows, Linux, macOS, Android, your browser and iOS.** It provides a well-tried and robust environment for rapid prototyping and fast iterations. libGDX does not force a specific design or coding style on you. Rather, it gives you the freedom to create a game the way you like it.

## Open Source, Feature Packed and Offering a Big Third-Party Ecosystem
libGDX is licensed under [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0.html) meaning you can use it free of charge, without strings attached in commercial and non-commercial projects. We, however, love to get (non-mandatory) credit in case you release a game or app using libGDX! See our [showcase](https://libgdx.com/showcase/) for a selection of some popular libGDX games. libGDX comes with [batteries included](https://libgdx.com/features/) and provides everything required to develop multi-platform 2D and 3D games with Java.

libGDX also offers a very extensive third-party ecosystem. There are numerous [tools](https://libgdx.com/dev/tools/) and libraries that take a lot of work off the hands of developers. Take a look at [awesome-libgdx](https://github.com/rafaskb/awesome-libgdx#readme) for a curated list of libGDX-centered libraries and a good starting point for anyone new in the libGDX world.

![](https://libgdx.com/assets/images/index_showcase/game0.png)
###### An example for a game created with libGDX: [Pathway](https://store.steampowered.com/app/546430/Pathway/) by Robotality. Find more games in our [Showcase](https://libgdx.com/showcase/).

## Getting libGDX / Documentation
As we use Gradle, there's no need to download libGDX itself  &ndash; this can all be done by your favorite build tool. We also offer a [setup tool](https://libgdx.com/dev/#how-to-get-started-with-libgdx), which automatically creates a project for you and downloads everything necessary. See our **[website](https://libgdx.com/wiki/start/setup)** for instructions on how to get started with this or read our **[wiki](https://libgdx.com/wiki/)**.

- [Creating a libGDX Project](https://libgdx.com/wiki/start/setup)
- [A Simple Game](https://libgdx.com/wiki/start/a-simple-game)
- [Tutorials & Demos](https://libgdx.com/wiki/start/demos-and-tutorials)

We also provide [javadocs](https://javadoc.io/doc/com.badlogicgames.gdx) online. The javadocs are bundled with every libGDX distribution for consumption in your favorite IDE.

## Community & Contributing
You can follow the **latest news** about libGDX on our [blog](https://libgdx.com/news/). Another good way to get in touch with our community is to join the official [libGDX Discord](https://libgdx.com/community/discord/).

### Reporting Issues
Use the **[Issue Tracker](https://github.com/libgdx/libgdx/issues)** here on GitHub to report issues. Please make sure you read the [Getting Help](https://libgdx.com/wiki/articles/getting-help) article that walks you through the process of properly reporting an issue.

### Working on the Code
libGDX has a strong developer community constantly improving the code base. We love to get any and all help we can. Our [Contributing Guidelines](https://libgdx.com/dev/contributing/) describe the process of helping libGDX to become even better. To contribute, you need to work with libGDX' sources directly, something normal users do not have to go through. The [Working with the Source](https://libgdx.com/dev/from-source/) article will give you some directions.

You can also contribute financially to our infrastructure (build server, web server, test devices) via our [Patreon](https://patreon.com/libgdx)!
"
aosp-mirror/platform_frameworks_base,Java,
geekxh/hello-algorithm,Java,"## 简介

English version repo and Gitbook is on [english branch](https://github.com/geekxh/hello-algorithm/tree/english)

> ### **小浩算法是一套针对小白的完整的算法训练流程！** 
>
> <a href=""https://www.geekxh.com/""><img src=""https://www.geekxh.com/svg/0-1-blueviolet.svg"" alt=""css""></a>
> <a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://img.shields.io/github/stars/geekxh/hello-algorithm.svg"" alt=""Statr""></a>
> <a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://www.geekxh.com/svg/2-1-success.svg"" alt=""Statr""></a>
>
> 目前共包括以下几个步骤：
> - PART_1_算法基础
> - PART_2_力扣图解
> - PART_3_大厂面试
> - PART_4_CS知识汇总
>
> [目前已支持 PDF 下载](https://www.cxyhub.com/all/programming/7786/)

<div align=""center"">
    <a href=""https://www.geekxh.com""><img src=""https://www.geekxh.com/logo_tmp.png"" width=""350px""></a>
</div>

<p align=""center"">
<a href=""https://www.geekxh.com/""><img src=""https://www.geekxh.com/svg/0-1-blueviolet.svg"" alt=""css""></a>
<a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://img.shields.io/github/stars/geekxh/hello-algorithm.svg"" alt=""Statr""></a>
<a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://www.geekxh.com/svg/2-1-success.svg"" alt=""Statr""></a>
</p>
<p align=""center"">
    <b>这也许是东半球最好的算法学习类项目！</b>
</p>
</br>

> 最近 GPT 很火，有很多小伙伴想学习 AI，这里为大家分享一套免费的 AI 课程资料，大家扫码领取：
- Python与数据科学课程资料
- Pytorch与神经网络课程资料
- 深度学习与花书深入讲解课程
- 机器学习入门与实战训练课程
- 人工智能必备数学基础课程
- 零基础小白入门科研与论文课程
- 最新全栈AI前沿论文带读与算法精讲，视频➕配套课件资料
<p align=""center"">
    <img height=""350"" src=""https://www.geekxh.com/e623533638c3184f53c317bd1bd1450c.jpeg"">
</p>


### 正文

### PART_1_算法基础

主要包括两部分：

- a：数据结构知识框架：为了大家更好的掌握数据结构和算法，我把基础知识整理成了一张思维导图，包括下面这些知识点：

> [开始学习](PART_1_算法基础/README.md)

- b：对常用的数据结构知识进行总结：

*  [链表](PART_1_算法基础/2_基础知识/linked-list/README.md)
*  [双向链表](PART_1_算法基础/2_基础知识/doubly-linked-list/README.md)
*  [队列](PART_1_算法基础/2_基础知识/queue/README.md)
*  [栈](PART_1_算法基础/2_基础知识/stack/README.md)
*  [哈希表(散列)](PART_1_算法基础/2_基础知识/hash-table/README.md)
*  [堆](PART_1_算法基础/2_基础知识/heap/README.md)
*  [优先队列](PART_1_算法基础/2_基础知识/priority-queue/README.md)
*  [字典树](PART_1_算法基础/2_基础知识/trie/README.md)
*  [树](PART_1_算法基础/2_基础知识/tree/README.md)
*  [图](PART_1_算法基础/2_基础知识/graph/README.md) 

### PART_2_力扣图解

<details><summary><a>显示更多</a></summary></br>
    
> [小浩图解算法题典.PDF【完整版】下载](https://www.cxyhub.com/all/programming/7786/)

- [开始学习](http://www.geekxh.com)
- [阅读指南](http://www.geekxh.com/c99/hello.html)
- 数组
    - [01.最长公共前缀(14)](http://www.geekxh.com/1.0.数组系列/002.html)  
    - [02.买卖股票的最佳时机(122)](http://www.geekxh.com/1.0.数组系列/003.html)
    - [03.旋转数组(189)](http://www.geekxh.com/1.0.数组系列/004.html) 
    - [04.原地删除(27)](http://www.geekxh.com/1.0.数组系列/005.html) 
    - [05.加一(66)](http://www.geekxh.com/1.0.数组系列/006.html)
    - [06.两数之和(1)](http://www.geekxh.com/1.0.数组系列/007.html)                                              
    - [07.三数之和(15)](http://www.geekxh.com/1.0.数组系列/008.html)                                              
    - [08.Z字形变换(6)](http://www.geekxh.com/1.0.数组系列/009.html)  
- 链表                                            
    - [01.删除链表倒数第N个节点(19)](http://www.geekxh.com/1.1.链表系列/101.html)                                                 
    - [02.合并两个有序链表(21)](http://www.geekxh.com/1.1.链表系列/102.html)                                                 
    - [03.环形链表(141)](http://www.geekxh.com/1.1.链表系列/103.html)                                                 
    - [04.两数相加(2)](http://www.geekxh.com/1.1.链表系列/104.html)                                                 
- 动态规划
    - [01.爬楼梯(70)](http://www.geekxh.com/1.2.动态规划系列/201.html)                                                
    - [02.最大子序和(53)](http://www.geekxh.com/1.2.动态规划系列/202.html)                                                
    - [03.最长上升子序列(300)](http://www.geekxh.com/1.2.动态规划系列/203.html)                                                
    - [04.三角形最小路径和(120)](http://www.geekxh.com/1.2.动态规划系列/204.html)                                                
    - [05.最小路径和(64)](http://www.geekxh.com/1.2.动态规划系列/205.html)                                                
    - [06.打家劫舍(198)](http://www.geekxh.com/1.2.动态规划系列/206.html)                                                
- 字符串
    - [01.反转字符串(344)](http://www.geekxh.com/1.3.字符串系列/301.html)                                               
    - [02.字符串中的第一个唯一字符(387)](http://www.geekxh.com/1.3.字符串系列/302.html)                                               
    - [03.实现 Sunday 匹配](http://www.geekxh.com/1.3.字符串系列/303.html)                                               
    - [04.大数打印](http://www.geekxh.com/1.3.字符串系列/304.html)                                               
    - [05.验证回文串(125)](http://www.geekxh.com/1.3.字符串系列/305.html)                                               
    - [06.KMP 精讲](http://www.geekxh.com/1.3.字符串系列/306.html)                                               
    - [07.旋转字符串(796)](http://www.geekxh.com/1.3.字符串系列/307.html)                                               
    - [08.最后一个单词的长度(58)](http://www.geekxh.com/1.3.字符串系列/308.html)                                               
- 二叉树
    - [01.最大深度与DFS(104)](http://www.geekxh.com/1.4.二叉树系列/401.html)                                               
    - [02.层次遍历与BFS(102)](http://www.geekxh.com/1.4.二叉树系列/402.html)                                               
    - [03.BST与其验证(98)](http://www.geekxh.com/1.4.二叉树系列/403.html)                                               
    - [04.BST 的查找(700)](http://www.geekxh.com/1.4.二叉树系列/404.html)                                               
    - [05.BST 的删除(450)](http://www.geekxh.com/1.4.二叉树系列/405.html)                                               
    - [06.平衡二叉树(110)](http://www.geekxh.com/1.4.二叉树系列/406.html)                                               
    - [07.完全二叉树(222)](http://www.geekxh.com/1.4.二叉树系列/407.html)                                               
    - [08.二叉树的剪枝(814)](http://www.geekxh.com/1.4.二叉树系列/408.html)                                               
- 滑动窗口
    - [01.滑动窗口最大值（239）](http://www.geekxh.com/1.5.滑动窗口系列/501.html)                                                
    - [02.无重复字符的最长子串（3）](http://www.geekxh.com/1.5.滑动窗口系列/502.html)                                                
    - [03.找到字符串中所有字母异位词（438）](http://www.geekxh.com/1.5.滑动窗口系列/503.html)                                                
    - [04.和为s的连续正数序列](http://www.geekxh.com/1.5.滑动窗口系列/504.html)   
- 博弈论                                             
    - [01.囚徒困境](http://www.geekxh.com/1.6.博弈论系列/601.html)                                                
    - [02.辛普森悖论](http://www.geekxh.com/1.6.博弈论系列/602.html)                                                
    - [03.红眼睛和蓝眼睛](http://www.geekxh.com/1.6.博弈论系列/603.html)                                                 
    - [04.海盗分金币](http://www.geekxh.com/1.6.博弈论系列/604.html)                                                
    - [05.智猪博弈](http://www.geekxh.com/1.6.博弈论系列/605.html)                                                
    - [06.生男生女的问题](http://www.geekxh.com/1.6.博弈论系列/606.html)                                                
    - [07.硬币问题](http://www.geekxh.com/1.6.博弈论系列/607.html)                                                
    - [08.画圈圈的问题](http://www.geekxh.com/1.6.博弈论系列/608.html)                                                
    - [09.巧克力问题](http://www.geekxh.com/1.6.博弈论系列/609.html)                                                
    - [10.大鱼和小鱼的问题](http://www.geekxh.com/1.6.博弈论系列/610.html)  
- 位运算                                              
    - [01.使用位运算求和](http://www.geekxh.com/1.8.位运算系列/801.html)                                                
    - [02.2的幂(231)](http://www.geekxh.com/1.8.位运算系列/802.html)                                                
    - [03.返回一个数二进制中1的个数](http://www.geekxh.com/1.8.位运算系列/803.html)                                                 
    - [04.只出现一次的数字](http://www.geekxh.com/1.8.位运算系列/804.html)                                                 
    - [05.只出现一次的数字Ⅱ](http://www.geekxh.com/1.8.位运算系列/805.html)                                                 
    - [06.缺失数字(268)](http://www.geekxh.com/1.8.位运算系列/806.html) 
- 二分法                                                
    - [01.爱吃香蕉的珂珂（875）](http://www.geekxh.com/1.9.二分法系列/901.html)                                                
    - [02.x的平方根（69）](http://www.geekxh.com/1.9.二分法系列/902.html)                                                
    - [03.x的平方根（69）](http://www.geekxh.com/1.9.二分法系列/903.html)                                                 
    - [04.旋转排序数组中的最小值Ⅰ（153）](http://www.geekxh.com/1.9.二分法系列/904.html)                                                 
    - [05.旋转排序数组中的最小值Ⅱ(154)](http://www.geekxh.com/1.9.二分法系列/905.html)                                                 
    - [06.供暖器（475）](http://www.geekxh.com/1.9.二分法系列/906.html)   
- 其他高频面试题目                                              
    - [01.螺旋矩阵(54)](http://www.geekxh.com/1.99.其他补充题目/01.html)                                                 
    - [02.只有两个键的键盘(650)](http://www.geekxh.com/1.99.其他补充题目/02.html)                                                 
    - [03.24点游戏(679)](http://www.geekxh.com/1.99.其他补充题目/03.html)                                                 
    - [04.飞机座位分配概率(1227)](http://www.geekxh.com/1.99.其他补充题目/04.html)                                                 
    - [05.水分子的产生](http://www.geekxh.com/1.99.其他补充题目/05.html)                                                 
    - [06.救生艇(881)](http://www.geekxh.com/1.99.其他补充题目/06.html)                                                 
    - [07.救生艇(881)](http://www.geekxh.com/1.99.其他补充题目/07.html)                                                 
    - [08.灯泡开关(319)](http://www.geekxh.com/1.99.其他补充题目/08.html)                                                 
    - [09.三门问题](http://www.geekxh.com/1.99.其他补充题目/09.html)                                                 
    - [10.猜数字游戏(299)](http://www.geekxh.com/1.99.其他补充题目/10.html)                                                 
    - [11.LRU缓存机制(146)](http://www.geekxh.com/1.99.其他补充题目/11.html)                                                 
    - [12.最小的k个数](http://www.geekxh.com/1.99.其他补充题目/12.html)                                                 
    - [13.不同路径](http://www.geekxh.com/1.99.其他补充题目/13.html)                                                 
    - [14.不同路径-障碍物](http://www.geekxh.com/1.99.其他补充题目/14.html)                                                 
    - [15.连续n个数的和](http://www.geekxh.com/1.99.其他补充题目/15.html)                                                 
    - [16.盛水最多的容器](http://www.geekxh.com/1.99.其他补充题目/16.html)                                                 
    - [17.扑克牌中的顺子容器](http://www.geekxh.com/1.99.其他补充题目/17.html)                                                 
    - [18.整数拆分(343)](http://www.geekxh.com/1.99.其他补充题目/18.html)                                                 
    - [19.移动石子到连续(1033)](http://www.geekxh.com/1.99.其他补充题目/19.html)                                                 
    - [20.Nim游戏(292)](http://www.geekxh.com/1.99.其他补充题目/20.html)                                                 
    - [21.寻找两个正序数组的中位数(4)](http://www.geekxh.com/1.99.其他补充题目/21.html)                                                 
    - [22.第k个最大元素（215）](http://www.geekxh.com/1.99.其他补充题目/22.html)                                                 
    - [23.镜面反射（858）](http://www.geekxh.com/1.99.其他补充题目/23.html)                                                 
    - [25.整数转罗马数字（12）](http://www.geekxh.com/1.99.其他补充题目/25.html)                                                 
    - [26.荷兰国旗问题](http://www.geekxh.com/1.99.其他补充题目/26.html)                                                 
    - [27.六九问题](http://www.geekxh.com/1.99.其他补充题目/27.html)                                                 
    - [28.有效的数独](http://www.geekxh.com/1.99.其他补充题目/28.html)                                                 
    - [29.费米估算](http://www.geekxh.com/1.99.其他补充题目/29.html)                                                 
    - [30.分发饼干](http://www.geekxh.com/1.99.其他补充题目/30.html)                                                 
    - [31.生命游戏（289）](http://www.geekxh.com/1.99.其他补充题目/31.html)                                                 
    - [32.搜索二维矩阵（74）](http://www.geekxh.com/1.99.其他补充题目/32.html)                                                 
    - [33.子集（78）](http://www.geekxh.com/1.99.其他补充题目/33.html)                                                 
    - [34.面试中的智力题](http://www.geekxh.com/1.99.其他补充题目/34.html)                                                 
    - [35.旋转图像（48）](http://www.geekxh.com/1.99.其他补充题目/51.html)                                                 

</details>

### PART_3_大厂面试（更新中）

<details><summary><a>显示更多</a></summary></br>

考虑到现在网上面经实在太杂，很多都冠以 “BAT” 之名，重复率、错误率都非常高。所以我尽可能的挑选出了我认为比较好的 50 篇面经（基本不重复），并对内容做了分类。

建议大家把这个页面收藏起来，防止后面需要的时候找不到了。（整理了近40个小时，跪求star~）

- [系统设计-长文（非常建议读，我自己也看了）](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md)
- [后端-社招(两年): 蚂蚁 头条 PingCAP](https://github.com/aylei/interview)
- [后端-京东-JAVA](https://www.cnblogs.com/wupeixuan/p/8908524.html#%E4%B8%80%E3%80%81java)
- [后端-百度-高并发抢红包设计](https://github.com/xbox1994/Java-Interview/blob/master/MD/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1-%E9%AB%98%E5%B9%B6%E5%8F%91%E6%8A%A2%E7%BA%A2%E5%8C%85.md)
- [NLP（机器学习）-百度](https://www.e-learn.cn/topic/95743)

</details>


### PART_4_CS_知识汇总(TODO)

### License

本项目除部分引用开源技术文档的内容外，大部分为本人原创。欢迎任何以学习为目的的传播，但未授权任何平台进行转载！
"
nostra13/Android-Universal-Image-Loader,Java,"# ![Logo](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/sample/src/main/res/drawable-mdpi/ic_launcher.png) Universal Image Loader [![Build Status](https://travis-ci.org/nostra13/Android-Universal-Image-Loader.svg?branch=master)](https://travis-ci.org/nostra13/Android-Universal-Image-Loader) [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.nostra13.universalimageloader/universal-image-loader/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.nostra13.universalimageloader/universal-image-loader)

The great ancestor of modern image-loading libraries :)  
UIL aims to provide a powerful, flexible and highly customizable instrument for image loading, caching and displaying. It provides a lot of configuration options and good control over the image loading and caching process.

![Screenshot](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/UniversalImageLoader.png)

## Project News 
 * Really have no time for development... so I stop project maintaining since Nov 27 :(
 * UIL [27.11.2011 - 27.11.2015]
 * Thanks to all developers for your support :)

## Features
 * Multi-thread image loading (async or sync)
 * Wide customization of ImageLoader's configuration (thread executors, downloader, decoder, memory and disk cache, display image options, etc.)
 * Many customization options for every display image call (stub images, caching switch, decoding options, Bitmap processing and displaying, etc.)
 * Image caching in memory and/or on disk (device's file system or SD card)
 * Listening loading process (including downloading progress)

Android 4.1+ support

## Downloads
 * **[universal-image-loader-1.9.5.jar](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/downloads/universal-image-loader-1.9.5.jar)**
 * [<img src=""https://play.google.com/intl/en_us/badges/images/apps/en-play-badge.png"" height=""45px"" />](https://play.google.com/store/apps/details?id=com.nostra13.universalimageloader.sample) [![QR Code](https://lh3.ggpht.com/csXEddxiLgQ6FxckefjQnP1PVugbaAYOdcuTa3vVtGV1PlWbFu2dYggoH8rI1w2RdEz1=w50)](http://chart.apis.google.com/chart?chs=300x300&cht=qr&chld=|1&chl=https%3A%2F%2Fplay.google.com%2Fstore%2Fapps%2Fdetails%3Fid%3Dcom.nostra13.universalimageloader.sample) [<img src=""https://www.javatpoint.com/fullformpages/images/apk.png"" height=""45px"" />](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/downloads/universal-image-loader-sample-1.9.5.apk)

## [Documentation](https://github.com/nostra13/Android-Universal-Image-Loader/wiki)
 * **[Quick Setup](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Quick-Setup)**
 * **[Configuration](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Configuration)**
 * **[Display Options](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Display-Options)**
 * [Useful Info](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/Useful-Info) - Read it before asking a question
 * [User Support](https://github.com/nostra13/Android-Universal-Image-Loader/wiki/User-Support) - Read it before creating new issue
 * [Sample project](https://github.com/nostra13/Android-Universal-Image-Loader/tree/master/sample) - Learn it to understand the right way of library usage
 * [ChangeLog](https://github.com/nostra13/Android-Universal-Image-Loader/blob/master/CHANGELOG.md) - Info about API changes is here

## Usage

### Dependency

```
implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
```

### Acceptable URIs examples
``` java
""http://site.com/image.png"" // from Web
""file:///mnt/sdcard/image.png"" // from SD card
""file:///mnt/sdcard/video.mp4"" // from SD card (video thumbnail)
""content://media/external/images/media/13"" // from content provider
""content://media/external/video/media/13"" // from content provider (video thumbnail)
""assets://image.png"" // from assets
""drawable://"" + R.drawable.img // from drawables (non-9patch images)
```
**NOTE:** Use `drawable://` only if you really need it! Always **consider the native way** to load drawables - `ImageView.setImageResource(...)` instead of using of `ImageLoader`.

### Simple
``` java
ImageLoader imageLoader = ImageLoader.getInstance(); // Get singleton instance
```
``` java
// Load image, decode it to Bitmap and display Bitmap in ImageView (or any other view 
//	which implements ImageAware interface)
imageLoader.displayImage(imageUri, imageView);
```
``` java
// Load image, decode it to Bitmap and return Bitmap to callback
imageLoader.loadImage(imageUri, new SimpleImageLoadingListener() {
	@Override
	public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
		// Do whatever you want with Bitmap
	}
});
```
``` java
// Load image, decode it to Bitmap and return Bitmap synchronously
Bitmap bmp = imageLoader.loadImageSync(imageUri);
```

### Complete
``` java
// Load image, decode it to Bitmap and display Bitmap in ImageView (or any other view 
//	which implements ImageAware interface)
imageLoader.displayImage(imageUri, imageView, options, new ImageLoadingListener() {
	@Override
	public void onLoadingStarted(String imageUri, View view) {
		...
	}
	@Override
	public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
		...
	}
	@Override
	public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
		...
	}
	@Override
	public void onLoadingCancelled(String imageUri, View view) {
		...
	}
}, new ImageLoadingProgressListener() {
	@Override
	public void onProgressUpdate(String imageUri, View view, int current, int total) {
		...
	}
});
```
``` java
// Load image, decode it to Bitmap and return Bitmap to callback
ImageSize targetSize = new ImageSize(80, 50); // result Bitmap will be fit to this size
imageLoader.loadImage(imageUri, targetSize, options, new SimpleImageLoadingListener() {
	@Override
	public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
		// Do whatever you want with Bitmap
	}
});
```
``` java
// Load image, decode it to Bitmap and return Bitmap synchronously
ImageSize targetSize = new ImageSize(80, 50); // result Bitmap will be fit to this size
Bitmap bmp = imageLoader.loadImageSync(imageUri, targetSize, options);
```

## Load & Display Task Flow
![Task Flow](https://github.com/nostra13/Android-Universal-Image-Loader/raw/master/wiki/UIL_Flow.png)


## Applications using Universal Image Loader
**[MediaHouse, UPnP/DLNA Browser](https://play.google.com/store/apps/details?id=com.dbapp.android.mediahouse)** | **[Prezzi Benzina (AndroidFuel)](https://play.google.com/store/apps/details?id=org.vernazza.androidfuel)** | **[ROM Toolbox Lite](https://play.google.com/store/apps/details?id=com.jrummy.liberty.toolbox)**, [Pro](https://play.google.com/store/apps/details?id=com.jrummy.liberty.toolboxpro) | [Stadium Astro](https://play.google.com/store/apps/details?id=com.astro.stadium.activities) | [Chef Astro](https://play.google.com/store/apps/details?id=com.sencha.test) | [Sporee - Live Soccer Scores](https://play.google.com/store/apps/details?id=com.sporee.android) | **[EyeEm - Photo Filter Camera](https://play.google.com/store/apps/details?id=com.baseapp.eyeem)** | **[Topface - meeting is easy](https://play.google.com/store/apps/details?id=com.topface.topface)** | **[reddit is fun](https://play.google.com/store/apps/details?id=com.andrewshu.android.reddit)** | **[Diaro - personal diary](https://play.google.com/store/apps/details?id=com.pixelcrater.Diaro)** | **[Meetup](https://play.google.com/store/apps/details?id=com.meetup)** | [Vingle - Magazines by Fans](https://play.google.com/store/apps/details?id=com.vingle.android) | [Anime Music Radio](https://play.google.com/store/apps/details?id=com.maxxt.animeradio) | [WidgetLocker Theme Viewer](https://play.google.com/store/apps/details?id=com.companionfree.WLThemeViewer) | [ShortBlogger for Tumblr](https://play.google.com/store/apps/details?id=com.luckydroid.tumblelog) | [SnapDish Food Camera](https://play.google.com/store/apps/details?id=com.vuzz.snapdish) | **[Twitch](https://play.google.com/store/apps/details?id=tv.twitch.android.viewer)** | [TVShow Time, TV show guide](https://play.google.com/store/apps/details?id=com.tozelabs.tvshowtime) | [Planning Center Services](https://play.google.com/store/apps/details?id=com.ministrycentered.PlanningCenter) | **[Lapse It](https://play.google.com/store/apps/details?id=com.ui.LapseIt)** | [My Cloud Player for SoundCloud](https://play.google.com/store/apps/details?id=com.mycloudplayers.mycloudplayer) | **[SoundTracking](https://play.google.com/store/apps/details?id=com.schematiclabs.soundtracking)** | [LoopLR Social Video](https://play.google.com/store/apps/details?id=com.looplr) | [Hír24](https://play.google.com/store/apps/details?id=hu.sanomamedia.hir24) | **[Immobilien Scout24](https://play.google.com/store/apps/details?id=de.is24.android)** | **[Lieferheld - Pizza Pasta Sushi](https://play.google.com/store/apps/details?id=de.lieferheld.android)** | [Loocator: free sex datings](https://play.google.com/store/apps/details?id=com.ivicode.loocator) | [벨팡-개편 이벤트,컬러링,벨소리,무료,최신가요,링투유](https://play.google.com/store/apps/details?id=com.mediahubs.www) | [Streambels AirPlay/DLNA Player](https://play.google.com/store/apps/details?id=com.tuxera.streambels) | [Ship Mate - All Cruise Lines](https://play.google.com/store/apps/details?id=shipmate.carnival) | [Disk & Storage Analyzer](https://play.google.com/store/apps/details?id=com.mobile_infographics_tools.mydrive) | [糗事百科](https://play.google.com/store/apps/details?id=qsbk.app) | [Balance BY](https://play.google.com/store/apps/details?id=com.vladyud.balance) | **[Anti Theft Alarm - Security](https://play.google.com/store/apps/details?id=br.com.verde.alarme)** | **[XiiaLive™ - Internet Radio](https://play.google.com/store/apps/details?id=com.android.DroidLiveLite)** | **[Bandsintown Concerts](https://play.google.com/store/apps/details?id=com.bandsintown)** | **[Save As Web Archive](https://play.google.com/store/apps/details?id=jp.fuukiemonster.webmemo)** | [MCPE STORE -Download MCPE file](https://play.google.com/store/apps/details?id=com.newidea.mcpestore) | **[All-In-One Toolbox (29 Tools)](http://aiotoolbox.com/)** | [Zaim](https://play.google.com/store/apps/details?id=net.zaim.android) | **[Calculator Plus Free](https://play.google.com/store/apps/details?id=com.digitalchemy.calculator.freedecimal)** | [Truedialer by Truecaller](https://play.google.com/store/apps/details?id=com.truecaller.phoneapp) | [DoggCatcher Podcast Player](https://play.google.com/store/apps/details?id=com.snoggdoggler.android.applications.doggcatcher.v1_0) | [PingTools Network Utilities](https://play.google.com/store/apps/details?id=ua.com.streamsoft.pingtools) | [The Traveler](https://play.google.com/store/apps/details?id=edu.bsu.android.apps.traveler) | [minube: travel photo album](https://play.google.com/store/apps/details?id=com.minube.app) | [Wear Store for Wear Apps](https://play.google.com/store/apps/details?id=goko.ws2) | [Cast Store for Chromecast Apps](https://play.google.com/store/apps/details?id=goko.gcs) | [WebMoney Keeper](https://play.google.com/store/apps/details?id=com.webmoney.my)

## Donation
You can support the project and thank the author for his hard work :)

* **PayPal** - nostra.uil[at]gmail[dot]com

## Alternative libraries

 * [Fresco](https://github.com/facebook/fresco)
 * [Glide](https://github.com/bumptech/glide)
 * [Picasso](https://github.com/square/picasso)
 * [Volley : ImageLoader](https://android.googlesource.com/platform/frameworks/volley/)

## License

    Copyright 2011-2015 Sergey Tarasevich

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"
signalapp/Signal-Android,Java,"# Signal Android 

Signal is a simple, powerful, and secure messenger.

Signal uses your phone's data connection (WiFi/3G/4G/5G) to communicate securely. Millions of people use Signal every day for free and instantaneous communication anywhere in the world. Send and receive high-fidelity messages, participate in HD voice/video calls, and explore a growing set of new features that help you stay connected. Signal’s advanced privacy-preserving technology is always enabled, so you can focus on sharing the moments that matter with the people who matter to you.

Currently available on the Play Store and [signal.org](https://signal.org/android/apk/).

<a href='https://play.google.com/store/apps/details?id=org.thoughtcrime.securesms&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png' height='80px'/></a>

## Contributing Bug reports
We use GitHub for bug tracking. Please search the existing issues for your bug and create a new one if the issue is not yet tracked!

https://github.com/signalapp/Signal-Android/issues

## Joining the Beta
Want to live life on the bleeding edge and help out with testing?

You can subscribe to Signal Android Beta releases here:
https://play.google.com/apps/testing/org.thoughtcrime.securesms

If you're interested in a life of peace and tranquility, stick with the standard releases.

## Contributing Code

If you're new to the Signal codebase, we recommend going through our issues and picking out a simple bug to fix (check the ""easy"" label in our issues) in order to get yourself familiar. Also please have a look at the [CONTRIBUTING.md](https://github.com/signalapp/Signal-Android/blob/main/CONTRIBUTING.md), that might answer some of your questions.

For larger changes and feature ideas, we ask that you propose it on the [unofficial Community Forum](https://community.signalusers.org) for a high-level discussion with the wider community before implementation.

## Contributing Ideas
Have something you want to say about Signal projects or want to be part of the conversation? Get involved in the [community forum](https://community.signalusers.org).

Help
====
## Support
For troubleshooting and questions, please visit our support center!

https://support.signal.org/

## Documentation
Looking for documentation? Check out the wiki!

https://github.com/signalapp/Signal-Android/wiki

# Legal things
## Cryptography Notice

This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software.
BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted.
See <http://www.wassenaar.org/> for more information.

The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms.
The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.

## License

Copyright 2013-2023 Signal

Licensed under the GNU AGPLv3: https://www.gnu.org/licenses/agpl-3.0.html

Google Play and the Google Play logo are trademarks of Google LLC.
"
apache/tomcat,Java,"## Welcome to Apache Tomcat!

### What Is It?

The Apache Tomcat® software is an open source implementation of the Java
Servlet, JavaServer Pages, Java Expression Language and Java WebSocket
technologies. The Java Servlet, JavaServer Pages, Java Expression Language and
Java WebSocket specifications are developed under the
[Java Community Process](https://jcp.org/en/introduction/overview).

The Apache Tomcat software is developed in an open and participatory
environment and released under the
[Apache License version 2](https://www.apache.org/licenses/). The Apache Tomcat
project is intended to be a collaboration of the best-of-breed developers from
around the world. We invite you to participate in this open development
project. To learn more about getting involved,
[click here](https://tomcat.apache.org/getinvolved.html) or keep reading.

Apache Tomcat software powers numerous large-scale, mission-critical web
applications across a diverse range of industries and organizations. Some of
these users and their stories are listed on the
[PoweredBy wiki page](https://cwiki.apache.org/confluence/display/TOMCAT/PoweredBy).

Apache Tomcat, Tomcat, Apache, the Apache feather, and the Apache Tomcat
project logo are trademarks of the Apache Software Foundation.

### Get It

For every major Tomcat version there is one download page containing
links to the latest binary and source code downloads, but also
links for browsing the download directories and archives:
- [Tomcat 11](https://tomcat.apache.org/download-11.cgi)
- [Tomcat 10](https://tomcat.apache.org/download-10.cgi)
- [Tomcat 9](https://tomcat.apache.org/download-90.cgi)
- [Tomcat 8](https://tomcat.apache.org/download-80.cgi)
- [Tomcat 7](https://tomcat.apache.org/download-70.cgi)

To facilitate choosing the right major Tomcat version one, we have provided a
[version overview page](https://tomcat.apache.org/whichversion.html).

### Documentation

The documentation available as of the date of this release is
included in the docs webapp which ships with tomcat. You can access that webapp
by starting tomcat and visiting <http://localhost:8080/docs/> in your browser.
The most up-to-date documentation for each version can be found at:
- [Tomcat 11.0](https://tomcat.apache.org/tomcat-11.0-doc/)
- [Tomcat 10](https://tomcat.apache.org/tomcat-10.1-doc/)
- [Tomcat 9](https://tomcat.apache.org/tomcat-9.0-doc/)
- [Tomcat 8](https://tomcat.apache.org/tomcat-8.5-doc/)

### Installation

Please see [RUNNING.txt](RUNNING.txt) for more info.

### Licensing

Please see [LICENSE](LICENSE) for more info.

### Support and Mailing List Information

* Free community support is available through the
[tomcat-users](https://tomcat.apache.org/lists.html#tomcat-users) email list and
a dedicated [IRC channel](https://tomcat.apache.org/irc.html) (#tomcat on
Freenode).

* If you want freely available support for running Apache Tomcat, please see the
resources page [here](https://tomcat.apache.org/findhelp.html).

* If you want to be informed about new code releases, bug fixes,
security fixes, general news and information about Apache Tomcat, please
subscribe to the
[tomcat-announce](https://tomcat.apache.org/lists.html#tomcat-announce) email
list.

* If you have a concrete bug report for Apache Tomcat, please see the
instructions for reporting a bug
[here](https://tomcat.apache.org/bugreport.html).

### Contributing

Please see [CONTRIBUTING](CONTRIBUTING.md) for more info.
"
seaswalker/spring-analysis,Java,"# Spring
Spring相关组件阅读笔记.

# 传送门

- [spring-core](https://github.com/seaswalker/Spring/blob/master/note/Spring.md)
- [spring-aop](https://github.com/seaswalker/Spring/blob/master/note/spring-aop.md)
- [spring-context](https://github.com/seaswalker/Spring/blob/master/note/spring-context.md)
- [spring-task](https://github.com/seaswalker/Spring/blob/master/note/spring-task.md)
- [spring-transaction](https://github.com/seaswalker/Spring/blob/master/note/spring-transaction.md)
- [spring-mvc](https://github.com/seaswalker/Spring/blob/master/note/spring-mvc.md)
- [guava-cache](https://github.com/seaswalker/Spring/blob/master/note/guava-cache.md)

"
CarGuo/GSYVideoPlayer,Java,"
![](./img/home_logo.png)

## 支持 [IJKPlayer](https://github.com/Bilibili/ijkplayer) EXOPlayer2、MediaPlayer、AliPlayer，实现了多功能的视频播放器。 (请仔细阅读下方各项说明，大多数问题可在下方找到解答)。

> ## [如果克隆太慢或者图片看不到，可尝试从码云地址下载](https://gitee.com/CarGuo/GSYVideoPlayer)

类型 | 功能
-------- | ---
**缓存**|**边播边缓存，使用了[AndroidVideoCache](https://github.com/danikula/AndroidVideoCache)；ExoPlayer使用SimpleCache。**
**协议**|**h263\4\5、Https、concat、rtsp、hls、rtmp、crypto、mpeg等等。[（ijk模式格式支持）](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/DECODERS.md)**
**滤镜**|**简单滤镜（马赛克、黑白、色彩过滤、高斯、模糊、模糊等等20多种）、动画、（水印、画面多重播放等）。**
**帧图**|**视频第一帧、视频帧截图功能，视频生成gif功能。**
**播放**|**列表播放、列表连续播放、重力旋转与手动旋转、视频本身rotation旋转属性、快播和慢播、网络视频加载速度。**
**画面**|**调整显示比例:默认、16:9、4:3、填充；播放时旋转画面角度（0,90,180,270）；镜像旋转。**
**内核**|**IJKPlayer、EXOPlayer、MediaPlayer、AliPlayer切换、自定义内核**
**布局**|**全屏与非全屏两套布局切换、没有任何操作控件的纯播放支持、弹幕功能、继承自定义任何布局。**
**播放**|**单例播放、多个同时播放、视频列表滑动自动播放、列表切换详情页面无缝播放。**
**窗口**|**小窗口、多窗体下（包括桌面）的小窗口播放。**
**广告**|**片头广告、跳过广告支持、中间插入广告功能。**
**字幕**|**[exo2模式下支持自定增加外挂字幕](https://github.com/CarGuo/GSYVideoPlayer/tree/master/app/src/main/java/com/example/gsyvideoplayer/exosubtitle)。**
**dash**|**exo2 模式支持dash**
**stream**|**支持元数据播放**
**更多**|**暂停前后台切换不黑屏；调整不同清晰度的支持；无缝切换支持；锁定/解锁全屏点击功能；进度条小窗口预览（测试）。**
**自定义**|**可自定义渲染层、自定义管理层、自定义播放层（控制层）、自定义缓存层。**

[![](https://jitpack.io/v/CarGuo/GSYVideoPlayer.svg)](https://jitpack.io/#CarGuo/GSYVideoPlayer)
[![Build Status](https://app.travis-ci.com/CarGuo/GSYVideoPlayer.svg?branch=master)](https://app.travis-ci.com/CarGuo/GSYVideoPlayer)
[![Github Actions](https://github.com/CarGuo/GSYVideoPlayer/workflows/CI/badge.svg)](https://github.com/CarGuo/GSYVideoPlayer/actions)

[]()
[![GitHub stars](https://img.shields.io/github/stars/CarGuo/GSYVideoPlayer.svg)](https://github.com/CarGuo/GSYVideoPlayer/stargazers)
[![GitHub forks](https://img.shields.io/github/forks/CarGuo/GSYVideoPlayer.svg)](https://github.com/CarGuo/GSYVideoPlayer/network)
[![GitHub issues](https://img.shields.io/github/issues/CarGuo/GSYVideoPlayer.svg)](https://github.com/CarGuo/GSYVideoPlayer/issues)
[![GitHub license](https://img.shields.io/github/license/CarGuo/GSYVideoPlayer.svg)](https://github.com/CarGuo/GSYVideoPlayer/blob/master/LICENSE)


| 公众号   | 掘金     |  知乎    |  CSDN   |   简书
|---------|---------|--------- |---------|---------|
| GSYTech  |  [点我](https://juejin.im/user/582aca2ba22b9d006b59ae68/posts)    |   [点我](https://www.zhihu.com/people/carguo)       |   [点我](https://blog.csdn.net/ZuoYueLiang)  |   [点我](https://www.jianshu.com/u/6e613846e1ea)


![](http://img.cdn.guoshuyu.cn/WeChat-Code)

### [--------------Demo APK 下载地址---------------](https://github.com/CarGuo/GSYVideoPlayer/releases)

## 一、使用依赖

#### 7.0 版本开始使用了anndroidx，support版本请看6.x.x，请查看：[--- 版本更新说明 - 入口](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/UPDATE_VERSION.md)。


### 1、Jitpack 引入方法（推荐， JCenter 即将关闭）


#### First、在project下的build.gradle添加

```
allprojects {
    repositories {
		...
        maven { url 'https://jitpack.io' }
        maven { url ""https://maven.aliyun.com/repository/public"" }
    }
}
```

**你可以选择下面三种的其中一种，在module下的build.gradle添加。**

#### A、直接引入
```
 //完整版引入
 implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer:v8.3.5-release-jitpack'


 //是否需要AliPlayer模式
 implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-aliplay:v8.3.5-release-jitpack'
```

#### B、添加java和你想要的so支持：

```
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:v8.3.5-release-jitpack'

 //是否需要ExoPlayer模式
 implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-exo2:v8.3.5-release-jitpack'

 //是否需要AliPlayer模式
 implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-aliplay:v8.3.5-release-jitpack'

 //根据你的需求ijk模式的so
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-arm64:v8.3.5-release-jitpack'
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv7a:v8.3.5-release-jitpack'
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv5:v8.3.5-release-jitpack'
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-x86:v8.3.5-release-jitpack'
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-x64:v8.3.5-release-jitpack'
```

#### C、支持其他格式协议的（mpeg，rtsp, concat、crypto协议）

A、B普通版本支持263/264/265等，对于mpeg编码会有声音无画面情况。
C 引入的so支持mpeg编码和其他补充协议，但是so包相对变大。

```
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:v8.3.5-release-jitpack'

 //是否需要ExoPlayer模式
 implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-exo2:v8.3.5-release-jitpack'

 //是否需要AliPlayer模式
 implementation 'com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-aliplay:v8.3.5-release-jitpack'

 //更多ijk的编码支持
 implementation 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-ex_so:v8.3.5-release-jitpack'

```

#### 代码中的全局切换支持（更多请参看下方文档和demo）

```

//EXOPlayer内核，支持格式更多
PlayerFactory.setPlayManager(Exo2PlayerManager.class);
//系统内核模式
PlayerFactory.setPlayManager(SystemPlayerManager.class);
//ijk内核，默认模式
PlayerFactory.setPlayManager(IjkPlayerManager.class);
//aliplay 内核，默认模式
PlayerFactory.setPlayManager(AliPlayerManager.class);


//exo缓存模式，支持m3u8，只支持exo
CacheFactory.setCacheManager(ExoPlayerCacheManager.class);
//代理缓存模式，支持所有模式，不支持m3u8等，默认
CacheFactory.setCacheManager(ProxyCacheManager.class);



//切换渲染模式
GSYVideoType.setShowType(GSYVideoType.SCREEN_MATCH_FULL);
//默认显示比例
GSYVideoType.SCREEN_TYPE_DEFAULT = 0;
//16:9
GSYVideoType.SCREEN_TYPE_16_9 = 1;
//4:3
GSYVideoType.SCREEN_TYPE_4_3 = 2;
//全屏裁减显示，为了显示正常 CoverImageView 建议使用FrameLayout作为父布局
GSYVideoType.SCREEN_TYPE_FULL = 4;
//全屏拉伸显示，使用这个属性时，surface_container建议使用FrameLayout
GSYVideoType.SCREEN_MATCH_FULL = -4;
/***
 * SCREEN_TYPE_CUSTOM 下自定义显示比例
 * @param screenScaleRatio  高宽比，如 16：9
 */
public static void setScreenScaleRatio(float screenScaleRatio)


//切换绘制模式
GSYVideoType.setRenderType(GSYVideoType.SUFRACE);
GSYVideoType.setRenderType(GSYVideoType.GLSURFACE);
GSYVideoType.setRenderType(GSYVideoType.TEXTURE);


//ijk关闭log
IjkPlayerManager.setLogLevel(IjkMediaPlayer.IJK_LOG_SILENT);


//exoplayer自定义MediaSource
ExoSourceManager.setExoMediaSourceInterceptListener(new ExoMediaSourceInterceptListener() {
    @Override
    public MediaSource getMediaSource(String dataSource, boolean preview, boolean cacheEnable, boolean isLooping, File cacheDir) {
        //可自定义MediaSource
        return null;
    }
});

```

### [--- 更多依赖方式请点击 - ](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/DEPENDENCIES.md)

## 二、其他推荐

### * 我所在的技术社区：[掘金](https://juejin.cn/user/817692379985752/posts)
### * QQ群，有兴趣的欢迎（平时吹水吐槽多，因为人数饱和，就是日常瞎扯）：174815284 。
### * [Flutter Github客户端](https://github.com/CarGuo/gsy_github_app_flutter) 、[React Native Github客户端](https://github.com/CarGuo/GSYGithubAPP) 、 [Weex Github客户端](https://github.com/CarGuo/GSYGithubAPPWeex) 、 [原生 Kotlin Github客户端](https://github.com/CarGuo/GSYGithubAPPKotlin)
### * [RxFFmpeg Android 的音视频编辑工具](https://github.com/microshow/RxFFmpeg)
### * [oarplayer Rtmp播放器,基于MediaCodec与srs-librtmp,不依赖ffmpeg](https://github.com/qingkouwei/oarplayer)



## 三、文档Wiki

文档 | 传送门
-------- | ---
**使用说明**|***[--- 简单使用，快速上手文档](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/USE.md)***
**建议阅读**|***[--- 移动开发者必知的音视频基础知识](https://mp.weixin.qq.com/s/HjSdmAsHuvixCH_EWdvk3Q)***
**项目解析说明**|***[--- 项目解析说明、包含项目架构和解析](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/GSYVIDEO_PLAYER_PROJECT_INFO.md)***
接口文档入口|**[--- 使用说明、接口文档 - 入口](https://github.com/CarGuo/GSYVideoPlayer/wiki)**
**问题集锦入口**|***[--- 问题集锦 - 入口（大部分你遇到的问题都在这里解决） ](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/QUESTION.md)***
编码格式|**[--- IJK so文件配置格式说明](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/DECODERS.md)**
编译自定义SO|**[--- IJKPlayer编译自定义SO - 入口](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/BUILD_SO.md)**
版本更新说明|**[--- 版本更新说明 - 入口](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/UPDATE_VERSION.md)**
compileSdk 太高|--- **[#3514](https://github.com/CarGuo/GSYVideoPlayer/issues/3514)**




![框架图](./img/StructureChart2.jpg)

## 四、运行效果

* ### 1、打开一个播放(旋转、镜像、填充)
<img src=""./img/11.gif"" width=""240px"" height=""426px""/>

* ### 2、列表/详情模式(动画、旋转、小窗体)

<div>
<img src=""./img/22.gif"" width=""240px"" height=""426px""/>
<img src=""./img/33.gif"" width=""240px"" height=""426px""/>
<img src=""./img/44.gif"" width=""240px"" height=""426px""/>
</div>

* ### 3、弹幕
<img src=""./img/55.gif"" width=""240px"" height=""426px""/>

* ### 4、滤镜和GL动画
<img src=""./img/09.gif""/>

* ### 6、背景铺满模糊播放

<img src=""./img/99.png"" width=""426px"" height=""240px""/>

* ### 7、进度条小窗口预览
<img src=""./img/07.gif"" height=""240px""/>

## 五、近期版本

### v8.3.5-release-jitpack (2023-03-15)
* update exo 2.18.4
* fix #3773
* fix #3756
* fix #3683

### v8.3.4-release-jitpack (2022-09-01)
* update exo 2.18.1
* fix #3673
* fix #3677
* fix #3676


### 非 androidx 版本为 6.0.3 以下版本。更多兼容版本请查阅版本更新。

### 更多版本请查阅：[版本更新说明](https://github.com/CarGuo/GSYVideoPlayer/blob/master/doc/UPDATE_VERSION.md)

## 六、关于Issues

```
提问题前可先查阅上方文档和说明，请在Demo中复现问题。

问题说明：

1、说明那个Demo中哪个页面。
2、问题显现和重现步骤。
3、补充问题的视频流url，截图。
4、补充问题的机型，android版本。
```

## 七、混淆

```
-keep class com.shuyu.gsyvideoplayer.video.** { *; }
-dontwarn com.shuyu.gsyvideoplayer.video.**
-keep class com.shuyu.gsyvideoplayer.video.base.** { *; }
-dontwarn com.shuyu.gsyvideoplayer.video.base.**
-keep class com.shuyu.gsyvideoplayer.utils.** { *; }
-dontwarn com.shuyu.gsyvideoplayer.utils.**
-keep class tv.danmaku.ijk.** { *; }
-dontwarn tv.danmaku.ijk.**
-keep class com.google.android.exoplayer2.** {*;}
-keep interface com.google.android.exoplayer2.**

-keep class com.shuyu.alipay.** {*;}
-keep interface com.shuyu.alipay.**

-keep public class * extends android.view.View{
    *** get*();
    void set*(***);
    public <init>(android.content.Context);
    public <init>(android.content.Context, java.lang.Boolean);
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>(android.content.Context, android.util.AttributeSet, int);
}
```

## 温馨提示

#### [如果克隆太慢，可尝试从码云地址下载](https://gitee.com/CarGuo/GSYVideoPlayer)

```
关于自定义和出现问题的请先看问题集锦、demo、issue。

多了解一些音视频的基础常识，对容器，音视频编码，ffmpeg先做一些了解，以及mediacodec等的不同。
尽量少出现为什么别的能播的问题哟。

播放器的可自定义还是挺高的，定制请参考demo，多看源码。现在的功能有些多，demo也在不断的更新。

一些新功能和项目结构也在不断的调整。

欢迎提出问题，谢谢。

```

## 依赖大小参考
建议使用ndk过滤，详细参考 [参考第四条 ： 4、NDK的so支持](http://www.jianshu.com/p/86e4b336c17d)
![](https://ooo.0o0.ooo/2017/06/15/5941f343a39f5.png)


## Star History Chart
[![Star History Chart](https://api.star-history.com/svg?repos=CarGuo/GSYVideoPlayer&type=Date)](https://star-history.com/#CarGuo/GSYVideoPlayer&Date)



## 非常感谢您的支持


#### 撸码不易，如果对你有所帮助，欢迎您的赞赏

![](http://img.cdn.guoshuyu.cn/thanks.jpg)


## License

```
请参看IJKPlayer和AndroidVideoCache相关协议。
项目最开始是从jiecao过来的，改着改着直接重构了。
偶尔有一变量和方法名可能还有点jiaozi的影子，但是基本是一个新项目。
```
"
winterbe/java8-tutorial,Java,"# Modern Java - A Guide to Java 8
_This article was originally posted on [my blog](http://winterbe.com/posts/2014/03/16/java-8-tutorial/)._

> **You should also read my [Java 11 Tutorial](https://winterbe.com/posts/2018/09/24/java-11-tutorial/) (including new language and API features from Java 9, 10 and 11).**

Welcome to my introduction to [Java 8](https://jdk8.java.net/). This tutorial guides you step by step through all new language features. Backed by short and simple code samples you'll learn how to use default interface methods, lambda expressions, method references and repeatable annotations. At the end of the article you'll be familiar with the most recent [API](http://download.java.net/jdk8/docs/api/) changes like streams, functional interfaces, map extensions and the new Date API. **No walls of text, just a bunch of commented code snippets. Enjoy!**

---

<p align=""center"">
 ★★★ Like this project? Leave a star, <a href=""https://twitter.com/winterbe_"">follow on Twitter</a> or <a href=""https://www.paypal.me/winterbe"">donate</a> to support my work. Thanks! ★★★
</p>

---

## Table of Contents

* [Default Methods for Interfaces](#default-methods-for-interfaces)
* [Lambda expressions](#lambda-expressions)
* [Functional Interfaces](#functional-interfaces)
* [Method and Constructor References](#method-and-constructor-references)
* [Lambda Scopes](#lambda-scopes)
  * [Accessing local variables](#accessing-local-variables)
  * [Accessing fields and static variables](#accessing-fields-and-static-variables)
  * [Accessing Default Interface Methods](#accessing-default-interface-methods)
* [Built-in Functional Interfaces](#built-in-functional-interfaces)
  * [Predicates](#predicates)
  * [Functions](#functions)
  * [Suppliers](#suppliers)
  * [Consumers](#consumers)
  * [Comparators](#comparators)
* [Optionals](#optionals)
* [Streams](#streams)
  * [Filter](#filter)
  * [Sorted](#sorted)
  * [Map](#map)
  * [Match](#match)
  * [Count](#count)
  * [Reduce](#reduce)
* [Parallel Streams](#parallel-streams)
  * [Sequential Sort](#sequential-sort)
  * [Parallel Sort](#parallel-sort)
* [Maps](#maps)
* [Date API](#date-api)
  * [Clock](#clock)
  * [Timezones](#timezones)
  * [LocalTime](#localtime)
  * [LocalDate](#localdate)
  * [LocalDateTime](#localdatetime)
* [Annotations](#annotations)
* [Where to go from here?](#where-to-go-from-here)

## Default Methods for Interfaces

Java 8 enables us to add non-abstract method implementations to interfaces by utilizing the `default` keyword. This feature is also known as [virtual extension methods](http://stackoverflow.com/a/24102730). 

Here is our first example:

```java
interface Formula {
    double calculate(int a);

    default double sqrt(int a) {
        return Math.sqrt(a);
    }
}
```

Besides the abstract method `calculate` the interface `Formula` also defines the default method `sqrt`. Concrete classes only have to implement the abstract method `calculate`. The default method `sqrt` can be used out of the box.

```java
Formula formula = new Formula() {
    @Override
    public double calculate(int a) {
        return sqrt(a * 100);
    }
};

formula.calculate(100);     // 100.0
formula.sqrt(16);           // 4.0
```

The formula is implemented as an anonymous object. The code is quite verbose: 6 lines of code for such a simple calculation of `sqrt(a * 100)`. As we'll see in the next section, there's a much nicer way of implementing single method objects in Java 8.


## Lambda expressions

Let's start with a simple example of how to sort a list of strings in prior versions of Java:

```java
List<String> names = Arrays.asList(""peter"", ""anna"", ""mike"", ""xenia"");

Collections.sort(names, new Comparator<String>() {
    @Override
    public int compare(String a, String b) {
        return b.compareTo(a);
    }
});
```

The static utility method `Collections.sort` accepts a list and a comparator in order to sort the elements of the given list. You often find yourself creating anonymous comparators and pass them to the sort method.

Instead of creating anonymous objects all day long, Java 8 comes with a much shorter syntax, **lambda expressions**:

```java
Collections.sort(names, (String a, String b) -> {
    return b.compareTo(a);
});
```

As you can see the code is much shorter and easier to read. But it gets even shorter:

```java
Collections.sort(names, (String a, String b) -> b.compareTo(a));
```

For one line method bodies you can skip both the braces `{}` and the `return` keyword. But it gets even shorter:

```java
names.sort((a, b) -> b.compareTo(a));
```

List now has a `sort` method. Also the java compiler is aware of the parameter types so you can skip them as well. Let's dive deeper into how lambda expressions can be used in the wild.


## Functional Interfaces

How does lambda expressions fit into Java's type system? Each lambda corresponds to a given type, specified by an interface. A so called _functional interface_ must contain **exactly one abstract method** declaration. Each lambda expression of that type will be matched to this abstract method. Since default methods are not abstract you're free to add default methods to your functional interface.

We can use arbitrary interfaces as lambda expressions as long as the interface only contains one abstract method. To ensure that your interface meet the requirements, you should add the `@FunctionalInterface` annotation. The compiler is aware of this annotation and throws a compiler error as soon as you try to add a second abstract method declaration to the interface.

Example:

```java
@FunctionalInterface
interface Converter<F, T> {
    T convert(F from);
}
```

```java
Converter<String, Integer> converter = (from) -> Integer.valueOf(from);
Integer converted = converter.convert(""123"");
System.out.println(converted);    // 123
```

Keep in mind that the code is also valid if the `@FunctionalInterface` annotation would be omitted.


## Method and Constructor References

The above example code can be further simplified by utilizing static method references:

```java
Converter<String, Integer> converter = Integer::valueOf;
Integer converted = converter.convert(""123"");
System.out.println(converted);   // 123
```

Java 8 enables you to pass references of methods or constructors via the `::` keyword. The above example shows how to reference a static method. But we can also reference object methods:

```java
class Something {
    String startsWith(String s) {
        return String.valueOf(s.charAt(0));
    }
}
```

```java
Something something = new Something();
Converter<String, String> converter = something::startsWith;
String converted = converter.convert(""Java"");
System.out.println(converted);    // ""J""
```

Let's see how the `::` keyword works for constructors. First we define an example class with different constructors:

```java
class Person {
    String firstName;
    String lastName;

    Person() {}

    Person(String firstName, String lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
}
```

Next we specify a person factory interface to be used for creating new persons:

```java
interface PersonFactory<P extends Person> {
    P create(String firstName, String lastName);
}
```

Instead of implementing the factory manually, we glue everything together via constructor references:

```java
PersonFactory<Person> personFactory = Person::new;
Person person = personFactory.create(""Peter"", ""Parker"");
```

We create a reference to the Person constructor via `Person::new`. The Java compiler automatically chooses the right constructor by matching the signature of `PersonFactory.create`.

## Lambda Scopes

Accessing outer scope variables from lambda expressions is very similar to anonymous objects. You can access final variables from the local outer scope as well as instance fields and static variables.

### Accessing local variables

We can read final local variables from the outer scope of lambda expressions:

```java
final int num = 1;
Converter<Integer, String> stringConverter =
        (from) -> String.valueOf(from + num);

stringConverter.convert(2);     // 3
```

But different to anonymous objects the variable `num` does not have to be declared final. This code is also valid:

```java
int num = 1;
Converter<Integer, String> stringConverter =
        (from) -> String.valueOf(from + num);

stringConverter.convert(2);     // 3
```

However `num` must be implicitly final for the code to compile. The following code does **not** compile:

```java
int num = 1;
Converter<Integer, String> stringConverter =
        (from) -> String.valueOf(from + num);
num = 3;
```

Writing to `num` from within the lambda expression is also prohibited.

### Accessing fields and static variables

In contrast to local variables, we have both read and write access to instance fields and static variables from within lambda expressions. This behaviour is well known from anonymous objects.

```java
class Lambda4 {
    static int outerStaticNum;
    int outerNum;

    void testScopes() {
        Converter<Integer, String> stringConverter1 = (from) -> {
            outerNum = 23;
            return String.valueOf(from);
        };

        Converter<Integer, String> stringConverter2 = (from) -> {
            outerStaticNum = 72;
            return String.valueOf(from);
        };
    }
}
```

### Accessing Default Interface Methods

Remember the formula example from the first section? Interface `Formula` defines a default method `sqrt` which can be accessed from each formula instance including anonymous objects. This does not work with lambda expressions.

Default methods **cannot** be accessed from within lambda expressions. The following code does not compile:

```java
Formula formula = (a) -> sqrt(a * 100);
```


## Built-in Functional Interfaces

The JDK 1.8 API contains many built-in functional interfaces. Some of them are well known from older versions of Java like `Comparator` or `Runnable`. Those existing interfaces are extended to enable Lambda support via the `@FunctionalInterface` annotation.

But the Java 8 API is also full of new functional interfaces to make your life easier. Some of those new interfaces are well known from the [Google Guava](https://code.google.com/p/guava-libraries/) library. Even if you're familiar with this library you should keep a close eye on how those interfaces are extended by some useful method extensions.

### Predicates

Predicates are boolean-valued functions of one argument. The interface contains various default methods for composing predicates to complex logical terms (and, or, negate)

```java
Predicate<String> predicate = (s) -> s.length() > 0;

predicate.test(""foo"");              // true
predicate.negate().test(""foo"");     // false

Predicate<Boolean> nonNull = Objects::nonNull;
Predicate<Boolean> isNull = Objects::isNull;

Predicate<String> isEmpty = String::isEmpty;
Predicate<String> isNotEmpty = isEmpty.negate();
```

### Functions

Functions accept one argument and produce a result. Default methods can be used to chain multiple functions together (compose, andThen).

```java
Function<String, Integer> toInteger = Integer::valueOf;
Function<String, String> backToString = toInteger.andThen(String::valueOf);

backToString.apply(""123"");     // ""123""
```

### Suppliers

Suppliers produce a result of a given generic type. Unlike Functions, Suppliers don't accept arguments.

```java
Supplier<Person> personSupplier = Person::new;
personSupplier.get();   // new Person
```

### Consumers

Consumers represent operations to be performed on a single input argument.

```java
Consumer<Person> greeter = (p) -> System.out.println(""Hello, "" + p.firstName);
greeter.accept(new Person(""Luke"", ""Skywalker""));
```

### Comparators

Comparators are well known from older versions of Java. Java 8 adds various default methods to the interface.

```java
Comparator<Person> comparator = (p1, p2) -> p1.firstName.compareTo(p2.firstName);

Person p1 = new Person(""John"", ""Doe"");
Person p2 = new Person(""Alice"", ""Wonderland"");

comparator.compare(p1, p2);             // > 0
comparator.reversed().compare(p1, p2);  // < 0
```

## Optionals

Optionals are not functional interfaces, but nifty utilities to prevent `NullPointerException`. It's an important concept for the next section, so let's have a quick look at how Optionals work.

Optional is a simple container for a value which may be null or non-null. Think of a method which may return a non-null result but sometimes return nothing. Instead of returning `null` you return an `Optional` in Java 8.

```java
Optional<String> optional = Optional.of(""bam"");

optional.isPresent();           // true
optional.get();                 // ""bam""
optional.orElse(""fallback"");    // ""bam""

optional.ifPresent((s) -> System.out.println(s.charAt(0)));     // ""b""
```

## Streams

A `java.util.Stream` represents a sequence of elements on which one or more operations can be performed. Stream operations are either _intermediate_ or _terminal_. While terminal operations return a result of a certain type, intermediate operations return the stream itself so you can chain multiple method calls in a row. Streams are created on a source, e.g. a `java.util.Collection` like lists or sets (maps are not supported). Stream operations can either be executed sequentially or parallely.

> Streams are extremely powerful, so I wrote a separate [Java 8 Streams Tutorial](http://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/). **You should also check out [Sequency](https://github.com/winterbe/sequency) as a similiar library for the web.**

Let's first look how sequential streams work. First we create a sample source in form of a list of strings:

```java
List<String> stringCollection = new ArrayList<>();
stringCollection.add(""ddd2"");
stringCollection.add(""aaa2"");
stringCollection.add(""bbb1"");
stringCollection.add(""aaa1"");
stringCollection.add(""bbb3"");
stringCollection.add(""ccc"");
stringCollection.add(""bbb2"");
stringCollection.add(""ddd1"");
```

Collections in Java 8 are extended so you can simply create streams either by calling `Collection.stream()` or `Collection.parallelStream()`. The following sections explain the most common stream operations.

### Filter

Filter accepts a predicate to filter all elements of the stream. This operation is _intermediate_ which enables us to call another stream operation (`forEach`) on the result. ForEach accepts a consumer to be executed for each element in the filtered stream. ForEach is a terminal operation. It's `void`, so we cannot call another stream operation.

```java
stringCollection
    .stream()
    .filter((s) -> s.startsWith(""a""))
    .forEach(System.out::println);

// ""aaa2"", ""aaa1""
```

### Sorted

Sorted is an _intermediate_ operation which returns a sorted view of the stream. The elements are sorted in natural order unless you pass a custom `Comparator`.

```java
stringCollection
    .stream()
    .sorted()
    .filter((s) -> s.startsWith(""a""))
    .forEach(System.out::println);

// ""aaa1"", ""aaa2""
```

Keep in mind that `sorted` does only create a sorted view of the stream without manipulating the ordering of the backed collection. The ordering of `stringCollection` is untouched:

```java
System.out.println(stringCollection);
// ddd2, aaa2, bbb1, aaa1, bbb3, ccc, bbb2, ddd1
```

### Map

The _intermediate_ operation `map` converts each element into another object via the given function. The following example converts each string into an upper-cased string. But you can also use `map` to transform each object into another type. The generic type of the resulting stream depends on the generic type of the function you pass to `map`.

```java
stringCollection
    .stream()
    .map(String::toUpperCase)
    .sorted((a, b) -> b.compareTo(a))
    .forEach(System.out::println);

// ""DDD2"", ""DDD1"", ""CCC"", ""BBB3"", ""BBB2"", ""AAA2"", ""AAA1""
```

### Match

Various matching operations can be used to check whether a certain predicate matches the stream. All of those operations are _terminal_ and return a boolean result.

```java
boolean anyStartsWithA =
    stringCollection
        .stream()
        .anyMatch((s) -> s.startsWith(""a""));

System.out.println(anyStartsWithA);      // true

boolean allStartsWithA =
    stringCollection
        .stream()
        .allMatch((s) -> s.startsWith(""a""));

System.out.println(allStartsWithA);      // false

boolean noneStartsWithZ =
    stringCollection
        .stream()
        .noneMatch((s) -> s.startsWith(""z""));

System.out.println(noneStartsWithZ);      // true
```

#### Count

Count is a _terminal_ operation returning the number of elements in the stream as a `long`.

```java
long startsWithB =
    stringCollection
        .stream()
        .filter((s) -> s.startsWith(""b""))
        .count();

System.out.println(startsWithB);    // 3
```


### Reduce

This _terminal_ operation performs a reduction on the elements of the stream with the given function. The result is an `Optional` holding the reduced value.

```java
Optional<String> reduced =
    stringCollection
        .stream()
        .sorted()
        .reduce((s1, s2) -> s1 + ""#"" + s2);

reduced.ifPresent(System.out::println);
// ""aaa1#aaa2#bbb1#bbb2#bbb3#ccc#ddd1#ddd2""
```

## Parallel Streams

As mentioned above streams can be either sequential or parallel. Operations on sequential streams are performed on a single thread while operations on parallel streams are performed concurrently on multiple threads.

The following example demonstrates how easy it is to increase the performance by using parallel streams.

First we create a large list of unique elements:

```java
int max = 1000000;
List<String> values = new ArrayList<>(max);
for (int i = 0; i < max; i++) {
    UUID uuid = UUID.randomUUID();
    values.add(uuid.toString());
}
```

Now we measure the time it takes to sort a stream of this collection.

### Sequential Sort

```java
long t0 = System.nanoTime();

long count = values.stream().sorted().count();
System.out.println(count);

long t1 = System.nanoTime();

long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0);
System.out.println(String.format(""sequential sort took: %d ms"", millis));

// sequential sort took: 899 ms
```

### Parallel Sort

```java
long t0 = System.nanoTime();

long count = values.parallelStream().sorted().count();
System.out.println(count);

long t1 = System.nanoTime();

long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0);
System.out.println(String.format(""parallel sort took: %d ms"", millis));

// parallel sort took: 472 ms
```

As you can see both code snippets are almost identical but the parallel sort is roughly 50% faster. All you have to do is change `stream()` to `parallelStream()`.

## Maps

As already mentioned maps do not directly support streams. There's no `stream()` method available on the `Map` interface itself, however you can create specialized streams upon the keys, values or entries of a map via `map.keySet().stream()`, `map.values().stream()` and `map.entrySet().stream()`. 

Furthermore maps support various new and useful methods for doing common tasks.

```java
Map<Integer, String> map = new HashMap<>();

for (int i = 0; i < 10; i++) {
    map.putIfAbsent(i, ""val"" + i);
}

map.forEach((id, val) -> System.out.println(val));
```

The above code should be self-explaining: `putIfAbsent` prevents us from writing additional if null checks; `forEach` accepts a consumer to perform operations for each value of the map.

This example shows how to compute code on the map by utilizing functions:

```java
map.computeIfPresent(3, (num, val) -> val + num);
map.get(3);             // val33

map.computeIfPresent(9, (num, val) -> null);
map.containsKey(9);     // false

map.computeIfAbsent(23, num -> ""val"" + num);
map.containsKey(23);    // true

map.computeIfAbsent(3, num -> ""bam"");
map.get(3);             // val33
```

Next, we learn how to remove entries for a given key, only if it's currently mapped to a given value:

```java
map.remove(3, ""val3"");
map.get(3);             // val33

map.remove(3, ""val33"");
map.get(3);             // null
```

Another helpful method:

```java
map.getOrDefault(42, ""not found"");  // not found
```

Merging entries of a map is quite easy:

```java
map.merge(9, ""val9"", (value, newValue) -> value.concat(newValue));
map.get(9);             // val9

map.merge(9, ""concat"", (value, newValue) -> value.concat(newValue));
map.get(9);             // val9concat
```

Merge either put the key/value into the map if no entry for the key exists, or the merging function will be called to change the existing value.


## Date API

Java 8 contains a brand new date and time API under the package `java.time`. The new Date API is comparable with the [Joda-Time](http://www.joda.org/joda-time/) library, however it's [not the same](http://blog.joda.org/2009/11/why-jsr-310-isn-joda-time_4941.html). The following examples cover the most important parts of this new API.

### Clock

Clock provides access to the current date and time. Clocks are aware of a timezone and may be used instead of `System.currentTimeMillis()` to retrieve the current time in milliseconds since Unix EPOCH. Such an instantaneous point on the time-line is also represented by the class `Instant`. Instants can be used to create legacy `java.util.Date` objects.

```java
Clock clock = Clock.systemDefaultZone();
long millis = clock.millis();

Instant instant = clock.instant();
Date legacyDate = Date.from(instant);   // legacy java.util.Date
```

### Timezones

Timezones are represented by a `ZoneId`. They can easily be accessed via static factory methods. Timezones define the offsets which are important to convert between instants and local dates and times.

```java
System.out.println(ZoneId.getAvailableZoneIds());
// prints all available timezone ids

ZoneId zone1 = ZoneId.of(""Europe/Berlin"");
ZoneId zone2 = ZoneId.of(""Brazil/East"");
System.out.println(zone1.getRules());
System.out.println(zone2.getRules());

// ZoneRules[currentStandardOffset=+01:00]
// ZoneRules[currentStandardOffset=-03:00]
```

### LocalTime

LocalTime represents a time without a timezone, e.g. 10pm or 17:30:15. The following example creates two local times for the timezones defined above. Then we compare both times and calculate the difference in hours and minutes between both times.

```java
LocalTime now1 = LocalTime.now(zone1);
LocalTime now2 = LocalTime.now(zone2);

System.out.println(now1.isBefore(now2));  // false

long hoursBetween = ChronoUnit.HOURS.between(now1, now2);
long minutesBetween = ChronoUnit.MINUTES.between(now1, now2);

System.out.println(hoursBetween);       // -3
System.out.println(minutesBetween);     // -239
```

LocalTime comes with various factory methods to simplify the creation of new instances, including parsing of time strings.

```java
LocalTime late = LocalTime.of(23, 59, 59);
System.out.println(late);       // 23:59:59

DateTimeFormatter germanFormatter =
    DateTimeFormatter
        .ofLocalizedTime(FormatStyle.SHORT)
        .withLocale(Locale.GERMAN);

LocalTime leetTime = LocalTime.parse(""13:37"", germanFormatter);
System.out.println(leetTime);   // 13:37
```

### LocalDate

LocalDate represents a distinct date, e.g. 2014-03-11. It's immutable and works exactly analog to LocalTime. The sample demonstrates how to calculate new dates by adding or subtracting days, months or years. Keep in mind that each manipulation returns a new instance.

```java
LocalDate today = LocalDate.now();
LocalDate tomorrow = today.plus(1, ChronoUnit.DAYS);
LocalDate yesterday = tomorrow.minusDays(2);

LocalDate independenceDay = LocalDate.of(2014, Month.JULY, 4);
DayOfWeek dayOfWeek = independenceDay.getDayOfWeek();
System.out.println(dayOfWeek);    // FRIDAY
```

Parsing a LocalDate from a string is just as simple as parsing a LocalTime:

```java
DateTimeFormatter germanFormatter =
    DateTimeFormatter
        .ofLocalizedDate(FormatStyle.MEDIUM)
        .withLocale(Locale.GERMAN);

LocalDate xmas = LocalDate.parse(""24.12.2014"", germanFormatter);
System.out.println(xmas);   // 2014-12-24
```

### LocalDateTime

LocalDateTime represents a date-time. It combines date and time as seen in the above sections into one instance. `LocalDateTime` is immutable and works similar to LocalTime and LocalDate. We can utilize methods for retrieving certain fields from a date-time:

```java
LocalDateTime sylvester = LocalDateTime.of(2014, Month.DECEMBER, 31, 23, 59, 59);

DayOfWeek dayOfWeek = sylvester.getDayOfWeek();
System.out.println(dayOfWeek);      // WEDNESDAY

Month month = sylvester.getMonth();
System.out.println(month);          // DECEMBER

long minuteOfDay = sylvester.getLong(ChronoField.MINUTE_OF_DAY);
System.out.println(minuteOfDay);    // 1439
```

With the additional information of a timezone it can be converted to an instant. Instants can easily be converted to legacy dates of type `java.util.Date`.

```java
Instant instant = sylvester
        .atZone(ZoneId.systemDefault())
        .toInstant();

Date legacyDate = Date.from(instant);
System.out.println(legacyDate);     // Wed Dec 31 23:59:59 CET 2014
```

Formatting date-times works just like formatting dates or times. Instead of using pre-defined formats we can create formatters from custom patterns.

```java
DateTimeFormatter formatter =
    DateTimeFormatter
        .ofPattern(""MMM dd, yyyy - HH:mm"");

LocalDateTime parsed = LocalDateTime.parse(""Nov 03, 2014 - 07:13"", formatter);
String string = formatter.format(parsed);
System.out.println(string);     // Nov 03, 2014 - 07:13
```

Unlike `java.text.NumberFormat` the new `DateTimeFormatter` is immutable and **thread-safe**.

For details on the pattern syntax read [here](https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html).


## Annotations

Annotations in Java 8 are repeatable. Let's dive directly into an example to figure that out.

First, we define a wrapper annotation which holds an array of the actual annotations:

```java
@interface Hints {
    Hint[] value();
}

@Repeatable(Hints.class)
@interface Hint {
    String value();
}
```
Java 8 enables us to use multiple annotations of the same type by declaring the annotation `@Repeatable`.

### Variant 1: Using the container annotation (old school)

```java
@Hints({@Hint(""hint1""), @Hint(""hint2"")})
class Person {}
```

### Variant 2: Using repeatable annotations (new school)

```java
@Hint(""hint1"")
@Hint(""hint2"")
class Person {}
```

Using variant 2 the java compiler implicitly sets up the `@Hints` annotation under the hood. That's important for reading annotation information via reflection.

```java
Hint hint = Person.class.getAnnotation(Hint.class);
System.out.println(hint);                   // null

Hints hints1 = Person.class.getAnnotation(Hints.class);
System.out.println(hints1.value().length);  // 2

Hint[] hints2 = Person.class.getAnnotationsByType(Hint.class);
System.out.println(hints2.length);          // 2
```

Although we never declared the `@Hints` annotation on the `Person` class, it's still readable via `getAnnotation(Hints.class)`. However, the more convenient method is `getAnnotationsByType` which grants direct access to all annotated `@Hint` annotations.


Furthermore the usage of annotations in Java 8 is expanded to two new targets:

```java
@Target({ElementType.TYPE_PARAMETER, ElementType.TYPE_USE})
@interface MyAnnotation {}
```

## Where to go from here?

My programming guide to Java 8 ends here. If you want to learn more about all the new classes and features of the JDK 8 API, check out my [JDK8 API Explorer](http://winterbe.com/projects/java8-explorer/). It helps you figuring out all the new classes and hidden gems of JDK 8, like `Arrays.parallelSort`, `StampedLock` and `CompletableFuture` - just to name a few.

I've also published a bunch of follow-up articles on my [blog](http://winterbe.com) that might be interesting to you:

- [Java 8 Stream Tutorial](http://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/)
- [Java 8 Nashorn Tutorial](http://winterbe.com/posts/2014/04/05/java8-nashorn-tutorial/)
- [Java 8 Concurrency Tutorial: Threads and Executors](http://winterbe.com/posts/2015/04/07/java8-concurrency-tutorial-thread-executor-examples/)
- [Java 8 Concurrency Tutorial: Synchronization and Locks](http://winterbe.com/posts/2015/04/30/java8-concurrency-tutorial-synchronized-locks-examples/)
- [Java 8 Concurrency Tutorial: Atomic Variables and ConcurrentMap](http://winterbe.com/posts/2015/05/22/java8-concurrency-tutorial-atomic-concurrent-map-examples/)
- [Java 8 API by Example: Strings, Numbers, Math and Files](http://winterbe.com/posts/2015/03/25/java8-examples-string-number-math-files/)
- [Avoid Null Checks in Java 8](http://winterbe.com/posts/2015/03/15/avoid-null-checks-in-java/)
- [Fixing Java 8 Stream Gotchas with IntelliJ IDEA](http://winterbe.com/posts/2015/03/05/fixing-java-8-stream-gotchas-with-intellij-idea/)
- [Using Backbone.js with Java 8 Nashorn](http://winterbe.com/posts/2014/04/07/using-backbonejs-with-nashorn/)

You should [follow me on Twitter](https://twitter.com/winterbe_). Thanks for reading!
"
MithunTechnologiesDevOps/java-web-app-docker,Java,
LMAX-Exchange/disruptor,Java,"= LMAX Disruptor

image:https://github.com/LMAX-Exchange/disruptor/workflows/Java%20CI%20with%20Gradle/badge.svg[Java CI with Gradle,link=https://github.com/LMAX-Exchange/disruptor/actions/workflows/gradle-build.yml]
image:https://github.com/LMAX-Exchange/disruptor/workflows/CodeQL/badge.svg[CodeQL,link=https://github.com/LMAX-Exchange/disruptor/actions/workflows/codeql-analysis.yml]
image:https://img.shields.io/github/license/LMAX-Exchange/disruptor[License,link=https://github.com/LMAX-Exchange/disruptor/blob/master/LICENCE.txt]

A High Performance Inter-Thread Messaging Library

== Maintainer

LMAX Development Team

== Support

 - Open a ticket in GitHub https://github.com/LMAX-Exchange/disruptor/issues[issue tracker]
 - https://groups.google.com/group/lmax-disruptor[Google Group]

== Documentation

* https://lmax-exchange.github.io/disruptor/[Overview]
* https://lmax-exchange.github.io/disruptor/user-guide/index.html[User Guide]
* https://lmax-exchange.github.io/disruptor/javadoc/com.lmax.disruptor/module-summary.html[API Documentation]
* https://lmax-exchange.github.io/disruptor/developer-guide/index.html[Developer Guide]
* https://github.com/LMAX-Exchange/disruptor/wiki/Frequently-Asked-Questions[FAQ]


"
bazelbuild/bazel,Java,"# [Bazel](https://bazel.build)

*{Fast, Correct} - Choose two*

Build and test software of any size, quickly and reliably.

* **Speed up your builds and tests**:
  Bazel rebuilds only what is necessary.
  With advanced local and distributed caching, optimized dependency analysis and
  parallel execution, you get fast and incremental builds.

* **One tool, multiple languages**: Build and test Java, C++, Android, iOS, Go,
  and a wide variety of other language platforms. Bazel runs on Windows, macOS,
  and Linux.

* **Scalable**: Bazel helps you scale your organization, codebase, and
  continuous integration solution. It handles codebases of any size, in multiple
  repositories or a huge monorepo.

* **Extensible to your needs**: Easily add support for new languages and
  platforms with Bazel's familiar extension language. Share and re-use language
  rules written by the growing Bazel community.

## Getting Started

  * [Install Bazel](https://bazel.build/install)
  * [Get started with Bazel](https://bazel.build/start)
  * Follow our tutorials:

    - [Build C++](https://bazel.build/tutorials/cpp)
    - [Build Java](https://bazel.build/tutorials/java)
    - [Android](https://bazel.build/tutorials/android-app)
    - [iOS](https://bazel.build/tutorials/ios-app)

## Documentation

  * [Bazel command line](https://bazel.build/docs/user-manual)
  * [Rule reference](https://bazel.build/reference/be/overview)
  * [Use the query command](https://bazel.build/reference/query)
  * [Extend Bazel](https://bazel.build/rules/concepts)
  * [Write tests](https://bazel.build/reference/test-encyclopedia)
  * [Roadmap](https://bazel.build/community/roadmaps)
  * [Who is using Bazel?](https://bazel.build/community/users)

## Reporting a Vulnerability

To report a security issue, please email security@bazel.build with a description
of the issue, the steps you took to create the issue, affected versions, and, if
known, mitigations for the issue. Our vulnerability management team will respond
within 3 working days of your email. If the issue is confirmed as a
vulnerability, we will open a Security Advisory. This project follows a 90 day
disclosure timeline.

## Contributing to Bazel

See [CONTRIBUTING.md](CONTRIBUTING.md)

[![Build status](https://badge.buildkite.com/1fd282f8ad98c3fb10758a821e5313576356709dd7d11e9618.svg?status=master)](https://buildkite.com/bazel/bazel-bazel)
"
SERG-Delft/mooc-software-testing,Java,"# Software Testing MOOC

This repository contains the code examples and exercises of
TU Delft's edX MOOC on Software Testing.

## License

This repository is licensed under CC BY-NC-SA.
"
dropwizard/dropwizard,Java,"Dropwizard
==========
[![Build](https://github.com/dropwizard/dropwizard/workflows/Java%20CI/badge.svg)](https://github.com/dropwizard/dropwizard/actions?query=workflow%3A%22Java+CI%22)
[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=dropwizard_dropwizard&metric=alert_status)](https://sonarcloud.io/dashboard?id=dropwizard_dropwizard)
[![Maven Central](https://maven-badges.herokuapp.com/maven-central/io.dropwizard/dropwizard-core/badge.svg)](https://maven-badges.herokuapp.com/maven-central/io.dropwizard/dropwizard-core/)
[![Javadocs](https://javadoc.io/badge/io.dropwizard/dropwizard-project.svg?color=brightgreen)](https://javadoc.io/doc/io.dropwizard/dropwizard-project)
[![Documentation Status](https://readthedocs.org/projects/dropwizard/badge/?version=stable)](https://www.dropwizard.io/en/stable/?badge=stable)
[![Maintainability](https://api.codeclimate.com/v1/badges/11a16ea08c8b5499e2b9/maintainability)](https://codeclimate.com/github/dropwizard/dropwizard/maintainability)
[![Reproducible Builds](https://img.shields.io/badge/Reproducible_Builds-ok-green?labelColor=blue)](https://github.com/jvm-repo-rebuild/reproducible-central#io.dropwizard:dropwizard-core)
[![Contribute with Gitpod](https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod)](https://gitpod.io/#https://github.com/dropwizard/dropwizard)

*Dropwizard is a sneaky way of making fast Java web applications.*

It's a little bit of opinionated glue code which bangs together a set of libraries which have
historically not sucked:

* [Jetty](http://www.eclipse.org/jetty/) for HTTP servin'.
* [Jersey](https://jersey.github.io/) for REST modelin'.
* [Jackson](https://github.com/FasterXML/jackson) for JSON parsin' and generatin'.
* [Logback](http://logback.qos.ch/) for loggin'.
* [Hibernate Validator](http://hibernate.org/validator/) for validatin'.
* [Metrics](http://metrics.dropwizard.io) for figurin' out what your application is doin' in production.
* [JDBI](http://www.jdbi.org) and [Hibernate](http://www.hibernate.org/orm/) for databasin'.
* [Liquibase](http://www.liquibase.org/) for migratin'.

Read more at [dropwizard.io](http://www.dropwizard.io).

Want to contribute to Dropwizard?
---
Before working on the code, if you plan to contribute changes, please read the following [CONTRIBUTING](CONTRIBUTING.md) document.

Need help or found an issue?
---
When reporting an issue through the [issue tracker](https://github.com/dropwizard/dropwizard/issues?state=open)
on GitHub or sending an email to the
[Dropwizard User Google Group](https://groups.google.com/forum/#!forum/dropwizard-user)
mailing list, please use the following guidelines:

* Check existing issues to see if it has been addressed already
* The version of Dropwizard you are using
* A short description of the issue you are experiencing and the expected outcome
* Description of how someone else can reproduce the problem
* Paste error output or logs in your issue or in a Gist. If pasting them in the GitHub
issue, wrap it in three backticks: ```  so that it renders nicely
* Write a unit test to show the issue!

Sponsors
--------

Dropwizard is generously supported by some companies with licenses and free accounts for their products.

### JetBrains

![JetBrains](docs/source/about/jetbrains.png)

[JetBrains](https://www.jetbrains.com/) supports our open source project by sponsoring some [All Products Packs](https://www.jetbrains.com/products.html) within their [Free Open Source License](https://www.jetbrains.com/buy/opensource/) program.
"
hibernate/hibernate-orm,Java,"Hibernate ORM is a library providing Object/Relational Mapping (ORM) support
to applications, libraries, and frameworks.

It also provides an implementation of the JPA specification, which is the standard Java specification for ORM.

This is the repository of its source code; see https://hibernate.org/orm/[Hibernate.org] for additional information.

image:https://ci.hibernate.org/job/hibernate-orm-pipeline/job/main/badge/icon[Build Status,link=https://ci.hibernate.org/job/hibernate-orm-pipeline/job/main/]
image:https://img.shields.io/badge/Revved%20up%20by-Gradle%20Enterprise-06A0CE?logo=Gradle&labelColor=02303A[link=https://ge.hibernate.org/scans]

== Continuous Integration

Hibernate uses both https://jenkins-ci.org[Jenkins] and https://github.com/features/actions[GitHub Actions]
for its CI needs. See

* https://ci.hibernate.org/view/ORM/[Jenkins Jobs]
* https://github.com/hibernate/hibernate-orm/actions[GitHub Actions Jobs]

== Building from sources

The build requires at least Java 11 JDK.

Hibernate uses https://gradle.org[Gradle] as its build tool. See the _Gradle Primer_ section below if you are new to
Gradle.

Contributors should read the link:CONTRIBUTING.md[Contributing Guide].

See the guides for setting up https://hibernate.org/community/contribute/intellij-idea/[IntelliJ] or
https://hibernate.org/community/contribute/eclipse-ide/[Eclipse] as your development environment.

== Gradle Primer

The Gradle build tool has amazing documentation.  2 in particular that are indispensable:

* https://docs.gradle.org/current/userguide/userguide_single.html[Gradle User Guide] is a typical user guide in that
it follows a topical approach to describing all of the capabilities of Gradle.
* https://docs.gradle.org/current/dsl/index.html[Gradle DSL Guide] is unique and excellent in quickly
getting up to speed on certain aspects of Gradle.

We will cover the basics developers and contributors new to Gradle need to know to get productive quickly.

NOTE: The project defines a https://docs.gradle.org/current/userguide/gradle_wrapper.html[Gradle Wrapper].
The rest of the section will assume execution through the wrapper.

=== Executing Tasks

Gradle uses the concept of build tasks (equivalent to Ant targets or Maven phases/goals). You can get a list of
available tasks via 

----
gradle tasks
----

To execute a task across all modules, simply perform that task from the root directory. Gradle will visit each
sub-project and execute that task if the sub-project defines it. To execute a task in a specific module you can
either:

. `cd` into that module directory and execute the task
. name the ""task path"". For example, to run the tests for the _hibernate-core_ module from the root directory
you could say `gradle hibernate-core:test`

=== Common tasks

The common tasks you might use in building Hibernate include:

* _build_ - Assembles (jars) and tests this project
* _compile_ - Performs all compilation tasks including staging resources from both main and test
* _jar_ - Generates a jar archive with all the compiled classes
* _test_ - Runs the tests
* _publishToMavenLocal_ - Installs the project jar to your local maven cache (aka ~/.m2/repository). Note that Gradle
never uses this, but it can be useful for testing your build with other local Maven-based builds.
* _clean_ - Cleans the build directory

== Testing and databases

Testing against a specific database can be achieved in 2 different ways:

=== Using the ""Matrix Testing Plugin"" for Gradle.

Coming later…

=== Using ""profiles""

The Hibernate build defines several database testing ""profiles"" in `databases.gradle`. These
profiles can be activated by name using the `db` build property which can be passed either as
a JVM system prop (`-D`) or as a Gradle project property (`-P`). Examples below use the Gradle
project property approach.

----
gradle clean build -Pdb=pgsql
----

To run a test from your IDE, you need to ensure the property expansions happen.
Use the following command:

----
gradle clean compile -Pdb=pgsql
----

__NOTE: If you are running tests against a JDBC driver that is not available via Maven central be sure to
add these drivers to your local Maven repo cache (~/.m2/repository) or (better) add it to a personal Maven repo server__

=== Running database-specific tests from the IDE using ""profiles""

You can run any test on any particular database that is configured in a `databases.gradle` profile.

All you have to do is run the following command:

----
./gradlew setDataBase -Pdb=pgsql
----

or you can use the shortcut version: 

----
./gradlew sDB -Pdb=pgsql
----

You can do this from the module which you are interested in testing or from the `hibernate-orm` root folder.

Afterward, just pick any test from the IDE and run it as usual. Hibernate will pick the database configuration from the `hibernate.properties`
file that was set up by the `setDataBase` Gradle task.

=== Starting test databases locally as docker containers

You don't have to install all databases locally to be able to test against them in case you have docker available.
The script `docker_db.sh` allows you to start a pre-configured database which can be used for testing.

All you have to do is run the following command:

----
./docker_db.sh postgresql
----

omitting the argument will print a list of possible options.

When the database is properly started, you can run tests with special profiles that are suffixed with `_ci`
e.g. `pgsql_ci` for PostgreSQL. By using the system property `dbHost` you can configure the IP address of your docker host.

The command for running tests could look like the following:

----
./gradlew test -Pdb=pgsql_ci ""-DdbHost=192.168.99.100""
----

The following table illustrates a list of commands for various databases that can be tested locally.

|===
|Database |`docker_db.sh` |Gradle command

|H2
|-
|`./gradlew test -Pdb=h2`

|HSQLDB
|-
|`./gradlew test -Pdb=hsqldb`

|Apache Derby
|-
|`./gradlew test -Pdb=derby`

|MySQL
|`./docker_db.sh mysql`
|`./gradlew test -Pdb=mysql_ci`

|MariaDB
|`./docker_db.sh mariadb`
|`./gradlew test -Pdb=mariadb_ci`

|PostgreSQL
|`./docker_db.sh postgresql`
|`./gradlew test -Pdb=pgsql_ci`

|EnterpriseDB
|`./docker_db.sh edb`
|`./gradlew test -Pdb=edb_ci`

|Oracle XE
|`./docker_db.sh oracle`
|`./gradlew test -Pdb=oracle_ci`

|DB2
|`./docker_db.sh db2`
|`./gradlew test -Pdb=db2_ci`

|SQL Server
|`./docker_db.sh mssql`
|`./gradlew test -Pdb=mssql_ci`

|Sybase ASE (jTDS)
|`./docker_db.sh sybase`
|`./gradlew test -Pdb=sybase_ci`

|Sybase ASE (jConnect)
|`./docker_db.sh sybase`
|`./gradlew test -Pdb=sybase_jconn_ci`

|SAP HANA
|`./docker_db.sh hana`
|`./gradlew test -Pdb=hana_ci`

|CockroachDB
|`./docker_db.sh cockroachdb`
|`./gradlew test -Pdb=cockroachdb`
|===

To stop a container started by `docker`, use the command

[source]
----
docker stop $container_name
----

NOTE:: Substitute `podman` command for `docker` if using `podman`

E.g., to stop the mariadb container

[source]
----
docker stop mariadb
----
"
alibaba/canal,Java,"[![build status](https://travis-ci.com/alibaba/canal.svg?branch=master)](https://travis-ci.com/alibaba/canal)
[![codecov](https://codecov.io/gh/alibaba/canal/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/canal)
![maven](https://img.shields.io/maven-central/v/com.alibaba.otter/canal.svg)
![license](https://img.shields.io/github/license/alibaba/canal.svg)
[![average time to resolve an issue](http://isitmaintained.com/badge/resolution/alibaba/canal.svg)](http://isitmaintained.com/project/alibaba/canal ""average time to resolve an issue"")
[![percentage of issues still open](http://isitmaintained.com/badge/open/alibaba/canal.svg)](http://isitmaintained.com/project/alibaba/canal ""percentage of issues still open"")
[![Leaderboard](https://img.shields.io/badge/Canal-%E6%9F%A5%E7%9C%8B%E8%B4%A1%E7%8C%AE%E6%8E%92%E8%A1%8C%E6%A6%9C-orange)](https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=canal)


## 简介

![](https://img-blog.csdnimg.cn/20191104101735947.png)

**canal [kə'næl]**，译意为水道/管道/沟渠，主要用途是基于 MySQL 数据库增量日志解析，提供增量数据订阅和消费

早期阿里巴巴因为杭州和美国双机房部署，存在跨机房同步的业务需求，实现方式主要是基于业务 trigger 获取增量变更。从 2010 年开始，业务逐步尝试数据库日志解析获取增量变更进行同步，由此衍生出了大量的数据库增量订阅和消费业务。

基于日志增量订阅和消费的业务包括
- 数据库镜像
- 数据库实时备份
- 索引构建和实时维护(拆分异构索引、倒排索引等)
- 业务 cache 刷新
- 带业务逻辑的增量数据处理

当前的 canal 支持源端 MySQL 版本包括 5.1.x , 5.5.x , 5.6.x , 5.7.x , 8.0.x

## 工作原理

#### MySQL主备复制原理
![](http://dl.iteye.com/upload/attachment/0080/3086/468c1a14-e7ad-3290-9d3d-44ac501a7227.jpg)

- MySQL master 将数据变更写入二进制日志( binary log, 其中记录叫做二进制日志事件binary log events，可以通过 show binlog events 进行查看)
- MySQL slave 将 master 的 binary log events 拷贝到它的中继日志(relay log)
- MySQL slave 重放 relay log 中事件，将数据变更反映它自己的数据

#### canal 工作原理

- canal 模拟 MySQL slave 的交互协议，伪装自己为 MySQL slave ，向 MySQL master 发送dump 协议
- MySQL master 收到 dump 请求，开始推送 binary log 给 slave (即 canal )
- canal 解析 binary log 对象(原始为 byte 流)

## 重要版本更新说明

1. canal 1.1.x 版本（[release_note](https://github.com/alibaba/canal/releases)）,性能与功能层面有较大的突破,重要提升包括:

- 整体性能测试&优化,提升了150%. #726 参考: [Performance](https://github.com/alibaba/canal/wiki/Performance)
- 原生支持prometheus监控 #765 [Prometheus QuickStart](https://github.com/alibaba/canal/wiki/Prometheus-QuickStart)
- 原生支持kafka消息投递 #695 [Canal Kafka/RocketMQ QuickStart](https://github.com/alibaba/canal/wiki/Canal-Kafka-RocketMQ-QuickStart)
- 原生支持aliyun rds的binlog订阅 (解决自动主备切换/oss binlog离线解析) 参考: [Aliyun RDS QuickStart](https://github.com/alibaba/canal/wiki/aliyun-RDS-QuickStart)
- 原生支持docker镜像 #801 参考: [Docker QuickStart](https://github.com/alibaba/canal/wiki/Docker-QuickStart)

2.  canal 1.1.4版本，迎来最重要的WebUI能力，引入canal-admin工程，支持面向WebUI的canal动态管理能力，支持配置、任务、日志等在线白屏运维能力，具体文档：[Canal Admin Guide](https://github.com/alibaba/canal/wiki/Canal-Admin-Guide)

## 文档

- [Home](https://github.com/alibaba/canal/wiki/Home)
- [Introduction](https://github.com/alibaba/canal/wiki/Introduction)
- [QuickStart](https://github.com/alibaba/canal/wiki/QuickStart)
  - [Docker QuickStart](https://github.com/alibaba/canal/wiki/Docker-QuickStart)
  - [Canal Kafka/RocketMQ QuickStart](https://github.com/alibaba/canal/wiki/Canal-Kafka-RocketMQ-QuickStart"")
  - [Aliyun RDS for MySQL QuickStart](https://github.com/alibaba/canal/wiki/aliyun-RDS-QuickStart)
  - [Prometheus QuickStart](https://github.com/alibaba/canal/wiki/Prometheus-QuickStart)
- Canal Admin
  - [Canal Admin QuickStart](https://github.com/alibaba/canal/wiki/Canal-Admin-QuickStart)
  - [Canal Admin Guide](https://github.com/alibaba/canal/wiki/Canal-Admin-Guide)
  - [Canal Admin ServerGuide](https://github.com/alibaba/canal/wiki/Canal-Admin-ServerGuide)
  - [Canal Admin Docker](https://github.com/alibaba/canal/wiki/Canal-Admin-Docker)
- [AdminGuide](https://github.com/alibaba/canal/wiki/AdminGuide)
- [ClientExample](https://github.com/alibaba/canal/wiki/ClientExample)
- [ClientAPI](https://github.com/alibaba/canal/wiki/ClientAPI)
- [Performance](https://github.com/alibaba/canal/wiki/Performance)
- [DevGuide](https://github.com/alibaba/canal/wiki/DevGuide)
- [BinlogChange(MySQL 5.6)](https://github.com/alibaba/canal/wiki/BinlogChange%28mysql5.6%29)
- [BinlogChange(MariaDB)](https://github.com/alibaba/canal/wiki/BinlogChange%28MariaDB%29)
- [TableMetaTSDB](https://github.com/alibaba/canal/wiki/TableMetaTSDB)
- [ReleaseNotes](http://alibaba.github.com/canal/release.html)
- [Download](https://github.com/alibaba/canal/releases)
- [FAQ](https://github.com/alibaba/canal/wiki/FAQ)

## 多语言

canal 特别设计了 client-server 模式，交互协议使用 protobuf 3.0 , client 端可采用不同语言实现不同的消费逻辑，欢迎大家提交 pull request 
  
- canal java 客户端: [https://github.com/alibaba/canal/wiki/ClientExample](https://github.com/alibaba/canal/wiki/ClientExample)
- canal c# 客户端: [https://github.com/dotnetcore/CanalSharp](https://github.com/dotnetcore/CanalSharp)
- canal go客户端: [https://github.com/CanalClient/canal-go](https://github.com/CanalClient/canal-go)
- canal php客户端: [https://github.com/xingwenge/canal-php](https://github.com/xingwenge/canal-php)
- canal Python客户端：[https://github.com/haozi3156666/canal-python](https://github.com/haozi3156666/canal-python)
- canal Rust客户端：[https://github.com/laohanlinux/canal-rs](https://github.com/laohanlinux/canal-rs)
- canal Nodejs客户端：[https://github.com/marmot-z/canal-nodejs](https://github.com/marmot-z/canal-nodejs)

canal 作为 MySQL binlog 增量获取和解析工具，可将变更记录投递到 MQ 系统中，比如 Kafka/RocketMQ，可以借助于 MQ 的多语言能力 

- 参考文档: [Canal Kafka/RocketMQ QuickStart](https://github.com/alibaba/canal/wiki/Canal-Kafka-RocketMQ-QuickStart)

## 相关开源&产品

- [canal 消费端开源项目: Otter](http://github.com/alibaba/otter)
- [阿里巴巴去 Oracle 数据迁移同步工具: yugong](http://github.com/alibaba/yugong)
- [阿里巴巴离线同步开源项目 DataX](https://github.com/alibaba/datax)
- [阿里巴巴数据库连接池开源项目 Druid](https://github.com/alibaba/druid)
- [阿里巴巴实时数据同步工具 DTS](https://www.aliyun.com/product/dts)

## 问题反馈
- 报告 issue: [github issues](https://github.com/alibaba/canal/issues)

本项目的Issues会被同步沉淀至[阿里云开发者社区](https://developer.aliyun.com/ask)
"
arduino/Arduino,Java,"<p align=""center"">
	<img src=""http://content.arduino.cc/brand/arduino-color.svg"" width=""50%"" />
</p>

Arduino is an open-source physical computing platform based on a simple I/O
board and a development environment that implements the Processing/Wiring
language. Arduino can be used to develop stand-alone interactive objects or
can be connected to software on your computer (e.g. Flash, Processing and MaxMSP).
The boards can be assembled by hand or purchased preassembled; the open-source
IDE can be downloaded for free at [https://arduino.cc](https://www.arduino.cc/en/Main/Software)

![Github](https://img.shields.io/github/v/release/arduino/Arduino)

## More info at

-  [Our website](https://www.arduino.cc/)

-  [The forums](https://forum.arduino.cc/)

-  Follow us on [Twitter](https://twitter.com/arduino)
-  And like us at [Facebook](https://www.facebook.com/official.arduino)

## Bug reports and technical discussions

-  To report a *bug* in the software or to request *a simple enhancement* go to [Github Issues](https://github.com/arduino/Arduino/issues)

-  More complex requests and technical discussion should go on the [Arduino Developers
mailing list](https://groups.google.com/a/arduino.cc/forum/#!forum/developers)

-  If you're interested in modifying or extending the Arduino software, we strongly
suggest discussing your ideas on the
[Developers mailing list](https://groups.google.com/a/arduino.cc/forum/#!forum/developers)
 *before* starting to work on them.
That way you can coordinate with the Arduino Team and others,
giving your work a higher chance of being integrated into the official release

### Security

If you think you found a vulnerability or other security-related bug in this project, please read our
[security policy](https://github.com/arduino/Arduino/security/policy) and report the bug to our Security Team 🛡️
Thank you!

e-mail contact: security@arduino.cc

## Installation

Detailed instructions for installation in popular operating systems can be found at:

-  [Linux](https://www.arduino.cc/en/Guide/Linux) (see also the [Arduino playground](https://playground.arduino.cc/Learning/Linux))
-  [macOS](https://www.arduino.cc/en/Guide/macOS)
-  [Windows](https://www.arduino.cc/en/Guide/Windows)

## Contents of this repository

This repository contains just the code for the Arduino IDE itself.
Originally, it also contained the AVR and SAM Arduino core and libraries
(i.e.  the code that is compiled as part of a sketch and runs on the
actual Arduino device), but those have been moved into their own
repositories.  They are still automatically downloaded as part of the
build process and included in built releases, though.

The repositories for these extra parts can be found here:
-   Non-core specific Libraries are listed under: <https://github.com/arduino-libraries/>
    (and also a few other places, see `build/build.xml`).

-   The AVR core can be found at: <https://github.com/arduino/ArduinoCore-avr>

-   Other cores are not included by default but installed through the
    board manager. Their repositories can also be found under
    <https://github.com/arduino/>.

## Building and testing

Instructions for building the IDE and running unit tests can be found on
the wiki:
-   <https://github.com/arduino/Arduino/wiki/Building-Arduino>
-   <https://github.com/arduino/Arduino/wiki/Testing-Arduino>

## Credits

Arduino is an open source project, supported by many.

The Arduino team is composed of Massimo Banzi, David Cuartielles, Tom Igoe
and David A. Mellis.

Arduino uses
[GNU avr-gcc toolchain](https://gcc.gnu.org/wiki/avr-gcc),
[GCC ARM Embedded toolchain](https://launchpad.net/gcc-arm-embedded),
[avr-libc](https://www.nongnu.org/avr-libc/),
[avrdude](https://www.nongnu.org/avrdude/),
[bossac](http://www.shumatech.com/web/products/bossa),
[openOCD](http://openocd.org/)
and code from [Processing](https://www.processing.org)
and [Wiring](http://wiring.org.co).

Icon and about image designed by [ToDo](https://www.todo.to.it/)

"
alibaba/arthas,Java,"## Arthas

![arthas](site/docs/.vuepress/public/images/arthas.png)

[![Build Status](https://github.com/alibaba/arthas/workflows/JavaCI/badge.svg)](https://github.com/alibaba/arthas/actions)
[![codecov](https://codecov.io/gh/alibaba/arthas/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/arthas)
[![maven](https://img.shields.io/maven-central/v/com.taobao.arthas/arthas-packaging.svg)](https://search.maven.org/search?q=g:com.taobao.arthas)
![license](https://img.shields.io/github/license/alibaba/arthas.svg)
[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas ""Average time to resolve an issue"")
[![Percentage of issues still open](http://isitmaintained.com/badge/open/alibaba/arthas.svg)](http://isitmaintained.com/project/alibaba/arthas ""Percentage of issues still open"")
[![Leaderboard](https://img.shields.io/badge/Arthas-Check%20Your%20Contribution-orange)](https://opensource.alibaba.com/contribution_leaderboard/details?projectValue=arthas)

`Arthas` is a Java Diagnostic tool open sourced by Alibaba.

Arthas allows developers to troubleshoot production issues for Java applications without modifying code or restarting servers.

[中文说明/Chinese Documentation](README_CN.md)

### Background

Often times, the production system network is inaccessible from the local development environment. If issues are encountered in production systems, it is impossible to use IDEs to debug the application remotely. More importantly, debugging in production environment is unacceptable, as it will suspend all the threads, resulting in the suspension of business services. 

Developers could always try to reproduce the same issue on the test/staging environment. However, this is tricky as some issues cannot be reproduced easily on a different environment, or even disappear once restarted. 

And if you're thinking of adding some logs to your code to help troubleshoot the issue, you will have to go through the following lifecycle; test, staging, and then to production. Time is money! This approach is inefficient! Besides, the issue may not be reproducible once the JVM is restarted, as described above.

Arthas was built to solve these issues. A developer can troubleshoot your production issues on-the-fly. No JVM restart, no additional code changes. Arthas works as an observer, which will never suspend your existing threads.

### Key features

* Check whether a class is loaded, or where the class is being loaded. (Useful for troubleshooting jar file conflicts)
* Decompile a class to ensure the code is running as expected.
* View classloader statistics, e.g. the number of classloaders, the number of classes loaded per classloader, the classloader hierarchy, possible classloader leaks, etc.
* View the method invocation details, e.g. method parameter, return object, thrown exception, and etc.
* Check the stack trace of specified method invocation. This is useful when a developers wants to know the caller of the said method.
* Trace the method invocation to find slow sub-invocations.
* Monitor method invocation statistics, e.g. qps, rt, success rate and etc.
* Monitor system metrics, thread states and cpu usage, gc statistics, and etc.
* Supports command line interactive mode, with auto-complete feature enabled.
* Supports telnet and websocket, which enables both local and remote diagnostics with command line and browsers.
* Supports profiler/Flame Graph
* Support get objects in the heap that are instances of the specified class. 
* Supports JDK 6+.
* Supports Linux/Mac/Windows.


### [Online Tutorials(Recommended)](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en)

* [Usages](tutorials/katacoda/README.md#online-tutorial-usages)

### Quick start

#### Use `arthas-boot`(Recommended)

Download`arthas-boot.jar`，Start with `java` command:

```bash
curl -O https://arthas.aliyun.com/arthas-boot.jar
java -jar arthas-boot.jar
```

Print usage:

```bash
java -jar arthas-boot.jar -h
```

#### Use `as.sh`

You can install Arthas with one single line command on Linux, Unix, and Mac. Copy the following command and paste it into the command line, then press *Enter* to run:

```bash
curl -L https://arthas.aliyun.com/install.sh | sh
```

The command above will download the bootstrap script `as.sh` to the current directory. You can move it any other place you want, or put its location in `$PATH`.

You can enter its interactive interface by executing `as.sh`, or execute `as.sh -h` for more help information.


### Documentation

* [Online Tutorials(Recommended)](https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en)
* [User manual](https://arthas.aliyun.com/doc/en)
* [Installation](https://arthas.aliyun.com/doc/en/install-detail.html)
* [Download](https://arthas.aliyun.com/doc/en/download.html)
* [Quick start](https://arthas.aliyun.com/doc/en/quick-start.html)
* [Advanced usage](https://arthas.aliyun.com/doc/en/advanced-use.html)
* [Commands](https://arthas.aliyun.com/doc/en/commands.html)
* [WebConsole](https://arthas.aliyun.com/doc/en/web-console.html)
* [Docker](https://arthas.aliyun.com/doc/en/docker.html)
* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/en/spring-boot-starter.html)
* [User cases](https://github.com/alibaba/arthas/issues?q=label%3Auser-case)
* [FAQ](https://arthas.aliyun.com/doc/en/faq)
* [Compile and debug/How to contribute](https://github.com/alibaba/arthas/blob/master/CONTRIBUTING.md)
* [Release Notes](https://github.com/alibaba/arthas/releases)


### Feature Showcase

#### Dashboard

* https://arthas.aliyun.com/doc/en/dashboard

![dashboard](site/docs/.vuepress/public/images/dashboard.png)

#### Thread

* https://arthas.aliyun.com/doc/en/thread

See what is eating your CPU (ranked by top CPU usage) and what is going on there in one glance:

```bash
$ thread -n 3
""as-command-execute-daemon"" Id=29 cpuUsage=75% RUNNABLE
    at sun.management.ThreadImpl.dumpThreads0(Native Method)
    at sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:440)
    at com.taobao.arthas.core.command.monitor200.ThreadCommand$1.action(ThreadCommand.java:58)
    at com.taobao.arthas.core.command.handler.AbstractCommandHandler.execute(AbstractCommandHandler.java:238)
    at com.taobao.arthas.core.command.handler.DefaultCommandHandler.handleCommand(DefaultCommandHandler.java:67)
    at com.taobao.arthas.core.server.ArthasServer$4.run(ArthasServer.java:276)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)

    Number of locked synchronizers = 1
    - java.util.concurrent.ThreadPoolExecutor$Worker@6cd0b6f8

""as-session-expire-daemon"" Id=25 cpuUsage=24% TIMED_WAITING
    at java.lang.Thread.sleep(Native Method)
    at com.taobao.arthas.core.server.DefaultSessionManager$2.run(DefaultSessionManager.java:85)

""Reference Handler"" Id=2 cpuUsage=0% WAITING on java.lang.ref.Reference$Lock@69ba0f27
    at java.lang.Object.wait(Native Method)
    -  waiting on java.lang.ref.Reference$Lock@69ba0f27
    at java.lang.Object.wait(Object.java:503)
    at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)
```

#### jad

* https://arthas.aliyun.com/doc/en/jad

Decompile your class with one shot:

```java
$ jad javax.servlet.Servlet

ClassLoader:
+-java.net.URLClassLoader@6108b2d7
  +-sun.misc.Launcher$AppClassLoader@18b4aac2
    +-sun.misc.Launcher$ExtClassLoader@1ddf84b8

Location:
/Users/xxx/work/test/lib/servlet-api.jar

/*
 * Decompiled with CFR 0_122.
 */
package javax.servlet;

import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public interface Servlet {
    public void init(ServletConfig var1) throws ServletException;

    public ServletConfig getServletConfig();

    public void service(ServletRequest var1, ServletResponse var2) throws ServletException, IOException;

    public String getServletInfo();

    public void destroy();
}
```

#### mc
* https://arthas.aliyun.com/doc/en/mc

Memory compiler, compiles `.java` files into `.class` files in memory.

```bash
$ mc /tmp/Test.java
```

#### retransform

* https://arthas.aliyun.com/doc/en/retransform

Load the external `*.class` files to retransform/hotswap the loaded classes in JVM.

```bash
retransform /tmp/Test.class
retransform -c 327a647b /tmp/Test.class /tmp/Test\$Inner.class
```

#### sc

* https://arthas.aliyun.com/doc/en/sc

Search any loaded class with detailed information.

```bash
$ sc -d org.springframework.web.context.support.XmlWebApplicationContext
 class-info        org.springframework.web.context.support.XmlWebApplicationContext
 code-source       /Users/xxx/work/test/WEB-INF/lib/spring-web-3.2.11.RELEASE.jar
 name              org.springframework.web.context.support.XmlWebApplicationContext
 isInterface       false
 isAnnotation      false
 isEnum            false
 isAnonymousClass  false
 isArray           false
 isLocalClass      false
 isMemberClass     false
 isPrimitive       false
 isSynthetic       false
 simple-name       XmlWebApplicationContext
 modifier          public
 annotation
 interfaces
 super-class       +-org.springframework.web.context.support.AbstractRefreshableWebApplicationContext
                     +-org.springframework.context.support.AbstractRefreshableConfigApplicationContext
                       +-org.springframework.context.support.AbstractRefreshableApplicationContext
                         +-org.springframework.context.support.AbstractApplicationContext
                           +-org.springframework.core.io.DefaultResourceLoader
                             +-java.lang.Object
 class-loader      +-org.apache.catalina.loader.ParallelWebappClassLoader
                     +-java.net.URLClassLoader@6108b2d7
                       +-sun.misc.Launcher$AppClassLoader@18b4aac2
                         +-sun.misc.Launcher$ExtClassLoader@1ddf84b8
 classLoaderHash   25131501

```


#### vmtool

* https://arthas.aliyun.com/doc/en/vmtool

Get objects in the heap that are instances of the specified class.

```bash
$ vmtool --action getInstances --className java.lang.String --limit 10
@String[][
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com.taobao.arthas.core.shell.session.Session],
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com/taobao/arthas/core/shell/session/Session],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/taobao/arthas/core/shell/session/Session.class],
    @String[com/],
    @String[java/util/concurrent/ConcurrentHashMap$ValueIterator],
    @String[java/util/concurrent/locks/LockSupport],
]
```

#### stack

* https://arthas.aliyun.com/doc/en/stack

View the call stack of `test.arthas.TestStack#doGet`:

```bash
$ stack test.arthas.TestStack doGet
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 286 ms.
ts=2018-09-18 10:11:45;thread_name=http-bio-8080-exec-10;id=d9;is_daemon=true;priority=5;TCCL=org.apache.catalina.loader.ParallelWebappClassLoader@25131501
    @test.arthas.TestStack.doGet()
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:624)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:731)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110)
        ...
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:451)
        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1121)
        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)
        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
        at java.lang.Thread.run(Thread.java:745)
```

#### Trace

* https://arthas.aliyun.com/doc/en/trace

See what is slowing down your method invocation with trace command:

![trace](site/docs/.vuepress/public/images/trace.png)

#### Watch

* https://arthas.aliyun.com/doc/en/watch

Watch the first parameter and thrown exception of `test.arthas.TestWatch#doGet` only if it throws exception.

```bash
$ watch test.arthas.TestWatch doGet {params[0], throwExp} -e
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 65 ms.
ts=2018-09-18 10:26:28;result=@ArrayList[
    @RequestFacade[org.apache.catalina.connector.RequestFacade@79f922b2],
    @NullPointerException[java.lang.NullPointerException],
]
```

#### Monitor

* https://arthas.aliyun.com/doc/en/monitor

Monitor a specific method invocation statistics, including the total number of invocations, average response time, success rate, and every 5 seconds:

```bash
$ monitor -c 5 org.apache.dubbo.demo.provider.DemoServiceImpl sayHello
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 109 ms.
 timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 2018-09-20 09:45:32  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.67        0.00%

 timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 2018-09-20 09:45:37  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     1.00        0.00%

 timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 2018-09-20 09:45:42  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.43        0.00%
```

#### Time Tunnel(tt)

* https://arthas.aliyun.com/doc/en/tt

Record method invocation data, so that you can check the method invocation parameters, returned value, and thrown exceptions later. It works as if you could come back and replay the past method invocation via time tunnel.

```bash
$ tt -t org.apache.dubbo.demo.provider.DemoServiceImpl sayHello
Press Ctrl+C to abort.
Affect(class-cnt:1 , method-cnt:1) cost in 75 ms.
 INDEX   TIMESTAMP            COST(ms)  IS-RET  IS-EXP   OBJECT         CLASS                          METHOD
-------------------------------------------------------------------------------------------------------------------------------------
 1000    2018-09-20 09:54:10  1.971195  true    false    0x55965cca     DemoServiceImpl                sayHello
 1001    2018-09-20 09:54:11  0.215685  true    false    0x55965cca     DemoServiceImpl                sayHello
 1002    2018-09-20 09:54:12  0.236303  true    false    0x55965cca     DemoServiceImpl                sayHello
 1003    2018-09-20 09:54:13  0.159598  true    false    0x55965cca     DemoServiceImpl                sayHello
 1004    2018-09-20 09:54:14  0.201982  true    false    0x55965cca     DemoServiceImpl                sayHello
 1005    2018-09-20 09:54:15  0.214205  true    false    0x55965cca     DemoServiceImpl                sayHello
 1006    2018-09-20 09:54:16  0.241863  true    false    0x55965cca     DemoServiceImpl                sayHello
 1007    2018-09-20 09:54:17  0.305747  true    false    0x55965cca     DemoServiceImpl                sayHello
 1008    2018-09-20 09:54:18  0.18468   true    false    0x55965cca     DemoServiceImpl                sayHello
```

#### Classloader

* https://arthas.aliyun.com/doc/en/classloader

```bash
$ classloader
 name                                                  numberOfInstances  loadedCountTotal
 BootstrapClassLoader                                  1                  3346
 com.taobao.arthas.agent.ArthasClassloader             1                  1262
 java.net.URLClassLoader                               2                  1033
 org.apache.catalina.loader.ParallelWebappClassLoader  1                  628
 sun.reflect.DelegatingClassLoader                     166                166
 sun.misc.Launcher$AppClassLoader                      1                  31
 com.alibaba.fastjson.util.ASMClassLoader              6                  15
 sun.misc.Launcher$ExtClassLoader                      1                  7
 org.jvnet.hk2.internal.DelegatingClassLoader          2                  2
 sun.reflect.misc.MethodUtil                           1                  1
```

#### Web Console

* https://arthas.aliyun.com/doc/en/web-console

![web console](site/docs/.vuepress/public/images/web-console-local.png)


#### Profiler/FlameGraph

* https://arthas.aliyun.com/doc/en/profiler

```bash
$ profiler start
Started [cpu] profiling
```

```
$ profiler stop
profiler output file: /tmp/demo/arthas-output/20211207-111550.html
OK
```

View profiler results under arthas-output via browser:

![](site/docs/.vuepress/public/images/arthas-output-svg.jpg)

#### Arthas Spring Boot Starter

* [Arthas Spring Boot Starter](https://arthas.aliyun.com/doc/spring-boot-starter.html)

### Known Users

Arthas has more than 120 registered users, [View All](USERS.md).

Welcome to register the company name in this issue: https://github.com/alibaba/arthas/issues/111 (in order of registration)

![Alibaba](static/alibaba.png)
![Alipay](static/alipay.png)
![Aliyun](static/aliyun.png)
![Taobao](static/taobao.png)
![ICBC](static/icbc.png)
![雪球财经](static/xueqiu.png)
![顺丰科技](static/sf.png)
![贝壳找房](static/ke.png)
![vipkid](static/vipkid.png)
![百度凤巢](static/baidufengchao.png)
![有赞](static/youzan.png)
![科大讯飞](static/iflytek.png)
![智联招聘](static/zhaopin.png)

### Derivative Projects

* [Bistoury: A project that integrates Arthas](https://github.com/qunarcorp/bistoury)
* [A fork of arthas using MVEL](https://github.com/XhinLiang/arthas)

### Credits

#### Contributors

This project exists, thanks to all the people who contributed.

<a href=""https://github.com/alibaba/arthas/graphs/contributors""><img src=""https://opencollective.com/arthas/contributors.svg?width=890&button=false"" /></a>

#### Projects

* [bytekit](https://github.com/alibaba/bytekit) Java Bytecode Kit.
* [greys-anatomy](https://github.com/oldmanpushcart/greys-anatomy): The Arthas code base has derived from Greys, we thank for the excellent work done by Greys.
* [termd](https://github.com/alibaba/termd): Arthas's terminal implementation is based on termd, an open source library for writing terminal applications in Java.
* [crash](https://github.com/crashub/crash): Arthas's text based user interface rendering is based on codes extracted from [here](https://github.com/crashub/crash/tree/1.3.2/shell)
* [cli](https://github.com/alibaba/cli): Arthas's command line interface implementation is based on cli, open sourced by vert.x
* [compiler](https://github.com/skalogs/SkaETL/tree/master/compiler) Arthas's memory compiler.
* [Apache Commons Net](https://commons.apache.org/proper/commons-net/) Arthas's telnet client.
* [async-profiler](https://github.com/jvm-profiling-tools/async-profiler) Arthas's profiler command.
"
javahometech/my-app,Java,
qiurunze123/miaosha,Java,"![互联网 Java 秒杀系统设计与架构](https://raw.githubusercontent.com/qiurunze123/imageall/master/miaoshashejitu.png)

> 朋友们，感谢大家对我文章的支持。时间过得很快，
这部分内容还是我几年前刚毕业时写的，而且也只是个人项目，被公众号文章给我一顿喷，博主内容我也看了，晚上回到家就简单的回复下，
想了一下，因为确实没精力维护，对于小白会造成误导，决定下线这个项目，这是我的第一个项目，就让他成回忆吧！以免对自己造成困扰！
大家以后还是可以微信交流其它问题，有时间也会为大家解答！

>1.理性看待

我本意是将一些自己的思路和方向表达出来，因为star的激增，我也就做了最初的一版规划，那时候刚毕业没多久，很荣幸这个项目从一个小项目扩张成了大项目，但也都是一些当时不成熟的想法 ，项目没有完全完成，
也只是自己练手的入门级项目，旨在学习更多的知识，所有大家在看到这个项目的时候要有更多自己的思考和过滤，不要一味的照搬照抄！

>2.做了什么

今天博主喷我，我很生气，因为在其中我没有想过盈利，在做技术的这些日子，也有帮助过大家改简历，花钱建交流群，也有秒杀的迷你airtravel
版本，在我前几年有空的时候，大家的问题我都会及时的处理，这两年进入阿里确实也是比较忙，没有时间去好好润色整理这个项目！许多之前的设想
也都没有完成！所以给大家造成了一些问题我很抱歉！大家提的问题我没及时解决也很抱歉！所以决定下线，免得误导没有太多经验的人们！
也感谢在微信QQ鼓励和理解我的许多志同道合的朋友们，谢谢你们的理解！感恩！

>3.如何学习

修炼内功，不要盲目跟风！慢即是快，一口也吃不了一个胖子，多学习一些牛逼设计和分析，提高硬实力和软实力！ 像小傅哥这类的博主我还是很敬佩的！

>4.md 喷人 

营销号不要再带节奏了，要脸不，踩着别人去盈利自己吗？割韭菜，整理一些面经就觉得自己很吊？
整理一些使用文档？整理一些github页面布局？我觉得你无缘无故的把我放在公众号是不是侵害我名誉权了，好想当你面给你一个大逼斗，
如果你通过这些赚钱了，那么你真的没有一点资格喷我，因为在这没有赚过一分钱！甚至还在往里花钱！好好经营你的公众号、知识星球好了，做点有意义的事情，就别因为点流量做事不经大脑随便喷人，
我个人是希望保持技术人的单纯，不想用它来赚钱，你用它来喷我引流？我从18年就不更新了，
而且只是我个人项目，你凭什么喷我！你拿我做文章是不是有点不要脸！无耻之尤！
好了不说了，说着说着又生气了，到此为止，不想再为SB浪费时间精力了。愿天下再无狗屎营销号，做个人吧！

"
alibaba/fastjson,Java,"
# fastjson

[![Java CI](https://github.com/alibaba/fastjson/actions/workflows/ci.yaml/badge.svg?branch=master)](https://github.com/alibaba/fastjson/actions/workflows/ci.yaml)
[![Codecov](https://codecov.io/gh/alibaba/fastjson/branch/master/graph/badge.svg)](https://codecov.io/gh/alibaba/fastjson/branch/master)
[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.alibaba/fastjson/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.alibaba/fastjson/)
[![GitHub release](https://img.shields.io/github/release/alibaba/fastjson.svg)](https://github.com/alibaba/fastjson/releases)
[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)
[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/alibaba/fastjson) 
[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/fastjson2.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:fastjson2)
[![QualityGate](https://quality-gate.com/backend/api/timeline?branchName=master&projectName=alibaba_fastjson)](https://quality-gate.com/dashboard/branches/7816#overview)

Fastjson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object. Fastjson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of.

[FASTJSON 2.0.x](https://github.com/alibaba/fastjson2/releases) has been released, faster and more secure, we recommend you [upgrade](https://github.com/alibaba/fastjson2/wiki/fastjson_1_upgrade_cn) to the latest version.

### Fastjson Goals
 * Provide the best performance on the server-side and android client
 * Provide simple toJSONString() and parseObject() methods to convert Java objects to JSON and vice-versa
 * Allow pre-existing unmodifiable objects to be converted to and from JSON
 * Extensive support of Java Generics
 * Allow custom representations for objects
 * Support arbitrarily complex objects (with deep inheritance hierarchies and extensive use of generic types)

![fastjson](logo.jpg ""fastjson"")

## Documentation

- [Documentation Home](https://github.com/alibaba/fastjson/wiki)
- [Contributing Code](https://github.com/nschaffner/fastjson/blob/master/CONTRIBUTING.md)
- [Frequently Asked Questions](https://github.com/alibaba/fastjson/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98)
- FASTJSON 1.x User Upgrade Guid [https://github.com/alibaba/fastjson2/wiki/fastjson_1_upgrade_cn](https://github.com/alibaba/fastjson2/wiki/fastjson_1_upgrade_cn
)

## Benchmark

* Eishay benchmark https://github.com/eishay/jvm-serializers/wiki
* fastjson2 benchmark [https://github.com/alibaba/fastjson2/wiki/fastjson_benchmark](https://github.com/alibaba/fastjson2/wiki/fastjson_benchmark)


## Download

- [maven][1]
- [the latest JAR][2]

[1]: https://repo1.maven.org/maven2/com/alibaba/fastjson/
[2]: https://search.maven.org/remote_content?g=com.alibaba&a=fastjson&v=LATEST

## Maven

```xml
<dependency>
    <groupId>com.alibaba</groupId>
    <artifactId>fastjson</artifactId>
    <version>2.0.31</version>
</dependency>
```

## Gradle via JCenter

``` groovy
compile 'com.alibaba:fastjson:2.0.28'
```


Please see this [Wiki Download Page][Wiki] for more repository info.

[Wiki]: https://github.com/alibaba/fastjson/wiki#download

### *License*

Fastjson is released under the [Apache 2.0 license](license.txt).

```
Copyright 1999-2020 Alibaba Group Holding Ltd.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at the following link.

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
"
libgdx/libgdx,Java,"![logo](libgdx_logo.svg)

[![GitHub Actions build status](https://img.shields.io/github/actions/workflow/status/libgdx/libgdx/build-publish.yml?branch=master&label=GitHub%20Actions)](https://github.com/libgdx/libgdx/actions?query=workflow%3A%22Build+and+Publish%22)

[![Sonatype Nexus (Releases)](https://img.shields.io/nexus/r/com.badlogicgames.gdx/gdx?nexusVersion=2&server=https%3A%2F%2Foss.sonatype.org&label=version)](https://search.maven.org/artifact/com.badlogicgames.gdx/gdx)
[![Sonatype Nexus (Snapshots)](https://img.shields.io/nexus/s/com.badlogicgames.gdx/gdx?server=https%3A%2F%2Foss.sonatype.org&label=snapshot)](https://oss.sonatype.org/#nexus-search;gav~com.badlogicgames.gdx~gdx~~~~kw,versionexpand)

[![Discord Chat](https://img.shields.io/discord/348229412858101762?logo=discord)](https://libgdx.com/community/discord/)

## Cross-platform Game Development Framework
**[libGDX](https://libgdx.com) is a cross-platform Java game development framework based on OpenGL (ES) that works on Windows, Linux, macOS, Android, your browser and iOS.** It provides a well-tried and robust environment for rapid prototyping and fast iterations. libGDX does not force a specific design or coding style on you. Rather, it gives you the freedom to create a game the way you like it.

## Open Source, Feature Packed and Offering a Big Third-Party Ecosystem
libGDX is licensed under [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0.html) meaning you can use it free of charge, without strings attached in commercial and non-commercial projects. We, however, love to get (non-mandatory) credit in case you release a game or app using libGDX! See our [showcase](https://libgdx.com/showcase/) for a selection of some popular libGDX games. libGDX comes with [batteries included](https://libgdx.com/features/) and provides everything required to develop multi-platform 2D and 3D games with Java.

libGDX also offers a very extensive third-party ecosystem. There are numerous [tools](https://libgdx.com/dev/tools/) and libraries that take a lot of work off the hands of developers. Take a look at [awesome-libgdx](https://github.com/rafaskb/awesome-libgdx#readme) for a curated list of libGDX-centered libraries and a good starting point for anyone new in the libGDX world.

![](https://libgdx.com/assets/images/index_showcase/game0.png)
###### An example for a game created with libGDX: [Pathway](https://store.steampowered.com/app/546430/Pathway/) by Robotality. Find more games in our [Showcase](https://libgdx.com/showcase/).

## Getting libGDX / Documentation
As we use Gradle, there's no need to download libGDX itself  &ndash; this can all be done by your favorite build tool. We also offer a [setup tool](https://libgdx.com/dev/#how-to-get-started-with-libgdx), which automatically creates a project for you and downloads everything necessary. See our **[website](https://libgdx.com/wiki/start/setup)** for instructions on how to get started with this or read our **[wiki](https://libgdx.com/wiki/)**.

- [Creating a libGDX Project](https://libgdx.com/wiki/start/setup)
- [A Simple Game](https://libgdx.com/wiki/start/a-simple-game)
- [Tutorials & Demos](https://libgdx.com/wiki/start/demos-and-tutorials)

We also provide [javadocs](https://javadoc.io/doc/com.badlogicgames.gdx) online. The javadocs are bundled with every libGDX distribution for consumption in your favorite IDE.

## Community & Contributing
You can follow the **latest news** about libGDX on our [blog](https://libgdx.com/news/). Another good way to get in touch with our community is to join the official [libGDX Discord](https://libgdx.com/community/discord/).

### Reporting Issues
Use the **[Issue Tracker](https://github.com/libgdx/libgdx/issues)** here on GitHub to report issues. Please make sure you read the [Getting Help](https://libgdx.com/wiki/articles/getting-help) article that walks you through the process of properly reporting an issue.

### Working on the Code
libGDX has a strong developer community constantly improving the code base. We love to get any and all help we can. Our [Contributing Guidelines](https://libgdx.com/dev/contributing/) describe the process of helping libGDX to become even better. To contribute, you need to work with libGDX' sources directly, something normal users do not have to go through. The [Working with the Source](https://libgdx.com/dev/from-source/) article will give you some directions.

You can also contribute financially to our infrastructure (build server, web server, test devices) via our [Patreon](https://patreon.com/libgdx)!
"
apache/shardingsphere,Java,"## [Ecosystem to Transform Any Database into a Distributed Database System, and Enhance it with Sharding, Elastic Scaling, Encryption Features & More](https://shardingsphere.apache.org/)

**Official Website:** [https://shardingsphere.apache.org/](https://shardingsphere.apache.org/)

[![GitHub release](https://img.shields.io/github/release/apache/shardingsphere.svg)](https://github.com/apache/shardingsphere/releases)
[![Lines of Code](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=ncloc)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)

[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)
[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)
[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)
[![codecov](https://codecov.io/gh/apache/shardingsphere/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/shardingsphere)

[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/5394/badge)](https://bestpractices.coreinfrastructure.org/projects/5394)

[![Slack](https://img.shields.io/badge/%20Slack-ShardingSphere%20Channel-blueviolet)](https://join.slack.com/t/apacheshardingsphere/shared_invite/zt-sbdde7ie-SjDqo9~I4rYcR18bq0SYTg)
[![Gitter](https://badges.gitter.im/shardingsphere/shardingsphere.svg)](https://gitter.im/shardingsphere/Lobby)

[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/ShardingSphere.svg?style=social&label=Follow%20%40ShardingSphere)](https://twitter.com/ShardingSphere)

|                                               **Stargazers Over Time**                                                | **Contributors Over Time**                                                                                                                                                                                                                       |
|:---------------------------------------------------------------------------------------------------------------------:|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|
| [![Stargazers over time](https://starchart.cc/apache/shardingsphere.svg)](https://starchart.cc/apache/shardingsphere) | [![Contributor over time](https://contributor-graph-api.apiseven.com/contributors-svg?chart=contributorOverTime&repo=apache/shardingsphere)](https://www.apiseven.com/en/contributor-graph?chart=contributorOverTime&repo=apache/shardingsphere) |

### OVERVIEW

<hr>

Apache ShardingSphere follows Database Plus - our community's guiding development concept for creating a complete ecosystem that allows you to transform any database into a distributed database system, and easily enhance it with sharding, elastic scaling, data encryption features & more. 

It focuses on repurposing existing databases, by placing a standardized upper layer above existing and fragmented databases, rather than creating a new database. 

The goal is to provide unified database services, and minimize or eliminate the challenges caused by underlying databases' fragmentation. 
This results in applications only needing to communicate with a single standardized service.

The concepts at the core of the project are `Connect`, `Enhance` and `Pluggable`.

- `Connect:` Flexible adaptation of database protocol, SQL dialect and database storage. It can quickly connect applications and heterogeneous databases.
- `Enhance:` Capture database access entry to provide additional features transparently, such as: redirect (sharding, readwrite-splitting and shadow), transform (data encrypt and mask), authentication (security, audit and authority), governance (circuit breaker and access limitation and analyze, QoS and observability).
- `Pluggable:` Leveraging the micro kernel and 3 layers pluggable mode, features and database ecosystem can be embedded flexibly. Developers can customize their ShardingSphere just like building with LEGO blocks.

Virtually all databases are [supported](https://shardingsphere.apache.org/document/current/en/dev-manual/data-source/) including [MySQL](https://www.mysql.com), [PostgreSQL](https://www.postgresql.org), [SQL Server](https://www.microsoft.com/en-us/sql-server/sql-server-downloads), [Oracle Database](https://www.oracle.com/database/), [MariaDB](https://mariadb.org) or any other SQL-92 database.

ShardingSphere became an [Apache](https://apache.org/index.html#projects-list) Top-Level Project on April 16, 2020.

So far, ShardingSphere has been used by over [10,000 projects on GitHub](https://github.com/search?l=Maven+POM&q=shardingsphere+language%3A%22Maven+POM%22&type=Code).

### DOCUMENTATION📜

<hr>

[![EN doc](https://img.shields.io/badge/document-English-blue.svg)](https://shardingsphere.apache.org/document/current/en/overview/)
[![CN doc](https://img.shields.io/badge/文档-中文版-blue.svg)](https://shardingsphere.apache.org/document/current/cn/overview/)

For full documentation & more details, visit: [Docs](https://shardingsphere.apache.org/document/current/en/overview/)

### CONTRIBUTION🚀🧑‍💻

<hr>

For guides on how to get started and setup your environment, contributor & committer guides, visit: [Contribution Guidelines](https://shardingsphere.apache.org/community/en/involved/)

Good news! We'll be taking part in [Hacktoberfest 2022](https://hacktoberfest.com) 🍻🎉 Hacktoberfest is for everyone. 

Whether it's your first time, you're a seasoned PRO - it's almost time to get hacking, chase those pull/merge requests and complete your mission in supporting open source.

You can find the issues we've prepared for this year's Hacktoberfest [here](https://github.com/apache/shardingsphere/issues?q=is%3Aopen+is%3Aissue+label%3Ahacktoberfest).


### Team

<hr>

We deeply appreciate [community contributors](https://shardingsphere.apache.org/community/en/team) for their dedication to Apache ShardingSphere.

##

### COMMUNITY & SUPPORT💝🖤

<hr>

:link: [Mailing List](https://shardingsphere.apache.org/community/en/involved/subscribe/). Best for: Apache community updates, releases, changes.

:link: [GitHub Issues](https://github.com/apache/shardingsphere/issues). Best for: larger systemic questions/bug reports or anything development related.

:link: [GitHub Discussions](https://github.com/apache/shardingsphere/discussions). Best for: technical questions & support, requesting new features, proposing new features.

:link: [Slack channel](https://join.slack.com/t/apacheshardingsphere/shared_invite/zt-sbdde7ie-SjDqo9~I4rYcR18bq0SYTg). Best for: instant communications and online meetings, sharing your applications.

:link: [Twitter](https://twitter.com/ShardingSphere). Best for: keeping up to date on everything ShardingSphere.

:link: [LinkedIn](https://www.linkedin.com/showcase/apache-shardingsphere/e). Best for: professional networking and career development with other ShardingSphere contributors.

##

### STATUS👀

<hr>

:white_check_mark: Version 5.3.2: released :tada:

🔗 For the release notes, follow this link to the relevant [GitHub page](https://github.com/apache/shardingsphere/blob/master/RELEASE-NOTES.md).

:soon: Version 5.3.3

We are currently working towards our 5.3.3 milestone. 
Keep an eye on the [milestones page](https://github.com/apache/shardingsphere/milestones) of this repo to stay up to date.

[comment]: <> (##)

[comment]: <> (### NIGHTLY BUILDS:)
 
[comment]: <> (<hr>)

[comment]: <> (A nightly build of ShardingSphere from the latest master branch is available. )

[comment]: <> (The package is updated daily and is available [here]&#40;http://117.48.121.24:8080&#41;.)
 
[comment]: <> (##)

[comment]: <> (**‼️ Notice:**)

[comment]: <> (<hr>)

[comment]: <> (Use this nightly build at your own risk! )

[comment]: <> (The branch is not always fully tested. )

[comment]: <> (The nightly build may contain bugs, and there may be new features added which may cause problems with your environment. )
 
##

### How it Works

<hr>

Apache ShardingSphere includes 2 independent products: JDBC & Proxy.
They all provide functions of data scale-out, distributed transaction and distributed governance, applicable in a variety of situations such as Java isomorphism, heterogeneous language and Cloud-Native.

### ShardingSphere-JDBC

<hr>

[![Maven Status](https://img.shields.io/maven-central/v/org.apache.shardingsphere/shardingsphere-jdbc.svg?color=green)](https://mvnrepository.com/artifact/org.apache.shardingsphere/shardingsphere-jdbc)

A lightweight Java framework providing extra services at the Java JDBC layer. 
With the client end connecting directly to the database, it provides services in the form of a jar and requires no extra deployment and dependence.

:link: For more details, follow this [link to the official website](https://shardingsphere.apache.org/document/current/en/overview/#shardingsphere-jdbc).

### ShardingSphere-Proxy

<hr>

[![Nightly-Download](https://img.shields.io/static/v1?label=nightly-builds&message=download&color=orange)](https://nightlies.apache.org/shardingsphere/)
[![Download](https://img.shields.io/badge/release-download-orange.svg)](https://www.apache.org/dyn/closer.lua/shardingsphere/5.3.2/apache-shardingsphere-5.3.2-shardingsphere-proxy-bin.tar.gz)
[![Docker Pulls](https://img.shields.io/docker/pulls/apache/shardingsphere-proxy.svg)](https://store.docker.com/community/images/apache/shardingsphere-proxy)

A transparent database proxy, providing a database server that encapsulates database binary protocol to support heterogeneous languages. 
Friendlier to DBAs, the MySQL and PostgreSQL version now provided can use any kind of terminal.

:link: For more details, follow this [link to the official website](https://shardingsphere.apache.org/document/current/en/overview/#shardingsphere-proxy).

### Hybrid Architecture

<hr>

ShardingSphere-JDBC adopts a decentralized architecture, applicable to high-performance light-weight OLTP applications developed with Java. 
ShardingSphere-Proxy provides static entry and all languages support, suitable for OLAP application and sharding databases management and operation.

Through the mixed use of ShardingSphere-JDBC & ShardingSphere-Proxy together with a unified sharding strategy by the same registry center, the ShardingSphere ecosystem can build an application system suitable to all kinds of scenarios.

:link: More details can be found following this [link to the official website](https://shardingsphere.apache.org/document/current/en/overview/#hybrid-architecture).

##

### Solution

<hr>

| *Solutions/Features* | *Distributed Database*  | *Data Security*      | *Database Gateway*                | *Stress Testing* |
|----------------------|-------------------------|----------------------|-----------------------------------|------------------|
|                      | Data Sharding           | Data Encryption      | Heterogeneous Databases Supported | Shadow Database  |
|                      | Read/write Splitting    | Row Authority (TODO) | SQL Dialect Translate (TODO)      | Observability    |
|                      | Distributed Transaction | SQL Audit (TODO)     |                                   |                  |
|                      | Elastic Scale-out       | SQL Firewall (TODO)  |                                   |                  |
|                      | High Availability       |                      |                                   |                  |

##

### Roadmap

<hr>

![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_en.png)

##

### How to Build Apache ShardingSphere

<hr>

Check out [Wiki](https://github.com/apache/shardingsphere/wiki) section for details on how to build Apache ShardingSphere and a full guide on how to get started and setup your local dev environment.

##

### Landscapes

<hr>

<p align=""center"">
<br/><br/>
<img src=""https://landscape.cncf.io/images/left-logo.svg"" width=""150""/>&nbsp;&nbsp;<img src=""https://landscape.cncf.io/images/right-logo.svg"" width=""200""/>
<br/><br/>
Apache ShardingSphere enriches the <a href=""https://landscape.cncf.io/?category=app-definition-and-development&grouping=category"">CNCF CLOUD NATIVE Landscape</a>.
</p>

##
"
aosp-mirror/platform_frameworks_base,Java,
geekxh/hello-algorithm,Java,"## 简介

English version repo and Gitbook is on [english branch](https://github.com/geekxh/hello-algorithm/tree/english)

> ### **小浩算法是一套针对小白的完整的算法训练流程！** 
>
> <a href=""https://www.geekxh.com/""><img src=""https://www.geekxh.com/svg/0-1-blueviolet.svg"" alt=""css""></a>
> <a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://img.shields.io/github/stars/geekxh/hello-algorithm.svg"" alt=""Statr""></a>
> <a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://www.geekxh.com/svg/2-1-success.svg"" alt=""Statr""></a>
>
> 目前共包括以下几个步骤：
> - PART_1_算法基础
> - PART_2_力扣图解
> - PART_3_大厂面试
> - PART_4_CS知识汇总
>
> [目前已支持 PDF 下载](https://www.cxyhub.com/all/programming/7786/)

<div align=""center"">
    <a href=""https://www.geekxh.com""><img src=""https://www.geekxh.com/logo_tmp.png"" width=""350px""></a>
</div>

<p align=""center"">
<a href=""https://www.geekxh.com/""><img src=""https://www.geekxh.com/svg/0-1-blueviolet.svg"" alt=""css""></a>
<a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://img.shields.io/github/stars/geekxh/hello-algorithm.svg"" alt=""Statr""></a>
<a href=""https://github.com/haizlin/fe-interview/stargazers""><img src=""https://www.geekxh.com/svg/2-1-success.svg"" alt=""Statr""></a>
</p>
<p align=""center"">
    <b>这也许是东半球最好的算法学习类项目！</b>
</p>
</br>

> 最近 GPT 很火，有很多小伙伴想学习 AI，这里为大家分享一套免费的 AI 课程资料，大家扫码领取：
- Python与数据科学课程资料
- Pytorch与神经网络课程资料
- 深度学习与花书深入讲解课程
- 机器学习入门与实战训练课程
- 人工智能必备数学基础课程
- 零基础小白入门科研与论文课程
- 最新全栈AI前沿论文带读与算法精讲，视频➕配套课件资料
<p align=""center"">
    <img height=""350"" src=""https://www.geekxh.com/e623533638c3184f53c317bd1bd1450c.jpeg"">
</p>


### 正文

### PART_1_算法基础

主要包括两部分：

- a：数据结构知识框架：为了大家更好的掌握数据结构和算法，我把基础知识整理成了一张思维导图，包括下面这些知识点：

> [开始学习](PART_1_算法基础/README.md)

- b：对常用的数据结构知识进行总结：

*  [链表](PART_1_算法基础/2_基础知识/linked-list/README.md)
*  [双向链表](PART_1_算法基础/2_基础知识/doubly-linked-list/README.md)
*  [队列](PART_1_算法基础/2_基础知识/queue/README.md)
*  [栈](PART_1_算法基础/2_基础知识/stack/README.md)
*  [哈希表(散列)](PART_1_算法基础/2_基础知识/hash-table/README.md)
*  [堆](PART_1_算法基础/2_基础知识/heap/README.md)
*  [优先队列](PART_1_算法基础/2_基础知识/priority-queue/README.md)
*  [字典树](PART_1_算法基础/2_基础知识/trie/README.md)
*  [树](PART_1_算法基础/2_基础知识/tree/README.md)
*  [图](PART_1_算法基础/2_基础知识/graph/README.md) 

### PART_2_力扣图解

<details><summary><a>显示更多</a></summary></br>
    
> [小浩图解算法题典.PDF【完整版】下载](https://www.cxyhub.com/all/programming/7786/)

- [开始学习](http://www.geekxh.com)
- [阅读指南](http://www.geekxh.com/c99/hello.html)
- 数组
    - [01.最长公共前缀(14)](http://www.geekxh.com/1.0.数组系列/002.html)  
    - [02.买卖股票的最佳时机(122)](http://www.geekxh.com/1.0.数组系列/003.html)
    - [03.旋转数组(189)](http://www.geekxh.com/1.0.数组系列/004.html) 
    - [04.原地删除(27)](http://www.geekxh.com/1.0.数组系列/005.html) 
    - [05.加一(66)](http://www.geekxh.com/1.0.数组系列/006.html)
    - [06.两数之和(1)](http://www.geekxh.com/1.0.数组系列/007.html)                                              
    - [07.三数之和(15)](http://www.geekxh.com/1.0.数组系列/008.html)                                              
    - [08.Z字形变换(6)](http://www.geekxh.com/1.0.数组系列/009.html)  
- 链表                                            
    - [01.删除链表倒数第N个节点(19)](http://www.geekxh.com/1.1.链表系列/101.html)                                                 
    - [02.合并两个有序链表(21)](http://www.geekxh.com/1.1.链表系列/102.html)                                                 
    - [03.环形链表(141)](http://www.geekxh.com/1.1.链表系列/103.html)                                                 
    - [04.两数相加(2)](http://www.geekxh.com/1.1.链表系列/104.html)                                                 
- 动态规划
    - [01.爬楼梯(70)](http://www.geekxh.com/1.2.动态规划系列/201.html)                                                
    - [02.最大子序和(53)](http://www.geekxh.com/1.2.动态规划系列/202.html)                                                
    - [03.最长上升子序列(300)](http://www.geekxh.com/1.2.动态规划系列/203.html)                                                
    - [04.三角形最小路径和(120)](http://www.geekxh.com/1.2.动态规划系列/204.html)                                                
    - [05.最小路径和(64)](http://www.geekxh.com/1.2.动态规划系列/205.html)                                                
    - [06.打家劫舍(198)](http://www.geekxh.com/1.2.动态规划系列/206.html)                                                
- 字符串
    - [01.反转字符串(344)](http://www.geekxh.com/1.3.字符串系列/301.html)                                               
    - [02.字符串中的第一个唯一字符(387)](http://www.geekxh.com/1.3.字符串系列/302.html)                                               
    - [03.实现 Sunday 匹配](http://www.geekxh.com/1.3.字符串系列/303.html)                                               
    - [04.大数打印](http://www.geekxh.com/1.3.字符串系列/304.html)                                               
    - [05.验证回文串(125)](http://www.geekxh.com/1.3.字符串系列/305.html)                                               
    - [06.KMP 精讲](http://www.geekxh.com/1.3.字符串系列/306.html)                                               
    - [07.旋转字符串(796)](http://www.geekxh.com/1.3.字符串系列/307.html)                                               
    - [08.最后一个单词的长度(58)](http://www.geekxh.com/1.3.字符串系列/308.html)                                               
- 二叉树
    - [01.最大深度与DFS(104)](http://www.geekxh.com/1.4.二叉树系列/401.html)                                               
    - [02.层次遍历与BFS(102)](http://www.geekxh.com/1.4.二叉树系列/402.html)                                               
    - [03.BST与其验证(98)](http://www.geekxh.com/1.4.二叉树系列/403.html)                                               
    - [04.BST 的查找(700)](http://www.geekxh.com/1.4.二叉树系列/404.html)                                               
    - [05.BST 的删除(450)](http://www.geekxh.com/1.4.二叉树系列/405.html)                                               
    - [06.平衡二叉树(110)](http://www.geekxh.com/1.4.二叉树系列/406.html)                                               
    - [07.完全二叉树(222)](http://www.geekxh.com/1.4.二叉树系列/407.html)                                               
    - [08.二叉树的剪枝(814)](http://www.geekxh.com/1.4.二叉树系列/408.html)                                               
- 滑动窗口
    - [01.滑动窗口最大值（239）](http://www.geekxh.com/1.5.滑动窗口系列/501.html)                                                
    - [02.无重复字符的最长子串（3）](http://www.geekxh.com/1.5.滑动窗口系列/502.html)                                                
    - [03.找到字符串中所有字母异位词（438）](http://www.geekxh.com/1.5.滑动窗口系列/503.html)                                                
    - [04.和为s的连续正数序列](http://www.geekxh.com/1.5.滑动窗口系列/504.html)   
- 博弈论                                             
    - [01.囚徒困境](http://www.geekxh.com/1.6.博弈论系列/601.html)                                                
    - [02.辛普森悖论](http://www.geekxh.com/1.6.博弈论系列/602.html)                                                
    - [03.红眼睛和蓝眼睛](http://www.geekxh.com/1.6.博弈论系列/603.html)                                                 
    - [04.海盗分金币](http://www.geekxh.com/1.6.博弈论系列/604.html)                                                
    - [05.智猪博弈](http://www.geekxh.com/1.6.博弈论系列/605.html)                                                
    - [06.生男生女的问题](http://www.geekxh.com/1.6.博弈论系列/606.html)                                                
    - [07.硬币问题](http://www.geekxh.com/1.6.博弈论系列/607.html)                                                
    - [08.画圈圈的问题](http://www.geekxh.com/1.6.博弈论系列/608.html)                                                
    - [09.巧克力问题](http://www.geekxh.com/1.6.博弈论系列/609.html)                                                
    - [10.大鱼和小鱼的问题](http://www.geekxh.com/1.6.博弈论系列/610.html)  
- 位运算                                              
    - [01.使用位运算求和](http://www.geekxh.com/1.8.位运算系列/801.html)                                                
    - [02.2的幂(231)](http://www.geekxh.com/1.8.位运算系列/802.html)                                                
    - [03.返回一个数二进制中1的个数](http://www.geekxh.com/1.8.位运算系列/803.html)                                                 
    - [04.只出现一次的数字](http://www.geekxh.com/1.8.位运算系列/804.html)                                                 
    - [05.只出现一次的数字Ⅱ](http://www.geekxh.com/1.8.位运算系列/805.html)                                                 
    - [06.缺失数字(268)](http://www.geekxh.com/1.8.位运算系列/806.html) 
- 二分法                                                
    - [01.爱吃香蕉的珂珂（875）](http://www.geekxh.com/1.9.二分法系列/901.html)                                                
    - [02.x的平方根（69）](http://www.geekxh.com/1.9.二分法系列/902.html)                                                
    - [03.x的平方根（69）](http://www.geekxh.com/1.9.二分法系列/903.html)                                                 
    - [04.旋转排序数组中的最小值Ⅰ（153）](http://www.geekxh.com/1.9.二分法系列/904.html)                                                 
    - [05.旋转排序数组中的最小值Ⅱ(154)](http://www.geekxh.com/1.9.二分法系列/905.html)                                                 
    - [06.供暖器（475）](http://www.geekxh.com/1.9.二分法系列/906.html)   
- 其他高频面试题目                                              
    - [01.螺旋矩阵(54)](http://www.geekxh.com/1.99.其他补充题目/01.html)                                                 
    - [02.只有两个键的键盘(650)](http://www.geekxh.com/1.99.其他补充题目/02.html)                                                 
    - [03.24点游戏(679)](http://www.geekxh.com/1.99.其他补充题目/03.html)                                                 
    - [04.飞机座位分配概率(1227)](http://www.geekxh.com/1.99.其他补充题目/04.html)                                                 
    - [05.水分子的产生](http://www.geekxh.com/1.99.其他补充题目/05.html)                                                 
    - [06.救生艇(881)](http://www.geekxh.com/1.99.其他补充题目/06.html)                                                 
    - [07.救生艇(881)](http://www.geekxh.com/1.99.其他补充题目/07.html)                                                 
    - [08.灯泡开关(319)](http://www.geekxh.com/1.99.其他补充题目/08.html)                                                 
    - [09.三门问题](http://www.geekxh.com/1.99.其他补充题目/09.html)                                                 
    - [10.猜数字游戏(299)](http://www.geekxh.com/1.99.其他补充题目/10.html)                                                 
    - [11.LRU缓存机制(146)](http://www.geekxh.com/1.99.其他补充题目/11.html)                                                 
    - [12.最小的k个数](http://www.geekxh.com/1.99.其他补充题目/12.html)                                                 
    - [13.不同路径](http://www.geekxh.com/1.99.其他补充题目/13.html)                                                 
    - [14.不同路径-障碍物](http://www.geekxh.com/1.99.其他补充题目/14.html)                                                 
    - [15.连续n个数的和](http://www.geekxh.com/1.99.其他补充题目/15.html)                                                 
    - [16.盛水最多的容器](http://www.geekxh.com/1.99.其他补充题目/16.html)                                                 
    - [17.扑克牌中的顺子容器](http://www.geekxh.com/1.99.其他补充题目/17.html)                                                 
    - [18.整数拆分(343)](http://www.geekxh.com/1.99.其他补充题目/18.html)                                                 
    - [19.移动石子到连续(1033)](http://www.geekxh.com/1.99.其他补充题目/19.html)                                                 
    - [20.Nim游戏(292)](http://www.geekxh.com/1.99.其他补充题目/20.html)                                                 
    - [21.寻找两个正序数组的中位数(4)](http://www.geekxh.com/1.99.其他补充题目/21.html)                                                 
    - [22.第k个最大元素（215）](http://www.geekxh.com/1.99.其他补充题目/22.html)                                                 
    - [23.镜面反射（858）](http://www.geekxh.com/1.99.其他补充题目/23.html)                                                 
    - [25.整数转罗马数字（12）](http://www.geekxh.com/1.99.其他补充题目/25.html)                                                 
    - [26.荷兰国旗问题](http://www.geekxh.com/1.99.其他补充题目/26.html)                                                 
    - [27.六九问题](http://www.geekxh.com/1.99.其他补充题目/27.html)                                                 
    - [28.有效的数独](http://www.geekxh.com/1.99.其他补充题目/28.html)                                                 
    - [29.费米估算](http://www.geekxh.com/1.99.其他补充题目/29.html)                                                 
    - [30.分发饼干](http://www.geekxh.com/1.99.其他补充题目/30.html)                                                 
    - [31.生命游戏（289）](http://www.geekxh.com/1.99.其他补充题目/31.html)                                                 
    - [32.搜索二维矩阵（74）](http://www.geekxh.com/1.99.其他补充题目/32.html)                                                 
    - [33.子集（78）](http://www.geekxh.com/1.99.其他补充题目/33.html)                                                 
    - [34.面试中的智力题](http://www.geekxh.com/1.99.其他补充题目/34.html)                                                 
    - [35.旋转图像（48）](http://www.geekxh.com/1.99.其他补充题目/51.html)                                                 

</details>

### PART_3_大厂面试（更新中）

<details><summary><a>显示更多</a></summary></br>

考虑到现在网上面经实在太杂，很多都冠以 “BAT” 之名，重复率、错误率都非常高。所以我尽可能的挑选出了我认为比较好的 50 篇面经（基本不重复），并对内容做了分类。

建议大家把这个页面收藏起来，防止后面需要的时候找不到了。（整理了近40个小时，跪求star~）

- [系统设计-长文（非常建议读，我自己也看了）](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md)
- [后端-社招(两年): 蚂蚁 头条 PingCAP](https://github.com/aylei/interview)
- [后端-京东-JAVA](https://www.cnblogs.com/wupeixuan/p/8908524.html#%E4%B8%80%E3%80%81java)
- [后端-百度-高并发抢红包设计](https://github.com/xbox1994/Java-Interview/blob/master/MD/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1-%E9%AB%98%E5%B9%B6%E5%8F%91%E6%8A%A2%E7%BA%A2%E5%8C%85.md)
- [NLP（机器学习）-百度](https://www.e-learn.cn/topic/95743)

</details>


### PART_4_CS_知识汇总(TODO)

### License

本项目除部分引用开源技术文档的内容外，大部分为本人原创。欢迎任何以学习为目的的传播，但未授权任何平台进行转载！
"
qmk/qmk_firmware,C,"# Quantum Mechanical Keyboard Firmware

[![Current Version](https://img.shields.io/github/tag/qmk/qmk_firmware.svg)](https://github.com/qmk/qmk_firmware/tags)
[![Discord](https://img.shields.io/discord/440868230475677696.svg)](https://discord.gg/Uq7gcHh)
[![Docs Status](https://img.shields.io/badge/docs-ready-orange.svg)](https://docs.qmk.fm)
[![GitHub contributors](https://img.shields.io/github/contributors/qmk/qmk_firmware.svg)](https://github.com/qmk/qmk_firmware/pulse/monthly)
[![GitHub forks](https://img.shields.io/github/forks/qmk/qmk_firmware.svg?style=social&label=Fork)](https://github.com/qmk/qmk_firmware/)

This is a keyboard firmware based on the [tmk\_keyboard firmware](https://github.com/tmk/tmk_keyboard) with some useful features for Atmel AVR and ARM controllers, and more specifically, the [OLKB product line](https://olkb.com), the [ErgoDox EZ](https://ergodox-ez.com) keyboard, and the [Clueboard product line](https://clueboard.co).

## Documentation

* [See the official documentation on docs.qmk.fm](https://docs.qmk.fm)

The docs are powered by [Docsify](https://docsify.js.org/) and hosted on [GitHub](/docs/). They are also viewable offline; see [Previewing the Documentation](https://docs.qmk.fm/#/contributing?id=previewing-the-documentation) for more details.

You can request changes by making a fork and opening a [pull request](https://github.com/qmk/qmk_firmware/pulls), or by clicking the ""Edit this page"" link at the bottom of any page.

## Supported Keyboards

* [Planck](/keyboards/planck/)
* [Preonic](/keyboards/preonic/)
* [ErgoDox EZ](/keyboards/ergodox_ez/)
* [Clueboard](/keyboards/clueboard/)
* [Cluepad](/keyboards/clueboard/17/)
* [Atreus](/keyboards/atreus/)

The project also includes community support for [lots of other keyboards](/keyboards/).

## Maintainers

QMK is developed and maintained by Jack Humbert of OLKB with contributions from the community, and of course, [Hasu](https://github.com/tmk). The OLKB product firmwares are maintained by [Jack Humbert](https://github.com/jackhumbert), the Ergodox EZ by [ZSA Technology Labs](https://github.com/zsa), the Clueboard by [Zach White](https://github.com/skullydazed), and the Atreus by [Phil Hagelberg](https://github.com/technomancy).

## Official Website

[qmk.fm](https://qmk.fm) is the official website of QMK, where you can find links to this page, the documentation, and the keyboards supported by QMK.
"
php/php-src,C,"<div align=""center"">
    <a href=""https://php.net"">
        <img
            alt=""PHP""
            src=""https://www.php.net/images/logos/new-php-logo.svg""
            width=""150"">
    </a>
</div>

# The PHP Interpreter

PHP is a popular general-purpose scripting language that is especially suited to
web development. Fast, flexible and pragmatic, PHP powers everything from your
blog to the most popular websites in the world. PHP is distributed under the
[PHP License v3.01](LICENSE).

[![Push](https://github.com/php/php-src/actions/workflows/push.yml/badge.svg)](https://github.com/php/php-src/actions/workflows/push.yml)
[![Build status](https://travis-ci.com/php/php-src.svg?branch=master)](https://travis-ci.com/github/php/php-src)
[![Build status](https://ci.appveyor.com/api/projects/status/meyur6fviaxgdwdy/branch/master?svg=true)](https://ci.appveyor.com/project/php/php-src)
[![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/php.svg)](https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&can=1&q=proj:php)

## Documentation

The PHP manual is available at [php.net/docs](https://php.net/docs).

## Installation

### Prebuilt packages and binaries

Prebuilt packages and binaries can be used to get up and running fast with PHP.

For Windows, the PHP binaries can be obtained from
[windows.php.net](https://windows.php.net). After extracting the archive the
`*.exe` files are ready to use.

For other systems, see the [installation chapter](https://php.net/install).

### Building PHP source code

*For Windows, see [Build your own PHP on Windows](https://wiki.php.net/internals/windows/stepbystepbuild_sdk_2).*

For a minimal PHP build from Git, you will need autoconf, bison, and re2c. For
a default build, you will additionally need libxml2 and libsqlite3.

On Ubuntu, you can install these using:

    sudo apt install -y pkg-config build-essential autoconf bison re2c \
                        libxml2-dev libsqlite3-dev

On Fedora, you can install these using:

    sudo dnf install re2c bison autoconf make libtool ccache libxml2-devel sqlite-devel

Generate configure:

    ./buildconf

Configure your build. `--enable-debug` is recommended for development, see
`./configure --help` for a full list of options.

    # For development
    ./configure --enable-debug
    # For production
    ./configure

Build PHP. To speed up the build, specify the maximum number of jobs using `-j`:

    make -j4

The number of jobs should usually match the number of available cores, which
can be determined using `nproc`.

## Testing PHP source code

PHP ships with an extensive test suite, the command `make test` is used after
successful compilation of the sources to run this test suite.

It is possible to run tests using multiple cores by setting `-jN` in
`TEST_PHP_ARGS`:

    make TEST_PHP_ARGS=-j4 test

Shall run `make test` with a maximum of 4 concurrent jobs: Generally the maximum
number of jobs should not exceed the number of cores available.

The [qa.php.net](https://qa.php.net) site provides more detailed info about
testing and quality assurance.

## Installing PHP built from source

After a successful build (and test), PHP may be installed with:

    make install

Depending on your permissions and prefix, `make install` may need super user
permissions.

## PHP extensions

Extensions provide additional functionality on top of PHP. PHP consists of many
essential bundled extensions. Additional extensions can be found in the PHP
Extension Community Library - [PECL](https://pecl.php.net).

## Contributing

The PHP source code is located in the Git repository at
[github.com/php/php-src](https://github.com/php/php-src). Contributions are most
welcome by forking the repository and sending a pull request.

Discussions are done on GitHub, but depending on the topic can also be relayed
to the official PHP developer mailing list internals@lists.php.net.

New features require an RFC and must be accepted by the developers. See
[Request for comments - RFC](https://wiki.php.net/rfc) and
[Voting on PHP features](https://wiki.php.net/rfc/voting) for more information
on the process.

Bug fixes don't require an RFC. If the bug has a GitHub issue, reference it in
the commit message using `GH-NNNNNN`. Use `#NNNNNN` for tickets in the old
[bugs.php.net](https://bugs.php.net) bug tracker.

    Fix GH-7815: php_uname doesn't recognise latest Windows versions
    Fix #55371: get_magic_quotes_gpc() throws deprecation warning

See [Git workflow](https://wiki.php.net/vcs/gitworkflow) for details on how pull
requests are merged.

### Guidelines for contributors

See further documents in the repository for more information on how to
contribute:

- [Contributing to PHP](/CONTRIBUTING.md)
- [PHP coding standards](/CODING_STANDARDS.md)
- [Mailing list rules](/docs/mailinglist-rules.md)
- [PHP release process](/docs/release-process.md)

## Credits

For the list of people who've put work into PHP, please see the
[PHP credits page](https://php.net/credits.php).
"
espressif/arduino-esp32,C,"# Arduino core for the ESP32, ESP32-S2, ESP32-S3 and ESP32-C3

![Build Status](https://github.com/espressif/arduino-esp32/workflows/ESP32%20Arduino%20CI/badge.svg) [![Documentation Status](https://readthedocs.com/projects/espressif-arduino-esp32/badge/?version=latest)](https://docs.espressif.com/projects/arduino-esp32/en/latest/?badge=latest)
[![External Libraries Test](https://github.com/espressif/arduino-esp32/actions/workflows/lib.yml/badge.svg?branch=master&event=schedule)](https://github.com/espressif/arduino-esp32/actions/workflows/lib.yml?link=http://https://github.com/espressif/arduino-esp32/blob/master/LIBRARIES_TEST.md)

### Need help or have a question? Join the chat at [Gitter](https://gitter.im/espressif/arduino-esp32) or [open a new Discussion](https://github.com/espressif/arduino-esp32/discussions)

## Contents

  - [Development Status](#development-status)
  - [Development Planning](#development-planning)
  - [Documentation](#documentation)
  - [Supported Chips](#supported-chips)
  - [Decoding exceptions](#decoding-exceptions)
  - [Issue/Bug report template](#issuebug-report-template)
  - [Contributing](#contributing)

### Development Status

Latest Stable Release  [![Release Version](https://img.shields.io/github/release/espressif/arduino-esp32.svg?style=plastic)](https://github.com/espressif/arduino-esp32/releases/latest/) [![Release Date](https://img.shields.io/github/release-date/espressif/arduino-esp32.svg?style=plastic)](https://github.com/espressif/arduino-esp32/releases/latest/) [![Downloads](https://img.shields.io/github/downloads/espressif/arduino-esp32/latest/total.svg?style=plastic)](https://github.com/espressif/arduino-esp32/releases/latest/)

Latest Development Release  [![Release Version](https://img.shields.io/github/release/espressif/arduino-esp32/all.svg?style=plastic)](https://github.com/espressif/arduino-esp32/releases/) [![Release Date](https://img.shields.io/github/release-date-pre/espressif/arduino-esp32.svg?style=plastic)](https://github.com/espressif/arduino-esp32/releases/) [![Downloads](https://img.shields.io/github/downloads-pre/espressif/arduino-esp32/latest/total.svg?style=plastic)](https://github.com/espressif/arduino-esp32/releases/)

### Development Planning

Our Development is fully tracked on this public **[Roadmap 🎉](https://github.com/orgs/espressif/projects/3)**

For even more information you can take a look at [Sprint Meeting notes](https://github.com/espressif/arduino-esp32/discussions/categories/sprints-meeting-notes) or join [Monthly Community Meetings 🔔](https://github.com/espressif/arduino-esp32/discussions/categories/monthly-community-meetings)

### Documentation

You can use the [Arduino-ESP32 Online Documentation](https://docs.espressif.com/projects/arduino-esp32/en/latest/) to get all information about this project.

* [Getting Started](https://docs.espressif.com/projects/arduino-esp32/en/latest/getting_started.html)
* [Installing (Windows, Linux and macOS)](https://docs.espressif.com/projects/arduino-esp32/en/latest/installing.html)
* [Libraries](https://docs.espressif.com/projects/arduino-esp32/en/latest/libraries.html)
* [Arduino as an ESP-IDF component](https://docs.espressif.com/projects/arduino-esp32/en/latest/esp-idf_component.html)
* [FAQ](https://docs.espressif.com/projects/arduino-esp32/en/latest/faq.html)
* [Troubleshooting](https://docs.espressif.com/projects/arduino-esp32/en/latest/troubleshooting.html)

### Supported Chips

Visit the [supported chips](https://docs.espressif.com/projects/arduino-esp32/en/latest/getting_started.html#supported-soc-s) documentation to see the list of current supported ESP32 SoCs.

### Decoding exceptions

You can use [EspExceptionDecoder](https://github.com/me-no-dev/EspExceptionDecoder) to get meaningful call trace.

### Issue/Bug report template

Before reporting an issue, make sure you've searched for similar one that was already created. Also make sure to go through all the issues labelled as [Type: For reference](https://github.com/espressif/arduino-esp32/issues?q=is%3Aissue+label%3A%22Type%3A+For+reference%22+).

Finally, if you are sure no one else had the issue, follow the **Issue template** or **Feature request template** while reporting any [new Issue](https://github.com/espressif/arduino-esp32/issues/new/choose).

### External libraries compilation test

We have set-up CI testing for external libraries for ESP32 Arduino core. You can check test results in the file [LIBRARIES_TEST](https://github.com/espressif/arduino-esp32/blob/gh-pages/LIBRARIES_TEST.md).
For more information and how to add your library to the test see [external library testing](https://docs.espressif.com/projects/arduino-esp32/en/latest/external_libraries_test.html) in the documentation.

### Contributing

We welcome contributions to the Arduino ESP32 project!

See [contributing](https://docs.espressif.com/projects/arduino-esp32/en/latest/contributing.html) in the documentation for more information on how to contribute to the project.

> We would like to have this repository in a polite and friendly atmosphere, so please be kind and respectful to others. For more details, look at [Code of Conduct](https://github.com/espressif/arduino-esp32/blob/master/CODE_OF_CONDUCT.md).
"
ustcwpz/USTC-CS-Courses-Resource,C,"# USTC-CS-Courses-Resource
>这是一个收集USTC-CS(也有较少的其他课程)的课程资源的repo,包括课程电子版书籍,参考书,ppt,考试试卷,学习心得,项目代码,某些书的答案.目的是为学弟学妹提供参考

# 管理与投稿
非常欢迎大家的参与与贡献
投稿方式建议fork & PR, 若想帮忙管理(collaborator), 请联系我.

# 结构
每门课程大致结构如下,某些栏目可有可无
* PPT
* hm&lab
* 参考
* 教材
* 学习心得与经验

# 贡献者名单
[点这里](https://github.com/mbinary/USTC-CS-Courses-Resource/graphs/contributors)

# 版权声明
所有资源,著作权归原作者所有, 此repo的目的是**`学习交流`**.
如果使用者的不当使用造成不良后果, 与此repo的贡献者无关.

"
holbertonschool/your_first_code,C,
miloyip/json-tutorial,C,"# 从零开始的 JSON 库教程

* Milo Yip
* 2016/9/15

也许有很多同学上过 C/C++ 的课后，可以完成一些简单的编程练习，又能在一些网站刷题，但对于如何开发有实际用途的程序可能感到束手无策。本教程希望能以一个简单的项目开发形式，让同学能逐步理解如何从无到有去开发软件。

为什么选择 JSON？因为它足够简单，除基本编程外不需大量技术背景知识。JSON 有标准，可按照标准逐步实现。JSON 也是实际在许多应用上会使用的格式，所以才会有大量的开源库。

这是一个免费、开源的教程，如果你喜欢，也可以打赏鼓励。因为工作及家庭因素，不能保证每篇文章的首发时间，请各位见谅。

## 对象与目标

教程对象：学习过基本 C/C++ 编程的同学。

通过这个教程，同学可以了解如何从零开始写一个 JSON 库，其特性如下：

* 符合标准的 JSON 解析器和生成器
* 手写的递归下降解析器（recursive descent parser）
* 使用标准 C 语言（C89）
* 跨平台／编译器（如 Windows／Linux／OS X，vc／gcc／clang）
* 仅支持 UTF-8 JSON 文本
* 仅支持以 `double` 存储 JSON number 类型
* 解析器和生成器的代码合共少于 500 行

除了围绕 JSON 作为例子，希望能在教程中讲述一些课题：

* 测试驱动开发（test driven development, TDD）
* C 语言编程风格
* 数据结构
* API 设计
* 断言
* Unicode
* 浮点数
* Github、CMake、valgrind、Doxygen 等工具

## 教程大纲

本教程预计分为 9 个单元，第 1-8 个单元附带练习和解答。

1. [启程](tutorial01/tutorial01.md)（2016/9/15 完成）：编译环境、JSON 简介、测试驱动、解析器主要函数及各数据结构。练习 JSON 布尔类型的解析。[启程解答篇](tutorial01_answer/tutorial01_answer.md)（2016/9/17 完成）。
2. [解析数字](tutorial02/tutorial02.md)（2016/9/18 完成）：JSON number 的语法。练习 JSON number 类型的校验。[解析数字解答篇](tutorial02_answer/tutorial02_answer.md)（2016/9/20 完成）。
3. [解析字符串](tutorial03/tutorial03.md)（2016/9/22 完成）：使用 union 存储 variant、自动扩展的堆栈、JSON string 的语法、valgrind。练习最基本的 JSON string 类型的解析、内存释放。[解析字符串解答篇](tutorial03_answer/tutorial03_answer.md)（2016/9/27 完成）。
4. [Unicode](tutorial04/tutorial04.md)（2016/10/2 完成）：Unicode 和 UTF-8 的基本知识、JSON string 的 unicode 处理。练习完成 JSON string 类型的解析。[Unicode 解答篇](tutorial04_answer/tutorial04_answer.md)（2016/10/6 完成）。
5. [解析数组](tutorial05/tutorial05.md)（2016/10/7 完成）：JSON array 的语法。练习完成 JSON array 类型的解析、相关内存释放。[解析数组解答篇](tutorial05_answer/tutorial05_answer.md)（2016/10/13 完成）。
6. [解析对象](tutorial06/tutorial06.md)（2016/10/29 完成）：JSON object 的语法、重构 string 解析函数。练习完成 JSON object 的解析、相关内存释放。[解析对象解答篇](tutorial06_answer/tutorial06_answer.md)（2016/11/15 完成）。
7. [生成器](tutorial07/tutorial07.md)（2016/12/20 完成）：JSON 生成过程、注意事项。练习完成 JSON 生成器。[生成器解答篇](tutorial07_answer/tutorial07_answer.md)（2017/1/5 完成）。
8. [访问与其他功能](tutorial08/tutorial08.md)（2018/6/2 完成）：JSON array／object 的访问及修改。练习完成相关功能。
9. 终点及新开始：加入 nativejson-benchmark 测试，与 RapidJSON 对比及展望。

## 关于作者

叶劲峰（Milo Yip）现任腾讯 T4 专家、互动娱乐事业群魔方工作室群游戏客户端技术总监。他获得香港大学认知科学学士（BCogSc）、香港中文大学系统工程及工程管理哲学硕士（MPhil）。他是《游戏引擎架构》译者、《C++ Primer 中文版（第五版）》审校。他曾参与《天涯明月刀》、《斗战神》、《爱丽丝：疯狂回归》、《美食从天降》、《王子传奇》等游戏项目，以及多个游戏引擎及中间件的研发。他是开源项目 [RapidJSON](https://github.com/miloyip/rapidjson) 的作者，开发 [nativejson-benchmark](https://github.com/miloyip/nativejson-benchmark) 比较 41 个开源原生 JSON 库的标准符合程度及性能。他在 1990 年学习 C 语言，1995 年开始使用 C++ 于各种项目。
"
TheAlgorithms/C,C,"# The Algorithms - C # {#mainpage}
<!-- the suffix in the above line is required for doxygen to consider this as the index page of the generated documentation site -->

[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/TheAlgorithms/C)
[![CodeQL CI](https://github.com/TheAlgorithms/C/actions/workflows/codeql.yml/badge.svg)](https://github.com/TheAlgorithms/C/actions/workflows/codeql_analysis.yml)
[![Gitter chat](https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&logo=gitter&style=flat-square)](https://gitter.im/TheAlgorithms)
[![contributions welcome](https://img.shields.io/static/v1.svg?label=Contributions&message=Welcome&color=0059b3&style=flat-square)](https://github.com/TheAlgorithms/C/blob/master/CONTRIBUTING.md)
![GitHub repo size](https://img.shields.io/github/repo-size/TheAlgorithms/C?color=red&style=flat-square)
[![Doxygen CI](https://github.com/TheAlgorithms/C/workflows/Doxygen%20CI/badge.svg)](https://TheAlgorithms.github.io/C)
[![Awesome CI](https://github.com/TheAlgorithms/C/workflows/Awesome%20CI%20Workflow/badge.svg)](https://github.com/TheAlgorithms/C/actions?query=workflow%3A%22Awesome+CI+Workflow%22)
[![Income](https://img.shields.io/liberapay/receives/TheAlgorithms.svg?logo=liberapay)](https://liberapay.com/TheAlgorithms)
[![Discord chat](https://img.shields.io/discord/808045925556682782.svg?logo=discord&colorB=5865F2)](https://the-algorithms.com/discord/)
[![Donate](https://liberapay.com/assets/widgets/donate.svg)](https://liberapay.com/TheAlgorithms/donate)

## Overview

The repository is a collection of open-source implementations of a variety of algorithms implemented in C and licensed under [GPLv3 License](https://github.com/TheAlgorithms/C/blob/master/LICENSE). The algorithms span a variety of topics from computer science, mathematics and statistics, data science, machine learning, engineering, etc.. The implementations and their associated documentations are meant to provide a learning resource for educators and students. Hence, one may find more than one implementation for the same objective but using different algorithm strategies and optimizations.

## Features

* The repository provides implementations of various algorithms in one of the most fundamental general purpose languages - [C](https://en.wikipedia.org/wiki/C_(programming_language)).
* Well documented source code with detailed explanations provide a valuable resource for educators and students alike.
* Each source code is atomic using standard C library [`libc`](https://en.wikipedia.org/wiki/C_standard_library) and _no external libraries_ are required for their compilation and execution. Thus the fundamentals of the algorithms can be studied in much depth.
* Source codes are [compiled and tested](https://github.com/TheAlgorithms/C/actions?query=workflow%3A%22Awesome+CI+Workflow%22) for every commit on the latest versions of three major operating systems viz., Windows, MacOS and Ubuntu (Linux) using MSVC 16 2019, AppleClang 11.0 and GNU 7.5.0 respectively.
* Strict adherence to [C11](https://en.wikipedia.org/wiki/C11_(C_standard_revision)) standard ensures portability of code to embedded systems as well like ESP32, ARM Cortex, etc. with little to no changes.
* Self-checks within programs ensure correct implementations with confidence.
* Modular implementations and OpenSource licensing enable the functions to be utilized conveniently in other applications.

## Documentation

[Online Documentation](https://TheAlgorithms.github.io/C) is generated from the repository source codes directly. The documentation contains all resources including source code snippets, details on execution of the programs, diagrammatic representation of program flow, and links to external resources where necessary.
Click on [Files menu](https://TheAlgorithms.github.io/C/files.html) to see the list of all the files documented with the code.

[Documentation of Algorithms in C](https://thealgorithms.github.io/C) by [The Algorithms Contributors](https://github.com/TheAlgorithms/C/graphs/contributors) is licensed under [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)<br/>
<a href=""https://creativecommons.org/licenses/by-sa/4.0""><img alt=""Creative Commons License"" style=""height:22px!important;margin-left: 3px;vertical-align:text-bottom;"" src=""https://mirrors.creativecommons.org/presskit/icons/cc.svg"" /><img  alt=""Credit must be given to the creator"" style=""height:22px!important;margin-left: 3px;vertical-align:text-bottom;"" src=""https://mirrors.creativecommons.org/presskit/icons/by.svg"" /><img alt=""Adaptations must be shared under the same terms"" style=""height:22px!important;margin-left: 3px;vertical-align:text-bottom;"" src=""https://mirrors.creativecommons.org/presskit/icons/sa.svg"" /></a>

## Contributions

As a community developed and maintained repository, we welcome new un-plagiarized quality contributions. Please read our [Contribution Guidelines](https://github.com/TheAlgorithms/C/blob/master/CONTRIBUTING.md).
"
arut/nginx-rtmp-module,C,"# NGINX-based Media Streaming Server
## nginx-rtmp-module


### Project blog

  http://nginx-rtmp.blogspot.com

### Wiki manual

  https://github.com/arut/nginx-rtmp-module/wiki/Directives

### Google group

  https://groups.google.com/group/nginx-rtmp

  https://groups.google.com/group/nginx-rtmp-ru (Russian)

### Donation page (Paypal etc)

  http://arut.github.com/nginx-rtmp-module/

### Features

* RTMP/HLS/MPEG-DASH live streaming

* RTMP Video on demand FLV/MP4,
  playing from local filesystem or HTTP

* Stream relay support for distributed
  streaming: push & pull models

* Recording streams in multiple FLVs

* H264/AAC support

* Online transcoding with FFmpeg

* HTTP callbacks (publish/play/record/update etc)

* Running external programs on certain events (exec)

* HTTP control module for recording audio/video and dropping clients

* Advanced buffering techniques
  to keep memory allocations at a minimum
  level for faster streaming and low
  memory footprint

* Proved to work with Wirecast, FMS, Wowza,
  JWPlayer, FlowPlayer, StrobeMediaPlayback,
  ffmpeg, avconv, rtmpdump, flvstreamer
  and many more

* Statistics in XML/XSL in machine- & human-
  readable form

* Linux/FreeBSD/MacOS/Windows

### Build

cd to NGINX source directory & run this:

    ./configure --add-module=/path/to/nginx-rtmp-module
    make
    make install

Several versions of nginx (1.3.14 - 1.5.0) require http_ssl_module to be
added as well:

    ./configure --add-module=/path/to/nginx-rtmp-module --with-http_ssl_module

For building debug version of nginx add `--with-debug`

    ./configure --add-module=/path/to-nginx/rtmp-module --with-debug

[Read more about debug log](https://github.com/arut/nginx-rtmp-module/wiki/Debug-log)

### Windows limitations

Windows support is limited. These features are not supported

* execs
* static pulls
* auto_push

### RTMP URL format

    rtmp://rtmp.example.com/app[/name]

app -  should match one of application {}
         blocks in config

name - interpreted by each application
         can be empty


### Multi-worker live streaming

Module supports multi-worker live
streaming through automatic stream pushing
to nginx workers. This option is toggled with
rtmp_auto_push directive.


### Example nginx.conf

    rtmp {

        server {

            listen 1935;

            chunk_size 4000;

            # TV mode: one publisher, many subscribers
            application mytv {

                # enable live streaming
                live on;

                # record first 1K of stream
                record all;
                record_path /tmp/av;
                record_max_size 1K;

                # append current timestamp to each flv
                record_unique on;

                # publish only from localhost
                allow publish 127.0.0.1;
                deny publish all;

                #allow play all;
            }

            # Transcoding (ffmpeg needed)
            application big {
                live on;

                # On every pusblished stream run this command (ffmpeg)
                # with substitutions: $app/${app}, $name/${name} for application & stream name.
                #
                # This ffmpeg call receives stream from this application &
                # reduces the resolution down to 32x32. The stream is the published to
                # 'small' application (see below) under the same name.
                #
                # ffmpeg can do anything with the stream like video/audio
                # transcoding, resizing, altering container/codec params etc
                #
                # Multiple exec lines can be specified.

                exec ffmpeg -re -i rtmp://localhost:1935/$app/$name -vcodec flv -acodec copy -s 32x32
                            -f flv rtmp://localhost:1935/small/${name};
            }

            application small {
                live on;
                # Video with reduced resolution comes here from ffmpeg
            }

            application webcam {
                live on;

                # Stream from local webcam
                exec_static ffmpeg -f video4linux2 -i /dev/video0 -c:v libx264 -an
                                   -f flv rtmp://localhost:1935/webcam/mystream;
            }

            application mypush {
                live on;

                # Every stream published here
                # is automatically pushed to
                # these two machines
                push rtmp1.example.com;
                push rtmp2.example.com:1934;
            }

            application mypull {
                live on;

                # Pull all streams from remote machine
                # and play locally
                pull rtmp://rtmp3.example.com pageUrl=www.example.com/index.html;
            }

            application mystaticpull {
                live on;

                # Static pull is started at nginx start
                pull rtmp://rtmp4.example.com pageUrl=www.example.com/index.html name=mystream static;
            }

            # video on demand
            application vod {
                play /var/flvs;
            }

            application vod2 {
                play /var/mp4s;
            }

            # Many publishers, many subscribers
            # no checks, no recording
            application videochat {

                live on;

                # The following notifications receive all
                # the session variables as well as
                # particular call arguments in HTTP POST
                # request

                # Make HTTP request & use HTTP retcode
                # to decide whether to allow publishing
                # from this connection or not
                on_publish http://localhost:8080/publish;

                # Same with playing
                on_play http://localhost:8080/play;

                # Publish/play end (repeats on disconnect)
                on_done http://localhost:8080/done;

                # All above mentioned notifications receive
                # standard connect() arguments as well as
                # play/publish ones. If any arguments are sent
                # with GET-style syntax to play & publish
                # these are also included.
                # Example URL:
                #   rtmp://localhost/myapp/mystream?a=b&c=d

                # record 10 video keyframes (no audio) every 2 minutes
                record keyframes;
                record_path /tmp/vc;
                record_max_frames 10;
                record_interval 2m;

                # Async notify about an flv recorded
                on_record_done http://localhost:8080/record_done;

            }


            # HLS

            # For HLS to work please create a directory in tmpfs (/tmp/hls here)
            # for the fragments. The directory contents is served via HTTP (see
            # http{} section in config)
            #
            # Incoming stream must be in H264/AAC. For iPhones use baseline H264
            # profile (see ffmpeg example).
            # This example creates RTMP stream from movie ready for HLS:
            #
            # ffmpeg -loglevel verbose -re -i movie.avi  -vcodec libx264
            #    -vprofile baseline -acodec libmp3lame -ar 44100 -ac 1
            #    -f flv rtmp://localhost:1935/hls/movie
            #
            # If you need to transcode live stream use 'exec' feature.
            #
            application hls {
                live on;
                hls on;
                hls_path /tmp/hls;
            }

            # MPEG-DASH is similar to HLS

            application dash {
                live on;
                dash on;
                dash_path /tmp/dash;
            }
        }
    }

    # HTTP can be used for accessing RTMP stats
    http {

        server {

            listen      8080;

            # This URL provides RTMP statistics in XML
            location /stat {
                rtmp_stat all;

                # Use this stylesheet to view XML as web page
                # in browser
                rtmp_stat_stylesheet stat.xsl;
            }

            location /stat.xsl {
                # XML stylesheet to view RTMP stats.
                # Copy stat.xsl wherever you want
                # and put the full directory path here
                root /path/to/stat.xsl/;
            }

            location /hls {
                # Serve HLS fragments
                types {
                    application/vnd.apple.mpegurl m3u8;
                    video/mp2t ts;
                }
                root /tmp;
                add_header Cache-Control no-cache;
            }

            location /dash {
                # Serve DASH fragments
                root /tmp;
                add_header Cache-Control no-cache;
            }
        }
    }


### Multi-worker streaming example

    rtmp_auto_push on;

    rtmp {
        server {
            listen 1935;

            application mytv {
                live on;
            }
        }
    }
"
libevent/libevent,C,"<p align=""center"">
  <img src=""https://libevent.org/libevent3.png"" alt=""libevent logo""/>
</p>



[![CI](https://github.com/libevent/libevent/actions/workflows/build.yml/badge.svg)](https://github.com/libevent/libevent/actions/workflows/build.yml)
[![Coverage Status](https://coveralls.io/repos/github/libevent/libevent/badge.svg)](https://coveralls.io/github/libevent/libevent)
[![Join the chat at https://gitter.im/libevent/libevent](https://badges.gitter.im/libevent/libevent.svg)](https://gitter.im/libevent/libevent?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![doxygen](https://img.shields.io/badge/doxygen-documentation-blue.svg)](https://libevent.org/doc)



# 1. BUILDING AND INSTALLATION

## CMake (Unix)

```sh
mkdir build && cd build
cmake ..     # Default to Unix Makefiles.
make
make verify  # (optional)
```

See [Documentation/Building#Building on Unix using CMake](/Documentation/Building.md#building-on-unix-cmake) for more information.

## CMake (Windows)

Install CMake: <https://cmake.org/>

```sh
md build && cd build
cmake -G ""Visual Studio 10"" ..   # Or use any generator you want to use. Run cmake --help for a list
cmake --build . --config Release # Or ""start libevent.sln"" and build with menu in Visual Studio.
```

See [Documentation/Building#Building on Windows](/Documentation/Building.md#building-on-windows) for more information.

## Package Managers

You can download and install libevent using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:
```sh
git clone https://github.com/Microsoft/vcpkg.git
cd vcpkg
./bootstrap-vcpkg.sh
./vcpkg integrate install
./vcpkg install libevent
```

The libevent port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.

## Autoconf

*Note, since 2.2 it is deprecated*

```sh
./configure
make
make verify   # (optional)
sudo make install
```

See [Documentation/Building#Autoconf](/Documentation/Building.md#autotools-deprecated) for more information.

# 2. USEFUL LINKS:

For the latest released version of Libevent, see the official website at
<https://libevent.org/> .

There's a pretty good work-in-progress manual up at
   <http://www.wangafu.net/~nickm/libevent-book/> .

For the latest development versions of Libevent, access our Git repository
via

```sh
$ git clone https://github.com/libevent/libevent.git
```

You can browse the git repository online at:

<https://github.com/libevent/libevent>

To report bugs, issues, or ask for new features:

__Patches__: https://github.com/libevent/libevent/pulls
> OK, those are not really _patches_. You fork, modify, and hit the ""Create Pull Request"" button.
> You can still submit normal git patches via the mailing list.

__Bugs, Features [RFC], and Issues__: https://github.com/libevent/libevent/issues
> Or you can do it via the mailing list.

There's also a libevent-users mailing list for talking about Libevent
use and development: 

<https://archives.seul.org/libevent/users/>

# 3. ACKNOWLEDGMENTS

The [following people](/CONTRIBUTORS.md) have helped with suggestions, ideas,
code or fixing bugs.
"
memcached/memcached,C,"# Memcached

Memcached is a high performance multithreaded event-based key/value cache
store intended to be used in a distributed system.

See: https://memcached.org/about

A fun story explaining usage: https://memcached.org/tutorial

If you're having trouble, try the wiki: https://memcached.org/wiki

If you're trying to troubleshoot odd behavior or timeouts, see:
https://memcached.org/timeouts

https://memcached.org/ is a good resource in general. Please use the mailing
list to ask questions, github issues aren't seen by everyone!

## Dependencies

* libevent - https://www.monkey.org/~provos/libevent/ (libevent-dev)
* libseccomp (optional, experimental, linux) - enables process restrictions for
  better security. Tested only on x86-64 architectures.
* openssl (optional) - enables TLS support. need relatively up to date
  version. pkg-config is needed to find openssl dependencies (such as -lz).

## Environment

Be warned that the -k (mlockall) option to memcached might be
dangerous when using a large cache. Just make sure the memcached machines
don't swap.  memcached does non-blocking network I/O, but not disk.  (it
should never go to disk, or you've lost the whole point of it)

## Build status

See https://build.memcached.org/ for multi-platform regression testing status.

## Bug reports

Feel free to use the issue tracker on github.

**If you are reporting a security bug** please contact a maintainer privately.
We follow responsible disclosure: we handle reports privately, prepare a
patch, allow notifications to vendor lists. Then we push a fix release and your
bug can be posted publicly with credit in our release notes and commit
history.

## Website

* https://www.memcached.org

## Contributing

See https://github.com/memcached/memcached/wiki/DevelopmentRepos
"
nginx/nginx,C,
curl/curl,C,"<!--
Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.

SPDX-License-Identifier: curl
-->

# [![curl logo](https://curl.se/logo/curl-logo.svg)](https://curl.se/)

Curl is a command-line tool for transferring data specified with URL
syntax. Find out how to use curl by reading [the curl.1 man
page](https://curl.se/docs/manpage.html) or [the MANUAL
document](https://curl.se/docs/manual.html). Find out how to install Curl
by reading [the INSTALL document](https://curl.se/docs/install.html).

libcurl is the library curl is using to do its job. It is readily available to
be used by your software. Read [the libcurl.3 man
page](https://curl.se/libcurl/c/libcurl.html) to learn how.

You can find answers to the most frequent questions we get in [the FAQ
document](https://curl.se/docs/faq.html).

Study [the COPYING file](https://curl.se/docs/copyright.html) for
distribution terms.

## Contact

If you have problems, questions, ideas or suggestions, please contact us by
posting to a suitable [mailing list](https://curl.se/mail/).

All contributors to the project are listed in [the THANKS
document](https://curl.se/docs/thanks.html).

## Commercial support

For commercial support, maybe private and dedicated help with your problems or
applications using (lib)curl visit [the support page](https://curl.se/support.html).

## Website

Visit the [curl website](https://curl.se/) for the latest news and
downloads.

## Git

To download the latest source from the Git server, do this:

    git clone https://github.com/curl/curl.git

(you will get a directory named curl created, filled with the source code)

## Security problems

Report suspected security problems via [our HackerOne
page](https://hackerone.com/curl) and not in public.

## Notice

Curl contains pieces of source code that is Copyright (c) 1998, 1999 Kungliga
Tekniska Högskolan. This notice is included here to comply with the
distribution terms.

## Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/curl#backer)]

## Sponsors

Support this project by becoming a [sponsor](https://curl.se/sponsors.html).

"
netdata/netdata,C,"<p align=""center""><a href=""https://netdata.cloud""><img src=""https://user-images.githubusercontent.com/1153921/95268672-a3665100-07ec-11eb-8078-db619486d6ad.png"" alt=""Netdata"" width=""300"" /></a></p>

<h3 align=""center"">Netdata is high-fidelity infrastructure monitoring and troubleshooting.<br />Open-source, free, preconfigured, opinionated, and always real-time.</h3>
<br />
<p align=""center"">
  <a href=""https://github.com/netdata/netdata/""><img src=""https://img.shields.io/github/stars/netdata/netdata?style=social"" alt=""GitHub Stars""></a>
  <br />
  <a href=""https://github.com/netdata/netdata/releases/latest""><img src=""https://img.shields.io/github/release/netdata/netdata.svg"" alt=""Latest release""></a>
  <a href=""https://github.com/netdata/netdata-nightlies/releases/latest""><img src=""https://img.shields.io/github/release/netdata/netdata-nightlies.svg"" alt=""Latest nightly build""></a>
  <br />
  <a href=""https://bestpractices.coreinfrastructure.org/projects/2231""><img src=""https://bestpractices.coreinfrastructure.org/projects/2231/badge"" alt=""CII Best Practices""></a>
  <a href=""https://codeclimate.com/github/netdata/netdata""><img src=""https://codeclimate.com/github/netdata/netdata/badges/gpa.svg"" alt=""Code Climate""></a>
  <a href=""https://www.gnu.org/licenses/gpl-3.0""><img src=""https://img.shields.io/badge/License-GPL%20v3%2B-blue.svg"" alt=""License: GPL v3+""></a>
</p>

<img src=""https://user-images.githubusercontent.com/1153921/95269366-1b814680-07ee-11eb-8ff4-c1b0b8758499.png"" alt=""---"" style=""max-width: 100%;"" />

Netdata is a distributed, real-time, performance and health monitoring platform for systems, hardware, containers and applications, collecting thousands of useful metrics with zero configuration needed. It runs permanently on all your physical/virtual servers, containers, cloud deployments, and edge/IoT devices, and is perfectly safe to install on your systems mid-incident without any preparation.

The Netdata [Agent](https://github.com/netdata/netdata) is an enormously powerful, **Open-Sourced**, **Single Node** health monitoring and performance troubleshooting tool.
It gives you the ability to automatically identify processes, collect and store metrics locally and even more - visualize all metrics without any configuration (of course you can tweak it later on if you need).

[Netdata Cloud](https://www.netdata.cloud) is a hosted web interface that gives you **Free**, real-time visibility into your **Entire Infrastructure** with secure access to your Netdata Agents. It provides an ability to automatically route your requests to the most relevant agents to display your metrics, based on the stored metadata (Agents topology, what metrics are collected on specific Agents as well as the retention information for each metric).

It gives you some extra features, like [Metric Correlations](https://github.com/netdata/netdata/blob/master/docs/cloud/insights/metric-correlations.md), [Anomaly Advisor](https://github.com/netdata/netdata/blob/master/docs/cloud/insights/anomaly-advisor.md), [anomaly rates on every chart](https://blog.netdata.cloud/anomaly-rate-in-every-chart/) and much more. 

Try it for yourself right now by checking out the Netdata Cloud [demo space](https://app.netdata.cloud/spaces/netdata-demo/rooms/all-nodes/overview) (No sign up or login needed).

Netdata's mission is to help more people troubleshoot ever more complex IT infrastructures, this is why our **free** [community plan](https://www.netdata.cloud/pricing) gives you ability to monitor unlimited number of Nodes, Containers and Metrics (custom or built-in).

Due to the distributed nature of Netdata, and to ensure high-availability of your monitoring system, please check our [Data Replication](https://www.netdata.cloud/blog/why-is-data-replication-important) recommendations to increase the data availability.

You can install Netdata on most Linux distributions (Ubuntu, Debian, CentOS, and more), container platforms (Kubernetes
clusters, Docker), and many other operating systems (FreeBSD, macOS). No `sudo` required.

Netdata is designed by system administrators, DevOps engineers, and developers to collect everything, help you visualize
metrics, troubleshoot complex performance problems, and make data interoperable with the rest of your monitoring stack.

People get addicted to Netdata. Once you use it on your systems, there's no going back! _You've been warned..._

![Users who are addicted to
Netdata](https://user-images.githubusercontent.com/1153921/96495792-2e881380-11fd-11eb-85a3-53d3a84dcb29.png)

## Menu

- [Features](#features)
- [Get Netdata](#get-netdata)
  - [Docker](#docker)
  - [Other operating systems](#other-operating-systems)
  - [Post-installation](#post-installation)
  - [Netdata Cloud](#netdata-cloud)
- [How it works](#how-it-works)
- [Infographic](#infographic)
- [Documentation](#documentation)
- [Community](#community)
- [Contribute](#contribute)
- [License](#license)
- [Is it any good?](#is-it-any-good)

## Features

![Netdata in
action](https://user-images.githubusercontent.com/1153921/113440964-449c2180-93a2-11eb-9664-663afa1257a8.gif)

Here's what you can expect from Netdata:

-   **1s granularity**: The highest possible resolution for all metrics.
-   **Unlimited metrics**: Netdata collects all the available metrics—the more, the better.
-   **1% CPU utilization of a single core**: It's unbelievably optimized.
-   **A few MB of RAM**: The highly-efficient database engine stores per-second metrics in RAM and then ""spills""
    historical metrics to disk long-term storage.
-   **Minimal disk I/O**: While running, Netdata only writes historical metrics and reads `error` and `access` logs.
-   **Zero configuration**: Netdata auto-detects everything, and can collect up to 10,000 metrics per server out of the
    box.
-   **Zero maintenance**: You just run it. Netdata does the rest.
-   **Stunningly fast, interactive visualizations**: The dashboard responds to queries in less than 1ms per metric to
    synchronize charts as you pan through time, zoom in on anomalies, and more.
-   **Visual anomaly detection**: Our UI/UX emphasizes the relationships between charts to help you detect the root
    cause of anomalies.
-   **Machine learning (ML) features out of the box**: Unsupervised ML-based [anomaly detection](https://github.com/netdata/netdata/blob/master/docs/cloud/insights/anomaly-advisor.md), every second, every metric, zero-config! [Metric correlations](https://github.com/netdata/netdata/blob/master/docs/cloud/insights/metric-correlations.md) to help with short-term change detection. And other [additional](https://github.com/netdata/netdata/blob/master/docs/guides/monitor/anomaly-detection.md) ML-based features to help make your life easier.
-   **Scales to infinity**: You can install it on all your servers, containers, VMs, and IoT devices. Metrics are not
    centralized by default, so there is no limit.
-   **Several operating modes**: Autonomous host monitoring (the default), headless data collector, forwarding proxy,
    store and forward proxy, central multi-host monitoring, in all possible configurations. Use different metrics
    retention policies per node and run with or without health monitoring.

Netdata works with tons of applications, notifications platforms, and other time-series databases:

-   **300+ system, container, and application endpoints**: Collectors autodetect metrics from default endpoints and
    immediately visualize them into meaningful charts designed for troubleshooting. See [everything we
    support](https://github.com/netdata/netdata/blob/master/collectors/COLLECTORS.md).
-   **20+ notification platforms**: Netdata's health watchdog sends warning and critical alarms to your [favorite
    platform](https://github.com/netdata/netdata/blob/master/docs/monitor/enable-notifications.md) to inform you of anomalies just seconds
    after they affect your node.
-   **30+ external time-series databases**: Export resampled metrics as they're collected to other [local- and
    Cloud-based databases](https://github.com/netdata/netdata/blob/master/docs/export/external-databases.md) for best-in-class
    interoperability.

> 💡 **Want to leverage the monitoring power of Netdata across entire infrastructure**? View metrics from
> any number of distributed nodes in a single interface and unlock even more
> [features](https://github.com/netdata/netdata/blob/master/docs/overview/why-netdata.md) with [Netdata
> Cloud](https://learn.netdata.cloud/docs/overview/what-is-netdata#netdata-cloud).

## Get Netdata

<p align=""center"">
  <a href=""https://registry.my-netdata.io/#menu_netdata_submenu_registry""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=persons&label=user%20base&units=M&value_color=blue&precision=2&divide=1000000&options=unaligned&v44"" alt=""User base""></a>
  <a href=""https://registry.my-netdata.io/#menu_netdata_submenu_registry""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=machines&label=servers%20monitored&units=k&divide=1000&value_color=orange&precision=2&options=unaligned&v44"" alt=""Servers monitored""></a>
  <a href=""https://registry.my-netdata.io/#menu_netdata_submenu_registry""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&label=sessions%20served&units=M&value_color=yellowgreen&precision=2&divide=1000000&options=unaligned&v44"" alt=""Sessions served""></a>
  <a href=""https://hub.docker.com/r/netdata/netdata""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=dockerhub.pulls_sum&divide=1000000&precision=1&units=M&label=docker+hub+pulls&options=unaligned&v44"" alt=""Docker Hub pulls""></a>
  <br />
  <a href=""https://registry.my-netdata.io/#menu_netdata_submenu_registry""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=persons&after=-86400&options=unaligned&group=incremental-sum&label=new%20users%20today&units=null&value_color=blue&precision=0&options=unaligned&v44"" alt=""New users today""></a>
  <a href=""https://registry.my-netdata.io/#menu_netdata_submenu_registry""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_entries&dimensions=machines&group=incremental-sum&after=-86400&options=unaligned&label=servers%20added%20today&units=null&value_color=orange&precision=0&v44"" alt=""New machines today""></a>
  <a href=""https://registry.my-netdata.io/#menu_netdata_submenu_registry""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=netdata.registry_sessions&after=-86400&group=incremental-sum&options=unaligned&label=sessions%20served%20today&units=null&value_color=yellowgreen&precision=0&v44"" alt=""Sessions today""></a>
  <a href=""https://hub.docker.com/r/netdata/netdata""><img src=""https://registry.my-netdata.io/api/v1/badge.svg?chart=dockerhub.pulls_sum&divide=1000&precision=1&units=k&label=docker+hub+pulls&after=-86400&group=incremental-sum&label=docker%20hub%20pulls%20today&options=unaligned&v44"" alt=""Docker Hub pulls today""></a>
</p>

### Infrastructure view

Due to the distributed nature of the Netdata ecosystem, it is recommended to setup not only one Netdata Agent on your production system, but also an additional Netdata Agent acting as a [Parent](https://github.com/netdata/netdata/blob/master/streaming/README.md). A local Netdata Agent (child), without any database or alarms, collects metrics and sends them to another Netdata Agent (parent). The same parent can collect data for any number of child nodes and serves as a centralized health check engine for each child by triggering alerts on their behalf.

![Netdata Cloud](https://user-images.githubusercontent.com/423236/205926887-43024984-6d38-46ad-96cb-d0c388117c6d.png)

Get started by [signing in](https://app.netdata.cloud/?utm_source=website&utm_content=top_navigation_sign_up) to Netdata.cloud and follow the setup guide.

Community version is free to use forever. No restriction on number of nodes, clusters or metrics. Unlimited alerts.

#### Claiming existing Agents

You can easily [connect (claim)](https://github.com/netdata/netdata/blob/master/claim/README.md) your existing Agents to the Cloud to unlock features for free and to find weaknesses before they turn into outages. 

### Single Node view

In case you do not need the infrastructure view of you system you can install standalone Agent and enjoy the local dashboard.

To install Netdata from source on most Linux systems (physical, virtual, container, IoT, edge), run our [one-line
installation script](https://learn.netdata.cloud/docs/agent/packaging/installer/methods/packages). This script downloads
and builds all dependencies, including those required to connect to [Netdata Cloud](https://netdata.cloud/cloud) if you
choose, and enables [automatic nightly
updates](https://learn.netdata.cloud/docs/agent/packaging/installer#nightly-vs-stable-releases) and [anonymous
statistics](https://github.com/netdata/netdata/blob/master/docs/anonymous-statistics.md).
<!-- candidate for reuse -->
```bash
wget -O /tmp/netdata-kickstart.sh https://my-netdata.io/kickstart.sh && sh /tmp/netdata-kickstart.sh
```

To view the Netdata dashboard, navigate to `http://localhost:19999`, or `http://NODE:19999`.

### Docker

You can also try out Netdata's capabilities in a [Docker
container](https://github.com/netdata/netdata/blob/master/packaging/docker/README.md):

```bash
docker run -d --name=netdata \
  -p 19999:19999 \
  -v netdataconfig:/etc/netdata \
  -v netdatalib:/var/lib/netdata \
  -v netdatacache:/var/cache/netdata \
  -v /etc/passwd:/host/etc/passwd:ro \
  -v /etc/group:/host/etc/group:ro \
  -v /proc:/host/proc:ro \
  -v /sys:/host/sys:ro \
  -v /etc/os-release:/host/etc/os-release:ro \
  --restart unless-stopped \
  --cap-add SYS_PTRACE \
  --security-opt apparmor=unconfined \
  netdata/netdata
```

To view the Netdata dashboard, navigate to `http://localhost:19999`, or `http://NODE:19999`.

### Other operating systems

See our documentation for [additional operating
systems](https://github.com/netdata/netdata/blob/master/packaging/installer/README.md#have-a-different-operating-system-or-want-to-try-another-method), including
[Kubernetes](https://github.com/netdata/netdata/blob/master/packaging/installer/methods/kubernetes.md), [`.deb`/`.rpm`
packages](https://github.com/netdata/netdata/blob/master/packaging/installer/methods/kickstart.md#native-packages), and more.

### Post-installation

When you're finished with installation, check out our [single-node](https://github.com/netdata/netdata/blob/master/docs/quickstart/single-node.md) or
[infrastructure](https://github.com/netdata/netdata/blob/master/docs/quickstart/infrastructure.md) monitoring quickstart guides based on your use case.

Or, skip straight to [configuring the Netdata Agent](https://github.com/netdata/netdata/blob/master/docs/configure/nodes.md).

Read through Netdata's [documentation](https://learn.netdata.cloud/docs), which is structured based on actions and
solutions, to enable features like health monitoring, alarm notifications, long-term metrics storage, exporting to
external databases, and more.

## How it works

Netdata is a highly efficient, highly modular, metrics management engine. Its lockless design makes it ideal for
concurrent operations on the metrics.

![Diagram of Netdata's core
functionality](https://user-images.githubusercontent.com/1153921/95367248-5f755980-0889-11eb-827f-9b7aa02a556e.png)

The result is a highly efficient, low-latency system, supporting multiple readers and one writer on each metric.

## Infographic

This is a high-level overview of Netdata features and architecture. Click on it to view an interactive version, which
has links to our documentation.

[![An infographic of how Netdata
works](https://user-images.githubusercontent.com/43294513/212722097-fdd85dee-2fc8-47f5-90dc-d3149428cdfa.png)](https://my-netdata.io/infographic.html)

## Documentation

Netdata's documentation is available at [**Netdata Learn**](https://learn.netdata.cloud).

This site also hosts a number of [guides](https://learn.netdata.cloud/guides) to help newer users better understand how
to collect metrics, troubleshoot via charts, export to external databases, and more.

## Community

Netdata is an inclusive open-source project and community. Please read our [Code of Conduct](https://github.com/netdata/.github/blob/main/CODE_OF_CONDUCT.md).

Find most of the Netdata team in our [community forums](https://community.netdata.cloud). It's the best place to
ask questions, find resources, and engage with passionate professionals. The team is also available and active in our [Discord](https://discord.com/invite/mPZ6WZKKG2) too.

You can also find Netdata on:

-   [Twitter](https://twitter.com/linuxnetdata)
-   [YouTube](https://www.youtube.com/c/Netdata)
-   [Reddit](https://www.reddit.com/r/netdata/)
-   [LinkedIn](https://www.linkedin.com/company/netdata-cloud/)
-   [StackShare](https://stackshare.io/netdata)
-   [Product Hunt](https://www.producthunt.com/posts/netdata-monitoring-agent/)
-   [Repology](https://repology.org/metapackage/netdata/versions)
-   [Facebook](https://www.facebook.com/linuxnetdata/)

## Contribute

Contributions are the lifeblood of open-source projects. While we continue to invest in and improve Netdata, we need help to democratize monitoring!

- Read our [Contributing Guide](https://github.com/netdata/.github/blob/main/CONTRIBUTING.md), which contains all the information you need to contribute to Netdata, such as improving our documentation, engaging in the community, and developing new features. We've made it as frictionless as possible, but if you need help, just ping us on our community forums!
- We have a whole category dedicated to contributing and extending Netdata on our [community forums](https://community.netdata.cloud/c/agent-development/9)
- Found a bug? Open a [GitHub issue](https://github.com/netdata/netdata/issues/new?assignees=&labels=bug%2Cneeds+triage&template=BUG_REPORT.yml&title=%5BBug%5D%3A+).
- View our [Security Policy](https://github.com/netdata/netdata/security/policy).

Package maintainers should read the guide on [building Netdata from source](https://github.com/netdata/netdata/blob/master/packaging/installer/methods/source.md) for
instructions on building each Netdata component from source and preparing a package.

## License

The Netdata Agent is [GPLv3+](https://github.com/netdata/netdata/blob/master/LICENSE). Netdata re-distributes other open-source tools and libraries. Please check the
[third party licenses](https://github.com/netdata/netdata/blob/master/REDISTRIBUTED.md).

## Is it any good?

Yes.

_When people first hear about a new product, they frequently ask if it is any good. A Hacker News user
[remarked](https://news.ycombinator.com/item?id=3067434):_

> Note to self: Starting immediately, all raganwald projects will have a “Is it any good?” section in the readme, and
> the answer shall be “yes."".
"
zephyrproject-rtos/zephyr,C,".. raw:: html

   <a href=""https://www.zephyrproject.org"">
     <p align=""center"">
       <picture>
         <source media=""(prefers-color-scheme: dark)"" srcset=""doc/_static/images/logo-readme-dark.svg"">
         <source media=""(prefers-color-scheme: light)"" srcset=""doc/_static/images/logo-readme-light.svg"">
         <img src=""doc/_static/images/logo-readme-light.svg"">
       </picture>
     </p>
   </a>

   <a href=""https://bestpractices.coreinfrastructure.org/projects/74""><img
   src=""https://bestpractices.coreinfrastructure.org/projects/74/badge""></a>
   <a
   href=""https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml?query=branch%3Amain"">
   <img
   src=""https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml/badge.svg?event=push""></a>


The Zephyr Project is a scalable real-time operating system (RTOS) supporting
multiple hardware architectures, optimized for resource constrained devices,
and built with security in mind.

The Zephyr OS is based on a small-footprint kernel designed for use on
resource-constrained systems: from simple embedded environmental sensors and
LED wearables to sophisticated smart watches and IoT wireless gateways.

The Zephyr kernel supports multiple architectures, including ARM (Cortex-A,
Cortex-R, Cortex-M), Intel x86, ARC, Nios II, Tensilica Xtensa, and RISC-V,
SPARC, MIPS, and a large number of `supported boards`_.

.. below included in doc/introduction/introduction.rst


Getting Started
***************

Welcome to Zephyr! See the `Introduction to Zephyr`_ for a high-level overview,
and the documentation's `Getting Started Guide`_ to start developing.

.. start_include_here

Community Support
*****************

Community support is provided via mailing lists and Discord; see the Resources
below for details.

.. _project-resources:

Resources
*********

Here's a quick summary of resources to help you find your way around:

* **Help**: `Asking for Help Tips`_
* **Documentation**: http://docs.zephyrproject.org (`Getting Started Guide`_)
* **Source Code**: https://github.com/zephyrproject-rtos/zephyr is the main
  repository; https://elixir.bootlin.com/zephyr/latest/source contains a
  searchable index
* **Releases**: https://github.com/zephyrproject-rtos/zephyr/releases
* **Samples and example code**: see `Sample and Demo Code Examples`_
* **Mailing Lists**: users@lists.zephyrproject.org and
  devel@lists.zephyrproject.org are the main user and developer mailing lists,
  respectively. You can join the developer's list and search its archives at
  `Zephyr Development mailing list`_. The other `Zephyr mailing list
  subgroups`_ have their own archives and sign-up pages.
* **Nightly CI Build Status**: https://lists.zephyrproject.org/g/builds
  The builds@lists.zephyrproject.org mailing list archives the CI nightly build results.
* **Chat**: Real-time chat happens in Zephyr's Discord Server. Use
  this `Discord Invite`_ to register.
* **Contributing**: see the `Contribution Guide`_
* **Wiki**: `Zephyr GitHub wiki`_
* **Issues**: https://github.com/zephyrproject-rtos/zephyr/issues
* **Security Issues**: Email vulnerabilities@zephyrproject.org to report
  security issues; also see our `Security`_ documentation. Security issues are
  tracked separately at https://zephyrprojectsec.atlassian.net.
* **Zephyr Project Website**: https://zephyrproject.org

.. _Discord Invite: https://chat.zephyrproject.org
.. _supported boards: http://docs.zephyrproject.org/latest/boards/index.html
.. _Zephyr Documentation: http://docs.zephyrproject.org
.. _Introduction to Zephyr: http://docs.zephyrproject.org/latest/introduction/index.html
.. _Getting Started Guide: http://docs.zephyrproject.org/latest/develop/getting_started/index.html
.. _Contribution Guide: http://docs.zephyrproject.org/latest/contribute/index.html
.. _Zephyr GitHub wiki: https://github.com/zephyrproject-rtos/zephyr/wiki
.. _Zephyr Development mailing list: https://lists.zephyrproject.org/g/devel
.. _Zephyr mailing list subgroups: https://lists.zephyrproject.org/g/main/subgroups
.. _Sample and Demo Code Examples: http://docs.zephyrproject.org/latest/samples/index.html
.. _Security: http://docs.zephyrproject.org/latest/security/index.html
.. _Asking for Help Tips: https://docs.zephyrproject.org/latest/develop/getting_started/index.html#asking-for-help
"
taosdata/TDengine,C,"<p>
<p align=""center"">
  <a href=""https://tdengine.com"" target=""_blank"">
  <img
    src=""docs/assets/tdengine.svg""
    alt=""TDengine""
    width=""500""
  />
  </a>
</p>
<p>

[![Build Status](https://cloud.drone.io/api/badges/taosdata/TDengine/status.svg?ref=refs/heads/master)](https://cloud.drone.io/taosdata/TDengine)
[![Build status](https://ci.appveyor.com/api/projects/status/kf3pwh2or5afsgl9/branch/master?svg=true)](https://ci.appveyor.com/project/sangshuduo/tdengine-2n8ge/branch/master)
[![Coverage Status](https://coveralls.io/repos/github/taosdata/TDengine/badge.svg?branch=develop)](https://coveralls.io/github/taosdata/TDengine?branch=develop)
[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/4201/badge)](https://bestpractices.coreinfrastructure.org/projects/4201)
<br />
[![Twitter Follow](https://img.shields.io/twitter/follow/tdenginedb?label=TDengine&style=social)](https://twitter.com/tdenginedb)
[![YouTube Channel](https://img.shields.io/badge/Subscribe_@tdengine--white?logo=youtube&style=social)](https://www.youtube.com/@tdengine)
[![Discord Community](https://img.shields.io/badge/Join_Discord--white?logo=discord&style=social)](https://discord.com/invite/VZdSuUg4pS)
[![LinkedIn](https://img.shields.io/badge/Follow_LinkedIn--white?logo=linkedin&style=social)](https://www.linkedin.com/company/tdengine)
[![StackOverflow](https://img.shields.io/badge/Ask_StackOverflow--white?logo=stackoverflow&style=social&logoColor=orange)](https://stackoverflow.com/questions/tagged/tdengine)

English | [简体中文](README-CN.md) | [TDengine Cloud](https://cloud.tdengine.com) | [Learn more about TSDB](https://tdengine.com/tsdb/)

# What is TDengine？

TDengine is an open source, high-performance, cloud native [time-series database](https://tdengine.com/tsdb/) optimized for Internet of Things (IoT), Connected Cars, and Industrial IoT. It enables efficient, real-time data ingestion, processing, and monitoring of TB and even PB scale data per day, generated by billions of sensors and data collectors. TDengine differentiates itself from other time-series databases with the following advantages:

- **[High Performance](https://tdengine.com/tdengine/high-performance-time-series-database/)**: TDengine is the only time-series database to solve the high cardinality issue to support billions of data collection points while out performing other time-series databases for data ingestion, querying and data compression.

- **[Simplified Solution](https://tdengine.com/tdengine/simplified-time-series-data-solution/)**: Through built-in caching, stream processing and data subscription features, TDengine provides a simplified solution for time-series data processing. It reduces system design complexity and operation costs significantly.

- **[Cloud Native](https://tdengine.com/tdengine/cloud-native-time-series-database/)**: Through native distributed design, sharding and partitioning, separation of compute and storage, RAFT, support for kubernetes deployment and full observability, TDengine is a cloud native Time-Series Database and can be deployed on public, private or hybrid clouds.

- **[Ease of Use](https://tdengine.com/tdengine/easy-time-series-data-platform/)**: For administrators, TDengine significantly reduces the effort to deploy and maintain. For developers, it provides a simple interface, simplified solution and seamless integrations for third party tools. For data users, it gives easy data access. 

- **[Easy Data Analytics](https://tdengine.com/tdengine/time-series-data-analytics-made-easy/)**: Through super tables, storage and compute separation, data partitioning by time interval, pre-computation and other means, TDengine makes it easy to explore, format, and get access to data in a highly efficient way. 

- **[Open Source](https://tdengine.com/tdengine/open-source-time-series-database/)**: TDengine’s core modules, including cluster feature, are all available under open source licenses. It has gathered 19.9k stars on GitHub. There is an active developer community, and over 139k running instances worldwide.

For a full list of TDengine competitive advantages, please [check here](https://tdengine.com/tdengine/). The easiest way to experience TDengine is through [TDengine Cloud](https://cloud.tdengine.com). 

# Documentation

For user manual, system design and architecture, please refer to [TDengine Documentation](https://docs.tdengine.com) ([TDengine 文档](https://docs.taosdata.com))

# Building

At the moment, TDengine server supports running on Linux/Windows/macOS systems. Any application can also choose the RESTful interface provided by taosAdapter to connect the taosd service . TDengine supports X64/ARM64 CPU, and it will support MIPS64, Alpha64, ARM32, RISC-V and other CPU architectures in the future.

You can choose to install through source code, [container](https://docs.tdengine.com/get-started/docker/), [installation package](https://docs.tdengine.com/get-started/package/) or [Kubernetes](https://docs.tdengine.com/deployment/k8s/). This quick guide only applies to installing from source.

TDengine provide a few useful tools such as taosBenchmark (was named taosdemo) and taosdump. They were part of TDengine. By default, TDengine compiling does not include taosTools. You can use `cmake .. -DBUILD_TOOLS=true` to make them be compiled with TDengine.

To build TDengine, use [CMake](https://cmake.org/) 3.0.2 or higher versions in the project directory.

## Install build tools

### Ubuntu 18.04 and above or Debian

```bash
sudo apt-get install -y gcc cmake build-essential git libssl-dev libgflags2.2 libgflags-dev
```

#### Install build dependencies for taosTools

To build the [taosTools](https://github.com/taosdata/taos-tools) on Ubuntu/Debian, the following packages need to be installed.

```bash
sudo apt install build-essential libjansson-dev libsnappy-dev liblzma-dev libz-dev zlib1g pkg-config
```

### CentOS 7.9

```bash
sudo yum install epel-release
sudo yum update
sudo yum install -y gcc gcc-c++ make cmake3 git openssl-devel
sudo ln -sf /usr/bin/cmake3 /usr/bin/cmake
```

### CentOS 8 & Fedora

```bash
sudo dnf install -y gcc gcc-c++ make cmake epel-release git openssl-devel
```

#### Install build dependencies for taosTools on CentOS

#### CentOS 7.9

```
sudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel
```

#### CentOS 8/Rocky Linux

```
sudo yum install -y epel-release
sudo yum install -y dnf-plugins-core
sudo yum config-manager --set-enabled powertools
sudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel
```

Note: Since snappy lacks pkg-config support (refer to [link](https://github.com/google/snappy/pull/86)), it leads a cmake prompt libsnappy not found. But snappy still works well.

If the PowerTools installation fails, you can try to use:

```
sudo yum config-manager --set-enabled powertools
```

#### For CentOS + devtoolset

Besides above dependencies, please run following commands:

```
sudo yum install centos-release-scl
sudo yum install devtoolset-9 devtoolset-9-libatomic-devel
scl enable devtoolset-9 -- bash
```

### macOS

```
brew install argp-standalone pkgconfig
```

### Setup golang environment

TDengine includes a few components like taosAdapter developed by Go language. Please refer to golang.org official documentation for golang environment setup.

Please use version 1.14+. For the user in China, we recommend using a proxy to accelerate package downloading.

```
go env -w GO111MODULE=on
go env -w GOPROXY=https://goproxy.cn,direct
```

The default will not build taosAdapter, but you can use the following command to build taosAdapter as the service for RESTful interface.

```
cmake .. -DBUILD_HTTP=false
```

### Setup rust environment

TDengine includes a few components developed by Rust language. Please refer to rust-lang.org official documentation for rust environment setup.

## Get the source codes

First of all, you may clone the source codes from github:

```bash
git clone https://github.com/taosdata/TDengine.git
cd TDengine
```

You can modify the file ~/.gitconfig to use ssh protocol instead of https for better download speed. You will need to upload ssh public key to GitHub first. Please refer to GitHub official documentation for detail.

```
[url ""git@github.com:""]
    insteadOf = https://github.com/
```

## Special Note

[JDBC Connector](https://github.com/taosdata/taos-connector-jdbc)， [Go Connector](https://github.com/taosdata/driver-go)，[Python Connector](https://github.com/taosdata/taos-connector-python)，[Node.js Connector](https://github.com/taosdata/taos-connector-node)，[C# Connector](https://github.com/taosdata/taos-connector-dotnet) ，[Rust Connector](https://github.com/taosdata/taos-connector-rust) and [Grafana plugin](https://github.com/taosdata/grafanaplugin) has been moved to standalone repository.

## Build TDengine

### On Linux platform

You can run the bash script `build.sh` to build both TDengine and taosTools including taosBenchmark and taosdump as below:

```bash
./build.sh
```

It equals to execute following commands:

```bash
mkdir debug
cd debug
cmake .. -DBUILD_TOOLS=true
make
```

You can use Jemalloc as memory allocator instead of glibc:

```
apt install autoconf
cmake .. -DJEMALLOC_ENABLED=true
```

TDengine build script can detect the host machine's architecture on X86-64, X86, arm64 platform.
You can also specify CPUTYPE option like aarch64 too if the detection result is not correct:

aarch64:

```bash
cmake .. -DCPUTYPE=aarch64 && cmake --build .
```

### On Windows platform

If you use the Visual Studio 2013, please open a command window by executing ""cmd.exe"".
Please specify ""amd64"" for 64 bits Windows or specify ""x86"" for 32 bits Windows when you execute vcvarsall.bat.

```cmd
mkdir debug && cd debug
""C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"" < amd64 | x86 >
cmake .. -G ""NMake Makefiles""
nmake
```

If you use the Visual Studio 2019 or 2017:

please open a command window by executing ""cmd.exe"".
Please specify ""x64"" for 64 bits Windows or specify ""x86"" for 32 bits Windows when you execute vcvarsall.bat.

```cmd
mkdir debug && cd debug
""c:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat"" < x64 | x86 >
cmake .. -G ""NMake Makefiles""
nmake
```

Or, you can simply open a command window by clicking Windows Start -> ""Visual Studio < 2019 | 2017 >"" folder -> ""x64 Native Tools Command Prompt for VS < 2019 | 2017 >"" or ""x86 Native Tools Command Prompt for VS < 2019 | 2017 >"" depends what architecture your Windows is, then execute commands as follows:

```cmd
mkdir debug && cd debug
cmake .. -G ""NMake Makefiles""
nmake
```

### On macOS platform

Please install XCode command line tools and cmake. Verified with XCode 11.4+ on Catalina and Big Sur.

```shell
mkdir debug && cd debug
cmake .. && cmake --build .
```

# Installing

## On Linux platform

After building successfully, TDengine can be installed by

```bash
sudo make install
```

Users can find more information about directories installed on the system in the [directory and files](https://docs.tdengine.com/reference/directory/) section.

Installing from source code will also configure service management for TDengine.Users can also choose to [install from packages](https://docs.tdengine.com/get-started/package/) for it.

To start the service after installation, in a terminal, use:

```bash
sudo systemctl start taosd
```

Then users can use the TDengine CLI to connect the TDengine server. In a terminal, use:

```bash
taos
```

If TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.

## On Windows platform

After building successfully, TDengine can be installed by:

```cmd
nmake install
```


## On macOS platform

After building successfully, TDengine can be installed by:

```bash
sudo make install
```

Users can find more information about directories installed on the system in the [directory and files](https://docs.tdengine.com/reference/directory/) section.

Installing from source code will also configure service management for TDengine.Users can also choose to [install from packages](https://docs.tdengine.com/get-started/package/) for it.

To start the service after installation, double-click the /applications/TDengine to start the program, or in a terminal, use:

```bash
sudo launchctl start com.tdengine.taosd
```

Then users can use the TDengine CLI to connect the TDengine server. In a terminal, use:

```bash
taos
```

If TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.

## Quick Run

If you don't want to run TDengine as a service, you can run it in current shell. For example, to quickly start a TDengine server after building, run the command below in terminal: (We take Linux as an example, command on Windows will be `taosd.exe`)

```bash
./build/bin/taosd -c test/cfg
```

In another terminal, use the TDengine CLI to connect the server:

```bash
./build/bin/taos -c test/cfg
```

option ""-c test/cfg"" specifies the system configuration file directory.

# Try TDengine

It is easy to run SQL commands from TDengine CLI which is the same as other SQL databases.

```sql
CREATE DATABASE demo;
USE demo;
CREATE TABLE t (ts TIMESTAMP, speed INT);
INSERT INTO t VALUES('2019-07-15 00:00:00', 10);
INSERT INTO t VALUES('2019-07-15 01:00:00', 20);
SELECT * FROM t;
          ts          |   speed   |
===================================
 19-07-15 00:00:00.000|         10|
 19-07-15 01:00:00.000|         20|
Query OK, 2 row(s) in set (0.001700s)
```

# Developing with TDengine

## Official Connectors

TDengine provides abundant developing tools for users to develop on TDengine. Follow the links below to find your desired connectors and relevant documentation.

- [Java](https://docs.tdengine.com/reference/connector/java/)
- [C/C++](https://docs.tdengine.com/reference/connector/cpp/)
- [Python](https://docs.tdengine.com/reference/connector/python/)
- [Go](https://docs.tdengine.com/reference/connector/go/)
- [Node.js](https://docs.tdengine.com/reference/connector/node/)
- [Rust](https://docs.tdengine.com/reference/connector/rust/)
- [C#](https://docs.tdengine.com/reference/connector/csharp/)
- [RESTful API](https://docs.tdengine.com/reference/rest-api/)

# Contribute to TDengine

Please follow the [contribution guidelines](CONTRIBUTING.md) to contribute to the project.

# Join the TDengine Community

For more information about TDengine, you can follow us on social media and join our Discord server:

- [Discord](https://discord.com/invite/VZdSuUg4pS)
- [Twitter](https://twitter.com/TDengineDB)
- [LinkedIn](https://www.linkedin.com/company/tdengine/)
- [YouTube](https://www.youtube.com/@tdengine)
"
qemu/qemu,C,"===========
QEMU README
===========

QEMU is a generic and open source machine & userspace emulator and
virtualizer.

QEMU is capable of emulating a complete machine in software without any
need for hardware virtualization support. By using dynamic translation,
it achieves very good performance. QEMU can also integrate with the Xen
and KVM hypervisors to provide emulated hardware while allowing the
hypervisor to manage the CPU. With hypervisor support, QEMU can achieve
near native performance for CPUs. When QEMU emulates CPUs directly it is
capable of running operating systems made for one machine (e.g. an ARMv7
board) on a different machine (e.g. an x86_64 PC board).

QEMU is also capable of providing userspace API virtualization for Linux
and BSD kernel interfaces. This allows binaries compiled against one
architecture ABI (e.g. the Linux PPC64 ABI) to be run on a host using a
different architecture ABI (e.g. the Linux x86_64 ABI). This does not
involve any hardware emulation, simply CPU and syscall emulation.

QEMU aims to fit into a variety of use cases. It can be invoked directly
by users wishing to have full control over its behaviour and settings.
It also aims to facilitate integration into higher level management
layers, by providing a stable command line interface and monitor API.
It is commonly invoked indirectly via the libvirt library when using
open source applications such as oVirt, OpenStack and virt-manager.

QEMU as a whole is released under the GNU General Public License,
version 2. For full licensing details, consult the LICENSE file.


Documentation
=============

Documentation can be found hosted online at
`<https://www.qemu.org/documentation/>`_. The documentation for the
current development version that is available at
`<https://www.qemu.org/docs/master/>`_ is generated from the ``docs/``
folder in the source tree, and is built by `Sphinx
<https://www.sphinx-doc.org/en/master/>`_.


Building
========

QEMU is multi-platform software intended to be buildable on all modern
Linux platforms, OS-X, Win32 (via the Mingw64 toolchain) and a variety
of other UNIX targets. The simple steps to build QEMU are:


.. code-block:: shell

  mkdir build
  cd build
  ../configure
  make

Additional information can also be found online via the QEMU website:

* `<https://wiki.qemu.org/Hosts/Linux>`_
* `<https://wiki.qemu.org/Hosts/Mac>`_
* `<https://wiki.qemu.org/Hosts/W32>`_


Submitting patches
==================

The QEMU source code is maintained under the GIT version control system.

.. code-block:: shell

   git clone https://gitlab.com/qemu-project/qemu.git

When submitting patches, one common approach is to use 'git
format-patch' and/or 'git send-email' to format & send the mail to the
qemu-devel@nongnu.org mailing list. All patches submitted must contain
a 'Signed-off-by' line from the author. Patches should follow the
guidelines set out in the `style section
<https://www.qemu.org/docs/master/devel/style.html>`_ of
the Developers Guide.

Additional information on submitting patches can be found online via
the QEMU website

* `<https://wiki.qemu.org/Contribute/SubmitAPatch>`_
* `<https://wiki.qemu.org/Contribute/TrivialPatches>`_

The QEMU website is also maintained under source control.

.. code-block:: shell

  git clone https://gitlab.com/qemu-project/qemu-web.git

* `<https://www.qemu.org/2017/02/04/the-new-qemu-website-is-up/>`_

A 'git-publish' utility was created to make above process less
cumbersome, and is highly recommended for making regular contributions,
or even just for sending consecutive patch series revisions. It also
requires a working 'git send-email' setup, and by default doesn't
automate everything, so you may want to go through the above steps
manually for once.

For installation instructions, please go to

*  `<https://github.com/stefanha/git-publish>`_

The workflow with 'git-publish' is:

.. code-block:: shell

  $ git checkout master -b my-feature
  $ # work on new commits, add your 'Signed-off-by' lines to each
  $ git publish

Your patch series will be sent and tagged as my-feature-v1 if you need to refer
back to it in the future.

Sending v2:

.. code-block:: shell

  $ git checkout my-feature # same topic branch
  $ # making changes to the commits (using 'git rebase', for example)
  $ git publish

Your patch series will be sent with 'v2' tag in the subject and the git tip
will be tagged as my-feature-v2.

Bug reporting
=============

The QEMU project uses GitLab issues to track bugs. Bugs
found when running code built from QEMU git or upstream released sources
should be reported via:

* `<https://gitlab.com/qemu-project/qemu/-/issues>`_

If using QEMU via an operating system vendor pre-built binary package, it
is preferable to report bugs to the vendor's own bug tracker first. If
the bug is also known to affect latest upstream code, it can also be
reported via GitLab.

For additional information on bug reporting consult:

* `<https://wiki.qemu.org/Contribute/ReportABug>`_


ChangeLog
=========

For version history and release notes, please visit
`<https://wiki.qemu.org/ChangeLog/>`_ or look at the git history for
more detailed information.


Contact
=======

The QEMU community can be contacted in a number of ways, with the two
main methods being email and IRC

* `<mailto:qemu-devel@nongnu.org>`_
* `<https://lists.nongnu.org/mailman/listinfo/qemu-devel>`_
* #qemu on irc.oftc.net

Information on additional methods of contacting the community can be
found online via the QEMU website:

* `<https://wiki.qemu.org/Contribute/StartHere>`_
"
RT-Thread/rt-thread,C,"<p align=""center"">
<img src=""documentation/figures/logo.png"" width=""60%"" >
</p>

**English** | [中文](README_zh.md) | [Español](README_es.md) | [Deutsch](README_de.md)

[![GitHubStars](https://img.shields.io/github/stars/RT-Thread/rt-thread?style=flat-square&logo=GitHub)](https://github.com/RT-Thread/rt-thread/stargazers)
[![GiteeStars](https://gitee.com/rtthread/rt-thread/badge/star.svg?theme=gvp)](https://gitee.com/rtthread/rt-thread/stargazers)
[![GitHub](https://img.shields.io/github/license/RT-Thread/rt-thread.svg)](https://github.com/RT-Thread/rt-thread/blob/master/LICENSE)
[![GitHub release](https://img.shields.io/github/release/RT-Thread/rt-thread.svg)](https://github.com/RT-Thread/rt-thread/releases)
[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/RT-Thread/rt-thread?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![GitHub pull-requests](https://img.shields.io/github/issues-pr/RT-Thread/rt-thread.svg)](https://github.com/RT-Thread/rt-thread/pulls)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat)](https://github.com/RT-Thread/rt-thread/pulls)

# RT-Thread

RT-Thread was born in 2006, it is an open source, neutral, and community-based real-time operating system (RTOS).

RT-Thread is mainly written in C language, easy to understand and easy to port(can be quickly port to a wide range of mainstream MCUs and module chips). It applies object-oriented programming methods to real-time system design, making the code elegant, structured, modular, and very tailorable.

RT-Thread has Standard version and Nano version. For resource-constrained microcontroller (MCU) systems, the Nano version that requires only 3KB Flash and 1.2KB RAM memory resources can be tailored with easy-to-use tools. For resource-rich IoT devices, RT-Thread can use the on-line software package management tool, together with system configuration tools, to achieve intuitive and rapid modular cutting, seamlessly import rich software packages; thus, achieving complex functions like Android's graphical interface and touch sliding effects, smart voice interaction effects, and so on.

## RT-Thread Architecture

RT-Thread has not only a real-time kernel, but also rich components. Its architecture is as follows:


![architecture](./documentation/figures/architecture.png)


It includes:

- Kernel layer: RT-Thread kernel, the core part of RT-Thread, includes the implementation of objects in the kernel system, such as multi-threading and its scheduling, semaphore, mailbox, message queue, memory management, timer, etc.; libcpu/BSP (Chip Migration Related Files/Board Support Package) is closely related to hardware and consists of peripheral drivers and CPU porting.

- Components and Service Layer: Components are based on upper-level software on top of the RT-Thread kernel, such as virtual file systems, FinSH command-line interfaces, network frameworks, device frameworks, and more. Its modular design allows for high internal cohesion inside the components and low coupling between components.

- [RT-Thread software package](https://packages.rt-thread.org/en/index.html): A general-purpose software component running on the RT-Thread IoT operating system platform for different application areas, consisting of description information, source code or library files. RT-Thread provides an open package platform with officially available or developer-supplied packages that provide developers with a choice of reusable packages that are an important part of the RT-Thread ecosystem. The package ecosystem is critical to the choice of an operating system because these packages are highly reusable and modular, making it easy for application developers to build the system they want in the shortest amount of time. RT-Thread supports 450+ software packages.

## RT-Thread Features

- Designed for resource-constrained devices, the minimum kernel requires only 1.2KB of RAM and 3 KB of Flash.
- A variety of standard interfaces, such as POSIX, CMSIS, C++ application environment.
- Has rich components and a prosperous and fast growing package ecosystem.
- Elegant code style, easy to use, read and master.
- High Scalability. RT-Thread has high-quality scalable software architecture, loose coupling, modularity, is easy to tailor and expand.
- Supports high-performance applications.
- Supports all mainstream compiling tools such as GCC, Keil and IAR.
- Supports a wide range of <a href=""https://www.rt-thread.io/board.html"">architectures and chips</a>.

## Code Catalogue

   RT-Thread source code catalog is shown as follow:

| Name          | Description                                             |
| ------------- | ------------------------------------------------------- |
| BSP          | Board Support Package based on the porting of various development boards |
| components    | Components, such as finsh shell, file system, protocol stack etc. |
| documentation | Related documents, like coding style, doxygen etc.        |
| examples      | Related sample code                                     |
| include       | Head files of RT-Thread kernel                           |
| libcpu        | CPU porting code such as ARM/MIPS/RISC-V etc. |
| src           | The source files for the RT-Thread kernel. |
| tools         | The script files for the RT-Thread command build tool. |

RT-Thread has now been ported for nearly 200 development boards, most BSPs support MDK, IAR development environment and GCC compiler, and have provided default MDK and IAR project, which allows users to add their own application code directly based on the project. Each BSP has a similar directory structure, and most BSPs provide a README.md file, which is a markdown-format file that contains the basic introduction of BSP, and introduces how to simply start using BSP.

# Resources

## Supported Architectures

RT-Thread supports many architectures, and has covered the major architectures in current applications. Architecture and chip manufacturer involved:

- **ARM Cortex-M0/M0+**：manufacturers like ST
- **ARM Cortex-M3**：manufacturers like ST、Winner Micro、MindMotion, ect.
- **ARM Cortex-M4**：manufacturers like ST、Infineon、Nuvoton、NXP、[Nordic](https://github.com/RT-Thread/rt-thread/tree/master/bsp/nrf5x)、GigaDevice、Realtek、Ambiq Micro, ect.
- **ARM Cortex-M7**：manufacturers like ST、NXP
- **ARM Cortex-M23**：manufacturers like GigaDevice
- **ARM Cortex-M33**：manufacturers like ST
- **ARM Cortex-R4**
- **ARM Cortex-A8/A9**：manufacturers like NXP
- **ARM7**：manufacturers like Samsung
- **ARM9**：manufacturers like Allwinner、Xilinx 、GOKE
- **ARM11**：manufacturers like Fullhan
- **MIPS32**：manufacturers like loongson、Ingenic
- **RISC-V RV32E/RV32I[F]/RV64[D]**：manufacturers like sifive、[Canaan Kendryte](https://github.com/RT-Thread/rt-thread/tree/master/bsp/k210)、[bouffalo_lab](https://github.com/RT-Thread/rt-thread/tree/master/bsp/bouffalo_lab)、[Nuclei](https://nucleisys.com/)、[T-Head](https://www.t-head.cn/)、[HPMicro](https://github.com/RT-Thread/rt-thread/tree/master/bsp/hpmicro)
- **ARC**：manufacturers like SYNOPSYS
- **DSP**：manufacturers like TI
- **C-Sky**
- **x86**

## Supported IDE and Compiler

The main IDE/compilers supported by RT-Thread are:

- RT-Thread Studio IDE
- MDK KEIL
- IAR
- GCC

## RT-Thread Studio IDE

[User Manual](https://www.rt-thread.io/document/site/rtthread-studio/um/studio-user-manual/) | [Tutorial Videos](https://youtu.be/ucq5eJgZIQg)

RT-Thread Studio IDE (a.k.a. RT-Studio) is a one-stop intergrated development environment built by RT-Thread team. It has a easy-to-use graphical configuration system and a wealth of software packages and components resources. RT-Studio has the features of project creation, configuration and management,as well as code editing, SDK management, build configuration, debugging configuration, program download and debug. We're looking to make the use of RT-Studio as intuitive as possible, reducing the duplication of work and improving the development efficiency.

![studio](./documentation/figures/studio.gif)

## Env Tool

[User Manual](documentation/env/env.md) | [Tutorial Videos](https://www.youtube.com/watch?v=dEK94o_YoSo)

In the early stage, RT-Thread team also created an auxiliary tool called Env. It is an auxiliary tool with a TUI (Text-based user interface). Developers can use Env tool to configure and generate the GCC, Keil MDK, and IAR projects.

![env](./documentation/figures/env.png)

# Getting Started

[RT-Thread Programming Guide](https://www.rt-thread.io/document/site/tutorial/quick-start/introduction/introduction/) | [RT-Thread Studio IDE](https://www.rt-thread.io/studio.html) | [Kernel Sample](https://github.com/RT-Thread-packages/kernel-sample) | [RT-Thread Beginners Guide](https://www.youtube.com/watch?v=ZMi1O-Rr7yc&list=PLXUV89C_M3G5KVw2IerI-pqApdSM_IaZo)

Based on [STM32F103 BluePill](https://github.com/RT-Thread/rt-thread/tree/master/bsp/stm32/stm32f103-blue-pill) | [Raspberry Pi Pico](https://github.com/RT-Thread/rt-thread/tree/master/bsp/raspberry-pico)

## Simulator

RT-Thread BSP can be compiled directly and downloaded to the corresponding development board for use. In addition, RT-Thread also provides qemu-vexpress-a9 BSP, which can be used without hardware platform. See the getting started guide below for details. Getting Started of QEMU with Env:
[Windows](documentation/quick-start/quick_start_qemu/quick_start_qemu.md) | [Linux Ubuntu](documentation/quick-start/quick_start_qemu/quick_start_qemu_linux.md) | [Mac OS](documentation/quick-start/quick_start_qemu/quick_start_qemu_macos.md)

# License

RT-Thread follows the Apache License 2.0 free software license. It's completely open-source, can be used in commercial applications for free, does not require the disclosure of code, and has no potential commercial risk. License information and copyright information can generally be seen at the beginning of the code:

```c
/* Copyright (c) 2006-2018, RT-Thread Development Team
 *
 * SPDX-License-Identifier: Apache-2.0
 * ...
 */
```

# Community

RT-Thread is very grateful for the support from all community developers, and if you have any ideas, suggestions or questions in the process of using RT-Thread, RT-Thread can be reached by the following means, and we are also updating RT-Thread in real time on these channels. At the same time, any questions can be asked in the [issue section of RT-Thread repository](https://github.com/RT-Thread/rt-thread/issues) or [RT-Thread forum](https://club.rt-thread.io/), and community members will answer them.

[Website](https://www.rt-thread.io) | [Github](https://github.com/RT-Thread/rt-thread) | [Twitter](https://twitter.com/rt_thread) | [LinkedIn](https://www.linkedin.com/company/rt-thread-iot-os/posts/?feedView=all) | [Youtube](https://www.youtube.com/channel/UCdDHtIfSYPq4002r27ffqPw) | [Facebook](https://www.facebook.com/RT-Thread-IoT-OS-110395723808463/?modal=admin_todo_tour) | [Medium](https://rt-thread.medium.com/)

# Contribution

If you are interested in RT-Thread and want to join in the development of RT-Thread and become a code contributor,please refer to the [Code Contribution Guide](documentation/contribution_guide/contribution_guide.md).

## Thanks for the following contributors!

<a href=""https://github.com/RT-Thread/rt-thread/graphs/contributors"">
  <img src=""https://contrib.rocks/image?repo=RT-Thread/rt-thread"" />
</a>
"
raspberrypi/linux,C,"Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    https://www.kernel.org/doc/html/latest/

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.

Build status for rpi-5.15.y:
[![Pi kernel build tests](https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml/badge.svg?branch=rpi-5.15.y)](https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml)
[![dtoverlaycheck](https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml/badge.svg?branch=rpi-5.15.y)](https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml)

Build status for rpi-6.1.y:
[![Pi kernel build tests](https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml/badge.svg?branch=rpi-6.1.y)](https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml)
[![dtoverlaycheck](https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml/badge.svg?branch=rpi-6.1.y)](https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml)

Build status for rpi-6.2.y:
[![Pi kernel build tests](https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml/badge.svg?branch=rpi-6.2.y)](https://github.com/raspberrypi/linux/actions/workflows/kernel-build.yml)
[![dtoverlaycheck](https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml/badge.svg?branch=rpi-6.2.y)](https://github.com/raspberrypi/linux/actions/workflows/dtoverlaycheck.yml)
"
arendst/Tasmota,C,"![Tasmota logo](/tools/logo/TASMOTA_FullLogo_Vector.svg#gh-light-mode-only)![Tasmota logo](/tools/logo/TASMOTA_FullLogo_Vector_White.svg#gh-dark-mode-only)

Alternative firmware for [ESP8266](https://en.wikipedia.org/wiki/ESP8266) and [ESP32](https://en.wikipedia.org/wiki/ESP32) based devices with **easy configuration using webUI, OTA updates, automation using timers or rules, expandability and entirely local control over MQTT, HTTP, Serial or KNX**.
_Written for PlatformIO._

[![GitHub version](https://img.shields.io/github/release/arendst/Tasmota.svg)](http://ota.tasmota.com/tasmota/release)
[![GitHub download](https://img.shields.io/github/downloads/arendst/Tasmota/total.svg)](https://github.com/arendst/Tasmota/releases/latest)
[![License](https://img.shields.io/github/license/arendst/Tasmota.svg)](LICENSE.txt)
[![Chat](https://img.shields.io/discord/479389167382691863.svg)](https://discord.gg/Ks2Kzd4)
[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/arendst/Tasmota)

<hr></hr>

**In light of current events we like to support the people behind _PlatformIO Project_, especially Ivan Kravets, and wish them the strength to help stop the war. See [platformio-is-ukrainian-project-please-help-us-stop-the-war](https://community.platformio.org/t/platformio-is-ukrainian-project-please-help-us-stop-the-war/26330) for what you can do.**

<hr></hr>

## Easy install

Easy initial installation of Tasmota can be performed using the [Tasmota WebInstaller](https://tasmota.github.io/install/).

If you like **Tasmota**, give it a star, or fork it and contribute!

[![GitHub stars](https://img.shields.io/github/stars/arendst/Tasmota.svg?style=social&label=Star)](https://github.com/arendst/Tasmota/stargazers)
[![GitHub forks](https://img.shields.io/github/forks/arendst/Tasmota.svg?style=social&label=Fork)](https://github.com/arendst/Tasmota/network)
[![donate](https://img.shields.io/badge/donate-PayPal-blue.svg)](https://paypal.me/tasmota)

See [RELEASENOTES.md](https://github.com/arendst/Tasmota/blob/master/RELEASENOTES.md) for release information.

Firmware binaries can be downloaded from http://ota.tasmota.com/tasmota/release/ or http://ota.tasmota.com/tasmota32/release/ for ESP32 binaries.

## Development

[![Dev Version](https://img.shields.io/badge/development%20version-v12.5.x.x-blue.svg)](https://github.com/arendst/Tasmota)
[![Download Dev](https://img.shields.io/badge/download-development-yellow.svg)](http://ota.tasmota.com/tasmota/)
[![Tasmota CI](https://github.com/arendst/Tasmota/actions/workflows/build_all_the_things.yml/badge.svg)](https://github.com/arendst/Tasmota/actions/workflows/build_all_the_things.yml)
[![Build_development](https://github.com/arendst/Tasmota/actions/workflows/Tasmota_build_devel.yml/badge.svg)](https://github.com/arendst/Tasmota/actions/workflows/Tasmota_build_devel.yml)

See [CHANGELOG.md](CHANGELOG.md) for detailed change information.

Unless your Tasmota powered device exhibits a problem or lacks a feature that you need, leave your device alone - it works so don’t make unnecessary changes! If the release version (i.e., the master branch) exhibits unexpected behaviour for your device and configuration, you should upgrade to the latest development version instead to see if your problem is resolved as some bugs in previous releases or development builds may already have been resolved.

Every commit made to the development branch, which is compiling successfully, will post new binary files at http://ota.tasmota.com/tasmota/ (this web address can be used for OTA updates too). It is important to note that these binaries are based on the current development codebase. These commits are tested as much as is possible and are typically quite stable. However, it is infeasible to test on the hundreds of different types of devices with all the available configuration options permitted.

Note that there is a chance, as with any upgrade, that the device may not function as expected. You must always account for the possibility that you may need to flash the device via the serial programming interface if the OTA upgrade fails. Even with the master release, you should always attempt to test the device or a similar prototype before upgrading a device which is in production or is hard to reach. And, as always, make a backup of the device configuration before beginning any firmware update.

## Disclaimer

:warning: **DANGER OF ELECTROCUTION** :warning:

If your device connects to mains electricity (AC power) there is danger of electrocution if not installed properly. If you don't know how to install it, please call an electrician (***Beware:*** certain countries prohibit installation without a licensed electrician present). Remember: _**SAFETY FIRST**_. It is not worth the risk to yourself, your family and your home if you don't know exactly what you are doing. Never tinker or try to flash a device using the serial programming interface while it is connected to MAINS ELECTRICITY (AC power).

We don't take any responsibility nor liability for using this software nor for the installation or any tips, advice, videos, etc. given by any member of this site or any related site.

## Note

Please do not ask to add new devices unless it requires additional code for new features. If the device is not listed as a module, try using [Templates](https://tasmota.github.io/docs/Templates) first. If it is not listed in the [Tasmota Device Templates Repository](http://templates.blakadder.com) create your own [Template](https://tasmota.github.io/docs/Templates#creating-your-template).

## Quick Install
Download one of the released binaries from http://ota.tasmota.com/tasmota/release/ or http://ota.tasmota.com/tasmota32/release/ and flash it to your hardware [using our installation guide](https://tasmota.github.io/docs/Getting-Started).

## Important User Compilation Information
If you want to compile Tasmota yourself keep in mind the following:

- For ESP8285 based devices only Flash Mode **DOUT** is supported. Do not use Flash Mode DIO / QIO / QOUT as it might seem to brick your device.
- For ESP8285 based devices Tasmota uses a 1M linker script WITHOUT spiffs **1M (no SPIFFS)** for optimal code space.
- To make compile time changes to Tasmota use the `user_config_override.h` file. It assures keeping your custom settings when you download and compile a new version. You have to make a copy from the provided `user_config_override_sample.h` file and add your setting overrides.

## Configuration Information

Please refer to the installation and configuration articles in our [documentation](https://tasmota.github.io/docs).

## Migration Information

See [migration path](https://tasmota.github.io/docs/Upgrading#migration-path) for instructions how to migrate to a major version.

**Do not upgrade from minimal to minimal version. It will most likely fail at some point and will require flashing via serial.** If you do have to use minimal versions, always OTA to a full version of the same release before applying next minimal version.

Pay attention to the following version breaks due to dynamic settings updates:

1. Migrate to **Sonoff-Tasmota 3.9.x**
2. Migrate to **Sonoff-Tasmota 4.x**
3. Migrate to **Sonoff-Tasmota 5.14**
4. Migrate to **Sonoff-Tasmota 6.7.1** (http://ota.tasmota.com/tasmota/release_6.7.1/sonoff.bin) - NOTICE underscore as a dash is not supported in older versions
5. Migrate to **Tasmota 7.2.0** (http://ota.tasmota.com/tasmota/release-7.2.0/tasmota.bin)

--- Major change in parameter storage layout ---

6. Migrate to **Tasmota 8.5.1** (http://ota.tasmota.com/tasmota/release-8.5.1/tasmota.bin)

--- Major change in internal GPIO function representation ---

7. Migrate to **Tasmota 9.1** (http://ota.tasmota.com/tasmota/release-9.1.0/tasmota.bin.gz)
8. Upgrade to **latest release** (http://ota.tasmota.com/tasmota/release/tasmota.bin.gz)

While fallback or downgrading is common practice it was never supported due to Settings additions or changes in newer releases. Starting with release **v9.1.0 Imogen** the internal GPIO function representation has changed in such a way that fallback is only possible to the latest GPIO configuration before installing **v9.1.0**.

## Support Information

<img src=""https://user-images.githubusercontent.com/5904370/68332933-e6e5a600-00d7-11ea-885d-50395f7239a1.png"" width=150 align=""right"" />

For a database of supported devices see [Tasmota Device Templates Repository](https://templates.blakadder.com)

If you're looking for support on **Tasmota** there are some options available:

### Documentation

* [Documentation Site](https://tasmota.github.io/docs): For information on how to flash Tasmota, configure, use and expand it
* [FAQ and Troubleshooting](https://tasmota.github.io/docs/FAQ/): For information on common problems and solutions.
* [Commands Information](https://tasmota.github.io/docs/Commands): For information on all the commands supported by Tasmota.

### Support's Community

* [Tasmota Discussions](https://github.com/arendst/Tasmota/discussions): For Tasmota usage questions, Feature Requests and Projects.
* [Tasmota Users Chat](https://discord.gg/Ks2Kzd4): For support, troubleshooting and general questions. You have better chances to get fast answers from members of the Tasmota Community.
* [Search in Issues](https://github.com/arendst/Tasmota/issues): You might find an answer to your question by searching current or closed issues.
* [Software Problem Report](https://github.com/arendst/Tasmota/issues/new?template=Bug_report.md): For reporting problems of Tasmota Software.

## Contribute

You can contribute to Tasmota by
- Providing Pull Requests (Features, Proof of Concepts, Language files or Fixes)
- Testing new released features and report issues
- Donating to acquire hardware for testing and implementing or out of gratitude
- Contributing missing [documentation](https://tasmota.github.io/docs) for features and devices

[![donate](https://img.shields.io/badge/donate-PayPal-blue.svg)](https://paypal.me/tasmota)

## Credits

People helping to keep the show on the road:
- Sfromis providing extensive user support
- Barbudor providing user support and code fixes and additions
- David Lang providing initial issue resolution and code optimizations
- Heiko Krupp for his IRSend, HTU21, SI70xx and Wemo/Hue emulation drivers
- Wiktor Schmidt for Travis CI implementation
- Thom Dietrich for PlatformIO optimizations
- Marinus van den Broek for his EspEasy groundwork
- Pete Ba for more user friendly energy monitor calibration
- Lobradov providing compile optimization tips
- Flexiti for his initial timer implementation
- reloxx13 for his [TasmoAdmin](https://github.com/reloxx13/TasmoAdmin) management tool
- Joachim Banzhaf for his TSL2561 library and driver
- Andre Thomas for providing many drivers
- Gijs Noorlander for his MHZ19, SenseAir and updated PubSubClient drivers
- Erik Montnemery for his HomeAssistant Discovery concept and many code tuning tips
- Federico Leoni for continued HomeAssistant Discovery support
- Aidan Mountford for his HSB support
- Daniel Ztolnai for his Serial Bridge implementation
- Gerhard Mutz for multiple sensor & display drivers, Sunrise/Sunset, and scripting
- Nuno Ferreira for his HC-SR04 driver
- Adrian Scillato for his (security)fixes and implementing and maintaining KNX
- Gennaro Tortone for implementing and maintaining Eastron drivers
- Raymond Mouthaan for managing Wemos Wiki information
- Norbert Richter for his [decode-config.py](https://github.com/tasmota/decode-config) tool
- Joel Stein, digiblur and Shantur Rathore for their Tuya research and driver
- Frogmore42 for providing many issue answers
- Jason2866 for platformio support and providing many issue answers
- Blakadder for managing the document site and providing template management
- Stephan Hadinger for refactoring light driver, enhancing HueEmulation, LVGL, Zigbee and Berry support
- tmo for designing the official Tasmota logo
- Stefan Bode for his Shutter and Deep sleep drivers
- Jacek Ziółkowski for his [TDM](https://github.com/jziolkowski/tdm) management tool and [Tasmotizer](https://github.com/tasmota/tasmotizer) flashing tool
- Christian Staars for NRF24L01 and HM-10 Bluetooth sensor support
- Paul Diem for UDP Group communication support
- Jörg Schüler-Maroldt for his initial ESP32 port
- Javier Arigita for his thermostat driver
- Simon Hailes for ESP32 Bluetooth extensions
- Many more providing Tips, Wips, Pocs, PRs and Donations

## License

This program is licensed under GPL-3.0-only
"
glfw/glfw,C,"# GLFW

[![Build status](https://github.com/glfw/glfw/actions/workflows/build.yml/badge.svg)](https://github.com/glfw/glfw/actions)
[![Build status](https://ci.appveyor.com/api/projects/status/0kf0ct9831i5l6sp/branch/master?svg=true)](https://ci.appveyor.com/project/elmindreda/glfw)
[![Coverity Scan](https://scan.coverity.com/projects/4884/badge.svg)](https://scan.coverity.com/projects/glfw-glfw)

## Introduction

GLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan
application development.  It provides a simple, platform-independent API for
creating windows, contexts and surfaces, reading input, handling events, etc.

GLFW natively supports Windows, macOS and Linux and other Unix-like systems.  On
Linux both X11 and Wayland are supported.

GLFW is licensed under the [zlib/libpng
license](https://www.glfw.org/license.html).

You can [download](https://www.glfw.org/download.html) the latest stable release
as source or Windows binaries, or fetch the `latest` branch from GitHub.  Each
release starting with 3.0 also has a corresponding [annotated
tag](https://github.com/glfw/glfw/releases) with source and binary archives.

The [documentation](https://www.glfw.org/docs/latest/) is available online and is
included in all source and binary archives.  See the [release
notes](https://www.glfw.org/docs/latest/news.html) for new features, caveats and
deprecations in the latest release.  For more details see the [version
history](https://www.glfw.org/changelog.html).

The `master` branch is the stable integration branch and _should_ always compile
and run on all supported platforms, although details of newly added features may
change until they have been included in a release.  New features and many bug
fixes live in [other branches](https://github.com/glfw/glfw/branches/all) until
they are stable enough to merge.

If you are new to GLFW, you may find the
[tutorial](https://www.glfw.org/docs/latest/quick.html) for GLFW 3 useful.  If
you have used GLFW 2 in the past, there is a [transition
guide](https://www.glfw.org/docs/latest/moving.html) for moving to the GLFW
3 API.

GLFW exists because of the contributions of [many people](CONTRIBUTORS.md)
around the world, whether by reporting bugs, providing community support, adding
features, reviewing or testing code, debugging, proofreading docs, suggesting
features or fixing bugs.


## Compiling GLFW

GLFW itself requires only the headers and libraries for your OS and window
system.  It does not need the headers for any context creation API (WGL, GLX,
EGL, NSGL, OSMesa) or rendering API (OpenGL, OpenGL ES, Vulkan) to enable
support for them.

GLFW supports compilation on Windows with Visual C++ 2010 and later, MinGW and
MinGW-w64, on macOS with Clang and on Linux and other Unix-like systems with GCC
and Clang.  It will likely compile in other environments as well, but this is
not regularly tested.

There are [pre-compiled Windows binaries](https://www.glfw.org/download.html)
available for all supported compilers.

See the [compilation guide](https://www.glfw.org/docs/latest/compile.html) for
more information about how to compile GLFW yourself.


## Using GLFW

See the [documentation](https://www.glfw.org/docs/latest/) for tutorials, guides
and the API reference.


## Contributing to GLFW

See the [contribution
guide](https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md) for
more information.


## System requirements

GLFW supports Windows XP and later and macOS 10.8 and later.  Linux and other
Unix-like systems running the X Window System are supported even without
a desktop environment or modern extensions, although some features require
a running window or clipboard manager.  The OSMesa backend requires Mesa 6.3.

See the [compatibility guide](https://www.glfw.org/docs/latest/compat.html)
in the documentation for more information.


## Dependencies

GLFW itself needs only CMake 3.1 or later and the headers and libraries for your
OS and window system.

The examples and test programs depend on a number of tiny libraries.  These are
located in the `deps/` directory.

 - [getopt\_port](https://github.com/kimgr/getopt_port/) for examples
   with command-line options
 - [TinyCThread](https://github.com/tinycthread/tinycthread) for threaded
   examples
 - [glad2](https://github.com/Dav1dde/glad) for loading OpenGL and Vulkan
   functions
 - [linmath.h](https://github.com/datenwolf/linmath.h) for linear algebra in
   examples
 - [Nuklear](https://github.com/Immediate-Mode-UI/Nuklear) for test and example UI
 - [stb\_image\_write](https://github.com/nothings/stb) for writing images to disk

The documentation is generated with [Doxygen](https://doxygen.org/) if CMake can
find that tool.


## Reporting bugs

Bugs are reported to our [issue tracker](https://github.com/glfw/glfw/issues).
Please check the [contribution
guide](https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md) for
information on what to include when reporting a bug.


## Changelog

 - Added `GLFW_PLATFORM` init hint for runtime platform selection (#1958)
 - Added `GLFW_ANY_PLATFORM`, `GLFW_PLATFORM_WIN32`, `GLFW_PLATFORM_COCOA`,
   `GLFW_PLATFORM_WAYLAND`, `GLFW_PLATFORM_X11` and `GLFW_PLATFORM_NULL` symbols to
   specify the desired platform (#1958)
 - Added `glfwGetPlatform` function to query what platform was selected (#1655,#1958)
 - Added `glfwPlatformSupported` function to query if a platform is supported
   (#1655,#1958)
 - Added `glfwInitAllocator` for setting a custom memory allocator (#544,#1628,#1947)
 - Added `GLFWallocator` struct and `GLFWallocatefun`, `GLFWreallocatefun` and
   `GLFWdeallocatefun` types (#544,#1628,#1947)
 - Added `glfwInitVulkanLoader` for using a non-default Vulkan loader (#1374,#1890)
 - Added `GLFW_RESIZE_NWSE_CURSOR`, `GLFW_RESIZE_NESW_CURSOR`,
   `GLFW_RESIZE_ALL_CURSOR` and `GLFW_NOT_ALLOWED_CURSOR` cursor shapes (#427)
 - Added `GLFW_RESIZE_EW_CURSOR` alias for `GLFW_HRESIZE_CURSOR` (#427)
 - Added `GLFW_RESIZE_NS_CURSOR` alias for `GLFW_VRESIZE_CURSOR` (#427)
 - Added `GLFW_POINTING_HAND_CURSOR` alias for `GLFW_HAND_CURSOR` (#427)
 - Added `GLFW_MOUSE_PASSTHROUGH` window hint for letting mouse input pass
   through the window (#1236,#1568)
 - Added `GLFW_CURSOR_CAPTURED` cursor mode to confine the cursor to the window
   content area (#58)
 - Added `GLFW_POSITION_X` and `GLFW_POSITION_Y` window hints for initial position
   (#1603,#1747)
 - Added `GLFW_ANY_POSITION` hint value for letting the window manager choose (#1603,#1747)
 - Added `GLFW_PLATFORM_UNAVAILABLE` error for platform detection failures (#1958)
 - Added `GLFW_FEATURE_UNAVAILABLE` error for platform limitations (#1692)
 - Added `GLFW_FEATURE_UNIMPLEMENTED` error for incomplete backends (#1692)
 - Added `GLFW_WAYLAND_APP_ID` window hint string for Wayland app\_id selection
   (#2121,#2122)
 - Added `GLFW_ANGLE_PLATFORM_TYPE` init hint and `GLFW_ANGLE_PLATFORM_TYPE_*`
   values to select ANGLE backend (#1380)
 - Added `GLFW_X11_XCB_VULKAN_SURFACE` init hint for selecting X11 Vulkan
   surface extension (#1793)
 - Added `GLFW_NATIVE_INCLUDE_NONE` for disabling inclusion of native headers (#1348)
 - Added `GLFW_BUILD_WIN32` CMake option for enabling Win32 support (#1958)
 - Added `GLFW_BUILD_COCOA` CMake option for enabling Cocoa support (#1958)
 - Added `GLFW_BUILD_X11` CMake option for enabling X11 support (#1958)
 - Added `GLFW_LIBRARY_TYPE` CMake variable for overriding the library type
   (#279,#1307,#1497,#1574,#1928)
 - Added `GLFW_PKG_CONFIG_REQUIRES_PRIVATE` and `GLFW_PKG_CONFIG_LIBS_PRIVATE` CMake
   variables exposing pkg-config dependencies (#1307)
 - Made joystick subsystem initialize at first use (#1284,#1646)
 - Made `GLFW_DOUBLEBUFFER` a read-only window attribute
 - Updated the minimum required CMake version to 3.1
 - Updated gamepad mappings from upstream
 - Disabled tests and examples by default when built as a CMake subdirectory
 - Renamed `GLFW_USE_WAYLAND` CMake option to `GLFW_BUILD_WAYLAND` (#1958)
 - Removed `GLFW_USE_OSMESA` CMake option enabling the Null platform (#1958)
 - Removed CMake generated configuration header
 - Bugfix: The CMake config-file package used an absolute path and was not
   relocatable (#1470)
 - Bugfix: Video modes with a duplicate screen area were discarded (#1555,#1556)
 - Bugfix: Compiling with -Wextra-semi caused warnings (#1440)
 - Bugfix: Built-in mappings failed because some OEMs re-used VID/PID (#1583)
 - Bugfix: Some extension loader headers did not prevent default OpenGL header
   inclusion (#1695)
 - Bugfix: Buffers were swapped at creation on single-buffered windows (#1873)
 - Bugfix: Gamepad mapping updates could spam `GLFW_INVALID_VALUE` due to
   incompatible controllers sharing hardware ID (#1763)
 - Bugfix: Native access functions for context handles did not check that the API matched
 - Bugfix: `glfwMakeContextCurrent` would access TLS slot before initialization
 - Bugfix: `glfwSetGammaRamp` could emit `GLFW_INVALID_VALUE` before initialization
 - Bugfix: `glfwGetJoystickUserPointer` returned `NULL` during disconnection (#2092)
 - [Win32] Added the `GLFW_WIN32_KEYBOARD_MENU` window hint for enabling access
           to the window menu
 - [Win32] Added a version info resource to the GLFW DLL
 - [Win32] Made hidden helper window use its own window class
 - [Win32] Disabled framebuffer transparency on Windows 7 when DWM windows are
   opaque (#1512)
 - [Win32] Bugfix: `GLFW_INCLUDE_VULKAN` plus `VK_USE_PLATFORM_WIN32_KHR` caused
   symbol redefinition (#1524)
 - [Win32] Bugfix: The cursor position event was emitted before its cursor enter
   event (#1490)
 - [Win32] Bugfix: The window hint `GLFW_MAXIMIZED` did not move or resize the
   window (#1499)
 - [Win32] Bugfix: Disabled cursor mode interfered with some non-client actions
 - [Win32] Bugfix: Super key was not released after Win+V hotkey (#1622)
 - [Win32] Bugfix: `glfwGetKeyName` could access out of bounds and return an
   invalid pointer
 - [Win32] Bugfix: Some synthetic key events were reported as `GLFW_KEY_UNKNOWN`
   (#1623)
 - [Win32] Bugfix: Non-BMP Unicode codepoint input was reported as UTF-16
 - [Win32] Bugfix: Monitor functions could return invalid values after
   configuration change (#1761)
 - [Win32] Bugfix: Initialization would segfault on Windows 8 (not 8.1) (#1775)
 - [Win32] Bugfix: Duplicate size events were not filtered (#1610)
 - [Win32] Bugfix: Full screen windows were incorrectly resized by DPI changes
   (#1582)
 - [Win32] Bugfix: `GLFW_SCALE_TO_MONITOR` had no effect on systems older than
   Windows 10 version 1703 (#1511)
 - [Win32] Bugfix: `USE_MSVC_RUNTIME_LIBRARY_DLL` had no effect on CMake 3.15 or
   later (#1783,#1796)
 - [Win32] Bugfix: Compilation with LLVM for Windows failed (#1807,#1824,#1874)
 - [Win32] Bugfix: The foreground lock timeout was overridden, ignoring the user
 - [Win32] Bugfix: Content scale queries could fail silently (#1615)
 - [Win32] Bugfix: Content scales could have garbage values if monitor was recently
   disconnected (#1615)
 - [Win32] Bugfix: A window created maximized and undecorated would cover the whole
   monitor (#1806)
 - [Win32] Bugfix: The default restored window position was lost when creating a maximized
   window
 - [Win32] Bugfix: `glfwMaximizeWindow` would make a hidden window visible
 - [Win32] Bugfix: `Alt+PrtSc` would emit `GLFW_KEY_UNKNOWN` and a different
   scancode than `PrtSc` (#1993)
 - [Win32] Bugfix: `GLFW_KEY_PAUSE` scancode from `glfwGetKeyScancode` did not
   match event scancode (#1993)
 - [Win32] Bugfix: Instance-local operations used executable instance (#469,#1296,#1395)
 - [Win32] Bugfix: The OSMesa library was not unloaded on termination
 - [Win32] Bugfix: Right shift emitted `GLFW_KEY_UNKNOWN` when using a CJK IME (#2050)
 - [Cocoa] Added support for `VK_EXT_metal_surface` (#1619)
 - [Cocoa] Added locating the Vulkan loader at runtime in an application bundle
 - [Cocoa] Moved main menu creation to GLFW initialization time (#1649)
 - [Cocoa] Changed `EGLNativeWindowType` from `NSView` to `CALayer` (#1169)
 - [Cocoa] Changed F13 key to report Print Screen for cross-platform consistency
   (#1786)
 - [Cocoa] Disabled macOS fullscreen when `GLFW_RESIZABLE` is false
 - [Cocoa] Removed dependency on the CoreVideo framework
 - [Cocoa] Bugfix: `glfwSetWindowSize` used a bottom-left anchor point (#1553)
 - [Cocoa] Bugfix: Window remained on screen after destruction until event poll
   (#1412)
 - [Cocoa] Bugfix: Event processing before window creation would assert (#1543)
 - [Cocoa] Bugfix: Undecorated windows could not be iconified on recent macOS
 - [Cocoa] Bugfix: Touching event queue from secondary thread before main thread
   would abort (#1649)
 - [Cocoa] Bugfix: Non-BMP Unicode codepoint input was reported as UTF-16
   (#1635)
 - [Cocoa] Bugfix: Failing to retrieve the refresh rate of built-in displays
   could leak memory
 - [Cocoa] Bugfix: Objective-C files were compiled as C with CMake 3.19 (#1787)
 - [Cocoa] Bugfix: Duplicate video modes were not filtered out (#1830)
 - [Cocoa] Bugfix: Menu bar was not clickable on macOS 10.15+ until it lost and
   regained focus (#1648,#1802)
 - [Cocoa] Bugfix: Monitor name query could segfault on macOS 11 (#1809,#1833)
 - [Cocoa] Bugfix: The install name of the installed dylib was relative (#1504)
 - [Cocoa] Bugfix: The MoltenVK layer contents scale was updated only after
   related events were emitted
 - [Cocoa] Bugfix: Moving the cursor programmatically would freeze it for
   a fraction of a second (#1962)
 - [Cocoa] Bugfix: `kIOMasterPortDefault` was deprecated in macOS 12.0 (#1980)
 - [Cocoa] Bugfix: `kUTTypeURL` was deprecated in macOS 12.0 (#2003)
 - [Cocoa] Bugfix: A connected Apple AirPlay would emit a useless error (#1791)
 - [Cocoa] Bugfix: The EGL and OSMesa libraries were not unloaded on termination
 - [Cocoa] Bugfix: `GLFW_MAXIMIZED` was always true when `GLFW_RESIZABLE` was false
 - [Cocoa] Bugfix: Changing `GLFW_DECORATED` in macOS fullscreen would abort
   application (#1886)
 - [Cocoa] Bugfix: Setting a monitor from macOS fullscreen would abort
   application (#2110)
 - [Cocoa] Bugfix: The Vulkan loader was not loaded from the `Frameworks` bundle
   subdirectory (#2113,#2120)
 - [X11] Bugfix: The CMake files did not check for the XInput headers (#1480)
 - [X11] Bugfix: Key names were not updated when the keyboard layout changed
   (#1462,#1528)
 - [X11] Bugfix: Decorations could not be enabled after window creation (#1566)
 - [X11] Bugfix: Content scale fallback value could be inconsistent (#1578)
 - [X11] Bugfix: `glfwMaximizeWindow` had no effect on hidden windows
 - [X11] Bugfix: Clearing `GLFW_FLOATING` on a hidden window caused invalid read
 - [X11] Bugfix: Changing `GLFW_FLOATING` on a hidden window could silently fail
 - [X11] Bugfix: Disabled cursor mode was interrupted by indicator windows
 - [X11] Bugfix: Monitor physical dimensions could be reported as zero mm
 - [X11] Bugfix: Window position events were not emitted during resizing (#1613)
 - [X11] Bugfix: `glfwFocusWindow` could terminate on older WMs or without a WM
 - [X11] Bugfix: Querying a disconnected monitor could segfault (#1602)
 - [X11] Bugfix: IME input of CJK was broken for ""C"" locale (#1587,#1636)
 - [X11] Bugfix: Termination would segfault if the IM had been destroyed
 - [X11] Bugfix: Any IM started after initialization would not be detected
 - [X11] Bugfix: Xlib errors caused by other parts of the application could be
   reported as GLFW errors
 - [X11] Bugfix: A handle race condition could cause a `BadWindow` error (#1633)
 - [X11] Bugfix: XKB path used keysyms instead of physical locations for
   non-printable keys (#1598)
 - [X11] Bugfix: Function keys were mapped to `GLFW_KEY_UNKNOWN` for some layout
   combinations (#1598)
 - [X11] Bugfix: Keys pressed simultaneously with others were not always
   reported (#1112,#1415,#1472,#1616)
 - [X11] Bugfix: Some window attributes were not applied on leaving fullscreen
   (#1863)
 - [X11] Bugfix: Changing `GLFW_FLOATING` could leak memory
 - [X11] Bugfix: Icon pixel format conversion worked only by accident, relying on
   undefined behavior (#1986)
 - [X11] Bugfix: Dynamic loading on OpenBSD failed due to soname differences
 - [X11] Bugfix: Waiting for events would fail if file descriptor was too large
   (#2024)
 - [X11] Bugfix: Joystick events could lead to busy-waiting (#1872)
 - [X11] Bugfix: `glfwWaitEvents*` did not continue for joystick events
 - [X11] Bugfix: `glfwPostEmptyEvent` could be ignored due to race condition
   (#379,#1281,#1285,#2033)
 - [X11] Bugfix: Dynamic loading on NetBSD failed due to soname differences
 - [X11] Bugfix: Left shift of int constant relied on undefined behavior (#1951)
 - [X11] Bugfix: The OSMesa libray was not unloaded on termination
 - [X11] Bugfix: A malformed response during selection transfer could cause a segfault
 - [X11] Bugfix: Some calls would reset Xlib to the default error handler (#2108)
 - [Wayland] Added improved fallback window decorations via libdecor (#1639,#1693)
 - [Wayland] Added dynamic loading of all Wayland libraries
 - [Wayland] Added support for key names via xkbcommon
 - [Wayland] Added support for file path drop events (#2040)
 - [Wayland] Added support for more human-readable monitor names where available
 - [Wayland] Disabled alpha channel for opaque windows on systems lacking
   `EGL_EXT_present_opaque` (#1895)
 - [Wayland] Removed support for `wl_shell` (#1443)
 - [Wayland] Bugfix: The `GLFW_HAND_CURSOR` shape used the wrong image (#1432)
 - [Wayland] Bugfix: `CLOCK_MONOTONIC` was not correctly enabled
 - [Wayland] Bugfix: Repeated keys could be reported with `NULL` window (#1704)
 - [Wayland] Bugfix: Retrieving partial framebuffer size would segfault
 - [Wayland] Bugfix: Scrolling offsets were inverted compared to other platforms
   (#1463)
 - [Wayland] Bugfix: Client-Side Decorations were destroyed in the wrong order
   (#1798)
 - [Wayland] Bugfix: Monitors physical size could report zero (#1784,#1792)
 - [Wayland] Bugfix: Some keys were not repeating in Wayland (#1908)
 - [Wayland] Bugfix: Non-arrow cursors are offset from the hotspot (#1706,#1899)
 - [Wayland] Bugfix: The `O_CLOEXEC` flag was not defined on FreeBSD
 - [Wayland] Bugfix: Key repeat could lead to a race condition (#1710)
 - [Wayland] Bugfix: Activating a window would emit two input focus events
 - [Wayland] Bugfix: Disable key repeat mechanism when window loses input focus
 - [Wayland] Bugfix: Window hiding and showing did not work (#1492,#1731)
 - [Wayland] Bugfix: A key being repeated was not released when window lost focus
 - [Wayland] Bugfix: Showing a hidden window did not emit a window refresh event
 - [Wayland] Bugfix: Full screen window creation did not ignore `GLFW_VISIBLE`
 - [Wayland] Bugfix: Some keys were reported as wrong key or `GLFW_KEY_UNKNOWN`
 - [Wayland] Bugfix: Text input did not repeat along with key repeat
 - [Wayland] Bugfix: `glfwPostEmptyEvent` sometimes had no effect (#1520,#1521)
 - [Wayland] Bugfix: `glfwSetClipboardString` would fail if set to result of
   `glfwGetClipboardString`
 - [Wayland] Bugfix: Data source creation error would cause double free at termination
 - [Wayland] Bugfix: Partial writes of clipboard string would cause beginning to repeat
 - [Wayland] Bugfix: Some errors would cause clipboard string transfer to hang
 - [Wayland] Bugfix: Drag and drop data was misinterpreted as clipboard string
 - [Wayland] Bugfix: MIME type matching was not performed for clipboard string
 - [Wayland] Bugfix: The OSMesa library was not unloaded on termination
 - [Wayland] Bugfix: `glfwCreateWindow` could emit `GLFW_FEATURE_UNAVAILABLE`
 - [Wayland] Bugfix: Lock key modifier bits were only set when lock keys were pressed
 - [Wayland] Bugfix: A window leaving full screen mode would be iconified (#1995)
 - [Wayland] Bugfix: A window leaving full screen mode ignored its desired size
 - [Wayland] Bugfix: `glfwSetWindowMonitor` did not update windowed mode size
 - [Wayland] Bugfix: `glfwRestoreWindow` would make a full screen window windowed
 - [Wayland] Bugfix: A window maximized or restored by the user would enter an
   inconsistent state
 - [Wayland] Bugfix: Window maximization events were not emitted
 - [Wayland] Bugfix: `glfwRestoreWindow` assumed it was always in windowed mode
 - [Wayland] Bugfix: `glfwSetWindowSize` would resize a full screen window
 - [Wayland] Bugfix: A window content scale event would be emitted every time
   the window resized
 - [Wayland] Bugfix: If `glfwInit` failed it would close stdin
 - [Wayland] Bugfix: Manual resizing with fallback decorations behaved erratically
   (#1991,#2115,#2127)
 - [Wayland] Bugfix: Size limits included frame size for fallback decorations
 - [Wayland] Bugfix: Updating `GLFW_DECORATED` had no effect on server-side
   decorations
 - [Wayland] Bugfix: A monitor would be reported as connected again if its scale
   changed
 - [Wayland] Bugfix: `glfwTerminate` would segfault if any monitor had changed
   scale
 - [Wayland] Bugfix: Window content scale events were not emitted when monitor
   scale changed
 - [Wayland] Bugfix: `glfwSetWindowAspectRatio` reported an error instead of
   applying the specified ratio
 - [Wayland] Bugfix: `GLFW_MAXIMIZED` window hint had no effect
 - [Wayland] Bugfix: `glfwRestoreWindow` had no effect before first show
 - [Wayland] Bugfix: Hiding and then showing a window caused program abort on
   wlroots compositors (#1268)
 - [Wayland] Bugfix: `GLFW_DECORATED` was ignored when showing a window with XDG
   decorations
 - [Wayland] Bugfix: Connecting a mouse after `glfwInit` would segfault (#1450)
 - [Wayland] Bugfix: Joysticks connected after `glfwInit` were not detected (#2198)
 - [POSIX] Removed use of deprecated function `gettimeofday`
 - [POSIX] Bugfix: `CLOCK_MONOTONIC` was not correctly tested for or enabled
 - [Linux] Bugfix: Joysticks without buttons were ignored (#2042,#2043)
 - [WGL] Disabled the DWM swap interval hack for Windows 8 and later (#1072)
 - [NSGL] Removed enforcement of forward-compatible flag for core contexts
 - [NSGL] Bugfix: `GLFW_COCOA_RETINA_FRAMEBUFFER` had no effect on newer
   macOS versions (#1442)
 - [NSGL] Bugfix: Workaround for swap interval on 10.14 broke on 10.12 (#1483)
 - [NSGL] Bugfix: Defining `GL_SILENCE_DEPRECATION` externally caused
   a duplicate definition warning (#1840)
 - [EGL] Added platform selection via the `EGL_EXT_platform_base` extension
   (#442)
 - [EGL] Added ANGLE backend selection via `EGL_ANGLE_platform_angle` extension
   (#1380)
   [EGL] Added loading of glvnd `libOpenGL.so.0` where available for OpenGL
 - [EGL] Bugfix: The `GLFW_DOUBLEBUFFER` context attribute was ignored (#1843)
 - [GLX] Added loading of glvnd `libGLX.so.0` where available
 - [GLX] Bugfix: Context creation failed if GLX 1.4 was not exported by GLX library


## Contact

On [glfw.org](https://www.glfw.org/) you can find the latest version of GLFW, as
well as news, documentation and other information about the project.

If you have questions related to the use of GLFW, we have a
[forum](https://discourse.glfw.org/), and the `#glfw` IRC channel on
[Libera.Chat](https://libera.chat/).

If you have a bug to report, a patch to submit or a feature you'd like to
request, please file it in the
[issue tracker](https://github.com/glfw/glfw/issues) on GitHub.

Finally, if you're interested in helping out with the development of GLFW or
porting it to your favorite platform, join us on the forum, GitHub or IRC.

"
LukeSmithxyz/st,C,"# Luke's build of st - the simple (suckless) terminal

The [suckless terminal (st)](https://st.suckless.org/) with some additional
features that make it literally the best terminal emulator ever:

## Unique features (using dmenu)

+ **follow urls** by pressing `alt-l`
+ **copy urls** in the same way with `alt-y`
+ **copy the output of commands** with `alt-o`

## Bindings for

+ **scrollback** with `alt-↑/↓` or `alt-pageup/down` or `shift` while scrolling the
  mouse.
+ OR **vim-bindings**: scroll up/down in history with `alt-k` and `alt-j`.
  Faster with `alt-u`/`alt-d`.
+ **zoom/change font size**: same bindings as above, but holding down shift as
  well. `alt-home` returns to default
+ **copy text** with `alt-c`, **paste** is `alt-v` or `shift-insert`

## Pretty stuff

+ Compatibility with `Xresources` and `pywal` for dynamic colors.
+ Default [gruvbox](https://github.com/morhetz/gruvbox) colors otherwise.
+ Transparency/alpha, which is also adjustable from your `Xresources`.
+ Default font is system ""mono"" at 14pt, meaning the font will match your
  system font.

## Other st patches

+ Boxdraw
+ Ligatures
+ font2
+ updated to latest version 0.8.5

## Installation for newbs

You should have xlib header files and libharfbuzz build files installed.

```
git clone https://github.com/LukeSmithxyz/st
cd st
sudo make install
```

Obviously, `make` is required to build. `fontconfig` is required for the
default build, since it asks `fontconfig` for your system monospace font. It
might be obvious, but `libX11` and `libXft` are required as well. Chances are,
you have all of this installed already.

On OpenBSD, be sure to edit `config.mk` first and remove `-lrt` from the
`$LIBS` before compiling.

Be sure to have a composite manager (`xcompmgr`, `picom`, etc.) running if you
want transparency.

## How to configure dynamically with Xresources

For many key variables, this build of `st` will look for X settings set in
either `~/.Xdefaults` or `~/.Xresources`. You must run `xrdb` on one of these
files to load the settings.

For example, you can define your desired fonts, transparency or colors:

```
*.font:	Liberation Mono:pixelsize=12:antialias=true:autohint=true;
*.alpha: 0.9
*.color0: #111
...
```

The `alpha` value (for transparency) goes from `0` (transparent) to `1`
(opaque). There is an example `Xdefaults` file in this respository.

### Colors

To be clear about the color settings:

- This build will use gruvbox colors by default and as a fallback.
- If there are Xresources colors defined, those will take priority.
- But if `wal` has run in your session, its colors will take priority.

Note that when you run `wal`, it will negate the transparency of existing windows, but new windows will continue with the previously defined transparency.

## Contact

- Luke Smith <luke@lukesmith.xyz>
- [https://lukesmith.xyz](https://lukesmith.xyz)
"
lattera/glibc,C,"This directory contains the sources of the GNU C Library.
See the file ""version.h"" for what release version you have.

The GNU C Library is the standard system C library for all GNU systems,
and is an important part of what makes up a GNU system.  It provides the
system API for all programs written in C and C-compatible languages such
as C++ and Objective C; the runtime facilities of other programming
languages use the C library to access the underlying operating system.

In GNU/Linux systems, the C library works with the Linux kernel to
implement the operating system behavior seen by user applications.
In GNU/Hurd systems, it works with a microkernel and Hurd servers.

The GNU C Library implements much of the POSIX.1 functionality in the
GNU/Hurd system, using configurations i[4567]86-*-gnu.

When working with Linux kernels, this version of the GNU C Library
requires Linux kernel version 3.2 or later.

Also note that the shared version of the libgcc_s library must be
installed for the pthread library to work correctly.

The GNU C Library supports these configurations for using Linux kernels:

	aarch64*-*-linux-gnu
	alpha*-*-linux-gnu
	arm-*-linux-gnueabi
	hppa-*-linux-gnu
	i[4567]86-*-linux-gnu
	x86_64-*-linux-gnu	Can build either x86_64 or x32
	ia64-*-linux-gnu
	m68k-*-linux-gnu
	microblaze*-*-linux-gnu
	mips-*-linux-gnu
	mips64-*-linux-gnu
	powerpc-*-linux-gnu	Hardware or software floating point, BE only.
	powerpc64*-*-linux-gnu	Big-endian and little-endian.
	s390-*-linux-gnu
	s390x-*-linux-gnu
	riscv64-*-linux-gnu
	sh[34]-*-linux-gnu
	sparc*-*-linux-gnu
	sparc64*-*-linux-gnu

If you are interested in doing a port, please contact the glibc
maintainers; see http://www.gnu.org/software/libc/ for more
information.

See the file INSTALL to find out how to configure, build, and install
the GNU C Library.  You might also consider reading the WWW pages for
the C library at http://www.gnu.org/software/libc/.

The GNU C Library is (almost) completely documented by the Texinfo manual
found in the `manual/' subdirectory.  The manual is still being updated
and contains some known errors and omissions; we regret that we do not
have the resources to work on the manual as much as we would like.  For
corrections to the manual, please file a bug in the `manual' component,
following the bug-reporting instructions below.  Please be sure to check
the manual in the current development sources to see if your problem has
already been corrected.

Please see http://www.gnu.org/software/libc/bugs.html for bug reporting
information.  We are now using the Bugzilla system to track all bug reports.
This web page gives detailed information on how to report bugs properly.

The GNU C Library is free software.  See the file COPYING.LIB for copying
conditions, and LICENSES for notices about a few contributions that require
these additional notices to be distributed.  License copyright years may be
listed using range notation, e.g., 1996-2015, indicating that every year in
the range, inclusive, is a copyrightable year that would otherwise be listed
individually.
"
libopencm3/libopencm3,C,"README
======
[![Build Status](https://travis-ci.org/libopencm3/libopencm3.svg?branch=master)](https://travis-ci.org/libopencm3/libopencm3)

[![Gitter channel](https://badges.gitter.im/libopencm3/discuss.svg)](https://gitter.im/libopencm3/discuss)

The libopencm3 project aims to create an open-source firmware library for
various ARM Cortex-M microcontrollers.

Currently (at least partly) supported microcontrollers:

 - ST STM32 F0xx/F1xx/F2xx/F30x/F37x/F4xx/F7xx/H7xx series
 - ST STM32 G0xx G4xx L0xx L1xx L4xx series
 - Atmel SAM3A/3N/3S/3U/3X series, as well as SAMDxx and friends
 - NXP LPC1311/13/17/42/43
 - Stellaris LM3S series (discontinued, without replacement)
 - TI (Tiva) LM4F series (continuing as TM4F, pin and peripheral compatible)
 - EFM32 Gecko series (only core support)
 - Freescale Vybrid VF6xx
 - Qorvo (formerly ActiveSemi) PAC55XX
 - Synwit SWM050
 - Nordic NRF51x and NRF52x

The library is written completely from scratch based on the vendor datasheets,
programming manuals, and application notes. The code is meant to be used
with a GCC toolchain for ARM (arm-elf or arm-none-eabi), flashing of the
code to a microcontroller can be done using the OpenOCD ARM JTAG software.


Status and API
--------------

The libopencm3 project is (and presumably, always will be) a work in progress.
Not all subsystems of all microcontrollers are supported, yet, though some parts
have more complete support than others.

Prior to version 0.8.0, the api was largely in flux.  Attempts were made to provide
backwards compatibility, but this was not always considered critical.

From 0.8.0 to 1.0, we'll atempt to follow semver, but **EXPECT CHANGES**, as we
attempt to clear up old APIs and remove deprecated functions.  The 0.8.0 tag was
placed to provide the ""old stable"" point before all the new code started landing.

_preview_ code often lands in the ""wildwest-N"" branches that appear and disappear
in the repository.  Pull requests marked as ""merged-dev"" will be in this branch,
and will be closed when they merge to master.  This is useful for bigger
interdependent patch sets, and also allows review of merge conflicts in public.

From 1.0, expect to follow semver, with functions (and defines!) being deprecated for
a release before being removed.

_TIP_: Include this repository as a Git submodule in your project to make sure
     your users get the right version of the library to compile your project.
     For how that can be done refer to the
     [libopencm3-template](https://github.com/libopencm3/libopencm3-template) repository.

Prerequisites
-------------

Building requires Python (some code is generated).

**For Ubuntu/Fedora:**

 - An arm-none-eabi/arm-elf toolchain.

**For Windows:**

 Download and install:

 - msys - http://sourceforge.net/projects/mingw/files/MSYS/Base/msys-core/msys-1.0.11/MSYS-1.0.11.exe
 - Python - https://www.python.org/downloads/windows/ (any release)
 - arm-none-eabi/arm-elf toolchain (for example this one https://launchpad.net/gcc-arm-embedded)

Run msys shell and set the path without standard Windows paths (adjusting to your version of Python), so Windows programs such as 'find' won't interfere:

    export PATH=""/c//Program Files/Python 3.9:/c/ARMToolchain/bin:/usr/local/bin:/usr/bin:/bin""

After that you can navigate to the folder where you've extracted libopencm3 and build it.

Toolchain
---------

The most heavily tested toolchain is [""gcc-arm-embedded""](https://developer.arm.com/Tools%20and%20Software/GNU%20Toolchain)
This used to be available at https://launchpad.net/gcc-arm-embedded

Other toolchains _should_ work, but they have not been nearly as well tested.
Toolchains targeting Linux, such as ""gcc-arm-linux-gnu"" or the like are
_not_ appropriate.

_NOTE_: GCC version 6 or later is required, as we're using attributes on enumerators
to help mark deprecations.

Building
--------

    $ make

If you have an arm-elf toolchain (uncommon) you may want to override the
toolchain prefix (arm-none-eabi is the default)

    $ PREFIX=arm-elf make

For a more verbose build you can use

    $ make V=1

You can reduce the build time by specifying a particular MCU series

    $ make TARGETS='stm32/f1 stm32/f4'

Supported targets can be listed using:

    $ make list-targets

Fine-tuning the build
---------------------

The build may be fine-tuned with a limited number of parameters, by specifying
them as environment variables, for example:

    $ VARIABLE=value make

* `FP_FLAGS` - Control the floating-point ABI

   If the Cortex-M core supports a hard float ABI, it will be compiled with
   the best floating-point support by default. In cases where this is not desired, the
   behavior can be specified by setting `FP_FLAGS`.

   Currently, M4F cores default to `-mfloat-abi=hard -mfpu=fpv4-sp-d16`, and
   M7 cores defaults to double precision `-mfloat-abi=hard -mfpu=fpv5-d16` if available,
   and single precision `-mfloat-abi=hard -mfpu=fpv5-sp-d16` otherwise.
   Other architectures use no FP flags, in otherwords, traditional softfp.

   You may find which FP_FLAGS you can use in a particular architecture in the readme.txt
   file shipped with the gcc-arm-embedded package.

   Examples:

        $ FP_FLAGS=""-mfloat-abi=soft"" make               # No hardfloat
        $ FP_FLAGS=""-mfloat-abi=hard -mfpu=magic"" make   # New FPU we don't know of

* `CFLAGS` - Add to or supersede compiler flags

   If the library needs to be compiled with additional flags, they can be
   passed to the build system via the environment variable `CFLAGS`. The
   contents of `CFLAGS` will be placed after all flags defined by the build
   system, giving the user a way to override any default if necessary.

   Examples:

        $ CFLAGS=""-fshort-wchar"" make    # Compile lib with 2 byte wide wchar_t

Example projects
----------------

The libopencm3 community has written and is maintaining a huge collection of
examples, displaying the capabilities and uses of the library. You can find all
of them in the libopencm3-examples repository:

https://github.com/libopencm3/libopencm3-examples

If you just wish to test your toolchain and build environment, a collection of
mini blink projects is available too.  This covers _many_ more boards, but, as
the name suggests, only demonstrates blinking LEDs.


https://github.com/libopencm3/libopencm3-miniblink

Installation
------------

Simply pass -I and -L flags to your own project.  See the
[libopencm3-template](https://github.com/libopencm3/libopencm3-template)
repository for a template repository using this library as a Git submodule,
the most popular method of use.  The libopencm3-examples is another
example of this.

It is strongly advised that you do not attempt to install this library to any
path inside your toolchain itself.  While this means you don't have to include
any `-I` or `-L` flags in your projects, it is _very_ easy to confuse a multi-library
linker from picking the right versions of libraries.  Common symptoms are
hardfaults caused by branches into ARM code.  You can use `arm-none-eabi-objdump`
to check for this in your final ELF file.  You have been warned.

Coding style and development guidelines
---------------------------------------

See HACKING.


License
-------

The libopencm3 code is released under the terms of the GNU Lesser General
Public License (LGPL), version 3 or later.

See COPYING.GPL3 and COPYING.LGPL3 for details.

Community
---------

 * Our [![Gitter channel](https://badges.gitter.im/libopencm3/discuss.svg)](https://gitter.im/libopencm3/discuss)
 * Our IRC channel on the libera.chat IRC network is called #libopencm3

Mailing lists
-------------

 * Developer mailing list (for patches and discussions):
   https://lists.sourceforge.net/lists/listinfo/libopencm3-devel

 * Commits mailing list (receives one mail per `git push`):
   https://lists.sourceforge.net/lists/listinfo/libopencm3-commits


Website
-------

 * http://libopencm3.org - contains daily autogenerated API documentation

"
pymumu/smartdns,C,"# SmartDNS

**[English](ReadMe_en.md)**

![SmartDNS](doc/smartdns-banner.png)
SmartDNS 是一个运行在本地的 DNS 服务器，它接受来自本地客户端的 DNS 查询请求，然后从多个上游 DNS 服务器获取 DNS 查询结果，并将访问速度最快的结果返回给客户端，以此提高网络访问速度。
SmartDNS 同时支持指定特定域名 IP 地址，并高性匹配，可达到过滤广告的效果; 支持DOT(DNS over TLS)和DOH(DNS over HTTPS)，更好的保护隐私。  

与 DNSmasq 的 all-servers 不同，SmartDNS 返回的是访问速度最快的解析结果。

支持树莓派、OpenWrt、华硕路由器原生固件和 Windows 系统等。

## 使用指导

SmartDNS官网：[https://pymumu.github.io/smartdns](https://pymumu.github.io/smartdns)

## 软件效果展示

**阿里 DNS**  
使用阿里 DNS 查询百度IP，并检测结果。  

```shell
$ nslookup www.baidu.com 223.5.5.5
Server:         223.5.5.5
Address:        223.5.5.5#53

Non-authoritative answer:
www.baidu.com   canonical name = www.a.shifen.com.
Name:   www.a.shifen.com
Address: 180.97.33.108
Name:   www.a.shifen.com
Address: 180.97.33.107

$ ping 180.97.33.107 -c 2
PING 180.97.33.107 (180.97.33.107) 56(84) bytes of data.
64 bytes from 180.97.33.107: icmp_seq=1 ttl=55 time=24.3 ms
64 bytes from 180.97.33.107: icmp_seq=2 ttl=55 time=24.2 ms

--- 180.97.33.107 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 24.275/24.327/24.380/0.164 ms
pi@raspberrypi:~/code/smartdns_build $ ping 180.97.33.108 -c 2
PING 180.97.33.108 (180.97.33.108) 56(84) bytes of data.
64 bytes from 180.97.33.108: icmp_seq=1 ttl=55 time=31.1 ms
64 bytes from 180.97.33.108: icmp_seq=2 ttl=55 time=31.0 ms

--- 180.97.33.108 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 31.014/31.094/31.175/0.193 ms
```

**SmartDNS**  
使用 SmartDNS 查询百度 IP，并检测结果。

```shell
$ nslookup www.baidu.com
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
www.baidu.com   canonical name = www.a.shifen.com.
Name:   www.a.shifen.com
Address: 14.215.177.39

$ ping 14.215.177.39 -c 2
PING 14.215.177.39 (14.215.177.39) 56(84) bytes of data.
64 bytes from 14.215.177.39: icmp_seq=1 ttl=56 time=6.31 ms
64 bytes from 14.215.177.39: icmp_seq=2 ttl=56 time=5.95 ms

--- 14.215.177.39 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 5.954/6.133/6.313/0.195 ms
```

从对比看出，SmartDNS 找到了访问 www.baidu.com 最快的 IP 地址，比阿里 DNS 速度快了 5 倍。

## 特性

1. **多 DNS 上游服务器**  
   支持配置多个上游 DNS 服务器，并同时进行查询，即使其中有 DNS 服务器异常，也不会影响查询。  

1. **返回最快 IP 地址**  
   支持从域名所属 IP 地址列表中查找到访问速度最快的 IP 地址，并返回给客户端，提高网络访问速度。

1. **支持多种查询协议**  
   支持 UDP、TCP、DOT 和 DOH 查询及服务，以及非 53 端口查询；支持通过socks5，HTTP代理查询;

1. **特定域名 IP 地址指定**  
   支持指定域名的 IP 地址，达到广告过滤效果、避免恶意网站的效果。

1. **域名高性能后缀匹配**  
   支持域名后缀匹配模式，简化过滤配置，过滤 20 万条记录时间 < 1ms。

1. **域名分流**  
   支持域名分流，不同类型的域名向不同的 DNS 服务器查询，支持iptable和nftable更好的分流；支持测速失败的情况下设置域名结果到对应ipset和nftset集合。

1. **Windows / Linux 多平台支持**  
   支持标准 Linux 系统（树莓派）、OpenWrt 系统各种固件和华硕路由器原生固件。同时还支持 WSL（Windows Subsystem for Linux，适用于 Linux 的 Windows 子系统）。

1. **支持 IPv4、IPv6 双栈**  
   支持 IPv4 和 IPV 6网络，支持查询 A 和 AAAA 记录，支持双栈 IP 速度优化，并支持完全禁用 IPv6 AAAA 解析。

1. **支持DNS64**  
   支持DNS64转换。

1. **高性能、占用资源少**  
   多线程异步 IO 模式，cache 缓存查询结果。

1. **主流系统官方支持**  
   主流路由系统官方软件源安装smartdns。

## 架构

![Architecture](https://github.com/pymumu/test/releases/download/blob/architecture.png)

1. SmartDNS 接收本地网络设备的DNS 查询请求，如 PC、手机的查询请求；
1. 然后将查询请求发送到多个上游 DNS 服务器，可支持 UDP 标准端口或非标准端口查询，以及 TCP 查询；
1. 上游 DNS 服务器返回域名对应的服务器 IP 地址列表，SmartDNS 则会检测从本地网络访问速度最快的服务器 IP；
1. 最后将访问速度最快的服务器 IP 返回给本地客户端。

## 编译

- 代码编译：

  SmartDNS 提供了编译软件包的脚本（`package/build-pkg.sh`），支持编译 LuCI、Debian、OpenWrt 和 Optware 安装包。

- 文档编译：

  文档分支为`doc`，安装`mkdocs`工具后，执行`mkdocs build`编译。

## 捐赠

如果你觉得此项目对你有帮助，请捐助我们，使项目能持续发展和更加完善。

### PayPal 贝宝

[![Support via PayPal](https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg)](https://paypal.me/PengNick/)

### AliPay 支付宝

![alipay](doc/alipay_donate.jpg)

### WeChat Pay 微信支付

![wechat](doc/wechat_donate.jpg)

## 开源声明

SmartDNS 基于 GPL V3 协议开源。
"
remzi-arpacidusseau/ostep-projects,C,"
# Projects for an Operating Systems Class

This repository holds a number of projects that can be used in an operating
systems class aimed at upper-level undergraduates and (in some cases)
beginning graduate students. They are based on years of teaching such a course
at the University of Wisconsin-Madison.

Also (increasingly) available are some tests to see if your code works; eventually
every project will have a set of tests available. The testing framework that is
currently available is found [here](https://github.com/remzi-arpacidusseau/ostep-projects/tree/master/tester).
A specific testing script, found in each project directory, can be used to run
the tests against your code. 

For example, in the initial utilities project, the relatively simple `wcat`
program that you create can be tested by running the `test-wcat.sh` script.
This could be accomplished by the following commands:
```sh
prompt> git clone https://github.com/remzi-arpacidusseau/ostep-projects
prompt> cd ostep-projects/initial-utilities/wcat
prompt> emacs -nw wcat.c 
prompt> gcc -o wcat wcat.c -Wall 
prompt> ./test-wcat.sh
test 1: passed
test 2: passed
test 3: passed
test 4: passed
test 5: passed
test 6: passed
test 7: passed
prompt> 
```
Of course, this sequence assumes (a) you use `emacs` (you should!), (b) your
code is written in one shot (impressive!), and (c) that it works perfectly
(well done!). Even for simple assignments, it is likely that the
compile/run/debug cycle might take a few iterations.

## C/Linux Projects

### Initial Projects

These projects are meant to get you warmed up with programming in the C/UNIX
environment. None are meant to be particularly hard, but should be enough so
that you can get more comfortable programming. 

Realize the best thing you can do to learn to program in any environment is to
program **a lot**. These small projects are only the beginning of that
journey; you'll have to do more on your own to truly become proficient.

* [Unix Utilities](initial-utilities) (cat, grep, zip/unzip)
* Sort (text-based)
* Sort (binary)
* [Reverse](initial-reverse) (very simple reverse program)

### Processes and Scheduling

* [Shell](processes-shell)

### Virtual Memory

* Memory Allocator

### Concurrency

* [Web Server](concurrency-webserver)
* [Parallel Zip](concurrency-pzip)
* [MapReduce](concurrency-mapreduce)
* Web Crawler

### File Systems

* [File System Checker](filesystems-checker)

### Distributed Systems


## Kernel Hacking Projects (xv6)

These projects all are to be done inside the
[xv6](https://pdos.csail.mit.edu/6.828/2017/xv6.html) kernel based on an early
version of Unix and developed at MIT. Unlike the C/Linux projects, these give
you direct experience inside a real, working operating system (albeit a simple
one).

Read the [install notes](INSTALL-xv6.md) to see how to download the latest xv6 
and install the tools you'll need.

### Initial Projects

* [Intro To xv6](initial-xv6)

### Processes and Scheduling

* [Scheduling (Lottery)](scheduling-xv6-lottery)

### Virtual Memory

* [Virtual Memory (Null Pointer and Read-Only Regions)](vm-xv6-intro)

### Concurrency

* [Kernel Threads (Basic Implementation)](concurrency-xv6-threads)

### File Systems



"
olikraus/u8g2,C,"[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/olikraus/u8g2) 

![https://raw.githubusercontent.com/wiki/olikraus/u8g2/ref/u8g2_logo_transparent_orange.png](https://raw.githubusercontent.com/wiki/olikraus/u8g2/ref/u8g2_logo_transparent_orange.png) 


U8g2: Library for monochrome displays, version 2

U8g2 is a monochrome graphics library for embedded devices. 
U8g2 supports monochrome OLEDs and LCDs, which include the following controllers:
SSD1305, SSD1306, SSD1309, SSD1312, SSD1316, SSD1318, SSD1320, SSD1322, 
SSD1325, SSD1327, SSD1329, SSD1606, SSD1607, SH1106, SH1107, SH1108, SH1122, 
T6963, RA8835, LC7981, PCD8544, PCF8812, HX1230, UC1601, UC1604, UC1608, UC1610, 
UC1611, UC1617, UC1638, UC1701, ST7511, ST7528, ST7565, ST7567, ST7571, ST7586, 
ST7588, ST75160, ST75256, ST75320, NT7534, ST7920, IST3020, IST3088, IST7920, 
LD7032, KS0108, KS0713, HD44102, T7932, SED1520, SBN1661, IL3820, MAX7219, 
GP1287, GP1247, GU800
(see [here](https://github.com/olikraus/u8g2/wiki/u8g2setupcpp) for a full list).

The Arduino library U8g2 can be installed from the library manager of the Arduino IDE. U8g2 also includes U8x8 library:
 * U8g2
   * Includes all graphics procedures (line/box/circle draw).
   * Supports many fonts. (Almost) no restriction on the font height.
   * Requires some memory in the microcontroller to render the display.
 * U8x8
   * Text output only (character) device.
   * Only fonts allowed with fit into a 8x8 pixel grid.
   * Writes directly to the display. No buffer in the microcontroller required.


[Setup Guide and Reference Manual](https://github.com/olikraus/u8g2/wiki)

"
OpenNI/OpenNI2,C,"# This repository is no longer maintained.

Issue reports and pull requests will not be attended.
There are volunteers who are now maintaining OpenNI such as listed below, so please work with them.

* Occipital: http://structure.io/openni [[Fork on Github](https://github.com/occipital/openni2)]

"
shadowsocksr-rm/shadowsocksr-libev,C,"# shadowsocks-libev

## Intro

[Shadowsocks-libev](http://shadowsocks.org) is a lightweight secured SOCKS5
proxy for embedded devices and low-end boxes.

It is a port of [Shadowsocks](https://github.com/shadowsocks/shadowsocks)
created by [@clowwindy](https://github.com/clowwindy), which is maintained by
[@madeye](https://github.com/madeye) and [@linusyang](https://github.com/linusyang).

Current version: 2.5.6 | [Changelog](debian/changelog)

Travis CI: [![Travis CI](https://travis-ci.org/shadowsocks/shadowsocks-libev.svg?branch=master)](https://travis-ci.org/shadowsocks/shadowsocks-libev)

## Features

Shadowsocks-libev is written in pure C and only depends on
[libev](http://software.schmorp.de/pkg/libev.html) and
[OpenSSL](http://www.openssl.org/) or [mbedTLS](https://tls.mbed.org/) or [PolarSSL](https://polarssl.org/).

In normal usage, the memory footprint is about 600KB and the CPU utilization is
no more than 5% on a low-end router (Buffalo WHR-G300N V2 with a 400MHz MIPS CPU,
32MB memory and 4MB flash).

For a full list of feature comparison between different versions of shadowsocks,
refer to the [Wiki page](https://github.com/shadowsocks/shadowsocks/wiki/Feature-Comparison-across-Different-Versions).

## Installation

### Distribution-specific guide

- [Debian & Ubuntu](#debian--ubuntu)
    + [Install from repository](#install-from-repository)
    + [Build deb package from source](#build-deb-package-from-source)
    + [Configure and start the service](#configure-and-start-the-service)
- [Fedora & RHEL](#fedora--rhel)
    + [Install from repository](#install-from-repository-1)
- [OpenSUSE](#opensuse)
    + [Install from repository](#install-from-repository-2)
    + [Build from source](#build-from-source)
- [Archlinux](#archlinux)
- [NixOS](#nixos)
- [Nix](#nix)
- [Directly build and install on UNIX-like system](#linux)
- [FreeBSD](#freebsd)
- [OpenWRT](#openwrt)
- [OS X](#os-x)
- [Windows](#windows)

* * *

### Pre-build configure guide

For a complete list of avaliable configure-time option,
try `configure --help`.

#### Using alternative crypto library

There are three crypto libraries available:

- OpenSSL (**default**)
- mbedTLS
- PolarSSL (Deprecated)

##### mbedTLS
To build against mbedTLS, specify `--with-crypto-library=mbedtls`
and `--with-mbedtls=/path/to/mbedtls` when running `./configure`.

Windows users will need extra work when compiling mbedTLS library,
see [this issue](https://github.com/shadowsocks/shadowsocks-libev/issues/422) for detail info.

##### PolarSSL (Deprecated)

To build against PolarSSL, specify `--with-crypto-library=polarssl`
and `--with-polarssl=/path/to/polarssl` when running `./configure`.

* PolarSSL __1.2.5 or newer__ is required. Currently, PolarSSL does __NOT__ support
CAST5-CFB, DES-CFB, IDEA-CFB, RC2-CFB and SEED-CFB.
* RC4 is only support by PolarSSL __1.3.0 or above__.

#### Using shared library from system

Please specify `--enable-system-shared-lib`. This will replace the bundled
`libev`, `libsodium` and `libudns` with the corresponding libraries installed
in the system during compilation and linking.

### Debian & Ubuntu

#### Install from repository

**Note: The repositories doesn't always contain the latest version. Please build from source if you want the latest version (see below)**

Shadowsocks-libev is available in the official repository for Debian 9(""Stretch""), unstable, Ubuntu 16.10 and later derivatives:

```bash
sudo apt update
sudo apt install shadowsocks-libev
```

For Debian Jessie users, please install it from `jessie-backports`:

```bash
sudo sh -c 'printf ""deb http://ftp.debian.org/debian jessie-backports main"" > /etc/apt/sources.list.d/jessie-backports.list'
sudo apt update
sudo apt -t jessie-backports install shadowsocks-libev
```

#### Build deb package from source

Supported Platforms:

* Debian 7 (see below), 8, 9, unstable
* Ubuntu 14.04 (see below), Ubuntu 14.10, 15.04, 15.10 or higher

**Note for Ubuntu 14.04 users**:
Packages built on Ubuntu 14.04 may be used in later Ubuntu versions. However,
packages built on Debian 7/8/9 or Ubuntu 14.10+ **cannot** be installed on
Ubuntu 14.04.

**Note for Debian 7.x users**:
To build packages on Debian 7 (Wheezy), you need to enable `debian-backports`
to install systemd-compatibility packages like `dh-systemd` or `init-system-helpers`.
Please follow the instructions on [Debian Backports](http://backports.debian.org).

This also means that you can only install those built packages on systems that have
`init-system-helpers` installed.

Otherwise, try to build and install directly from source. See the [Linux](#linux)
section below.

``` bash
cd shadowsocks-libev
sudo apt-get install --no-install-recommends build-essential autoconf libtool libssl-dev \
    gawk debhelper dh-systemd init-system-helpers pkg-config asciidoc xmlto apg libpcre3-dev
dpkg-buildpackage -b -us -uc -i
cd ..
sudo dpkg -i shadowsocks-libev*.deb
```

#### Configure and start the service

```
# Edit the configuration file
sudo vim /etc/shadowsocks-libev/config.json

# Edit the default configuration for debian
sudo vim /etc/default/shadowsocks-libev

# Start the service
sudo /etc/init.d/shadowsocks-libev start    # for sysvinit, or
sudo systemctl start shadowsocks-libev      # for systemd
```

### Fedora & RHEL

Supported distributions include
- Fedora 22, 23, 24
- RHEL 6, 7 and derivatives (including CentOS, Scientific Linux)

#### Install from repository

Enable repo via `dnf`:

```
su -c 'dnf copr enable librehat/shadowsocks'
```

Or download yum repo on [Fedora Copr](https://copr.fedoraproject.org/coprs/librehat/shadowsocks/) and put it inside `/etc/yum.repos.d/`. The release `Epel` is for RHEL and its derivatives.

Then, install `shadowsocks-libev` via `dnf`:

```bash
su -c 'dnf update'
su -c 'dnf install shadowsocks-libev'
```

or `yum`:

```bash
su -c 'yum update'
su -c 'yum install shadowsocks-libev'
```
### OpenSUSE

#### Install from repository
Use the following command to install from repository.

```bash
sudo zypper install shadowsocks-libev
```

#### Build from source
You should install `zlib-devel` and `libopenssl-devel` first.

```bash
sudo zypper update
sudo zypper install zlib-devel libopenssl-devel
```

Then download the source package and compile.

```bash
git clone https://github.com/shadowsocks/shadowsocks-libev.git
cd shadowsocks-libev
./configure && make
sudo make install
```

### Archlinux

```bash
sudo pacman -S shadowsocks-libev
```

Please refer to downstream [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/trunk?h=packages/shadowsocks-libev)
script for extra modifications and distribution-specific bugs.

### NixOS

```bash
nix-env -iA nixos.shadowsocks-libev
```

### Nix

```bash
nix-env -iA nixpkgs.shadowsocks-libev
```

### Linux

For Unix-like systems, especially Debian-based systems,
e.g. Ubuntu, Debian or Linux Mint, you can build the binary like this:

```bash
# Debian / Ubuntu
sudo apt-get install --no-install-recommends build-essential autoconf libtool libssl-dev libpcre3-dev asciidoc xmlto
# CentOS / Fedora / RHEL
sudo yum install gcc autoconf libtool automake make zlib-devel openssl-devel asciidoc xmlto
./configure && make
sudo make install
```

### FreeBSD

```bash
su
cd /usr/ports/net/shadowsocks-libev
make install
```

Edit your config.json file. By default, it's located in /usr/local/etc/shadowsocks-libev.

To enable shadowsocks-libev, add the following rc variable to your /etc/rc.conf file:

```
shadowsocks_libev_enable=""YES""
```

Start the Shadowsocks server:

```bash
service shadowsocks_libev start
```

### OpenWRT

The OpenWRT project is maintained here:
[openwrt-shadowsocks](https://github.com/shadowsocks/openwrt-shadowsocks).

### OS X
For OS X, use [Homebrew](http://brew.sh) to install or build.

Install Homebrew:

```bash
ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""
```
Install shadowsocks-libev:

```bash
brew install shadowsocks-libev
```

### Windows

For Windows, use either MinGW (msys) or Cygwin to build.
At the moment, only `ss-local` is supported to build against MinGW (msys).

If you are using MinGW (msys), please download OpenSSL or PolarSSL source tarball
to the home directory of msys, and build it like this (may take a few minutes):

#### OpenSSL

```bash
tar zxf openssl-1.0.1e.tar.gz
cd openssl-1.0.1e
./config --prefix=""$HOME/prebuilt"" --openssldir=""$HOME/prebuilt/openssl""
make && make install
```

#### PolarSSL

```bash
tar zxf polarssl-1.3.2-gpl.tgz
cd polarssl-1.3.2
make lib WINDOWS=1
make install DESTDIR=""$HOME/prebuilt""
```

Then, build the binary using the commands below, and all `.exe` files
will be built at `$HOME/ss/bin`:

#### OpenSSL

```bash
./configure --prefix=""$HOME/ss"" --with-openssl=""$HOME/prebuilt""
make && make install
```

#### PolarSSL

```bash
./configure --prefix=""$HOME/ss"" --with-crypto-library=polarssl --with-polarssl=$HOME/prebuilt
make && make install
```

## Usage

For a detailed and complete list of all supported arguments, you may refer to the
man pages of the applications, respectively.

```
    ss-[local|redir|server|tunnel]

       -s <server_host>           host name or ip address of your remote server

       -p <server_port>           port number of your remote server

       -l <local_port>            port number of your local server

       -k <password>              password of your remote server

       [-m <encrypt_method>]      encrypt method: table, rc4, rc4-md5,
                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,
                                  bf-cfb, camellia-128-cfb, camellia-192-cfb,
                                  camellia-256-cfb, cast5-cfb, des-cfb, idea-cfb,
                                  rc2-cfb, seed-cfb, salsa20 ,chacha20 and
                                  chacha20-ietf

       [-f <pid_file>]            the file path to store pid

       [-t <timeout>]             socket timeout in seconds

       [-c <config_file>]         the path to config file

       [-i <interface>]           network interface to bind,
                                  not available in redir mode

       [-b <local_address>]       local address to bind,
                                  not available in server mode

       [-u]                       enable udprelay mode,
                                  TPROXY is required in redir mode

       [-U]                       enable UDP relay and disable TCP relay,
                                  not available in local mode

       [-A]                       enable onetime authentication

       [-L <addr>:<port>]         specify destination server address and port
                                  for local port forwarding,
                                  only available in tunnel mode

       [-d <addr>]                setup name servers for internal DNS resolver,
                                  only available in server mode

       [--fast-open]              enable TCP fast open,
                                  only available in local and server mode,
                                  with Linux kernel > 3.7.0

       [--acl <acl_file>]         config file of ACL (Access Control List)
                                  only available in local and server mode

       [--manager-address <addr>] UNIX domain socket address
                                  only available in server and manager mode

       [--executable <path>]      path to the executable of ss-server
                                  only available in manager mode

       [-v]                       verbose mode

notes:

    ss-redir provides a transparent proxy function and only works on the
    Linux platform with iptables.

```

## Advanced usage

The latest shadowsocks-libev has provided a *redir* mode. You can configure your Linux-based box or router to proxy all TCP traffic transparently.

    # Create new chain
    root@Wrt:~# iptables -t nat -N SHADOWSOCKS
    root@Wrt:~# iptables -t mangle -N SHADOWSOCKS

    # Ignore your shadowsocks server's addresses
    # It's very IMPORTANT, just be careful.
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 123.123.123.123 -j RETURN

    # Ignore LANs and any other addresses you'd like to bypass the proxy
    # See Wikipedia and RFC5735 for full list of reserved networks.
    # See ashi009/bestroutetb for a highly optimized CHN route list.
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 0.0.0.0/8 -j RETURN
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 10.0.0.0/8 -j RETURN
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 127.0.0.0/8 -j RETURN
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 169.254.0.0/16 -j RETURN
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 172.16.0.0/12 -j RETURN
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 192.168.0.0/16 -j RETURN
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 224.0.0.0/4 -j RETURN
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -d 240.0.0.0/4 -j RETURN

    # Anything else should be redirected to shadowsocks's local port
    root@Wrt:~# iptables -t nat -A SHADOWSOCKS -p tcp -j REDIRECT --to-ports 12345

    # Add any UDP rules
    root@Wrt:~# ip route add local default dev lo table 100
    root@Wrt:~# ip rule add fwmark 1 lookup 100
    root@Wrt:~# iptables -t mangle -A SHADOWSOCKS -p udp --dport 53 -j TPROXY --on-port 12345 --tproxy-mark 0x01/0x01
    root@Wrt:~# iptables -t mangle -A SHADOWSOCKS_MARK -p udp --dport 53 -j MARK --set-mark 1

    # Apply the rules
    root@Wrt:~# iptables -t nat -A OUTPUT -p tcp -j SHADOWSOCKS
    root@Wrt:~# iptables -t mangle -A PREROUTING -j SHADOWSOCKS
    root@Wrt:~# iptables -t mangle -A OUTPUT -j SHADOWSOCKS_MARK

    # Start the shadowsocks-redir
    root@Wrt:~# ss-redir -u -c /etc/config/shadowsocks.json -f /var/run/shadowsocks.pid

## Shadowsocks over KCP

It's quite easy to use shadowsocks and [KCP](https://github.com/skywind3000/kcp) together with [kcptun](https://github.com/xtaci/kcptun).

The goal of shadowsocks over KCP is to provide a fully configurable, UDP based protocol to improve poor connections, e.g. a high packet loss 3G network.

### Setup your server

```bash
server_linux_amd64 -l :21 -t 127.0.0.1:443 --crypt none --mtu 1200 --nocomp --mode normal --dscp 46 &
ss-server -s 0.0.0.0 -p 443 -k passwd -m chacha20 -u
```

### Setup your client

```bash
client_linux_amd64 -l 127.0.0.1:1090 -r <server_ip>:21 --crypt none --mtu 1200 --nocomp --mode normal --dscp 46 &
ss-local -s 127.0.0.1 -p 1090 -k passwd -m chacha20 -l 1080 -b 0.0.0.0 &
ss-local -s <server_ip> -p 443 -k passwd -m chacha20 -l 1080 -U -b 0.0.0.0
```

## Security Tips

Although shadowsocks-libev can handle thousands of concurrent connections nicely, we still recommend
setting up your server's firewall rules to limit connections from each user:

    # Up to 32 connections are enough for normal usage
    iptables -A INPUT -p tcp --syn --dport ${SHADOWSOCKS_PORT} -m connlimit --connlimit-above 32 -j REJECT --reject-with tcp-reset

## License

Copyright (C) 2016 Max Lv <max.c.lv@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
"
telekom-security/tpotce,C,"# T-Pot - The All In One Multi Honeypot Platform

![T-Pot](doc/tpotsocial.png)

T-Pot is the all in one, optionally distributed, multiarch (amd64, arm64) honeypot plattform, supporting 20+ honeypots and countless visualization options using the Elastic Stack, animated live attack maps and lots of security tools to further improve the deception experience.
<br><br>

# TL;DR
1. Meet the [system requirements](#system-requirements). The T-Pot installation needs at least 8-16 GB RAM and 128 GB free disk space as well as a working (outgoing non-filtered) internet connection.
2. Download the T-Pot ISO from [GitHub](https://github.com/telekom-security/tpotce/releases) according to your architecture (amd64, arm64) or [create it yourself](#create-your-own-iso-image).
3. Install the system in a [VM](#running-in-a-vm) or on [physical hardware](#running-on-hardware) with [internet access](#system-placement).
4. Enjoy your favorite beverage - [watch](https://sicherheitstacho.eu) and [analyze](#kibana-dashboard).
<br><br>

# Table of Contents
- [Disclaimer](#disclaimer)
- [Technical Concept](#technical-concept)
  - [Technical Architecture](#technical-architecture)
  - [Services](#services)
  - [User Types](#user-types)
- [System Requirements](#system-requirements)
  - [Running in a VM](#running-in-a-vm)
  - [Running on Hardware](#running-on-hardware)
  - [Running in a Cloud](#running-in-a-cloud)
  - [Required Ports](#required-ports)
- [System Placement](#system-placement)
- [Installation](#installation)
  - [ISO Based](#iso-based)
    - [Download ISO Image](#download-iso-image)
    - [Create your own ISO Image](#create-your-own-iso-image)
  - [Post Install](#post-install)
    - [Download Debian Netinstall Image](#download-debian-netinstall-image)
    - [Post Install User Method](#post-install-user-method)
    - [Post Install Auto Method](#post-install-auto-method)
  - [T-Pot Installer](#t-pot-installer)
    - [Installation Types](#installation-types)
    - [Standalone](#standalone)
    - [Distributed](#distributed)
  - [Cloud Deployments](#cloud-deployments)
    - [Ansible Deployment](#ansible-deployment)
    - [Terraform Configuration](#terraform-configuration)
- [First Start](#first-start)
  - [Standalone Start](#standalone-first-start)
  - [Distributed Deployment](#distributed-deployment)
  - [Community Data Submission](#community-data-submission)
  - [Opt-In HPFEEDS Data Submission](#opt-in-hpfeeds-data-submission)
- [Remote Access and Tools](#remote-access-and-tools)
  - [SSH and Cockpit](#ssh-and-cockpit)
  - [T-Pot Landing Page](#t-pot-landing-page)
  - [Kibana Dashboard](#kibana-dashboard)
  - [Attack Map](#attack-map)
  - [Cyberchef](#cyberchef)
  - [Elasticvue](#elasticvue)
  - [Spiderfoot](#spiderfoot)
- [Maintenance](#maintenance)
  - [Updates](#updates)
    - [Update from 20.06.x](#update-from-2006x)
    - [Updates for 22.04.x](#updates-for-2204x)
  - [Known Issues](#known-issues)
    - [Grub Fails to Reconfigure](#grub-fails-to-reconfigure)
    - [Docker Images Fail to Download](#docker-images-fail-to-download)
    - [Network Interface Fails](#network-interface-fails)
  - [Start T-Pot](#start-t-pot)
  - [Stop T-Pot](#stop-t-pot)
  - [T-Pot Data Folder](#t-pot-data-folder)
  - [Log Persistence](#log-persistence)
  - [Clean Up](#clean-up)
  - [Show Containers](#show-containers)
  - [Blackhole](#blackhole)
  - [Add Users to Nginx (T-Pot WebUI)](#add-users-to-nginx-t-pot-webui)
  - [Import and Export Kibana Objects](#import-and-export-kibana-objects)
  - [Switch Editions](#switch-editions)
  - [Redeploy Hive Sensor](#redeploy-hive-sensor)
  - [Adjust tpot.yml](#adjust-tpotyml)
  - [Enable Cockpit 2FA](#enable-cockpit-2fa)
- [Troubleshooting](#troubleshooting)
  - [Logging](#logging)
  - [Fail2Ban](#fail2ban)
  - [RAM](#ram-and-storage)
- [Contact](#contact)
  - [Issues](#issues)
  - [Discussions](#discussions)
- [Licenses](#licenses)
- [Credits](#credits)
- [Testimonials](#testimonials)
<br><br>

# Disclaimer
- You install and run T-Pot within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.
- For fast help research the [Issues](https://github.com/telekom-security/tpotce/issues) and [Discussions](https://github.com/telekom-security/tpotce/discussions).
- The software is designed and offered with best effort in mind. As a community and open source project it uses lots of other open source software and may contain bugs and issues. Report responsibly.
- Honeypots - by design - should not host any sensitive data. Make sure you don't add any.
- By default, your data is submitted to [Sicherheitstacho](https://www.sicherheitstacho.eu/start/main). You can disable this in the config (`/opt/tpot/etc/tpot.yml`) by [removing](#community-data-submission) the ewsposter section. But in this case sharing really is caring!
<br><br>

# Technical Concept
T-Pot is based on the Debian 11 (Bullseye) Netinstaller and utilizes 
[docker](https://www.docker.com/) and [docker-compose](https://docs.docker.com/compose/) to reach its goal of running as many tools as possible simultaneously and thus utilizing the host's hardware to its maximum.
<br><br>

T-Pot offers docker images for the following honeypots ...
* [adbhoney](https://github.com/huuck/ADBHoney),
* [ciscoasa](https://github.com/Cymmetria/ciscoasa_honeypot),
* [citrixhoneypot](https://github.com/MalwareTech/CitrixHoneypot),
* [conpot](http://conpot.org/),
* [cowrie](https://github.com/cowrie/cowrie),
* [ddospot](https://github.com/aelth/ddospot),
* [dicompot](https://github.com/nsmfoo/dicompot),
* [dionaea](https://github.com/DinoTools/dionaea),
* [elasticpot](https://gitlab.com/bontchev/elasticpot),
* [endlessh](https://github.com/skeeto/endlessh),
* [glutton](https://github.com/mushorg/glutton),
* [heralding](https://github.com/johnnykv/heralding),
* [hellpot](https://github.com/yunginnanet/HellPot),
* [honeypots](https://github.com/qeeqbox/honeypots),
* [honeytrap](https://github.com/armedpot/honeytrap/),
* [ipphoney](https://gitlab.com/bontchev/ipphoney),
* [log4pot](https://github.com/thomaspatzke/Log4Pot),
* [mailoney](https://github.com/awhitehatter/mailoney),
* [medpot](https://github.com/schmalle/medpot),
* [redishoneypot](https://github.com/cypwnpwnsocute/RedisHoneyPot),
* [sentrypeer](https://github.com/SentryPeer/SentryPeer),
* [snare](http://mushmush.org/),
* [tanner](http://mushmush.org/)

... alongside the following tools ...
* [Cockpit](https://cockpit-project.org/running) for a lightweight and secure WebManagement and WebTerminal.
* [Cyberchef](https://gchq.github.io/CyberChef/) a web app for encryption, encoding, compression and data analysis.
* [Elastic Stack](https://www.elastic.co/videos) to beautifully visualize all the events captured by T-Pot.
* [Elasticvue](https://github.com/cars10/elasticvue/) a web front end for browsing and interacting with an Elasticsearch cluster.
* [Fatt](https://github.com/0x4D31/fatt) a pyshark based script for extracting network metadata and fingerprints from pcap files and live network traffic.
* [T-Pot-Attack-Map](https://github.com/t3chn0m4g3/t-pot-attack-map) a beautifully animated attack map for T-Pot.
* [P0f](https://lcamtuf.coredump.cx/p0f3/) is a tool for purely passive traffic fingerprinting.
* [Spiderfoot](https://github.com/smicallef/spiderfoot) an open source intelligence automation tool.
* [Suricata](http://suricata-ids.org/) a Network Security Monitoring engine.

... to give you the best out-of-the-box experience possible and an easy-to-use multi-honeypot appliance.
<br><br>


## Technical Architecture
![Architecture](doc/architecture.png)

The source code and configuration files are fully stored in the T-Pot GitHub repository. The docker images are built and preconfigured for the T-Pot environment. 

The individual Dockerfiles and configurations are located in the [docker folder](https://github.com/telekom-security/tpotce/tree/master/docker).
<br><br>

## Services
T-Pot offers a number of services which are basically divided into five groups:
1. System services provided by the OS
    * SSH for secure remote access.
    * Cockpit for web based remote access, management and web terminal.
2. Elastic Stack
    * Elasticsearch for storing events.
    * Logstash for ingesting, receiving and sending events to Elasticsearch.
    * Kibana for displaying events on beautifully rendered dashboards.
3. Tools
    * NGINX provides secure remote access (reverse proxy) to Kibana, CyberChef, Elasticvue, GeoIP AttackMap and Spiderfoot.
    * CyberChef a web app for encryption, encoding, compression and data analysis.
    * Elasticvue a web front end for browsing and interacting with an Elasticsearch cluster.
    * T-Pot Attack Map a beautifully animated attack map for T-Pot.
    * Spiderfoot an open source intelligence automation tool.
4. Honeypots
    * A selection of the 22 available honeypots based on the selected edition and / or setup.
5. Network Security Monitoring (NSM)
    * Fatt a pyshark based script for extracting network metadata and fingerprints from pcap files and live network traffic.
    * P0f is a tool for purely passive traffic fingerprinting.
    * Suricata a Network Security Monitoring engine.
<br><br>

## User Types
During the installation and during the usage of T-Pot there are two different types of accounts you will be working with. Make sure you know the differences of the different account types, since it is **by far** the most common reason for authentication errors and `fail2ban` lockouts.

| Service             | Account Type | Username / Group | Description                                                             |
| :---                | :---         | :---             | :---                                                                    |
| SSH, Cockpit        | OS           | `tsec`           | On ISO based installations the user `tsec` is predefined.               |
| SSH, Cockpit        | OS           | `<os_username>`  | Any other installation, the `<username>` you chose during installation. |
| Nginx               | BasicAuth    | `<web_user>`     | `<web_user>` you chose during the installation of T-Pot.                |
| CyberChef           | BasicAuth    | `<web_user>`     | `<web_user>` you chose during the installation of T-Pot.                |
| Elasticvue          | BasicAuth    | `<web_user>`     | `<web_user>` you chose during the installation of T-Pot.                |
| Geoip Attack Map    | BasicAuth    | `<web_user>`     | `<web_user>` you chose during the installation of T-Pot.                |
| Spiderfoot          | BasicAuth    | `<web_user>`     | `<web_user>` you chose during the installation of T-Pot.                |
| T-Pot               | OS           | `tpot`           | `tpot` this user / group is always reserved by the T-Pot services.      |
| T-Pot Logs          | OS           | `tpotlogs`       | `tpotlogs` this group is always reserved by the T-Pot services.         |


<br><br>

# System Requirements

Depending on the installation setup, edition, installing on [real hardware](#running-on-hardware), in a [virtual machine](#running-in-a-vm) or [cloud](#running-in-a-cloud) there are different kind of requirements to be met regarding OS, RAM, storage and network for a successful installation of T-Pot (you can always adjust `/opt/tpot/etc/tpot.yml` to your needs to overcome these requirements).
<br><br>
| T-Pot Type  | RAM          | Storage         | Description                                                                              |
| :---        | :---         | :---            | :---                                                                                     |
| Standalone  | 8-16GB       | >=128GB SSD     | RAM requirements depend on the edition,<br> storage on how much data you want to persist.    |
| Hive        | >=8GB        | >=256GB SSD     | As a rule of thumb, the more sensors & data,<br> the more RAM and storage is needed.         |
| Hive_Sensor | >=8GB        | >=128GB SSD     | Since honeypot logs are persisted (/data)<br> for 30 days, storage depends on attack volume. |

All T-Pot installations will require ...
- an IP address via DHCP
- a working, non-proxied, internet connection

... for an installation to succeed.
<br><br>
*If you need proxy support or static IP addresses please review the [Debian](https://www.debian.org/doc/index.en.html) and / or [Docker documentation](https://docs.docker.com/).*
<br><br>

## Running in a VM
T-Pot is reported to run with the following hypervisors, however not each and every combination is tested.
* [UTM (Intel & Apple Silicon)](https://mac.getutm.app/)
* [VirtualBox](https://www.virtualbox.org/)
* [VMWare vSphere / ESXi](https://kb.vmware.com/s/article/2107518)
* [VMWare Fusion](https://www.vmware.com/products/fusion/fusion-evaluation.html) and [VMWare Workstation](https://www.vmware.com/products/workstation-pro.html)
* KVM is reported to work as well.

***Some configuration hints:***
- While Intel versions run stable, Apple Silicon (arm64) support for Debian has known issues which in UTM may require switching `Display` to `Console Only` during initial installation of T-Pot / Debian and afterwards back to `Full Graphics`.
- During configuration you may need to enable promiscuous mode for the network interface in order for fatt, suricata and p0f to work properly.
- If you want to use a wifi card as a primary NIC for T-Pot, please be aware that not all network interface drivers support all wireless cards. In VirtualBox e.g. you have to choose the *""MT SERVER""* model of the NIC.
<br><br>

## Running on Hardware
T-Pot is tested on and known to run with ...
* IntelNUC series (only some tested)
* Some generic Intel hardware

Since the number of possible hardware combinations is too high to make general recommendations. If you are unsure, you should test the hardware with the T-Pot ISO image or use the post install method.  
<br><br>

## Running in a Cloud
T-Pot is tested on and known to run on ...
* Telekom OTC using the post install method
* Amazon AWS using the post install method (somehow limited)

Some users report working installations on other clouds and hosters, i.e. Azure and GCP. Hardware requirements may be different. If you are unsure you should research [issues](https://github.com/telekom-security/tpotce/issues) and [discussions](https://github.com/telekom-security/tpotce/discussions) and run some functional tests. Cloud support is a community developed feature and hyperscalers are known to adjust linux images, so expect some necessary adjustments on your end. 
<br><br>

## Required Ports
Besides the ports generally needed by the OS, i.e. obtaining a DHCP lease, DNS, etc. T-Pot will require the following ports for incoming / outgoing connections. Review the [T-Pot Architecture](#technical-architecture) for a visual representation. Also some ports will show up as duplicates, which is fine since used in different editions.
| Port        | Protocol | Direction | Description                                                   |
| :---        | :---     | :---      | :---                                                          |
| 80, 443     | tcp      | outgoing  | T-Pot Management: Install, Updates, Logs (i.e. Debian, GitHub, DockerHub, PyPi, Sicherheitstacho, etc. |
| 64294       | tcp      | incoming  | T-Pot Management: Access to Cockpit                           |
| 64295       | tcp      | incoming  | T-Pot Management: Access to SSH                               |
| 64297       | tcp      | incoming  | T-Pot Management Access to NGINX reverse proxy                |
| 5555        | tcp      | incoming  | Honeypot: ADBHoney                                            |
| 5000        | udp      | incoming  | Honeypot: CiscoASA                                            |
| 8443        | tcp      | incoming  | Honeypot: CiscoASA                                            |
| 443         | tcp      | incoming  | Honeypot: CitrixHoneypot                                      |
| 80, 102, 502, 1025, 2404, 10001, 44818, 47808, 50100  | tcp      | incoming          | Honeypot: Conpot            |
| 161, 623    | udp      | incoming  | Honeypot: Conpot                                              |
| 22, 23      | tcp      | incoming  | Honeypot: Cowrie                                              |
| 19, 53, 123, 1900 | udp| incoming  | Honeypot: Ddospot                                             |
| 11112       | tcp      | incoming  | Honeypot: Dicompot                                            |
| 21, 42, 135, 443, 445, 1433, 1723, 1883, 3306, 8081 | tcp        | incoming          | Honeypot: Dionaea           |
| 69          | udp      | incoming  | Honeypot: Dionaea                                             |
| 9200        | tcp      | incoming  | Honeypot: Elasticpot                                          |
| 22          | tcp      | incoming  | Honeypot: Endlessh                                            |
| 21, 22, 23, 25, 80, 110, 143, 443, 993, 995, 1080, 5432, 5900          | tcp      | incoming  | Honeypot: Heralding  |
| 21, 22, 23, 25, 80, 110, 143, 389, 443, 445, 1080, 1433, 1521, 3306, 5432, 5900, 6379, 8080, 9200, 11211 | tcp | incoming  | Honeypot: qHoneypots |
| 53, 123, 161| udp      | incoming  | Honeypot: qHoneypots                                          |
| 631         | tcp      | incoming  | Honeypot: IPPHoney                                            |
| 80, 443, 8080, 9200, 25565 | tcp      | incoming  | Honeypot: Log4Pot                              |
| 25          | tcp      | incoming  | Honeypot: Mailoney                                            |
| 2575        | tcp      | incoming  | Honeypot: Medpot                                              |
| 6379        | tcp      | incoming  | Honeypot: Redishoneypot                                       |
| 5060        | udp      | incoming  | Honeypot: SentryPeer                                          |
| 80          | tcp      | incoming  | Honeypot: Snare (Tanner)                                      |


Ports and availability of SaaS services may vary based on your geographical location. Also during the first install outgoing ICMP / TRACEROUTE is required additionally to find the closest and fastest mirror to you.

For some honeypots to reach full functionality (i.e. Cowrie or Log4Pot) outgoing connections are necessary as well, in order for them to download the attackers malware. Please see the individual honeypot's documentation to learn more by following the [links](#technical-concept) to their repositories.

<br><br>

# System Placement
It is recommended to get yourself familiar with how T-Pot and the honeypots work before you start exposing towards the internet. For a quickstart run a T-Pot installation in a virtual machine.
<br><br>
Once you are familiar with how things work you should choose a network you suspect intruders in or from (i.e. the internet). Otherwise T-Pot will most likely not capture any attacks (unless you want to prove a point)! For starters it is recommended to put T-Pot in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot's network interface. To avoid probing for T-Pot's management ports you can put T-Pot behind a firewall and forward all TCP / UDP traffic in the port range of 1-64000 to T-Pot while allowing access to ports > 64000 only from trusted IPs and / or only expose the [ports](#required-ports) relevant to your use-case. If you wish to catch malware traffic on unknown ports you should not limit the ports you forward since glutton and honeytrap dynamically bind any TCP port that is not covered by other honeypot daemons and thus give you a better representation of the risks your setup is exposed to.
<br><br>

# Installation
The T-Pot installation is offered in different variations. While the overall installation of T-Pot is straightforward it heavily depends on a working, non-proxied (unless you made modifications) up and running internet connection (also see [required outgoing ports](#required-ports)). If these conditions are not met the installation **will fail!** either during the execution of the Debian Installer, after the first reboot before the T-Pot Installer is starting up or while the T-Pot installer is trying to download all the necessary dependencies.
<br><br>

## ISO Based
Installing T-Pot based on an ISO image is basically the same routine as with any other ISO based Linux distribution. Running on hardware You copy the ISO file to an USB drive (i.e. with [Etcher](https://github.com/balena-io/etcher)) and boot into the Debian installer and choose to install **T-Pot** or you mount the ISO image as a virtual drive in one of the supported [hypervisors](#running-in-a-vm).
<br><br> 

### **Download ISO Image**
On the [T-Pot release page](https://github.com/telekom-security/tpotce/releases) you will find two prebuilt ISO images for download `tpot_amd64.iso` and `tpot_arm64.iso`. Both are based on Debian 11 for x64 / arm64 based hardware. So far ARM64 support is limited, but works mostly fine with [UTM](#running-in-a-vm) based VMs on Apple Silicon (M1x) Macs.
<br><br>

### **Create your own ISO Image**
In case you want to modify T-Pot for your environment or simply want to take things into your own hands you can use the [ISO Creator](https://github.com/telekom-security/tpotce) to build your own ISO image.

**Requirements to create the ISO image:**
- Debian 11 as host system (others *may* work, but *remain* untested)
- 4GB of free RAM
- 32GB of free storage
- A working internet connection

**Steps to create the ISO image:**

1. Clone the repository and enter it.
```
git clone https://github.com/telekom-security/tpotce
cd tpotce
```
2. Run `makeiso.sh` to build the ISO image.
The script will download and install dependencies necessary to build the image. It will further download the Debian Netiso installer image (~50-150MB) which T-Pot is based on.
```
sudo ./makeiso.sh
```
3. After a successful build, you will find the ISO image `tpot_[amd64,arm64].iso` along with a SHA256 checksum `tpot_[amd64,arm64].sha256` based on your architecture choice in your folder.
<br><br>

## Post Install
In some cases it is necessary to install T-Pot after you installed Debian, i.e. your provider does not offer you the option of an ISO based installation, you need special drivers for your hardware to work, or you want to experiment with ARM64 hardware that is not supported by the ISO image. In that case you can clone the T-Pot repository on your own. Make sure you understand the different [user types](#user-types) before setting up your OS.
<br><br>

### **Download Debian Netinstall Image**
Since T-Pot is based on the Debian Netinstall Image ([amd64](http://ftp.debian.org/debian/dists/bullseye/main/installer-amd64/current/images/netboot/mini.iso), [arm64](http://ftp.debian.org/debian/dists/bullseye/main/installer-arm64/current/images/netboot/mini.iso)) it is heavily recommended you use this image, too, if possible. It is very lightweight and only offers to install core services.
<br><br>

### **Post Install User Method**
The post install method must be executed by the `root` (`sudo su -`, `su -`), just follow the following steps:

```
git clone https://github.com/telekom-security/tpotce
cd tpotce/iso/installer/
./install.sh --type=user
```

The installation will now start, you can now move on to the [T-Pot Installer](#t-pot-installer) section.
<br><br>

### **Post-Install Auto Method**
You can also let the installer run automatically if you provide your own `tpot.conf`. An example is available in `tpotce/iso/installer/tpot.conf.dist`. This should make things easier in case you want to automate the installation i.e. with **Ansible**.

Just follow these steps while adjusting `tpot.conf` to your needs:

```
git clone https://github.com/telekom-security/tpotce
cd tpotce/iso/installer/
cp tpot.conf.dist tpot.conf
./install.sh --type=auto --conf=tpot.conf
```
<br><br>

# T-Pot Installer
Usage of the T-Pot Installer is mostly self explanatory, since the installer will guide you through the setup process. Depending on your installation method [ISO Based](#iso-based) or [Post Install](#post-install) you will be asked to create a password for the user `tsec` and / or create a `<web-username>` and password. Make sure to remember the username and passwords you understand their meanings outlined in [User Types](#user-types).
<br><br>

## Installation Types
In the past T-Pot was only available as a [standalone](#standalone) solution with all services, tools, honeypots, etc. installed on to a single machine. Based on demand T-Pot now also offers a [distributed](#distributed) solution. While the standalone solution does not require additional explanation the distributed option requires you to select different editions (or flavors). 
<br><br>

### **Standalone**
With T-Pot Standalone all services, tools, honeypots, etc. will be installed on to a single host. Make sure to meet the [system requirements](#system-requirements). You can choose from various predefined T-Pot editions (or flavors) depending on your personal use-case (you can always adjust `/opt/tpot/etc/tpot.yml` to your needs).
Once the installation is finished you can proceed to [First Start](#first-start).
<br><br>

### **Distributed**
The distributed version of T-Pot requires at least two hosts
- the T-Pot **HIVE**, which will host the Elastic Stack and T-Pot tools (install this first!),
- and a T-Pot **HIVE_SENSOR**, which will host the honeypots and transmit log data to the **HIVE's** Elastic Stack.

To finalize the **HIVE_SENSOR** installation continue to [Distributed Deployment](#distributed-deployment).
<br><br>

## Cloud Deployments
Located in the [`cloud`](cloud) folder.  
Currently there are examples for Ansible & Terraform.  
If you would like to contribute, you can add other cloud deployments like Chef or Puppet or extend current methods with other cloud providers.
<br><br>
*Please note*: Cloud providers usually offer adjusted Debian OS images, which might not be compatible with T-Pot. There is no cloud provider support provided of any kind.
<br><br>

### **Ansible Deployment**
You can find an [Ansible](https://www.ansible.com/) based T-Pot deployment in the [`cloud/ansible`](cloud/ansible) folder.  
The Playbook in the [`cloud/ansible/openstack`](cloud/ansible/openstack) folder is reusable for all **OpenStack** clouds out of the box.

It first creates all resources (security group, network, subnet, router), deploys one (or more) new servers and then installs and configures T-Pot on them.

You can have a look at the Playbook and easily adapt the deploy role for other [cloud providers](https://docs.ansible.com/ansible/latest/scenario_guides/cloud_guides.html). Check out [Ansible Galaxy](https://galaxy.ansible.com/search?keywords=&order_by=-relevance&page=1&deprecated=false&type=collection&tags=cloud) for more cloud collections.

*Please note*: Cloud providers usually offer adjusted Debian OS images, which might not be compatible with T-Pot. There is no cloud provider support provided of any kind.
<br><br>

### **Terraform Configuration**
You can find a [Terraform](https://www.terraform.io/) configuration in the [`cloud/terraform`](cloud/terraform) folder.
This can be used to launch a virtual machine, bootstrap any dependencies and install T-Pot in a single step.

Configurations for **Amazon Web Services** (AWS) and **Open Telekom Cloud** (OTC) are currently included.  
This can easily be extended to support other [Terraform providers](https://registry.terraform.io/browse/providers?category=public-cloud%2Ccloud-automation%2Cinfrastructure).

*Please note*: Cloud providers usually offer adjusted Debian OS images, which might not be compatible with T-Pot. There is no cloud provider support provided of any kind.
<br><br>


# First Start
Once the T-Pot Installer successfully finishes, the system will automatically reboot and you will be presented with the T-Pot login screen. Logins are according to the [User Types](#user-types):

- user: **[`tsec` or `<os_username>`]**
- pass: **[password]**

You can login from your browser and access Cockpit: `https://<your.ip>:64294` or via SSH to access the command line: `ssh -l [tsec,<os_username>] -p 64295 <your.ip>`:

- user: **[`tsec` or `<os_username>`]**
- pass: **[password]**

You can also login from your browser and access the Nginx (T-Pot Web UI and tools): `https://<your.ip>:64297`
- user: **[`<web_user>`]**
- pass: **[password]**
<br><br>

## Standalone First Start
There is not much to do except to login and check via `dps.sh` if all services and honeypots are starting up correctly and login to Kibana and / or Geoip Attack Map to monitor the attacks.
<br><br>

## Distributed Deployment
With the distributed deployment firstly login to **HIVE** and the **HIVE_SENSOR** and check via `dps.sh` if all services and honeypots are starting up correctly. Once you have confirmed everything is working fine you need to deploy the **HIVE_SENSOR** to the **HIVE** in order to transmit honeypot logs to the Elastic Stack.
<br><br>

For **deployment** simply keep the **HIVE** login data ready and follow these steps while the `deploy.sh` script will setup the **HIVE** and **HIVE_SENSOR** for securely shipping and receiving logs:
```
sudo su -
deploy.sh
```

The script will ask for the **HIVE** login data, the **HIVE** IP address, will create SSH keys accordingly and deploy them securely over a SSH connection to the **HIVE**. On the **HIVE** machine a user with the **HIVE_SENSOR** hostname is created, belonging to a user group `tpotlogs` which may only open a SSH tunnel via port `64295` and transmit Logstash logs to port `127.0.0.1:64305`, with no permission to login on a shell. You may review the config in `/etc/ssh/sshd_config` and the corresponding `autossh` settings in `docker/elk/logstash/dist/entrypoint.sh`. Settings and keys are stored in `/data/elk/logstash` and loaded as part of `/opt/tpot/etc/tpot.yml`.
<br><br> 


## Community Data Submission
T-Pot is provided in order to make it accessible to all interested in honeypots. By default, the captured data is submitted to a community backend. This community backend uses the data to feed [Sicherheitstacho](https://sicherheitstacho.eu).
You may opt out of the submission by removing the `# Ewsposter service` from `/opt/tpot/etc/tpot.yml` by following these steps:
1. Stop T-Pot services: `systemctl stop tpot`
2. Open `tpot.yml`: `vi /opt/tpot/etc/tpot.yml`
3. Remove the following lines, save and exit vi (`:x!`):
```
# Ewsposter service
  ewsposter:
    container_name: ewsposter
    restart: always
    networks:
     - ewsposter_local
    environment:
     - EWS_HPFEEDS_ENABLE=false
     - EWS_HPFEEDS_HOST=host
     - EWS_HPFEEDS_PORT=port
     - EWS_HPFEEDS_CHANNELS=channels
     - EWS_HPFEEDS_IDENT=user
     - EWS_HPFEEDS_SECRET=secret
     - EWS_HPFEEDS_TLSCERT=false
     - EWS_HPFEEDS_FORMAT=json
    env_file:
     - /opt/tpot/etc/compose/elk_environment
    image: ""dtagdevsec/ewsposter:2203""
    volumes:
     - /data:/data
     - /data/ews/conf/ews.ip:/opt/ewsposter/ews.ip
```
4. Start T-Pot services: `systemctl start tpot`

It is encouraged not to disable the data submission as it is the main purpose of the community approach - as you all know **sharing is caring** 😍
<br><br>

## Opt-In HPFEEDS Data Submission
As an Opt-In it is now possible to also share T-Pot data with 3rd party HPFEEDS brokers.  
If you want to share your T-Pot data you simply have to register an account with a 3rd party broker with its own benefits towards the community. You simply run `hpfeeds_optin.sh` which will ask for your credentials. It will automatically update `/opt/tpot/etc/tpot.yml` to deliver events to your desired broker.

The script can accept a config file as an argument, e.g. `./hpfeeds_optin.sh --conf=hpfeeds.cfg`

Your current config will also be stored in `/data/ews/conf/hpfeeds.cfg` where you can review or change it.  
Be sure to apply any changes by running `./hpfeeds_optin.sh --conf=/data/ews/conf/hpfeeds.cfg`.  
No worries: Your old config gets backed up in `/data/ews/conf/hpfeeds.cfg.old`

Of course you can also rerun the `hpfeeds_optin.sh` script to change and apply your settings interactively.
<br><br>


# Remote Access and Tools
T-Pot comes with some pre-installed services and tools which will make some of your research tasks or accessing T-Pot remote a lot easier.
<br><br>

## SSH and Cockpit
According to the [User Types](#user-types) you can login from your browser and access Cockpit: `https://<your.ip>:64294` or via SSH to access the command line: `ssh -l [tsec,<os_username>] -p 64295 <your.ip>`:

- user: **[`tsec` or `<os_username>`]**
- pass: **[password]**

Especially if you do not have a SSH client at hand and still want to access the machine with a command line option you can do so by accessing Cockpit. You can also add two factor authentication to Cockpit just by running `2fa.sh` on the command line.

![Cockpit Overview](doc/cockpit_a.png)
![Cockpit Terminal](doc/cockpit_b.png)
<br><br>

## T-Pot Landing Page 
According to the [User Types](#user-types) you can open the T-Pot Landing Page from your browser via `https://<your.ip>:64297`:

- user: **[`<web_user>`]**
- pass: **[password]**

![T-Pot-WebUI](doc/tpotwebui.png)
<br><br>

## Kibana Dashboard
On the T-Pot Landing Page just click on `Kibana` and you will be forwarded to Kibana. You can select from a large variety of dashboards and visualizations all tailored to the T-Pot supported honeypots.

![Dashbaord](doc/kibana_a.png)
<br><br>

## Attack Map
On the T-Pot Landing Page just click on `Attack Map` and you will be forwarded to the Attack Map. Since the Attack Map utilizes web sockets you need to re-enter the `<web_user>` credentials.

![AttackMap](doc/attackmap.png)
<br><br>

## Cyberchef
On the T-Pot Landing Page just click on `Cyberchef` and you will be forwarded to Cyberchef.

![Cyberchef](doc/cyberchef.png)
<br><br>

## Elasticvue
On the T-Pot Landing Page just click on `Elastivue` and you will be forwarded to Elastivue.

![Elasticvue](doc/elasticvue.png)
<br><br>

## Spiderfoot
On the T-Pot Landing Page just click on `Spiderfoot` and you will be forwarded to Spiderfoot.

![Spiderfoot](doc/spiderfoot.png)
<br><br>


# Maintenance
T-Pot is designed to be low maintenance. Basically there is nothing you have to do but let it run, however you should read this section closely.
<br><br>

## Updates
While security updates are installed automatically by the OS and docker images are pulled once per day (`/etc/crontab`) to check for updated images, T-Pot offers the option to be updated to the latest master and / or upgrade a previous version. Updating and upgrading always introduces the risk of losing your data, so it is heavily encouraged to backup your machine before proceeding.
<br><br>
Should an update fail, opening an issue or a discussion will help to improve things in the future, but the solution will always be to perform a ***fresh install*** as we simply ***cannot*** provide any support for lost data!
<br>
## ***If you made any relevant changes to the T-Pot config files make sure to create a backup first!***
## ***Updates may have unforeseen consequences. Create a backup of the machine or the files with the most value to your work!*** 
<br>

The update script will ...
 - ***mercilessly*** overwrite local changes to be in sync with the T-Pot master branch
 - upgrade the system to the latest packages available for the installed Debian version
 - update all resources to be in sync with the T-Pot master branch
 - ensure all T-Pot relevant system files will be patched / copied into the original T-Pot state
 - restore your custom ews.cfg and HPFEED settings from `/data/ews/conf`


### **Update from 20.06.x**
Due to massive changes in Elasticsearch automated updates from 20.06.x are no longer available. If you have not upgraded already a fresh install with 22.04.x is required.


### **Updates for 22.04.x**
If you are already running T-Pot 22.04.x you simply run the update script ***after you backed up any relevant data***:
```
sudo su -
cd /opt/tpot/
./update.sh
```

## Known Issues
The following issues are known, simply follow the described steps to solve them.
<br><br>

### **Grub Fails to Reconfigure**
In some cases Grub fails to reconfigure, follow these commands to correct that error:
```
sudo su -
DEBIAN_FRONTEND=dialog dpkg --configure grub-pc
```

### **Docker Images Fail to Download**
Some time ago Docker introduced download [rate limits](https://docs.docker.com/docker-hub/download-rate-limit/#:~:text=Docker%20Hub%20limits%20the%20number,pulls%20per%206%20hour%20period.). If you are frequently downloading Docker images via a single or shared IP, the IP address might have exhausted the Docker download rate limit. Login to your Docker account to extend the rate limit.
```
sudo su -
docker login
```

### **Network Interface Fails**
After the installation it is possible your network interfaces are using a different naming scheme (`ens` => `eth`). In this case you need to adjust `/etc/network/interfaces` to reflect your NIC.

Example:
```
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto ens33
iface ens33 inet dhcp
```

`ifconfig` / `ip a` revealed the interface is now named `eth0`, so you need to adjust `interfaces` accordingly:
```
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet dhcp
```


## Start T-Pot
The T-Pot service automatically starts and stops on each reboot (which occurs once on a daily basis as setup in `/etc/crontab` during installation).
<br>
If you want to manually start the T-Pot service you can do so via `systemctl start tpot` and observe via `dps.sh 1` the startup of the containers.
<br><br>

## Stop T-Pot
The T-Pot service automatically starts and stops on each reboot (which occurs once on a daily basis as setup in `/etc/crontab` during installation).
<br>
If you want to manually stop the T-Pot service you can do so via `systemctl stop tpot` and observe via `dps.sh 1` the shutdown of the containers.
<br><br>

## T-Pot Data Folder
All persistent log files from the honeypots, tools and T-Pot related services are stored in `/data`. This includes collected artifacts which are not transmitted to the Elastic Stack.
<br><br>

## Log Persistence
All log data stored in the [T-Pot Data Folder](#t-pot-data-folder) will be persisted for 30 days by default. The persistence for the log files can be changed in `/opt/tpot/etc/logrotate/logrotate.conf`.
<br>
Elasticsearch indices are handled by the `tpot` Index Lifecycle Policy which can be adjusted directly in Kibana.
![IndexManagement1](doc/kibana_b.png)
<br><br>


By default the `tpot` Index Lifecycle Policy keeps the indices for 30 days. This offers a good balance between storage and speed. However you may adjust the policy to your needs.
![IndexManagement2](doc/kibana_c.png)
<br><br>

## Clean Up
All log data stored in the [T-Pot Data Folder](#t-pot-data-folder) (except for Elasticsearch indices, of course) can be erased by running `clean.sh`.
<br><br>

## Show Containers
You can show all T-Pot relevant containers by running `dps.sh` or `dps.sh [interval]`. The `interval (s)` will re-run `dps.sh` automatically. You may also run `glances` which will also give you more insight into system usage and available resources while still showing the containers running.
<br><br>

## Blackhole
Some users reported they wanted to have the option to run T-Pot in some sort of stealth mode without permanent visits of publicly known scanners and thus reducing the possibility of being exposed. While this is of course always a cat and mouse game T-Pot now offers a blackhole feature that is null routing all requests from [known mass scanners](https://raw.githubusercontent.com/stamparm/maltrail/master/trails/static/mass_scanner.txt) while still catching the events through Suricata.
<br>
The feature is activated by running `blackhole.sh add` which will download the mass scanner ip list, add the blackhole routes and re-add keep them active until `blackhole.sh del` permanently removes them.
<br>
Enabling this feature will drastically reduce some attackers visibility and consequently result in less activity. However as already mentioned it is neither a guarantee for being completely stealth nor will it prevent fingerprinting of some honeypot services.
<br><br>

## Add Users to Nginx (T-Pot WebUI)
Nginx (T-Pot WebUI) allows to add as many `<web_user>` accounts as you want (according to the [User Types](#user-types)).

To add a new user just follow these steps:
```
sudo su -
systemctl stop tpot
htpasswd /data/nginx/conf/nginxpasswd <username>
> New password:
> Re-type new password:
> Adding password for user foobar
systemctl start tpot
```
If you want to remove users you just modify `nginxpasswd` with `vi` or any other editor, remove the corresponding line and restart T-Pot again.
<br><br>

## Import and Export Kibana Objects
Some T-Pot updates will require you to update the Kibana objects. Either to support new honeypots or to improve existing dashboards or visualizations. Make sure to ***export*** first so you do not loose any of your adjustments.

### **Export**
1. Go to Kibana
2. Click on ""Stack Management""
3. Click on ""Saved Objects""
4. Click on ""Export <no.> objects""
5. Click on ""Export all""
This will export a NDJSON file with all your objects. Always run a full export to make sure all references are included.

### **Import**
1. [Download the NDJSON file](https://github.com/dtag-dev-sec/tpotce/blob/master/etc/objects/kibana_export.ndjson.zip) and unzip it.
2. Go to Kibana
3. Click on ""Stack Management""
4. Click on ""Saved Objects""
5. Click on ""Import"" and leave the defaults (check for existing objects and automatically overwrite conflicts) if you did not make personal changes to the Kibana objects.
6. Browse NDJSON file
When asked: ""If any of the objects already exist, do you want to automatically overwrite them?"" you answer with ""Yes, overwrite all"".
<br><br>

## Switch Editions
You can switch between T-Pot editions (flavors) by running `tped.sh`.
<br><br>

## Redeploy Hive Sensor
In case you need to re-deploy your Hive Sensor, i.e. the IP of your Hive has changed or you want to move the Hive Sensor to a new Hive, you simply follow these commands:
```
sudo su -
systemctl stop tpot
rm /data/elk/logstash/*
deploy.sh
reboot
```
<br><br>

## Adjust tpot.yml
Maybe the available T-Pot editions do not apply to your use-case or you need a different set of honeypots. You can adjust `/opt/tpot/etc/tpot.yml` to your own preference. If you need examples of how this works, just follow the configuration of the existing editions (docker-compose files) in `/opt/tpot/etc/compose` and follow the [Docker Compose Specification](https://docs.docker.com/compose/compose-file/).
```
sudo su -
systemctl stop tpot
vi /opt/tpot/etc/tpot.yml
docker-compose -f /opt/tpot/etc/tpot.yml up (to see if everything works, CTRL+C)
docker-compose -f /opt/tpot/etc/tpot.yml down -v
systemctl start tpot 
```
<br><br>

## Enable Cockpit 2FA
You can enable two-factor-authentication for Cockpit by running `2fa.sh`.
<br><br>

# Troubleshooting
Generally T-Pot is offered ***as is*** without any commitment regarding support. Issues and discussions can be opened, but be prepared to include basic necessary info, so the community is able to help.
<br><br>

## Logging
* Check if your containers are running correctly: `dps.sh`

* Check if your system resources are not exhausted: `htop`, `glances`

* Check if there is a port conflict:
```
systemctl stop tpot
grc netstat -tulpen
vi /opt/tpot/etc/tpot.yml up
docker-compose -f /opt/tpot/etc/tpot.yml up
CTRL+C
docker-compose -f /opt/tpot/etc/tpot.yml down -v
```

* Check container logs: `docker logs -f <container_name>`

* Check if you were locked out by [fail2ban](#fail2ban).
<br><br>

## Fail2Ban
If you cannot login there are probably three possible reasons:
1. You need to review [User Types](#user-types) and understand the different users.
2. You are trying to SSH into T-Pot, but use `tcp/22` instead of `tcp/64295` or were using the incorrect user for Cockpit or Nginx (T-Pot WebUI).
3. You had too many wrong attempts from the above and got locked out by `fail2ban`.

To resolve Fail2Ban lockouts run `fail2ban-client status`:

```
fail2ban-client status
Status
|- Number of jail:	3
nginx-http-auth, pam-generic, sshd
```

`nginx-http-auth` refers to missed BasicAuth login attempts (Nginx / T-Pot WebUI) on `tcp/64295`

`sshd` refers to missed OS SSH login attempts on `tcp/64295`

`pam-generic` refers to missed OS Cockpit login attempts on `tcp/64294`

Check all jails, i.e. `sshd`:

```
fail2ban-client status sshd
Status for the jail: sshd
|- Filter
|  |- Currently failed:	0
|  |- Total failed:	0
|  `- File list:	/var/log/auth.log
`- Actions
   |- Currently banned:	0
   |- Total banned:	0
   `- Banned IP list:
```

If there are any banned IPs you can unban these with `fail2ban-client unban --all` or `fail2ban-client unban <ip>`.
<br><br>

## RAM and Storage
The Elastic Stack is hungry for RAM, specifically `logstash` and `elasticsearch`. If the Elastic Stack is unavailable, does not receive any logs or simply keeps crashing it is most likely a RAM or Storage issue.
While T-Pot keeps trying to restart the services / containers run `docker logs -f <container_name>` (either `logstash` or `elasticsearch`) and check if there are any warnings or failures involving RAM.

Storage failures can be identified easier via `htop` or `glances`. 
<br><br>

# Contact
T-Pot is provided ***as is*** open source ***without*** any commitment regarding support ([see the disclaimer](#disclaimer)).

If you are a company or institution and wish a personal contact aside from [issues](#issues) and [discussions](#discussions) please get in contact with our [sales team](https://www.t-systems.com/de/en/security).

If you are a security researcher and want to responsibly report an issue please get in touch with our [CERT](https://www.telekom.com/en/corporate-responsibility/data-protection-data-security/security/details/introducing-deutsche-telekom-cert-358316).
<br><br>

## Issues
Please report issues (errors) on our [GitHub Issues](https://github.com/telekom-security/tpotce/issues), but [troubleshoot](#troubleshooting) first. Issues not providing information to address the error will be closed or converted into [discussions](#discussions).

Feel free to use the search function, it is possible a similar issue has been addressed already, with the solution just a search away.
<br><br>

## Discussions
General questions, ideas, show & tell, etc. can be addressed on our [GitHub Discussions](https://github.com/telekom-security/tpotce/discussions).

Feel free to use the search function, it is possible a similar discussion has been opened already, with an answer just a search away.
<br><br>

# Licenses
The software that T-Pot is built on uses the following licenses.
<br>GPLv2: [conpot](https://github.com/mushorg/conpot/blob/master/LICENSE.txt), [dionaea](https://github.com/DinoTools/dionaea/blob/master/LICENSE), [honeytrap](https://github.com/armedpot/honeytrap/blob/master/LICENSE), [suricata](http://suricata-ids.org/about/open-source/)
<br>GPLv3: [adbhoney](https://github.com/huuck/ADBHoney), [elasticpot](https://gitlab.com/bontchev/elasticpot/-/blob/master/LICENSE), [ewsposter](https://github.com/telekom-security/ews/), [log4pot](https://github.com/thomaspatzke/Log4Pot/blob/master/LICENSE), [fatt](https://github.com/0x4D31/fatt/blob/master/LICENSE), [heralding](https://github.com/johnnykv/heralding/blob/master/LICENSE.txt), [ipphoney](https://gitlab.com/bontchev/ipphoney/-/blob/master/LICENSE), [redishoneypot](https://github.com/cypwnpwnsocute/RedisHoneyPot/blob/main/LICENSE), [sentrypeer](https://github.com/SentryPeer/SentryPeer/blob/main/LICENSE.GPL-3.0-only), [snare](https://github.com/mushorg/snare/blob/master/LICENSE), [tanner](https://github.com/mushorg/snare/blob/master/LICENSE)
<br>Apache 2 License: [cyberchef](https://github.com/gchq/CyberChef/blob/master/LICENSE), [dicompot](https://github.com/nsmfoo/dicompot/blob/master/LICENSE), [elasticsearch](https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt), [logstash](https://github.com/elasticsearch/logstash/blob/master/LICENSE), [kibana](https://github.com/elasticsearch/kibana/blob/master/LICENSE.md), [docker](https://github.com/docker/docker/blob/master/LICENSE)
<br>MIT license: [ciscoasa](https://github.com/Cymmetria/ciscoasa_honeypot/blob/master/LICENSE), [ddospot](https://github.com/aelth/ddospot/blob/master/LICENSE), [elasticvue](https://github.com/cars10/elasticvue/blob/master/LICENSE), [glutton](https://github.com/mushorg/glutton/blob/master/LICENSE), [hellpot](https://github.com/yunginnanet/HellPot/blob/master/LICENSE), [maltrail](https://github.com/stamparm/maltrail/blob/master/LICENSE)
<br> Unlicense: [endlessh](https://github.com/skeeto/endlessh/blob/master/UNLICENSE)
<br> Other: [citrixhoneypot](https://github.com/MalwareTech/CitrixHoneypot#licencing-agreement-malwaretech-public-licence), [cowrie](https://github.com/cowrie/cowrie/blob/master/LICENSE.rst), [mailoney](https://github.com/awhitehatter/mailoney), [Debian licensing](https://www.debian.org/legal/licenses/), [Elastic License](https://www.elastic.co/licensing/elastic-license)
<br> AGPL-3.0: [honeypots](https://github.com/qeeqbox/honeypots/blob/main/LICENSE)
<br><br>

# Credits
Without open source and the fruitful development community (we are proud to be a part of), T-Pot would not have been possible! Our thanks are extended but not limited to the following people and organizations:

### The developers and development communities of

* [adbhoney](https://github.com/huuck/ADBHoney/graphs/contributors)
* [apt-fast](https://github.com/ilikenwf/apt-fast/graphs/contributors)
* [bento](https://github.com/migueravila/Bento/graphs/contributors)
* [ciscoasa](https://github.com/Cymmetria/ciscoasa_honeypot/graphs/contributors)
* [citrixhoneypot](https://github.com/MalwareTech/CitrixHoneypot/graphs/contributors)
* [cockpit](https://github.com/cockpit-project/cockpit/graphs/contributors)
* [conpot](https://github.com/mushorg/conpot/graphs/contributors)
* [cowrie](https://github.com/cowrie/cowrie/graphs/contributors)
* [ddospot](https://github.com/aelth/ddospot/graphs/contributors)
* [debian](http://www.debian.org/)
* [dicompot](https://github.com/nsmfoo/dicompot/graphs/contributors)
* [dionaea](https://github.com/DinoTools/dionaea/graphs/contributors)
* [docker](https://github.com/docker/docker/graphs/contributors)
* [elasticpot](https://gitlab.com/bontchev/elasticpot/-/project_members)
* [elasticsearch](https://github.com/elastic/elasticsearch/graphs/contributors)
* [elasticvue](https://github.com/cars10/elasticvue/graphs/contributors)
* [endlessh](https://github.com/skeeto/endlessh/graphs/contributors)
* [ewsposter](https://github.com/armedpot/ewsposter/graphs/contributors)
* [fatt](https://github.com/0x4D31/fatt/graphs/contributors)
* [glutton](https://github.com/mushorg/glutton/graphs/contributors)
* [hellpot](https://github.com/yunginnanet/HellPot/graphs/contributors)
* [heralding](https://github.com/johnnykv/heralding/graphs/contributors)
* [honeypots](https://github.com/qeeqbox/honeypots/graphs/contributors)
* [honeytrap](https://github.com/armedpot/honeytrap/graphs/contributors)
* [ipphoney](https://gitlab.com/bontchev/ipphoney/-/project_members)
* [kibana](https://github.com/elastic/kibana/graphs/contributors)
* [logstash](https://github.com/elastic/logstash/graphs/contributors)
* [log4pot](https://github.com/thomaspatzke/Log4Pot/graphs/contributors)
* [mailoney](https://github.com/awhitehatter/mailoney)
* [maltrail](https://github.com/stamparm/maltrail/graphs/contributors)
* [medpot](https://github.com/schmalle/medpot/graphs/contributors)
* [p0f](http://lcamtuf.coredump.cx/p0f3/)
* [redishoneypot](https://github.com/cypwnpwnsocute/RedisHoneyPot/graphs/contributors)
* [sentrypeer](https://github.com/SentryPeer/SentryPeer/graphs/contributors),
* [spiderfoot](https://github.com/smicallef/spiderfoot)
* [snare](https://github.com/mushorg/snare/graphs/contributors)
* [tanner](https://github.com/mushorg/tanner/graphs/contributors)
* [suricata](https://github.com/inliniac/suricata/graphs/contributors)

**The following companies and organizations**
* [debian](https://www.debian.org/)
* [docker](https://www.docker.com/)
* [elastic.io](https://www.elastic.co/)
* [honeynet project](https://www.honeynet.org/)
* [intel](http://www.intel.com)

**... and of course ***you*** for joining the community!**
<br><br>

# Testimonials
One of the greatest feedback we have gotten so far is by one of the Conpot developers:<br>
***""[...] I highly recommend T-Pot which is ... it's not exactly a swiss army knife .. it's more like a swiss army soldier, equipped with a swiss army knife. Inside a tank. A swiss tank. [...]""***
<br><br>
And from @robcowart (creator of [ElastiFlow](https://github.com/robcowart/elastiflow)):<br>
***""#TPot is one of the most well put together turnkey honeypot solutions. It is a must-have for anyone wanting to analyze and understand the behavior of malicious actors and the threat they pose to your organization.""***
<br><br>
**Thank you!**
"
cundong/SmartAppUpdates,C,"# Android应用增量更新 - Smart App Updates

------

## 介绍

你所看到的，是一个用于Android应用程序增量更新的库。

包括客户端、服务端两部分代码。

## 原理

自从 Android 4.1 开始， [Google Play 引入了应用程序的增量更新功能][1]，App使用该升级方式，可节省约2/3的流量。

> Smart app updates is a new feature of Google Play that introduces a
> better way of delivering app updates to devices. When developers
> publish an update, Google Play now delivers only the bits that have
> changed to devices, rather than the entire APK. This makes the updates
> much lighter-weight in most cases, so they are faster to download,
> save the device’s battery, and conserve bandwidth usage on users’
> mobile data plan. On average, a smart app update is about 1/3 the
> sizeof a full APK update.

现在国内主流的应用市场也都支持应用的增量更新了。

增量更新的原理，就是将手机上已安装apk与服务器端最新apk进行二进制对比，得到差分包，用户更新程序时，只需要下载差分包，并在本地使用差分包与已安装apk，合成新版apk。

例如，当前手机中已安装微博V1，大小为12.8MB，现在微博发布了最新版V2，大小为15.4MB，我们对两个版本的apk文件差分比对之后，发现差异只有3M，那么用户就只需要要下载一个3M的差分包，使用旧版apk与这个差分包，合成得到一个新版本apk，提醒用户安装即可，不需要整包下载15.4M的微博V2版apk。

apk文件的差分、合成，可以通过 [开源的二进制比较工具 bsdiff][2] 来实现，又因为bsdiff依赖bzip2，所以我们还需要用到 [bzip2][3]

bsdiff中，`bsdiff.c` 用于生成差分包，`bspatch.c` 用于合成文件。 

弄清楚原理之后，我们想实现增量更新，共需要做3件事：

* 在服务器端，生成两个版本apk的差分包； 

* 在手机客户端，使用已安装的apk与这个差分包进行合成，得到新版的微博apk； 

* 校验新合成的apk文件是否完整，MD5或SHA1是否正确，如正确，则引导用户安装；

## 过程分析

### 1 生成差分包

这一步需要在服务器端来实现，一般来说，每当apk有新版本需要提示用户升级，都需要运营人员在后台管理端上传新apk，上传时就应该由程序生成与之前所有旧版本们与最新版的差分包。 

例如：
你的apk已经发布了3个版，V1.0、V2.0、V3.0，这时候你要在后台发布V4.0，那么，当你在服务器上传最新的V4.0包时，服务器端就应该立即生成以下差分包：

 1. V1.0 ——> V4.0的差分包；
 2. V2.0 ——> V4.0的差分包；
 3. V3.0 ——> V4.0的差分包；

ApkPatchLibraryServer 工程即为 Java 语言实现的服务器端差分程序。

下面对ApkPatchLibraryServer做一些简单说明：

#### 1.1 C部分

ApkPatchLibraryServer/jni 中，除了以下4个：

>com_cundong_utils_DiffUtils.c

>com_cundong_utils_DiffUtils.h

>com_cundong_utils_PatchUtils.c

>com_cundong_utils_PatchUtils.h

jni/bzip2目录中的文件，全部来自bzip2项目。

>com_cundong_utils_DiffUtils.c

>com_cundong_utils_DiffUtils.h

用于生成差分包。

>com_cundong_utils_PatchUtils.c

>com_cundong_utils_PatchUtils.h

用于合成新apk文件。

`com_cundong_utils_DiffUtils.c` 修改自 `bsdiff/bsdiff.c`，`com_cundong_utils_PatchUtils.c`修改自`bsdiff/bspatch.c`。

我们在需要将jni中的C文件，build输出为动态链接库，以供Java调用（Window环境下生成的文件名为libApkPatchLibraryServer.dll，Unix-like系统下为libApkPatchLibraryServer.so，OSX下为libApkPatchLibraryServer.dylib）。

Build成功后，将该动态链接库文件，加入环境变量，供Java语言调用。

`com_cundong_utils_DiffUtils.c` 中 `Java_com_cundong_utils_DiffUtils_genDiff()` 方法，用于生成差分包的：

```C

JNIEXPORT jint JNICALL Java_com_cundong_utils_DiffUtils_genDiff(JNIEnv *env,
		jclass cls, jstring old, jstring new, jstring patch) {
	int argc = 4;
	char * argv[argc];
	argv[0] = ""bsdiff"";
	argv[1] = (char*) ((*env)->GetStringUTFChars(env, old, 0));
	argv[2] = (char*) ((*env)->GetStringUTFChars(env, new, 0));
	argv[3] = (char*) ((*env)->GetStringUTFChars(env, patch, 0));

	printf(""old apk = %s \n"", argv[1]);
	printf(""new apk = %s \n"", argv[2]);
	printf(""patch = %s \n"", argv[3]);

	int ret = genpatch(argc, argv);

	printf(""genDiff result = %d "", ret);

	(*env)->ReleaseStringUTFChars(env, old, argv[1]);
	(*env)->ReleaseStringUTFChars(env, new, argv[2]);
	(*env)->ReleaseStringUTFChars(env, patch, argv[3]);

	return ret;
}

```
`com_cundong_utils_PatchUtils.c` 中 `Java_com_cundong_utils_PatchUtils_patch()` 方法，用于合成新的APK；

```C
JNIEXPORT jint JNICALL Java_com_cundong_utils_PatchUtils_patch
  (JNIEnv *env, jclass cls,
			jstring old, jstring new, jstring patch){
	int argc = 4;
	char * argv[argc];
	argv[0] = ""bspatch"";
	argv[1] = (char*) ((*env)->GetStringUTFChars(env, old, 0));
	argv[2] = (char*) ((*env)->GetStringUTFChars(env, new, 0));
	argv[3] = (char*) ((*env)->GetStringUTFChars(env, patch, 0));

	printf(""old apk = %s \n"", argv[1]);
	printf(""patch = %s \n"", argv[3]);
	printf(""new apk = %s \n"", argv[2]);

	int ret = applypatch(argc, argv);

	printf(""patch result = %d "", ret);

	(*env)->ReleaseStringUTFChars(env, old, argv[1]);
	(*env)->ReleaseStringUTFChars(env, new, argv[2]);
	(*env)->ReleaseStringUTFChars(env, patch, argv[3]);
	return ret;
}
```

#### 1.2 Java部分

com.cundong.utils包，为调用C语言的Java实现；
com.cundong.apkdiff包，为apk差分程序的Demo；
com.cundong.apkpatch包，为apk合并程序的Demo；

调用，`com.cundong.utils.DiffUtils`中`genDiff()`方法，可以通过传入的新旧apk路径，得到差分包。 

```java
/**
 * 类说明： 	APK Diff工具类
 * 
 * @author     Cundong
 * @date 	      2013-9-6
 * @version  1.0
 */
public class DiffUtils {

	/**
	 * native方法 比较路径为oldPath的apk与newPath的apk之间差异，并生成patch包，存储于patchPath
	 * 
	 * 返回：0，说明操作成功
	 *  
	 * @param oldApkPath 示例:/sdcard/old.apk
	 * @param newApkPath 示例:/sdcard/new.apk
	 * @param patchPath  示例:/sdcard/xx.patch
	 * @return
	 */
	public static native int genDiff(String oldApkPath, String newApkPath, String patchPath);
}
```

调用，`com.cundong.utils.PatchUtils`中`patch()`方法，可以通过旧apk与差分包，合成为新apk。

```java
/**
 * 类说明： 	APK Patch工具类
 * 
 * @author    Cundong
 * @date 	     2013-9-6
 * @version 1.0
 */
public class PatchUtils {

	/**
	 * native方法 使用路径为oldApkPath的apk与路径为patchPath的补丁包，合成新的apk，并存储于newApkPath
	 * 
	 * 返回：0，说明操作成功
	 * 
	 * @param oldApkPath 示例:/sdcard/old.apk
	 * @param newApkPath 示例:/sdcard/new.apk
	 * @param patchPath  示例:/sdcard/xx.patch
	 * @return
	 */
	public static native int patch(String oldApkPath, String newApkPath,
			String patchPath);
}
```

### 2.使用旧版apk与差分包，在客户端合成新apk

需要在手机客户端实现，ApkPatchLibrary 工程封装了这个过程。

#### 2.1 C部分
同ApkPatchLibraryServer工程一样，ApkPatchLibrary/jni/bzip2 目录中所有文件都来自bzip2项目。

`ApkPatchLibrary/jni/com_cundong_utils_PatchUtils.c`、`ApkPatchLibrary/jni/com_cundong_utils_PatchUtils.c`实现文件的合并过程，其中`com_cundong_utils_PatchUtils.c`修改自`bsdiff/bspatch.c`。

我们需要用NDK编译出一个libApkPatchLibrary.so文件，生成的so文件位于libs/armeabi/ 下，其他 Android 工程便可以使用该libApkPatchLibrary.so文件来合成apk（如果需要支持多种CPU架构需要自己配置）。

`com_cundong_utils_PatchUtils.Java_com_cundong_utils_PatchUtils_patch()`方法，即为生成差分包的代码：

```C
/*
 * Class:     com_cundong_utils_PatchUtils
 * Method:    patch
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_cundong_utils_PatchUtils_patch(JNIEnv *env,
		jobject obj, jstring old, jstring new, jstring patch) {

	char * ch[4];
	ch[0] = ""bspatch"";
	ch[1] = (char*) ((*env)->GetStringUTFChars(env, old, 0));
	ch[2] = (char*) ((*env)->GetStringUTFChars(env, new, 0));
	ch[3] = (char*) ((*env)->GetStringUTFChars(env, patch, 0));

	__android_log_print(ANDROID_LOG_INFO, ""ApkPatchLibrary"", ""old = %s "", ch[1]);
	__android_log_print(ANDROID_LOG_INFO, ""ApkPatchLibrary"", ""new = %s "", ch[2]);
	__android_log_print(ANDROID_LOG_INFO, ""ApkPatchLibrary"", ""patch = %s "", ch[3]);

	int ret = applypatch(4, ch);

	__android_log_print(ANDROID_LOG_INFO, ""ApkPatchLibrary"", ""applypatch result = %d "", ret);

	(*env)->ReleaseStringUTFChars(env, old, ch[1]);
	(*env)->ReleaseStringUTFChars(env, new, ch[2]);
	(*env)->ReleaseStringUTFChars(env, patch, ch[3]);

	return ret;
}
```

#### 2.2 Java部分

com.cundong.utils包，为调用C语言的Java实现；

调用，`com.cundong.utils.PatchUtils中patch()`方法，可以通过旧apk与差分包，合成为新apk。

```java
/**
 * 类说明： 	APK Patch工具类
 * 
 * @author   Cundong
 * @date      2013-9-6
 * @version 1.0
 */
public class PatchUtils {

	/**
	 * native方法 使用路径为oldApkPath的apk与路径为patchPath的补丁包，合成新的apk，并存储于     newApkPath
	 * 
	 * 返回：0，说明操作成功
	 * 
	 * @param oldApkPath 示例:/sdcard/old.apk
	 * @param newApkPath 示例:/sdcard/new.apk
	 * @param patchPath  示例:/sdcard/xx.patch
	 * @return
	 */
	public static native int patch(String oldApkPath, String newApkPath,
			String patchPath);
}
```

### 3.校验新合成的apk文件

在执行patch之前，需要先读取本地安装旧版本APK的MD5或SHA1，判断当前安装的文件是否为合法版本，同样，patch得到新包之后，也需要对它进行MD5或SHA1校验，校验失败，说明合成过程有问题。

## 注意事项

增量更新的前提条件，是在手机客户端能让我们读取到当前应用程序安装后的源apk，如果获取不到源apk，那么就无法进行增量更新了，另外，如果你的应用程序不是很大，比如只有2、3M，那么完全没有必要使用增量更新，增量更新只适用于apk包比较大的情况，比如手机游戏客户端。

## 一些说明

* ApkPatchLibraryServer：服务器端生成差分包工程，使用Java实现；

* ApkPatchLibrary：客户端使用的apk合成库，用于生成libApkPatchLibrary.so，使用Eclipse开发；

* ApkPatchLibrarySample：一个Sample，手机上安装 Weibo5.5.apk，通过与SD卡上预先存放的weibo.patch文件进行合并，得到Weibo5.6.apk，使用AndroidStudio开发。 

* 二进制差分或许有更好的实现方案，如：xdelta；

另外， ApkPatchLibraryServer、ApkPatchLibrarySample 中用到的Weibo5.5.apk，Weibo5.6.apk，以及使用ApkPatchLibraryServer生成的差分包(Weibo5.5.apk->Weibo5.6.apk)， [都通过云盘共享了][5]。

## 关于我

* Blog: [http://my.oschina.net/liucundong/blog][4]
* Mail: cundong.liu#gmail.com

## Update

1.目前的做法只是提供了一个例子，并没有做成开源库，打算这几天改进一下，做成一个开源库，push到GitHub上，开发ing..（2014年，8月31日）

2.已经大幅度重构原代码，并将原来的Demo程序提取成为开源库，欢迎所有人Watch、Star、Fork。（2014年，9月2日）

3.修改ReadMe.md，更加清晰的说明开源库的使用，同时进一步重构代码。（2014年，10月4日晚）

4.调整ApkPatchLibraryServer工程目录。（2015年，4月24日)

5.上传[一个演示demo ApkPatchLibrarySample.apk][6]。（2015-4-26）

6.ApkPatchLibrarySample重新使用AndroidStudio开发，修改文件MD5的对比逻辑。（2015-12-22）

## License

    Copyright 2015 Cundong

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

  [1]: http://developer.android.com/about/versions/jelly-bean.html
  [2]: http://www.daemonology.net/bsdiff/
  [3]: http://www.bzip.org/downloads.html
  [4]: http://my.oschina.net/liucundong/blog
  [5]: http://pan.baidu.com/s/1T5Szc#path=%252FSmartAppUpdates
  [6]: https://github.com/cundong/SmartAppUpdates/blob/master/ApkPatchLibrarySample.apk
"
